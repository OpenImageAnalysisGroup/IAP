/*
 * ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.31
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * -----------------------------------------------------------------------------
 */

package colajava;

public class ConstrainedMajorizationLayout {
	private long swigCPtr;
	protected boolean swigCMemOwn;
	
	protected ConstrainedMajorizationLayout(long cPtr, boolean cMemoryOwn) {
		swigCMemOwn = cMemoryOwn;
		swigCPtr = cPtr;
	}
	
	protected static long getCPtr(ConstrainedMajorizationLayout obj) {
		return (obj == null) ? 0 : obj.swigCPtr;
	}
	
	@Override
	protected void finalize() {
		delete();
	}
	
	public synchronized void delete() {
		if (swigCPtr != 0 && swigCMemOwn) {
			swigCMemOwn = false;
			colaJNI.delete_ConstrainedMajorizationLayout(swigCPtr);
		}
		swigCPtr = 0;
	}
	
	public ConstrainedMajorizationLayout(RectPtrVector rs, EdgeVector es, SWIGTYPE_p_RootCluster clusterHierarchy, double idealLength,
						SWIGTYPE_p_double eLengths, TestConvergence done, PreIteration preIteration) {
		this(colaJNI.new_ConstrainedMajorizationLayout__SWIG_0(RectPtrVector.getCPtr(rs), rs, EdgeVector.getCPtr(es), es, SWIGTYPE_p_RootCluster
							.getCPtr(clusterHierarchy), idealLength, SWIGTYPE_p_double.getCPtr(eLengths), TestConvergence.getCPtr(done), done, PreIteration
							.getCPtr(preIteration), preIteration), true);
	}
	
	public ConstrainedMajorizationLayout(RectPtrVector rs, EdgeVector es, SWIGTYPE_p_RootCluster clusterHierarchy, double idealLength,
						SWIGTYPE_p_double eLengths, TestConvergence done) {
		this(colaJNI.new_ConstrainedMajorizationLayout__SWIG_1(RectPtrVector.getCPtr(rs), rs, EdgeVector.getCPtr(es), es, SWIGTYPE_p_RootCluster
							.getCPtr(clusterHierarchy), idealLength, SWIGTYPE_p_double.getCPtr(eLengths), TestConvergence.getCPtr(done), done), true);
	}
	
	public ConstrainedMajorizationLayout(RectPtrVector rs, EdgeVector es, SWIGTYPE_p_RootCluster clusterHierarchy, double idealLength, SWIGTYPE_p_double eLengths) {
		this(colaJNI.new_ConstrainedMajorizationLayout__SWIG_2(RectPtrVector.getCPtr(rs), rs, EdgeVector.getCPtr(es), es, SWIGTYPE_p_RootCluster
							.getCPtr(clusterHierarchy), idealLength, SWIGTYPE_p_double.getCPtr(eLengths)), true);
	}
	
	public ConstrainedMajorizationLayout(RectPtrVector rs, EdgeVector es, SWIGTYPE_p_RootCluster clusterHierarchy, double idealLength) {
		this(colaJNI.new_ConstrainedMajorizationLayout__SWIG_3(RectPtrVector.getCPtr(rs), rs, EdgeVector.getCPtr(es), es, SWIGTYPE_p_RootCluster
							.getCPtr(clusterHierarchy), idealLength), true);
	}
	
	public void setXConstraints(CompoundConstraintsVector ccsx) {
		colaJNI.ConstrainedMajorizationLayout_setXConstraints(swigCPtr, this, CompoundConstraintsVector.getCPtr(ccsx), ccsx);
	}
	
	public void setYConstraints(CompoundConstraintsVector ccsy) {
		colaJNI.ConstrainedMajorizationLayout_setYConstraints(swigCPtr, this, CompoundConstraintsVector.getCPtr(ccsy), ccsy);
	}
	
	public void setUnsatisfiableConstraintInfo(SWIGTYPE_p_UnsatisfiableConstraintInfos unsatisfiableX, SWIGTYPE_p_UnsatisfiableConstraintInfos unsatisfiableY) {
		colaJNI.ConstrainedMajorizationLayout_setUnsatisfiableConstraintInfo(swigCPtr, this, SWIGTYPE_p_UnsatisfiableConstraintInfos.getCPtr(unsatisfiableX),
							SWIGTYPE_p_UnsatisfiableConstraintInfos.getCPtr(unsatisfiableY));
	}
	
	public void setStickyNodes(double stickyWeight, SWIGTYPE_p_std__valarrayTdouble_t startX, SWIGTYPE_p_std__valarrayTdouble_t startY) {
		colaJNI.ConstrainedMajorizationLayout_setStickyNodes(swigCPtr, this, stickyWeight, SWIGTYPE_p_std__valarrayTdouble_t.getCPtr(startX),
							SWIGTYPE_p_std__valarrayTdouble_t.getCPtr(startY));
	}
	
	public void setScaling(boolean scaling) {
		colaJNI.ConstrainedMajorizationLayout_setScaling(swigCPtr, this, scaling);
	}
	
	public void setExternalSolver(boolean externalSolver) {
		colaJNI.ConstrainedMajorizationLayout_setExternalSolver(swigCPtr, this, externalSolver);
	}
	
	public void setAvoidOverlaps(boolean horizontal) {
		colaJNI.ConstrainedMajorizationLayout_setAvoidOverlaps__SWIG_0(swigCPtr, this, horizontal);
	}
	
	public void setAvoidOverlaps() {
		colaJNI.ConstrainedMajorizationLayout_setAvoidOverlaps__SWIG_1(swigCPtr, this);
	}
	
	public void setNonOverlappingClusters() {
		colaJNI.ConstrainedMajorizationLayout_setNonOverlappingClusters(swigCPtr, this);
	}
	
	public void setStraightenEdges(SWIGTYPE_p_std__vectorTstraightener__Edge_p_t straightenEdges, double bendWeight, double potBendWeight, boolean xSkipping) {
		colaJNI.ConstrainedMajorizationLayout_setStraightenEdges__SWIG_0(swigCPtr, this, SWIGTYPE_p_std__vectorTstraightener__Edge_p_t.getCPtr(straightenEdges),
							bendWeight, potBendWeight, xSkipping);
	}
	
	public void setStraightenEdges(SWIGTYPE_p_std__vectorTstraightener__Edge_p_t straightenEdges, double bendWeight, double potBendWeight) {
		colaJNI.ConstrainedMajorizationLayout_setStraightenEdges__SWIG_1(swigCPtr, this, SWIGTYPE_p_std__vectorTstraightener__Edge_p_t.getCPtr(straightenEdges),
							bendWeight, potBendWeight);
	}
	
	public void setStraightenEdges(SWIGTYPE_p_std__vectorTstraightener__Edge_p_t straightenEdges, double bendWeight) {
		colaJNI.ConstrainedMajorizationLayout_setStraightenEdges__SWIG_2(swigCPtr, this, SWIGTYPE_p_std__vectorTstraightener__Edge_p_t.getCPtr(straightenEdges),
							bendWeight);
	}
	
	public void setStraightenEdges(SWIGTYPE_p_std__vectorTstraightener__Edge_p_t straightenEdges) {
		colaJNI.ConstrainedMajorizationLayout_setStraightenEdges__SWIG_3(swigCPtr, this, SWIGTYPE_p_std__vectorTstraightener__Edge_p_t.getCPtr(straightenEdges));
	}
	
	public void moveBoundingBoxes() {
		colaJNI.ConstrainedMajorizationLayout_moveBoundingBoxes(swigCPtr, this);
	}
	
	public void run(boolean x, boolean y) {
		colaJNI.ConstrainedMajorizationLayout_run__SWIG_0(swigCPtr, this, x, y);
	}
	
	public void run(boolean x) {
		colaJNI.ConstrainedMajorizationLayout_run__SWIG_1(swigCPtr, this, x);
	}
	
	public void run() {
		colaJNI.ConstrainedMajorizationLayout_run__SWIG_2(swigCPtr, this);
	}
	
	public void runOnce(boolean x, boolean y) {
		colaJNI.ConstrainedMajorizationLayout_runOnce__SWIG_0(swigCPtr, this, x, y);
	}
	
	public void runOnce(boolean x) {
		colaJNI.ConstrainedMajorizationLayout_runOnce__SWIG_1(swigCPtr, this, x);
	}
	
	public void runOnce() {
		colaJNI.ConstrainedMajorizationLayout_runOnce__SWIG_2(swigCPtr, this);
	}
	
	public void straighten(SWIGTYPE_p_std__vectorTstraightener__Edge_p_t arg0, Dim arg1) {
		colaJNI.ConstrainedMajorizationLayout_straighten(swigCPtr, this, SWIGTYPE_p_std__vectorTstraightener__Edge_p_t.getCPtr(arg0), arg1.swigValue());
	}
	
	public void setConstrainedLayout(boolean c) {
		colaJNI.ConstrainedMajorizationLayout_setConstrainedLayout(swigCPtr, this, c);
	}
	
	public double computeStress() {
		return colaJNI.ConstrainedMajorizationLayout_computeStress(swigCPtr, this);
	}
	
}
