/*
 * ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.31
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * -----------------------------------------------------------------------------
 */

package colajava;

public class Cluster {
	private long swigCPtr;
	protected boolean swigCMemOwn;
	
	protected Cluster(long cPtr, boolean cMemoryOwn) {
		swigCMemOwn = cMemoryOwn;
		swigCPtr = cPtr;
	}
	
	protected static long getCPtr(Cluster obj) {
		return (obj == null) ? 0 : obj.swigCPtr;
	}
	
	@Override
	protected void finalize() {
		delete();
	}
	
	public synchronized void delete() {
		if (swigCPtr != 0 && swigCMemOwn) {
			swigCMemOwn = false;
			colaJNI.delete_Cluster(swigCPtr);
		}
		swigCPtr = 0;
	}
	
	public void setVarWeight(double value) {
		colaJNI.Cluster_varWeight_set(swigCPtr, this, value);
	}
	
	public double getVarWeight() {
		return colaJNI.Cluster_varWeight_get(swigCPtr, this);
	}
	
	public void setInternalEdgeWeightFactor(double value) {
		colaJNI.Cluster_internalEdgeWeightFactor_set(swigCPtr, this, value);
	}
	
	public double getInternalEdgeWeightFactor() {
		return colaJNI.Cluster_internalEdgeWeightFactor_get(swigCPtr, this);
	}
	
	public void setNodes(UnsignedVector value) {
		colaJNI.Cluster_nodes_set(swigCPtr, this, UnsignedVector.getCPtr(value), value);
	}
	
	public UnsignedVector getNodes() {
		long cPtr = colaJNI.Cluster_nodes_get(swigCPtr, this);
		return (cPtr == 0) ? null : new UnsignedVector(cPtr, false);
	}
	
	public void setClusters(ClusterVector value) {
		colaJNI.Cluster_clusters_set(swigCPtr, this, ClusterVector.getCPtr(value), value);
	}
	
	public ClusterVector getClusters() {
		long cPtr = colaJNI.Cluster_clusters_get(swigCPtr, this);
		return (cPtr == 0) ? null : new ClusterVector(cPtr, false);
	}
	
	public void setHullX(SWIGTYPE_p_std__valarrayTdouble_t value) {
		colaJNI.Cluster_hullX_set(swigCPtr, this, SWIGTYPE_p_std__valarrayTdouble_t.getCPtr(value));
	}
	
	public SWIGTYPE_p_std__valarrayTdouble_t getHullX() {
		return new SWIGTYPE_p_std__valarrayTdouble_t(colaJNI.Cluster_hullX_get(swigCPtr, this), true);
	}
	
	public void setHullY(SWIGTYPE_p_std__valarrayTdouble_t value) {
		colaJNI.Cluster_hullY_set(swigCPtr, this, SWIGTYPE_p_std__valarrayTdouble_t.getCPtr(value));
	}
	
	public SWIGTYPE_p_std__valarrayTdouble_t getHullY() {
		return new SWIGTYPE_p_std__valarrayTdouble_t(colaJNI.Cluster_hullY_get(swigCPtr, this), true);
	}
	
	public void computeBoundary(RectPtrVector rs) {
		colaJNI.Cluster_computeBoundary(swigCPtr, this, RectPtrVector.getCPtr(rs), rs);
	}
	
	public void computeBoundingRect(RectPtrVector rs) {
		colaJNI.Cluster_computeBoundingRect(swigCPtr, this, RectPtrVector.getCPtr(rs), rs);
	}
	
	public void setBounds(Rectangle value) {
		colaJNI.Cluster_bounds_set(swigCPtr, this, Rectangle.getCPtr(value), value);
	}
	
	public Rectangle getBounds() {
		long cPtr = colaJNI.Cluster_bounds_get(swigCPtr, this);
		return (cPtr == 0) ? null : new Rectangle(cPtr, false);
	}
	
	public void setDesiredBounds(Rectangle bounds) {
		colaJNI.Cluster_setDesiredBounds(swigCPtr, this, Rectangle.getCPtr(bounds), bounds);
	}
	
	public void unsetDesiredBounds() {
		colaJNI.Cluster_unsetDesiredBounds(swigCPtr, this);
	}
	
	public void createVars(Dim dim, RectPtrVector rs, SWIGTYPE_p_std__vectorTvpsc__Variable_p_t vars) {
		colaJNI.Cluster_createVars(swigCPtr, this, dim.swigValue(), RectPtrVector.getCPtr(rs), rs, SWIGTYPE_p_std__vectorTvpsc__Variable_p_t.getCPtr(vars));
	}
	
	public void setVXMin(SWIGTYPE_p_vpsc__Variable value) {
		colaJNI.Cluster_vXMin_set(swigCPtr, this, SWIGTYPE_p_vpsc__Variable.getCPtr(value));
	}
	
	public SWIGTYPE_p_vpsc__Variable getVXMin() {
		long cPtr = colaJNI.Cluster_vXMin_get(swigCPtr, this);
		return (cPtr == 0) ? null : new SWIGTYPE_p_vpsc__Variable(cPtr, false);
	}
	
	public void setVXMax(SWIGTYPE_p_vpsc__Variable value) {
		colaJNI.Cluster_vXMax_set(swigCPtr, this, SWIGTYPE_p_vpsc__Variable.getCPtr(value));
	}
	
	public SWIGTYPE_p_vpsc__Variable getVXMax() {
		long cPtr = colaJNI.Cluster_vXMax_get(swigCPtr, this);
		return (cPtr == 0) ? null : new SWIGTYPE_p_vpsc__Variable(cPtr, false);
	}
	
	public void setVYMin(SWIGTYPE_p_vpsc__Variable value) {
		colaJNI.Cluster_vYMin_set(swigCPtr, this, SWIGTYPE_p_vpsc__Variable.getCPtr(value));
	}
	
	public SWIGTYPE_p_vpsc__Variable getVYMin() {
		long cPtr = colaJNI.Cluster_vYMin_get(swigCPtr, this);
		return (cPtr == 0) ? null : new SWIGTYPE_p_vpsc__Variable(cPtr, false);
	}
	
	public void setVYMax(SWIGTYPE_p_vpsc__Variable value) {
		colaJNI.Cluster_vYMax_set(swigCPtr, this, SWIGTYPE_p_vpsc__Variable.getCPtr(value));
	}
	
	public SWIGTYPE_p_vpsc__Variable getVYMax() {
		long cPtr = colaJNI.Cluster_vYMax_get(swigCPtr, this);
		return (cPtr == 0) ? null : new SWIGTYPE_p_vpsc__Variable(cPtr, false);
	}
	
	public void generateNonOverlapConstraints(Dim dim, SWIGTYPE_p_NonOverlapConstraints nonOverlapConstraints, RectPtrVector rs,
						SWIGTYPE_p_std__vectorTvpsc__Variable_p_t vars, SWIGTYPE_p_std__vectorTvpsc__Constraint_p_t cs) {
		colaJNI.Cluster_generateNonOverlapConstraints(swigCPtr, this, dim.swigValue(), SWIGTYPE_p_NonOverlapConstraints.getCPtr(nonOverlapConstraints),
							RectPtrVector.getCPtr(rs), rs, SWIGTYPE_p_std__vectorTvpsc__Variable_p_t.getCPtr(vars), SWIGTYPE_p_std__vectorTvpsc__Constraint_p_t
												.getCPtr(cs));
	}
	
	public void clear() {
		colaJNI.Cluster_clear(swigCPtr, this);
	}
	
	public double area(RectPtrVector rs) {
		return colaJNI.Cluster_area(swigCPtr, this, RectPtrVector.getCPtr(rs), rs);
	}
	
	public void updateBounds(Dim dim) {
		colaJNI.Cluster_updateBounds(swigCPtr, this, dim.swigValue());
	}
	
}
