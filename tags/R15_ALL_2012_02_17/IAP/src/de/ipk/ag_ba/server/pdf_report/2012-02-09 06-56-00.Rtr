##------ 09.02.2012 06:56:00 ------##

R version 2.13.0 (2011-04-13)
Copyright (C) 2011 The R Foundation for Statistical Computing
ISBN 3-900051-07-0
Platform: x86_64-pc-mingw32/x64 (64-bit)

R ist freie Software und kommt OHNE JEGLICHE GARANTIE.
Sie sind eingeladen, es unter bestimmten Bedingungen weiter zu verbreiten.
Tippen Sie 'license()' or 'licence()' für Details dazu.

R ist ein Gemeinschaftsprojekt mit vielen Beitragenden.
Tippen Sie 'contributors()' für mehr Information und 'citation()',
um zu erfahren, wie R oder R packages in Publikationen zitiert werden können.

Tippen Sie 'demo()' für einige Demos, 'help()' für on-line Hilfe, oder
'help.start()' für eine HTML Browserschnittstelle zur Hilfe.
Tippen Sie 'q()', um R zu verlassen.

[Vorher gesicherter Workspace wiederhergestellt]

> rm(list=ls(all=TRUE))
Warnmeldung:
Paket 'rj' wurde unter R Version 2.13.2 gebaut 
> # TODO: Add comment
> # 
> # Author: Entzian
> ###############################################################################
> 
> "%debug%" <- function(debug, debugNumber) {
+ 	if (debug) {
+ 		print(paste("DebugBreakPoint: ", debugNumber))
+ 	}
+ }
> 
> "%checkEqual%" <- function(treat, seconTreat) {
+ 	if(treat == seconTreat) {
+ 		print("SecondTreatment are the same value as Treatment so it set to \"none\"")
+ 		return("none")
+ 	} else {
+ 		return(seconTreat)
+ 	}
+ }
> 
> "%errorReport%" <- function(errorDescriptor, typOfError="notExists") {
+ 	#overallList$debug %debug% "%errorReport%"
+ 	if (length(errorDescriptor) > 0) {
+ 		if (tolower(typOfError) == "notexists"){
+ 			print(paste("No plotting, because the descriptor(s) (",errorDescriptor,") don't exists!", sep=""))
+ 			
+ 		} else if (tolower(typOfError) == "notnumericorallzero") {
+ 			#plotDummy(overallList)
+ 			print(paste("Dummy plotting for this descriptor(s) ((",errorDescriptor,"), because all zero or not numeric!", sep=""))
+ 		}
+ 	}
+ }
> 
> "%exists%" <- function(standardValue, argsValue){
+ 	
+ 	if(!is.na(argsValue) & argsValue != "")	{
+ 		return(argsValue)
+ 	} else {
+ 		return(standardValue)
+ 	}
+ }
> 
> "%getData%" <- function(separation, fileName){	
+ 	#separation <- ";"
+ 	print("... Read input file")
+ 	
+ 	if(file.exists(fileName)) {
+ 		preScanForPointOrComma <- scan(file=fileName, what=character(0), nlines=2, sep="\n")
+ 		preScanForPointOrComma <- paste(preScanForPointOrComma[2],",.", sep="")
+ 		allCharacterSeparated <- table(strsplit(toupper(preScanForPointOrComma), '')[[1]])
+ 		
+ 		if(allCharacterSeparated["."] > allCharacterSeparated[","]) {
+ 			print("... english Version")
+ 			return(read.csv(fileName, header=TRUE, sep=separation, fileEncoding="ISO-8859-1", encoding="UTF-8"))
+ 		} else {
+ 			print("... german Version")
+ 			return(read.csv2(fileName, header=TRUE, sep=separation, fileEncoding="ISO-8859-1", encoding="UTF-8"))
+ 		}
+ 	} else {
+ 		return("error")
+ 	}
+ 	
+ #	if (englischVersion) {
+ #		return(read.csv(fileName, header=TRUE, sep=separation, fileEncoding="ISO-8859-1", encoding="UTF-8"))
+ #	} else {
+ #		return(read.csv2(fileName, header=TRUE, sep=separation, fileEncoding="ISO-8859-1", encoding="UTF-8"))
+ #	}
+ }
> 
> "%checkIfDescriptorExists%" <- function(descriptor, dataSet) {
+ 	if (is.data.frame(dataSet)) {
+ 		return(descriptor %in% colnames(dataSet))
+ 	} else {
+ 		return(descriptor %in% dataSet)
+ 	}	
+ }
> 
> "%GetDescriptorsAfterCheckIfDescriptorExists%" <- function(descriptor, dataSet) {
+ 	return(descriptor[descriptor %checkIfDescriptorExists% dataSet])
+ 	
+ }
> 
> "%GetDescriptorAfterCheckIfDescriptorNotExists%" <- function(descriptor, dataSet) {
+ 	return(descriptor[!descriptor %checkIfDescriptorExists% dataSet])
+ 	
+ }
> 
> "%contactAllWithAll%" <- function(vector1, vector2) {
+ 	vectorTemp <- character(0)
+ 	for(k in vector2) {
+ 		if(k=="none") {
+ 			vectorTemp <- c(vectorTemp,vector1)
+ 		} else {
+ 			vectorTemp <- c(vectorTemp,paste(vector1,k, sep = "#"))
+ 		}
+ 	}
+ 	return(vectorTemp)
+ }
> 
> "%allColnamesWithoutThisOnes%" <- function(dataSet, withoutColNamesVector) {
+ 	return(colnames(dataSet)[!colnames(dataSet) %in% withoutColNamesVector])
+ }
> 
> buildDataSet <- function(workingDataSet, overallResult, colname, index) {
+ 	
+ 	if(length(colname) > 0) {
+ 		for(n in 1:length(colname)) {
+ 			workingDataSet <- cbind(workingDataSet, overallResult[paste(colname[n],index, sep="")])
+ 		}	
+ 		return(workingDataSet)
+ 	}
+ }
> 
> 
> reNameHist <-  function(colNameWichMustBind) {
+ 	colNameWichMustBind <- as.character(colNameWichMustBind)
+ 	positions <- which(strsplit(colNameWichMustBind, '')[[1]]=='.')
+ 	colNameWichMustBind <- substr(colNameWichMustBind,positions[length(positions)]+1,nchar(colNameWichMustBind))
+ 	
+ 	regExpressionSpezialCharacter <- "\\_"
+ 	colNameWichMustBind <- gsub(regExpressionSpezialCharacter,"..",colNameWichMustBind)
+ 	
+ 	return(colNameWichMustBind)	
+ }
> 
> reNameColumn <-  function(plotThisValues, columnNameReplace="name", columnNameWhichUsedToReplace="primaerTreatment") {
+ 	if(!is.null(plotThisValues[columnNameWhichUsedToReplace])){
+ 		plotThisValues[columnNameReplace] <- plotThisValues[columnNameWhichUsedToReplace]
+ 	}
+ 	
+ 	return(plotThisValues)
+ }
> 
> swap <- function(listWithTwoParameter) {
+ 	temp <- listWithTwoParameter[[1]]
+ 	listWithTwoParameter[[1]] <- listWithTwoParameter[[2]]
+ 	listWithTwoParameter[[2]] <- temp
+ 	return(listWithTwoParameter)
+ }
> 
> changeWhenTreatmentNoneAndSecondTreatmentNotNone <- function(listOfTreat, listOfFilterTreat) {
+ 	if(listOfTreat[[1]] == "none" & listOfTreat[[2]] != "none") {
+ 		print("The values of Treatment and SecondTreamt are changed (filter values also)")
+ 		return(list(swap(listOfTreat),swap(listOfFilterTreat)))	
+ 	} else {
+ 		return(list(listOfTreat,listOfFilterTreat))
+ 	}
+ }
> 
> checkOfTreatments <- function(args, treatment, filterTreatment, secondTreatment, filterSecondTreatment, workingDataSet, debug) {
+ 	debug %debug% "Start of checkOfTreatments()"
+ 	
+ 	treatment <- treatment %exists% args[4]
+ 	secondTreatment <- secondTreatment %exists% args[5]
+ 	secondTreatment <- treatment %checkEqual% secondTreatment
+ 	
+ 	listOfTreat <- list(treatment=treatment, secondTreatment=secondTreatment)
+ 	listOfFilterTreat <- list(filterTreatment=filterTreatment, filterSecondTreatment=filterSecondTreatment)	## wird erstmal noch nichts weiter mit gemacht! nur geswapt falls notwendig
+ 
+ 	for(k in names(listOfTreat)){
+ 		if(listOfTreat[[k]] != "none") {
+ 			#overallTreat <- list(iniDataSet=workingDataSet, descriptor=listOfTreat[[k]], debug=debug, stoppTheCalculation = FALSE, errorDescriptor=character())
+ 			#overallTreat <- list(iniDataSet=workingDataSet, descriptor=listOfTreat[[k]], debug=debug, stoppTheCalculation = FALSE)
+ 			descriptorVector <- getVector(preprocessingOfDescriptor(listOfTreat[[k]], workingDataSet))
+ 			
+ 			if(!is.null(descriptorVector)) {
+ 				descriptorVector <- getVector(checkIfDescriptorIsNaOrAllZero(descriptorVector, workingDataSet, FALSE))
+ 				
+ 				if(!is.null(descriptorVector)) {
+ 					listOfTreat[[k]] <- descriptorVector
+ 				} 
+ 			} 
+ 			
+ 			if(is.null(descriptorVector)) {
+ 				print(paste(k, "set to \"none\""))
+ 				listOfTreat[[k]] <- "none"
+ 			}
+ 		}
+ 	}
+ 	
+ 	listOfTreatAndFilterTreat <- changeWhenTreatmentNoneAndSecondTreatmentNotNone(listOfTreat, listOfFilterTreat)
+ 	debug %debug% "End of checkOfTreatments()"
+ 	return(listOfTreatAndFilterTreat)
+ }
> 
> overallCheckIfDescriptorIsNaOrAllZero <- function(overallList) {
+ 	overallList$debug %debug% "overallCheckIfDescriptorIsNaOrAllZero()"	
+ 	
+ 	if(sum(!is.na(overallList$nBoxDes)) > 0) {
+ 		if(overallList$debug) {print("... nBoxplot")}
+ 		for(n in 1:length(overallList$nBoxDes)) {
+ 			if(!is.na(overallList$nBoxDes[[n]])) {
+ 				overallList$nBoxDes[n] <- checkIfDescriptorIsNaOrAllZero(overallList$nBoxDes[[n]], overallList$iniDataSet)
+ 			}
+ 		}
+ 		names(overallList$nBoxDes) <- c(1:length(overallList$nBoxDes))
+ 	} else {
+ 		print("... all in nBoxplot is 'NA'")
+ 	}
+ 	
+ 	if(sum(!is.na(overallList$boxDes)) > 0) {
+ 		if(overallList$debug) {print("... Boxplot")}
+ 		for(n in 1:length(overallList$boxDes)) {
+ 			if(!is.na(overallList$boxDes[[n]])) {
+ 				overallList$boxDes[[n]] <- checkIfDescriptorIsNaOrAllZero(overallList$boxDes[[n]], overallList$iniDataSet)
+ 			}
+ 		}
+ 		names(overallList$boxDes) <- c(1:length(overallList$boxDes))
+ 	} else {
+ 		print("... all in Boxplot is 'NA'")
+ 	}
+ 
+ 	if(sum(!is.na(overallList$boxStackDes)) > 0) {
+ 		if(overallList$debug) {print("... stackedBoxplot")}
+ 		for(n in 1:length(overallList$boxStackDes)) {
+ 			if(!is.na(overallList$boxStackDes[[n]])) {
+ 				overallList$boxStackDes[[n]] <- checkIfDescriptorIsNaOrAllZero(overallList$boxStackDes[[n]], overallList$iniDataSet)
+ 			}
+ 		}
+ 		names(overallList$boxStackDes) <- c(1:length(overallList$boxStackDes))
+ 	} else {
+ 		print("... all in stackedBoxplot is 'NA'")
+ 	}
+ 	
+ 	if(!sum(!is.na(overallList$boxStackDes)) > 0 && !sum(!is.na(overallList$boxDes)) > 0 && !sum(!is.na(overallList$nBoxDes)) > 0) {
+ 		print("... no descriptor set (all descriptors are zero or NA) - the program stopp!")
+ 		overallList$stoppTheCalculation <- TRUE 
+ 	}
+ 	
+ 	return(overallList)
+ }
> 
> checkIfDescriptorIsNaOrAllZero <- function(descriptorVector, iniDataSet, isDescriptor = TRUE){
+ 	#overallList$debug %debug% "checkIfDescriptorIsNaOrAllZero()"
+ 	descriptorVector <- as.vector(descriptorVector)
+ 	#descriptorVector <- getVector(descriptorVector)
+ 	tempDescriptor <- descriptorVector 
+ 	if(isDescriptor) {
+ 		descriptorVector <- descriptorVector[colSums(!is.na(iniDataSet[descriptorVector])) != 0 & colSums(iniDataSet[descriptorVector] *1, na.rm = TRUE) > 0]
+ 	} else {
+ 		descriptorVector <- descriptorVector[colSums(!is.na(iniDataSet[descriptorVector])) != 0]
+ 	}
+ 	errorDescriptor <- tempDescriptor %GetDescriptorAfterCheckIfDescriptorNotExists% descriptorVector
+ 
+ 	if (length(errorDescriptor) > 0) {
+ 		errorDescriptor %errorReport% "NotNumericOrAllZero"	
+ 	}
+ 	
+ 	if(length(descriptorVector) > 0) {
+ 		return(as.data.frame(descriptorVector))
+ 	} else {
+ 		return(NA)
+ 	}
+ }
> 
> overallChangeName <- function(overallList) {
+ 	overallList$debug %debug% "overallChangeSaveName()"	
+ 	
+ 	if(!is.null(overallList$saveName_nBoxDes)) {
+ 		if(overallList$debug) {print("... nBoxplot")}
+ 		overallList$saveName_nBoxDes <- changeSaveName(overallList$saveName_nBoxDes)
+ 		names(overallList$saveName_nBoxDes) <- c(1:length(overallList$saveName_nBoxDes))
+ 		
+ 		overallList$nBoxDesName <- as.list(overallList$nBoxDesName)
+ 		names(overallList$nBoxDesName) <- c(1:length(overallList$nBoxDesName))
+ 	}
+ 	
+ 	if(!is.null(overallList$saveName_boxDes)) {
+ 		if(overallList$debug) {print("... Boxplot")}
+ 		overallList$saveName_boxDes <- changeSaveName(overallList$saveName_boxDes)
+ 		names(overallList$saveName_boxDes) <- c(1:length(overallList$saveName_boxDes))
+ 		
+ 		overallList$boxDesName <- as.list(overallList$boxDesName)
+ 		names(overallList$boxDesName) <- c(1:length(overallList$boxDesName))
+ 	}
+ 	
+ 	if(!is.null(overallList$saveName_boxStackDes)) {
+ 		if(overallList$debug) {print("... stackedBoxplot")}
+ 		overallList$saveName_boxStackDes <- changeSaveName(overallList$saveName_boxStackDes)
+ 		names(overallList$saveName_boxStackDes) <- c(1:length(overallList$saveName_boxStackDes))
+ 		
+ 		overallList$boxStackDesName <- as.list(overallList$boxStackDesName)
+ 		names(overallList$boxStackDesName) <- c(1:length(overallList$boxStackDesName))
+ 	}
+ 	
+ 	return(overallList)
+ }
> 
> changeSaveName <- function(saveNameVector) {
+ 	#Sollte hier nicht noch die Leerzeichen durch Punkte ersetzt werden?
+ 	saveNameVector <- gsub("\\$",";",substr(saveNameVector,1,70))
+ 	saveNameVector <- gsub("\\^", "", saveNameVector);
+ 	
+ 	return(as.list(saveNameVector))
+ }
> 
> preprocessingOfValues <- function(value, isColValue=FALSE, replaceString=".") {
+ 
+ 	if (!is.null(value)) {
+ 		regExpressionCol <- "[^[:alnum:]|^_]|[[:space:]|\\^]"
+ 		if(isColValue) {
+ 			value <- strsplit(value, "$", fixed=TRUE)
+ 		}
+ 		
+ 		for(n in 1:length(value)) {
+ 			value[[n]] <- gsub(regExpressionCol,replaceString,value[[n]])
+ 		}
+ 	} else {
+ 			return("none")
+ 		}
+ 	return(value)
+ }
> 
> overallPreprocessingOfDescriptor <- function(overallList) {
+ 	overallList$debug %debug% "overallPreprocessingOfDescriptor()"	
+ 	
+ 	if(!is.null(overallList$nBoxDes)) {
+ 		if(overallList$debug) {print("... nBoxplot")}
+ 		for(n in 1:length(overallList$nBoxDes)) {
+ 			overallList$nBoxDes[n] <- preprocessingOfDescriptor(overallList$nBoxDes[[n]], overallList$iniDataSet)
+ 		}
+ 	} else {
+ 		print("... nBoxplot is NULL")
+ 	} 
+ 	
+ 	if(!is.null(overallList$boxDes)) {
+ 		if(overallList$debug) {print("... Boxplot")}
+ 		for(n in 1:length(overallList$boxDes)) {
+ 			overallList$boxDes[n] <- preprocessingOfDescriptor(overallList$boxDes[[n]], overallList$iniDataSet)
+ 		}
+ 	} else {
+ 		print("... Boxplot is NULL")
+ 	} 
+ 	
+ 	if(!is.null(overallList$boxStackDes)) {
+ 		if(overallList$debug) {print("... stackedBoxplot")}
+ 		for(n in 1:length(overallList$boxStackDes)) {
+ 			overallList$boxStackDes[n] <- preprocessingOfDescriptor(overallList$boxStackDes[[n]], overallList$iniDataSet)
+ 		}
+ 	} else {
+ 		print("... stackedBoxplot is NULL")
+ 	} 
+ 	
+ 	if(!sum(!is.na(overallList$boxStackDes)) > 0 && !sum(!is.na(overallList$boxDes)) > 0 && !sum(!is.na(overallList$nBoxDes)) > 0) {
+ 		print("... no descriptor set - this pass stopped!")
+ 		overallList$stoppTheCalculation <- TRUE
+ 	}
+ 	
+ 	return(overallList)
+ }
> 
> preprocessingOfDescriptor <- function(descriptorVector, iniDataSet) {
+ 	#overallList$debug %debug% "preprocessingOfDescriptor()"
+ 	descriptorVector <- unlist(preprocessingOfValues(descriptorVector, TRUE))	#descriptor is value for yAxis
+ 	
+ 	errorDescriptor <- descriptorVector %GetDescriptorAfterCheckIfDescriptorNotExists% iniDataSet 
+ 	descriptorVector <- descriptorVector %GetDescriptorsAfterCheckIfDescriptorExists% iniDataSet
+ 	if (length(errorDescriptor)>0) {
+ 		errorDescriptor %errorReport% "notExists"
+ 	} 
+ 	
+ 	if(length(descriptorVector) > 0) {
+ 		return(as.data.frame(descriptorVector))
+ 	} else {
+ 		return(NA)
+ 	}	
+ }
> 
> preprocessingOfxAxisValue <- function(overallList) {
+ 	overallList$debug %debug% "preprocessingOfxAxisValue()"
+ 	overallList$xAxis <- unlist(preprocessingOfValues(overallList$xAxis, TRUE))
+ 	
+ 	if (overallList$filterXaxis != "none") {
+ 		overallList$filterXaxis <- as.numeric(strsplit(overallList$filterXaxis, "$", fixed=TRUE)[[1]])
+ 	} else {
+ 		overallList$filterXaxis <- as.numeric(unique(overallList$iniDataSet[overallList$xAxis])[[1]])	#xAxis muss einen Wert enthalten ansonsten Bricht das Program weiter oben ab
+ 	}
+ 	
+ 	return(overallList)
+ }
> 
> getSingelFilter <- function(filter, treatment, dataSet) {
+ 	if(filter != "none") {
+ 		return(strsplit(filter, "$", fixed=TRUE)[[1]])
+ 	} else {
+ 		return(as.character(unique(dataSet[treatment])[[1]]))
+ 	}
+ }
> 
> preprocessingOfTreatment <- function(overallList) {
+ 	overallList$debug %debug% "preprocessingOfTheTreatment()"
+ 	
+ 	if(!is.null(overallList$treatment)){
+ 		overallList$treatment <- preprocessingOfValues(overallList$treatment)
+ 		
+ 		if(overallList$treatment != "none" & (overallList$treatment %checkIfDescriptorExists% overallList$iniDataSet)) {	
+ 			overallList$filterTreatment <- getSingelFilter(overallList$filterTreatment, overallList$treatment, overallList$iniDataSet)
+ 
+ 		} else {
+ 			overallList$treatment <- "none"
+ 			overallList$filterTreatment <- "none"
+ 			print("... set 'filterTreatment' and 'treatment' to 'none'!")		
+ 		}
+ 			
+ 	} else {
+ 		overallList$treatment <- "none"
+ 		overallList$filterTreatment <- "none"
+ 		print("... set 'filterTreatment' and 'treatment' to 'none'!")
+ 	}
+ 
+ 	return(overallList)
+ }
> 
> preprocessingOfSecondTreatment <- function(overallList) {
+ 	overallList$debug %debug% "preprocessingOfTheSecondTreatment()"
+ 	
+ 	if(!is.null(overallList$secondTreatment)){
+ 		overallList$secondTreatment <- preprocessingOfValues(overallList$secondTreatment)
+ 
+ 		if (overallList$secondTreatment != "none" & (overallList$secondTreatment %checkIfDescriptorExists% overallList$iniDataSet)) {
+ 			overallList$filterSecondTreatment <- getSingelFilter(overallList$filterSecondTreatment, overallList$secondTreatment, overallList$iniDataSet)
+ 			
+ 		} else {
+ 			overallList$secondTreatment <- "none"
+ 			overallList$filterSecondTreatment <- "none"
+ 			print("... set 'filterSecondTreatment' and 'secondTreatment' to 'none'!")
+ 		}	
+ 	} else {
+ 		overallList$secondTreatment <- "none"
+ 		overallList$filterSecondTreatment <- "none"
+ 		print("... set 'filterSecondTreatment' and 'secondTreatment' to 'none'!")
+ 	}
+ 	return(overallList)
+ }
> 
> check <- function(value, checkValue=c("none", NA)){
+ 	if(!is.null(value)){
+ 		return(value %GetDescriptorAfterCheckIfDescriptorNotExists% checkValue)
+ 	} else {
+ 		return(character(0))
+ 	}
+ }
> 
> getVector <- function(descriptorSet) {
+ 	if(!is.null(descriptorSet)) {
+ 		vector <-  vector()
+ 		for(n in 1:length(descriptorSet)) {
+ 			vector <- c(vector, as.vector(unlist(descriptorSet[[n]])))
+ 		}
+ 		return(vector)
+ 	}
+ 	return(character(0))
+ }
> 
> reduceWorkingDataSize <- function(overallList){
+ 	overallList$debug %debug% "reduceWorkingDataSize()"
+ 	overallList$iniDataSet <- overallList$iniDataSet[unique(c(check(getVector(overallList$nBoxDes)), check(getVector(overallList$boxDes)), check(getVector(overallList$boxStackDes)), check(overallList$xAxis), check(overallList$treatment), check(overallList$secondTreatment)))]
+ 	return(overallList)
+ }
> 
> setRowAndColNameOfFinalDataFrame <- function(overallList) {
+ 	overallList$debug %debug% "setRowAndColNameOfFinalDataFrame()"
+ 
+ 	overallList$rowName <- (overallList$descriptor %contactAllWithAll% overallList$filterTreatment) %contactAllWithAll% overallList$filterSecondTreatment
+ 	overallList$colName <- as.character(overallList$filterXaxis)
+ 	
+ 	return(overallList)
+ }
> 
> groupByFunction <- function(groupByList) {
+ 	
+ 	groupByList <- unlist(groupByList)
+ 	return(unlist(groupByList[ifelse(groupByList != "none",TRUE,FALSE)]))
+ 	
+ }
> 
> getBooleanVectorForFilterValues <- function(groupedDataFrame, listOfValues) {
+ 	
+ 	tempVector <- rep.int(TRUE,times=length(groupedDataFrame[,1]))
+ 	for(h in names(listOfValues)) {
+ 		if(h != "none" & !is.null(groupedDataFrame[[h]])) {
+ 			tempVector <- tempVector & groupedDataFrame[[h]] %in% listOfValues[[h]]
+ 		}
+ 	}
+ 	return(tempVector)
+ }
> 
> buildRowForOverallList <- function(i, des, listOfValues, dataSet, day) {
+ 	rowString <- list(row=des, day=numeric())
+ 	for(k in listOfValues){
+ 		if(k != "none") {
+ 			rowString$row <- paste(rowString$row,dataSet[i,k])
+ 		}
+ 	}
+ 	return(rowString)
+ } 
> 
> fillOverallResult <- function(overallList, preErrorBars) {
+ 	overallList$debug %debug% "fillOverallResult()"
+ 	if(length(overallList$iniDataSet[,1]) > 0){
+ 		for(i in 1:length(overallList$iniDataSet[,1])) {
+ 			for(des in overallList$descriptor) {
+ 				rowAndColumn <- buildRowForOverallList(i,des, c(overallList$treatment, overallList$secondTreatment),overallList$iniDataSet, overallList$xAxis)
+ 				overallList$overallResult[rowAndColumn$row, as.character(overallList$iniDataSet[i,overallList$xAxis])] <- overallList$iniDataSet[i,des]
+ 				if(tolower(overallList$diagramTyp) != "boxplotstacked")
+ 					overallList$errorBars[rowAndColumn$row, as.character(overallList$iniDataSet[i,overallList$xAxis])] <- preErrorBars[i,des]
+ 			}
+ 		}
+ 	} else {
+ 		print("... no Value for the OverallResult-DataFrame - Wrong filter!")
+ 		overallList$stoppTheCalculation <- TRUE
+ 	}
+ 	return(overallList)
+ }
> 
> buildList <- function(overallList, colOfXaxis) {
+ 	overallList$debug %debug% "buildList()"
+ 	newList <- list()
+ 	
+ 	newList[[overallList$treatment]] <- overallList$filterTreatment
+ 	newList[[overallList$secondTreatment]] <- overallList$filterSecondTreatment
+ 	newList[[colOfXaxis]] <- overallList$filterXaxis
+ 	
+ 	return(newList)
+ }
> 
> conactAllWithAll <- function(value1, value2) {
+ 	
+ 	conactRow <- character()
+ 	for(k1 in value1){
+ 		if(k1 != "none") {
+ 			for(k2 in value2){
+ 				if(k2 != "none") {
+ 					conactRow <- c(conactRow, paste(k1,k2,sep = "#"))
+ 				}
+ 			}
+ 		}
+ 	}
+ 	return(conactRow)
+ }
> 
> buildRowName <- function(mergeDataSet,groupBy, yName = "value") {
+ 	
+ 	if(length(groupBy) == 0) {
+ 		return(data.frame(name=rep.int(yName, length(mergeDataSet[,1])), mergeDataSet))
+ 	} else if (length(groupBy) == 1) {
+ 		return(data.frame(name=mergeDataSet[,groupBy], mergeDataSet[,!(colnames(mergeDataSet) %in% groupBy)]))
+ 	} else {		
+ 		temp <- mergeDataSet[,groupBy[1]]
+ 		for(h in 2:length(groupBy)) {
+ 			temp <- paste(temp, mergeDataSet[,groupBy[h]], sep = "#")
+ 		}
+ 		return(data.frame(name=temp, primaerTreatment= mergeDataSet[,groupBy[1]], mergeDataSet[,mergeDataSet %allColnamesWithoutThisOnes% groupBy]))
+ 	}	
+ }
> 
> overallGetResultDataFrame <- function(overallList) {
+ 	overallList$debug %debug% "overallGetResultDataFrame()"	
+ 	groupBy <- groupByFunction(list(overallList$treatment, overallList$secondTreatment))
+ 	colNames <- list(colOfXaxis="xAxis", colOfMean="mean", colOfSD="se", colName="name", xAxis=overallList$xAxis)
+ 	booleanVectorList <- buildList(overallList, colNames$colOfXaxis)
+ 	columnsStandard <- c(check(overallList$xAxis), check(overallList$treatment), check(overallList$secondTreatment))
+ 		
+ 	if(sum(!is.na(overallList$nBoxDes)) > 0) {
+ 		if(overallList$debug) {print("... nBoxplot")}
+ 		columns <- c(columnsStandard, check(getVector(overallList$nBoxDes)))
+ 		overallList$overallResult_nBoxDes <- getResultDataFrame("nboxplot", overallList$nBoxDes, overallList$iniDataSet[columns], groupBy, colNames, booleanVectorList, overallList$debug)
+ 	} else {
+ 		print("... all in nBoxplot is 'NA'")
+ 	}
+ 	
+ 	if(sum(!is.na(overallList$boxDes)) > 0) {
+ 		if(overallList$debug) {print("... Boxplot")}
+ 		colNames$colOfMean <- "value"
+ 		columns <- c(columnsStandard, check(getVector(overallList$boxDes)))
+ 		overallList$overallResult_boxDes <- getResultDataFrame("boxplot", overallList$boxDes, overallList$iniDataSet[columns], groupBy, colNames, booleanVectorList, overallList$debug)
+ 	} else {
+ 		print("... all in Boxplot is 'NA'")
+ 	}
+ 	
+ 	if(sum(!is.na(overallList$boxStackDes)) > 0) {
+ 		if(overallList$debug) {print("... stackedBoxplot")}
+ 		colNames$colOfMean <- check(getVector(overallList$boxStackDes))
+ 		colNames$colOfXaxis <- overallList$xAxis
+ 		columns <- c(columnsStandard, check(getVector(overallList$boxStackDes)))
+ 		overallList$overallResult_boxStackDes <- getResultDataFrame("boxplotStacked", overallList$boxStackDes, overallList$iniDataSet[columns], groupBy, colNames, booleanVectorList,overallList$debug)
+ 	} else {
+ 		print("... all in stackedBoxplot is 'NA'")
+ 	}
+ 	
+ 	if(is.null(overallList$boxStackDes) && is.null(overallList$boxDes) && is.null(overallList$nBoxDes)) {
+ 		print("... no descriptor set - this pass stopped!")
+ 		overallList$stoppTheCalculation <- TRUE
+ 	}
+ 	
+ 	return(overallList)
+ }
> 
> getPlotNumber <- function(colNameWichMustBind, descriptorList) {
+ 	
+ 	for(n in names(descriptorList)) {
+ 		if(colNameWichMustBind %in% as.vector(unlist(descriptorList[[n]]))) {
+ 			return(n)
+ 		}
+ 	}
+ 	return(0)
+ }
> #descriptorName kann entfernt werden
> getResultDataFrame <- function(diagramTyp, descriptorList, iniDataSet, groupBy, colNames, booleanVectorList, debug) {	
+ 	debug %debug% "getResultDataFrame()"
+ 
+ ################################
+ #	diagramTyp = "boxplotStacked"
+ #	descriptorList = overallList$boxStackDes
+ #	iniDataSet = overallList$iniDataSet[columns]
+ #	groupBy = groupBy 
+ #	colNames = colNames 
+ #	booleanVectorList= booleanVectorList
+ #	descriptorName=overallList$boxStackDesName
+ #	debug = overallList$debug
+ #	diagramTyp = "nboxplot"
+ #	descriptor = getVector(overallList$nBoxDes)
+ #	iniDataSet = overallList$iniDataSet[columns]
+ #	groupBy = groupBy 
+ #	colNames = colNames 
+ #	booleanVectorList= booleanVectorList
+ #	descriptorName=overallList$boxDesName
+ ##########################
+ 
+ 	descriptor <- getVector(descriptorList)
+ 	descriptorName <- seq(1:length(descriptor))
+ 	
+ 	descriptorName <- descriptorName[!is.na(descriptor)]
+ 	descriptor <- descriptor[!is.na(descriptor)]
+ 	
+ 	if(diagramTyp != "boxplot") {
+ 		groupedDataFrame <- data.table(iniDataSet)
+ 		key(groupedDataFrame) <- c(groupBy, colNames$xAxis)		
+ 	}
+ 	
+ 	if(diagramTyp == "boxplot") {
+ 		groupedDataFrameMean <- iniDataSet[groupBy[1]]
+ 		
+ 		groupByReduce <- groupBy[groupBy!=groupBy[1]]
+ 		for(n in c(groupByReduce,  colNames$xAxis, descriptor)) {
+ 			groupedDataFrameMean <- cbind(groupedDataFrameMean,  iniDataSet[n])
+ 		}	
+ 		
+ ####################
+ #		Alternative, den Boxplot selber zu bauen!!
+ #		test <- overallList$iniDataSet %allColnamesWithoutThisOnes% c(groupBy, overallList$xAxis)
+ #		myQuantile <- as.data.frame(groupedDataFrame[,lapply(.SD,quantile, probs=c(0,0.25,0.5,0.75,1), na.rm=TRUE), by=groupBy])
+ #		numberOfGroubingElements <- length(myQuantile[,1]) / 5
+ #		
+ #		testData <- data.frame()
+ #		for(n in seq(1, length(myQuantile[,1]), by=5)) {
+ #			testData <- rbind(testData, myQuantile[n:(n+4),test])
+ #		}
+ #		colnames(testData) <- c("q0", "q25", "q50", "q75", "q100")
+ #		rownames(testData) <- unique(myQuantile[,1])
+ #		
+ #		ggplot(overallList$iniDataSet, aes(x=rownames(testData), ymin=testData[,1], lower=testData[,2], middle=testData[,3], upper=testData[,4], ymax=testData[,5])) + 
+ #				geom_boxplot(stat="identity")
+ #####################		
+ 			
+ 		
+ 	} else {
+ 		groupedDataFrameMean <- as.data.frame(groupedDataFrame[,lapply(.SD, mean, na.rm=TRUE), by=c(groupBy,colNames$xAxis)])
+ 	}
+ 	
+ 	if(diagramTyp == "nboxplot" || diagramTyp == "boxplot") {
+ 		#colNamesOfTheRest <- paste(colNames$colOfMean,seq(1:length(descriptor)), sep="")	
+ 		colNamesOfTheRest <- paste(colNames$colOfMean,descriptorName, sep="")	
+ 	} else {
+ 		colNamesOfTheRest <- groupedDataFrameMean %allColnamesWithoutThisOnes% c(groupBy, colNames$xAxis)
+ 	}
+ 		
+ #alt wenn nur ein Deskriptor übergeben wird
+ #		if(tolower(overallList$diagramTyp) == "nboxplot" || tolower(overallList$diagramTyp) == "boxplot") {
+ #			colNamesOfTheRest <- colOfMean
+ #		} else {
+ #			colNamesOfTheRest <- groupedDataFrameMean %allColnamesWithoutThisOnes% c(groupBy, overallList$xAxis)
+ #		}
+ 		
+ 	colnames(groupedDataFrameMean) <- c(groupBy, colNames$colOfXaxis, colNamesOfTheRest)
+ 	
+ 	if(diagramTyp == "nboxplot") {
+ 		groupedDataFrameSD <- as.data.frame(groupedDataFrame[,lapply(.SD, sd, na.rm=TRUE), by=c(groupBy,colNames$xAxis)])
+ 		colnames(groupedDataFrameSD) <- c(groupBy, colNames$colOfXaxis, paste(colNames$colOfSD,descriptorName, sep=""))
+ 	}
+ 	
+ 	booleanVector <- getBooleanVectorForFilterValues(groupedDataFrameMean, booleanVectorList)
+ 	
+ 	if(diagramTyp == "nboxplot") {
+ 		iniDataSet <- merge(sort=FALSE, groupedDataFrameMean[booleanVector,], groupedDataFrameSD[booleanVector,], by = c(groupBy, colNames$colOfXaxis))
+ 		#overallResult <- buildRowName(iniDataSet,groupBy, descriptorName)
+ 		overallResult <- buildRowName(iniDataSet,groupBy)
+ 		
+ 	} else if(diagramTyp == "boxplot") {
+ 		iniDataSet <- groupedDataFrameMean[booleanVector,]
+ 		#overallResult <- buildRowName(iniDataSet,groupBy, descriptorName)
+ 		overallResult <- buildRowName(iniDataSet,groupBy)
+ 		
+ 	} else {
+ 		iniDataSet <- groupedDataFrameMean[booleanVector,]		
+ 		#buildRowNameDataSet <- buildRowName(iniDataSet, groupBy, descriptorName)
+ 		buildRowNameDataSet <- buildRowName(iniDataSet, groupBy)
+ 		temp <- data.frame()
+ #		count <- 0
+ 		
+ 		for(colNameWichMustBind in buildRowNameDataSet %allColnamesWithoutThisOnes% c(colNames$xAxis, colNames$colName, "primaerTreatment")) {
+ #			count <- count+1
+ 			plot = getPlotNumber(colNameWichMustBind, descriptorList)
+ 			colNameWichMustBindReNamed <- reNameHist(colNameWichMustBind)
+ 	
+ 			if(is.null(buildRowNameDataSet$primaerTreatment)){	
+ 				temp <- rbind(temp,data.frame(hist=rep.int(x=colNameWichMustBindReNamed, times=length(buildRowNameDataSet[,colNameWichMustBind])), values=buildRowNameDataSet[,colNameWichMustBind], xAxis=buildRowNameDataSet[,colNames$colOfXaxis], name=buildRowNameDataSet[,colNames$colName], plot=plot))			
+ 			} else {
+ 				temp <- rbind(temp,data.frame(hist=rep.int(x=colNameWichMustBindReNamed, times=length(buildRowNameDataSet[,colNameWichMustBind])), primaerTreatment=buildRowNameDataSet[,"primaerTreatment"], values=buildRowNameDataSet[,colNameWichMustBind], xAxis=buildRowNameDataSet[,colNames$colOfXaxis], name=buildRowNameDataSet[,colNames$colName], plot = plot))			
+ 			}
+ 		}
+ 		overallResult <- temp		
+ 	}	
+ 
+ 	return(overallResult)
+ }
> 
> setDefaultAxisNames <- function(overallList) {
+ 	overallList$debug %debug% "setDefaultAxisNames()"
+ 	
+ 	if (overallList$xAxisName == "none") {
+ 		overallList$xAxisName <- gsub('[[:punct:]]'," ",overallList$xAxis)
+ 	}
+ #	if (overallList$yAxisName == "none") {
+ #		overallList$yAxisName <- gsub('[[:punct:]]'," ",overallList$descriptor)
+ #	}
+ 	return(overallList)
+ }
> 
> setColorListHist <- function(descriptorList) {
+ 	interval <- seq(0.05,0.95, by=0.1)
+ 	intervalSat <- rep.int(c(0.8,1.0), 5)
+ 	intervalFluo <- seq(0,0.166666666666, by=0.01666666)
+ 	
+ 	if(length(grep("fluo",getVector(descriptorList), ignore.case=TRUE)) > 0) { #rot			
+ 		#colorList <- as.list(rgb(255, seq(256/10/2,255,by=255/10), 255, max = 255))
+ 		#colorList <- as.list(rgb(1, interval, 0, max = 1))
+ 		colorList <- as.list(hsv(h=rev(intervalFluo), s=intervalSat, v=1))
+ 		
+ 	} else if(length(grep("phenol",getVector(descriptorList), ignore.case=TRUE)) > 0) { #gelb
+ 		#colorList <- as.list(rgb(255, rev(seq(256/10/2,255,by=255/10)), 255, max = 255))
+ 		#colorList <- as.list(rgb(1, rev(interval), 0, max = 1))
+ 		colorList <- as.list(hsv(h=intervalFluo, s=intervalSat, v=1))
+ 		
+ 	} else if(length(grep("vis",getVector(descriptorList), ignore.case=TRUE)) > 0) {
+ 		colorList <- as.list(hsv(h=interval, s=1, v=intervalSat))
+ 		
+ 	} else if(length(grep("nir",getVector(descriptorList), ignore.case=TRUE)) > 0) {
+ 		colorList <- as.list(rgb(rev(interval), rev(interval), rev(interval), max = 1))		
+ 	} else {
+ 		return(list(0))
+ 	}
+ 	names(colorList) <- c("0..25", "25..51", "51..76", "76..102", "102..127", "127..153", "153..178", "178..204", "204..229", "229..255")
+ 	return(colorList)
+ }
> 
> setColorList <- function(diagramTyp, descriptorList, overallResult, isGray) {
+ #################	
+ #diagramTyp = "boxplotStacked"
+ #descriptorList = overallList$boxStackDes
+ #isGrey = overallList$isGray
+ #	overallResult=overallList$overallResult_nBoxDes
+ #	diagramTyp = "boxplotStacked"
+ #	descriptorList = overallList$nBoxDes	
+ ##################
+ 	
+ 	if(!as.logical(isGray)) {
+ 		colorVector <- c(brewer.pal(11, "Spectral"))
+ 	} else {
+ 		colorVector <- c(brewer.pal(9, "Greys"))
+ 	}
+ 	
+ 	colorList <- list()
+ 	if(diagramTyp == "nboxplot" || diagramTyp == "boxplot") {
+ 		for(n in names(descriptorList)) {
+ 			colorList[[n]] <- colorRampPalette(colorVector)(length(unique(overallResult$name)))
+ 		}
+ 	} else {
+ 		for(n in names(descriptorList)) {
+ 			colorList[[n]] <- setColorListHist(descriptorList[n])
+ 		}
+ 	}
+ 	return(colorList)
+ }
> 
> setColor <- function(overallList) {
+ 	overallList$debug %debug% "setColor()"
+ 	  
+ 	overallList$color_nBox <- setColorList("nboxplot", overallList$nBoxDes, overallList$overallResult_nBoxDes, overallList$isGray)
+ 	overallList$color_box <- setColorList("boxplot", overallList$boxDes, overallList$overallResult_boxDes, overallList$isGray)
+ 	overallList$color_boxStack <- setColorList("boxplotStacked", overallList$boxStackDes, overallList$overallResult_boxStackDes, overallList$isGray)
+ 	return(overallList)
+ }
> 
> normalizeToHundredPercent <-  function(whichRows, overallResult) {
+ 	return(t(apply(overallResult[whichRows,], 1, function(x,y){(100*x)/y}, y=colSums(overallResult[whichRows,]))))
+ }
> 
> writeLatexFile <- function(saveNameLatexFile, saveNameImageFile="", o="") {
+ 	
+ 	saveNameImageFile <- preprocessingOfValues(saveNameImageFile, FALSE, "_")
+ 	saveNameLatexFile <- preprocessingOfValues(saveNameLatexFile, FALSE, "_")
+ 	o <- gsub('[[:punct:]]',"_",o)
+ 	
+ 	latexText <- paste("\\loadImage{",
+ 					   ifelse(saveNameImageFile=="",saveNameLatexFile,saveNameImageFile),
+ 					   ifelse(o=="", "", paste("_",o ,sep="")),
+ 					   ".pdf}", sep="")
+ 	
+ 	write(x=latexText, append=TRUE, file=paste(saveNameLatexFile,"tex",sep="."))
+ 	
+ }
> 
> saveImageFile <- function(overallList, plot, saveName, extraString="") {
+ 	filename <- preprocessingOfValues(paste(saveName,extraString,sep=""), FALSE,replaceString = "_")	
+ 	ggsave (filename=paste(filename,overallList$saveFormat,sep="."), plot = plot, dpi=as.numeric(overallList$dpi))
+ 
+ }
> 
> makeDepthBoxplotDiagram <- function(h, overallList) {
+ 
+ 	overallList$debug %debug% "makeDepthBoxplotDiagram()"
+ 	overallList$symbolParameter <- 15
+ 	
+ 	if (h==1) {
+ 		openImageFile(overallList)
+ 	}
+ 	par(mar=c(4.1,4.1,2.1,2.1))
+ 	plot.depth(as.matrix(overallList$overallResult), plot.type=h, xlabel=overallList$xAxisName, l.width=12, lp.color=overallList$color)
+ 	
+ 	grid()
+ 	if (h==1) {
+ 		dev.off()
+ 	}
+ 	if(overallList$appendix) {
+ 		writeLatexFile("appendixImage", overallList$saveName)
+ 	}
+ 	
+ 	return(overallList)
+ }
> 
> CheckIfOneColumnHasOnlyValues <- function(overallResult, descriptor="", diagramTyp="nboxplot") {	
+ 	
+ 	max <- -1	
+ 	for(index in levels(overallResult$name)){
+ 		if(diagramTyp == "nboxplot" || diagramTyp == "boxplot") {
+ 			temp <- sum(!is.na(overallResult$mean[overallResult$name == index]))
+ 		} else {
+ 			boolVec <- overallResult$name == index
+ 			temp <- sum(!is.na(overallResult[boolVec,descriptor]))
+ 		}
+ 		max <- ifelse(temp > max, temp, max)
+ 	}
+ 		
+ 	return(ifelse(max == 1,TRUE, FALSE))
+ }
> 
> 
> buildMyStats <- function(values, means, se) {
+ 	means <- as.data.frame(as.vector(means))
+ 	colnames(means) <- "means"
+ 	
+ 	se <- as.data.frame(as.vector(se))
+ 	colnames(se) <- "se"
+ 
+ 	return(data.frame(value=values,means=means, se=se))
+ }
> 
> buildMyStats2 <- function(values, means, se, rowName) {
+ 	means <- as.data.frame(as.vector(means))
+ 	colnames(means) <- "means"
+ 	
+ 	rowName <- as.data.frame(as.vector(rowName))
+ 	colnames(rowName) <- Name
+ 	
+ 	se <- as.data.frame(as.vector(se))
+ 	colnames(se) <- "se"
+ 	
+ 	return(data.frame(value=values,means=means, se=se, rowName=rowName))
+ }
> 
> reduceOverallResult <- function(tempOverallList, imagesIndex) {
+ 	tempOverallList$debug %debug% "reduceOverallResult()"
+ 
+ 	workingDataSet <- buildDataSet(tempOverallList$overallResult[,1:2], tempOverallList, c("mean", "se"), imagesIndex)
+ 	colnames(workingDataSet) <- c(colnames(workingDataSet)[1:2], "mean", "se")
+ 	return(workingDataSet)	
+ }
> 
> 
> reduceWholeOverallResultToOneValue <- function(tempOverallResult, imagesIndex, debug, diagramTyp="nboxplot") {
+ 	debug %debug% "reduceWholeOverallResultToOneValue()"
+ 	
+ 	if(diagramTyp == "boxplotstacked") {
+ 		
+ 		workingDataSet <- tempOverallResult[tempOverallResult$plot == imagesIndex,]
+ 		workingDataSet$hist <- factor(workingDataSet$hist, unique(workingDataSet$hist))
+ 		
+ 	} else {
+ 		colNames <- vector()
+ 		if(diagramTyp == "nboxplot" || diagramTyp == "barplot") {
+ 			colNames <- c("mean", "se")
+ 		} else if(diagramTyp == "boxplot") {
+ 			colNames <- c("value")
+ 		} 
+ 		
+ 		workingDataSet <- buildDataSet(tempOverallResult[,1:2], tempOverallResult, colNames, imagesIndex)
+ 		colnames(workingDataSet) <- c(colnames(workingDataSet)[1:2], colNames)
+ 	}
+ 	return(workingDataSet)	
+ }
> 
> 
> makeLinearDiagram <- function(h, overallResult, overallDescriptor, overallColor, overallDesName, overallSaveName, overallList) {
+ ########################		
+ #	h=h 
+ #	overallResult = overallList$overallResult_nBoxDes
+ #	overallColor=overallList$color_nBox
+ ##	debug = overallList$debug
+ #	overallDescriptor = overallList$nBoxDes
+ #	overallDesName = overallList$nBoxDesName
+ #########################
+ 	
+ 	overallList$debug %debug% "makeLinearDiagram()"	
+ 	
+ 	tempOverallResult <-  overallResult
+ 	
+ 	for(imagesIndex in names(overallDescriptor)) {
+ 		if(!is.na(overallDescriptor[[imagesIndex]])) {
+ 			print(paste("... images",imagesIndex))
+ 			overallResult <- reduceWholeOverallResultToOneValue(tempOverallResult, imagesIndex, overallList$debug, "nboxplot")
+ 			
+ 			if(!CheckIfOneColumnHasOnlyValues(overallResult)) {	
+ 		
+ 	#			myDataSet <- data.frame(name=c("normal","wet","dry","normal","wet","dry","normal","wet","dry"), 
+ 	#									xAxis=c(6,6,6,8,8,8,10,10,10),		
+ 	#									mean=c(4883,6224,4630,6047,5790,7758,7349,7778,9725), 
+ 	#									se=c(1515,1190,1670,1831,2013,1318,2387,2182,1499))
+ 						
+ 				plot <-	ggplot(data=overallResult, aes(x=xAxis, y=mean, shape=name)) +
+ 						#geom_smooth(aes(ymin=mean-se, ymax=mean+se, colour=name, fill=name), stat="identity", alpha=0.1) +
+ 						geom_ribbon(aes(ymin=mean-se, ymax=mean+se, fill=name), stat="identity", alpha=0.1) +
+ 						geom_line(aes(color=name), alpha=0.2) +
+ 						geom_point(aes(color=name), size=3) +
+ 						scale_x_continuous(name=overallList$xAxisName, minor_breaks = min(overallResult$xAxis):max(overallResult$xAxis)) +
+ 						ylab(overallDesName[[imagesIndex]]) +
+ 						scale_fill_manual(values = overallColor[[imagesIndex]]) +
+ 						scale_colour_manual(values= overallColor[[imagesIndex]]) +
+ 						scale_shape_manual(values = c(1:length(overallColor[[imagesIndex]]))) +
+ 						theme_bw() +
+ 						opts(axis.title.x = theme_text(face="bold", size=11),
+ 								axis.title.y = theme_text(face="bold", size=11, angle=90),
+ 								#panel.grid.major = theme_blank(), # switch off major gridlines
+ 								#panel.grid.minor = theme_blank(), # switch off minor gridlines
+ 								legend.position = "right", # manually position the legend (numbers being from 0,0 at bottom left of whole plot to 1,1 at top right)
+ 								legend.title = theme_blank(), # switch off the legend title						
+ 								#legend.key.size = unit(1.5, "lines"),
+ 								legend.key = theme_blank(), # switch off the rectangle around symbols in the legend
+ 								panel.border = theme_rect(colour="Grey", size=0.1)
+ 						)
+ 				
+ 				if(length(overallColor[[imagesIndex]]) > 25) {
+ 					plot <- plot + opts(legend.text = theme_text(size=6),
+ 										legend.key.size = unit(0.7, "lines")
+ 										)
+ 				} else {
+ 					plot <- plot + opts(legend.text = theme_text(size=11))
+ 				}
+ 								
+ 	#			print(plot)
+ 		
+ 		##!# nicht löschen, ist die interpolation (alles in dieser if Abfrage mit #!# makiert)
+ 		##!#				newCoords <- seq(min(overallList$filterXaxis,na.rm=TRUE),max(overallList$filterXaxis,na.rm=TRUE),1)
+ 		##!#				newValue <- approx(overallList$filterXaxis, overallList$overallResult[y,],xout=newCoords,method="linear")
+ 		##!#				
+ 		##!#				naVector <- is.na(overallList$overallResult[y,])
+ 		##!#				overallResultWithNaValues <- overallList$overallResult[y,]
+ 		##!#				overallList$overallResult[y,naVector] <- newValue$y[overallList$filterXaxis[naVector]]
+ 		#				
+ 		#				if (firstPlot) {
+ 		#					firstPlot <- FALSE
+ 		##!#				plot(overallList$filterXaxis, overallList$overallResult[y,], main="", type="c", xlab=overallList$xAxisName, col=overallList$color[y], ylab=overallList$yAxisName, pch=y, lty=1, lwd=3, ylim=c(min(overallList$overallResult,na.rm=TRUE),max(overallList$overallResult,na.rm=TRUE)))
+ 		#					plot(overallList$filterXaxis, overallList$overallResult[y,], main="", type="b", xlab=overallList$xAxisName, col=overallList$color[y], ylab=overallList$yAxisName, pch=y, lty=1, lwd=3, ylim=c(min(overallList$overallResult,na.rm=TRUE),max(overallList$overallResult,na.rm=TRUE)))
+ 		#				} else {
+ 		##!#				points(overallList$filterXaxis, overallList$overallResult[y,], type="c", col=overallList$color[y], pch=y, lty=1, lwd=3 )	
+ 		#					points(overallList$filterXaxis, overallList$overallResult[y,], type="b", col=overallList$color[y], pch=y, lty=1, lwd=3 )
+ 		#				}
+ 		##!#				points(overallList$filterXaxis, overallResultWithNaValues, type="p", col=overallList$color[y], pch=y, lty=1, lwd=3 )
+ 		#			} 
+ 		
+ 				if(h==1) {
+ 					saveImageFile(overallList, plot, overallSaveName[[imagesIndex]], "nboxplot")
+ 				} else {
+ 					print(plot)
+ 				}
+ 				if(overallList$appendix) {
+ 					writeLatexFile("appendixImage", overallSaveName[[imagesIndex]], "nboxplot")
+ 				}
+ 			
+ 			} else {
+ 				print("... only one column has values, so it will be plot as barplot!")
+ 		
+ 				day <- overallResult$xAxis[!is.na(overallResult$mean)][1]
+ 				overallList$xAxisName <- paste(overallList$xAxisName,day)
+ 				#overallList$overallResult <- overallList$overallResult[!is.na(overallList$overallResult$mean),]
+ 				overallList <- makeBarDiagram(h, overallResult, overallDescriptor, overallColor, overallDesName, overallSaveName, overallList, TRUE)
+ 			}
+ 		}
+ 	}
+ 	#return(overallList)
+ }
> 
> getColor <- function(overallColorIndex, overallResult) {
+ 	input <- as.vector(unique(overallResult$hist))
+ 	
+ 	color <- vector()
+ 	for(n in input) {
+ 		color <- c(color, overallColorIndex[[n]])
+ 	}
+ 	return(color)
+ }
> 
> 
> plotStackedImage <- function(h, overallList, overallResult, title = "", makeOverallImage = FALSE, legende=TRUE, minor_breaks=TRUE, overallColor, overallDesName, imagesIndex, overallSaveName) {
+ 	overallList$debug %debug% "plotStackedImage()"	
+ 	if(length(overallResult[,1]) > 0) {
+ 
+ 		plot <- ggplot(overallResult, aes(xAxis, values, fill=hist)) + 
+ 				geom_bar(stat="identity", position = "fill") +
+ 			 	ylab(overallDesName[[imagesIndex]]) 
+ 				#coord_cartesian(ylim=c(0,1)) +
+ 			
+ 		if(minor_breaks) {
+ 			plot <- plot + scale_x_continuous(name=overallList$xAxisName, minor_breaks = min(overallResult$xAxis):max(overallResult$xAxis))
+ 		} else {
+ 			plot <- plot + xlab(overallList$xAxisName)
+ 		}
+ 				
+ 		plot <- plot +		
+ 				scale_fill_manual(values = getColor(overallColor[[imagesIndex]], overallResult), name="") +
+ 				theme_bw() +
+ 				opts(axis.title.x = theme_text(face="bold", size=11),
+ 						axis.title.y = theme_text(face="bold", size=11, angle=90),
+ 						plot.margin = unit(c(0.1, 0.1, 0, 0), "cm"),
+ 						#panel.background = theme_rect(linetype = "dotted"),
+ 						panel.border = theme_rect(colour="Grey", size=0.1),
+ 						strip.background = theme_rect(colour=NA)
+ #						plot.title = theme_text(size=10),
+ #						plot.title = theme_rect(colour="Pink", size=0.1),
+ 				) 
+ 		
+ 		if(!legende) {
+ 			plot <- plot + opts(legend.position="none")
+ 		} else {
+ 			plot <- plot + opts(legend.position="right", 
+ 								legend.title = theme_blank(),
+ 								legend.text = theme_text(size=11),
+ 								legend.key = theme_blank())
+ 		}
+ 		
+ 		if(title != "") {
+ 			plot <- plot + opts(title = title)
+ 		}
+ 		
+ 		if(!minor_breaks) {
+ 			plot <- plot + opts(panel.grid.minor = theme_blank())
+ 		}
+ 		
+ 		if(makeOverallImage) {
+ 			#plot <- plot + facet_wrap(~ name, drop=TRUE)
+ 			plot <- plot + facet_wrap(~ name)
+ 		}
+ 		
+ 		if (h==1) {
+ 			saveImageFile(overallList, plot, overallSaveName[[imagesIndex]], paste("overall", title, sep=""))
+ 			if(makeOverallImage) {
+ 				writeLatexFile(paste(overallSaveName[[imagesIndex]], "stackedOverallImage", sep=""), paste(overallSaveName[[imagesIndex]],"overall",title, sep=""))	
+ 			} else {
+ 				writeLatexFile(overallSaveName[[imagesIndex]], paste(overallSaveName[[imagesIndex]],"overall",title, sep=""))	
+ 			}
+ 		} else {
+ 			print(plot)
+ 		}
+ 	}
+ }
> 
> PreWorkForMakeBigOverallImage <- function(h, overallResult, overallDescriptor, overallColor, overallDesName, overallSaveName, overallList, imagesIndex) {
+ 	overallList$debug %debug% "PreWorkForMakeBigOverallImage()"	
+ 	
+ 	groupBy <- groupByFunction(list(overallList$treatment, overallList$secondTreatment))
+ 	if(length(groupBy) == 0 || length(groupBy) == 1) {
+ 		plotStackedImage(h = h, overallList = overallList, overallResult = overallResult, makeOverallImage = TRUE, legende=TRUE, minor_breaks=FALSE, overallColor = overallColor, overallDesName = overallDesName, imagesIndex= imagesIndex, overallSaveName =overallSaveName)
+ 		
+ 	} else {
+ 		for(value in overallList$filterSecondTreatment) {
+ 			title <- value
+ 			plottedName <- overallList$filterTreatment %contactAllWithAll% value
+ 			booleanVector <- getBooleanVectorForFilterValues(overallResult, list(name = plottedName))
+ 			plotThisValues <- overallResult[booleanVector,]
+ 			plotThisValues <- reNameColumn(plotThisValues, "name", "primaerTreatment")
+ 			plotStackedImage(h, overallList, plotThisValues, title = title, makeOverallImage = TRUE,  legende=TRUE, minor_breaks=FALSE, overallColor = overallColor, overallDesName = overallDesName, imagesIndex=imagesIndex, overallSaveName=overallSaveName)
+ 		}	 
+ 	}
+ }
> 
> PreWorkForMakeNormalImages <- function(h, overallList) {
+ 	overallList$debug %debug% "PreWorkForMakeNormalImages()"
+ 	stackedImages <- unlist(unique(overallList$overallResult["name"]))
+ 	
+ 	for(o in stackedImages) {
+ 		overallList$debug %debug% paste("makeBoxplotStackedDiagram with the descriptor: ",overallList$saveName,o)
+ 		plotThisValues <- overallList$overallResult[overallList$overallResult["name"] == o,]
+ 		plotStackedImage(h, overallList, plotThisValues, o, FALSE, TRUE, TRUE)
+ 	}
+ }
> 
> 
> makeBoxplotStackedDiagram <- function(h, overallResult, overallDescriptor, overallColor, overallDesName, overallSaveName, overallList) {
+ 	########################		
+ #	h=h
+ #	overallResult=overallList$overallResult_boxStackDes
+ #	overallDescriptor=overallList$boxStackDes
+ #	overallColor=overallList$color_boxStack
+ #	overallDesName=overallList$boxStackDesName
+ #	overallList=overallList
+ #	overallSaveName = overallList$saveName_nBoxDes
+ 	#########################
+ 
+ 
+ 	
+ 	
+ 	overallList$debug %debug% "makeBoxplotStackedDiagram()"
+ 	overallResult[is.na(overallResult)] <- 0
+ 	tempOverallResult <- overallResult
+ 	
+ 	for(imagesIndex in names(overallDescriptor)) {
+ 		
+ 		overallResult <- reduceWholeOverallResultToOneValue(tempOverallResult, imagesIndex, overallList$debug, "boxplotstacked")
+ 	
+ 		PreWorkForMakeBigOverallImage(h, overallResult, overallDescriptor, overallColor, overallDesName, overallSaveName, overallList, imagesIndex)
+ 		#PreWorkForMakeNormalImages(h,overallList)
+ 	}
+ 	#return(overallList)
+ }	
> 
> makeBarDiagram <- function(h, overallResult, overallDescriptor, overallColor, overallDesName, overallSaveName, overallList, isOnlyOneValue = FALSE) {
+ 	########################		
+ #	h=h 
+ #	overallResult = overallList$overallResult_nBoxDes
+ #	overallColor=overallList$color_nBox
+ ##	debug = overallList$debug
+ #	overallDescriptor = overallList$nBoxDes
+ #	overallDesName = overallList$nBoxDesName
+ #	isOnlyOneValue = FALSE
+ 	#########################
+ 
+ 	overallList$debug %debug% "makeBarDiagram()"
+ 
+ 	tempOverallResult <-  overallResult
+ 	
+ 	for(imagesIndex in names(overallDescriptor)) {
+ 		if(!is.na(overallDescriptor[[imagesIndex]])) {
+ 			overallResult <- reduceWholeOverallResultToOneValue(tempOverallResult, imagesIndex, overallList$debug, "barplot")
+ 			overallResult <- overallResult[!is.na(overallResult$mean),]
+ 			
+ 			if(isOnlyOneValue) {
+ 				myPlot <- ggplot(data=overallResult, aes(x=name, y=mean))
+ 			} else {
+ 				myPlot <- ggplot(data=overallResult, aes(x=xAxis, y=mean))
+ 			}
+ 			
+ 			myPlot <- myPlot + 						
+ 					geom_bar(stat="identity", aes(fill=name), colour="Grey", size=0.1) +
+ 					geom_errorbar(aes(ymax=mean+se, ymin=mean-se), width=0.2, colour="black")+
+ 					#geom_errorbar(aes(ymax=mean+se, ymin=mean-se), width=0.5, colour="Pink")+
+ 					ylab(overallDesName[[imagesIndex]]) +
+ 					coord_cartesian(ylim=c(0,max(overallResult$mean + overallResult$se + 10,na.rm=TRUE))) +
+ 					xlab(overallList$xAxisName) +
+ 					scale_fill_manual(values = overallColor[[imagesIndex]]) +
+ 					theme_bw() +
+ 					opts(legend.position="none",
+ 							plot.margin = unit(c(0.1, 0.1, 0, 0), "cm"),
+ 							axis.title.x = theme_text(face="bold", size=11),
+ 							axis.title.y = theme_text(face="bold", size=11, angle=90),
+ 							panel.grid.minor = theme_blank(),
+ 							panel.border = theme_rect(colour="Grey", size=0.1)
+ 					)
+ 			
+ 			if(length(overallColor[[imagesIndex]]) > 10) {
+ 				myPlot <- myPlot + opts(axis.text.x = theme_text(size=6, angle=90))
+ 			}
+ 			print(myPlot)
+ 			
+ 			if (h==1) {
+ 				saveImageFile(overallList, myPlot, overallSaveName[[imagesIndex]], "barplot")
+ 			} else {
+ 				print(myPlot)
+ 			}
+ 			if(overallList$appendix) {
+ 				writeLatexFile("appendixImage", overallSaveName[[imagesIndex]], "barplot")
+ 			}
+ 		}
+ 	}
+ 	#return(overallList)
+ }
> 
> ##Problem: der median wird nicht angezeigt!
> makeBoxplotDiagram <- function(h, overallResult, overallDescriptor, overallColor, overallDesName, overallSaveName, overallList) {
+ 	########################		
+ #	h=h 
+ #	overallResult = overallList$overallResult_boxDes
+ #	overallColor=overallList$color_box
+ ##	debug = overallList$debug
+ #	overallDescriptor = overallList$boxDes
+ #	overallDesName = overallList$boxDesName
+ 	#########################
+ 	
+ 	overallList$debug %debug% "makeBoxplotDiagram()"
+ 	#overallList$overallResult <- overallList$overallResult[!is.na(overallList$overallResult$mean),]
+ 
+ 	tempOverallResult <-  overallResult
+ 	
+ 	for(imagesIndex in names(overallDescriptor)) {
+ 		if(!is.na(overallDescriptor[[imagesIndex]])) {
+ 			overallResult <- reduceWholeOverallResultToOneValue(tempOverallResult, imagesIndex, overallList$debug, "boxplot")
+ 			
+ 			
+ 			#myPlot <- ggplot(overallList$overallResult, aes(factor(name), value, fill=name, colour=name)) + 
+ 			myPlot <- ggplot(overallResult, aes(factor(name), value, fill=name)) +
+ 					geom_boxplot() +
+ 					ylab(overallDesName[[imagesIndex]]) +
+ 					#coord_cartesian(ylim=c(0,max(overallList$overallResult$mean + overallList$overallResult$se + 10,na.rm=TRUE))) +
+ 					xlab(overallList$xAxisName) +
+ 					scale_fill_manual(values = overallColor[[imagesIndex]]) +
+ 					#stat_summary(fun.data = f, geom = "crossbar", height = 0.1,	colour = NA, fill = "skyblue", width = 0.8, alpha = 0.5) +
+ 					theme_bw() +
+ 					opts(legend.position="none",
+ 							plot.margin = unit(c(0.1, 0.1, 0, 0), "cm"),
+ 							axis.title.x = theme_text(face="bold", size=11),
+ 							axis.title.y = theme_text(face="bold", size=11, angle=90),
+ 							panel.grid.minor = theme_blank(),
+ 							panel.border = theme_rect(colour="Grey", size=0.1)
+ 					)
+ 		
+ 			if(length(overallColor[[imagesIndex]]) > 10) {
+ 				myPlot <- myPlot + opts(axis.text.x = theme_text(size=6, angle=90))
+ 			}	
+ 			
+ 	#		print(myPlot)
+ 			
+ 			if (h==1) {
+ 				saveImageFile(overallList, myPlot, overallSaveName[[imagesIndex]], "boxplot")
+ 			} else {
+ 				print(myPlot)
+ 			}
+ 			if(overallList$appendix) {
+ 				writeLatexFile("appendixImage", overallSaveName[[imagesIndex]], "boxplot")
+ 			}
+ 		}
+ 	}
+ 	#return(overallList)
+ }
> 
> makeDiagrams <- function(overallList) {
+ 	overallList$debug %debug% "makeDiagrams()"
+ 	durchlauf <- ifelse(overallList$showResultInR, 2, 1)
+ 	
+ 	for(h in 1:durchlauf) {
+ 
+ 		if(sum(!is.na(overallList$nBoxDes)) > 0) {
+ 			if(overallList$debug) {print("... nBoxplot")}	
+ 			makeLinearDiagram(h, overallList$overallResult_nBoxDes, overallList$nBoxDes, overallList$color_nBox, overallDesName=overallList$nBoxDesName, overallList$saveName_nBoxDes ,overallList)
+ 		} else {
+ 			print("... all in nBoxplot is 'NA'")
+ 		}
+ 		
+ 		if(sum(!is.na(overallList$boxDes)) > 0) {
+ 			if(overallList$debug) {print("... Boxplot")}
+ 			makeBoxplotDiagram(h, overallList$overallResult_boxDes, overallList$boxDes, overallList$color_box, overallDesName=overallList$boxDesName, overallList$saveName_boxDes, overallList)
+ 		} else {
+ 			print("... all in Boxplot is 'NA'")
+ 		}
+ 		
+ 		if(sum(!is.na(overallList$boxStackDes)) > 0) {
+ 			if(overallList$debug) {print("... stacked Boxplot")}
+ 			makeBoxplotStackedDiagram(h, overallList$overallResult_boxStackDes, overallList$boxStackDes, overallList$color_boxStack, overallDesName=overallList$boxStackDesName, overallList$saveName_boxStackDes, overallList)
+ 		} else {
+ 			print("... all in stacked Boxplot is 'NA'")
+ 		}
+ 		
+ 		if(FALSE) {	# falls auch mal barplots erstellt werden sollen (ausser wenn nur ein Tag vorhanden ist!)
+ 			if(overallList$debug) {print("... Barplot")}
+ 			makeBarDiagram(h, overallList$overallResult_nBoxDes, overallList$nBoxDes, overallList$color_nBox, overallDesName=overallList$nBoxDesName, overallList$saveName_nBoxDes, overallList)
+ 		}
+ 	}
+ }
> 
> #makeDiagrams <- function(overallList) {
> #	overallList$debug %debug% "makeDiagrams()"
> #	durchlauf <- ifelse(overallList$showResultInR, 2, 1)
> #	
> #	for(h in 1:durchlauf) {
> #						
> #		if (tolower(overallList$diagramTyp) == "boxplot") {
> #			overallList <- makeBoxplotDiagram(h, overallList)
> #			
> #		} else if (tolower(overallList$diagramTyp) == "boxplotstacked") {
> #			overallList <- makeBoxplotStackedDiagram(h, overallList)
> #			
> #		} else if(tolower(overallList$diagramTyp) == "nboxplot"){
> #			overallList <- makeLinearDiagram(h, overallList)
> #			
> #		}  else if (tolower(overallList$diagramTyp) == "barplot") {
> #			overallList <- makeBarDiagram(h, overallList)
> #		} else {
> #			print("Error - overallList$diagramTyp is undefined!")
> #		}
> #	}
> #}
> 
> checkIfAllNecessaryFilesAreThere <- function() {
+ 		print("... check if the noValues-Image is there")
+ 		file <- "noValues.pdf"
+ 		if(!file.exists(file)){
+ 			library("Cairo")
+ 			print(paste("... create defaultImage '",file,"'",sep=""))
+ 			Cairo(width=900, height=70,file=file,type="pdf",bg="transparent",units="px",dpi=90)
+ 			par(mar = c(0,0,0,0))
+ 			plot.new()
+ 			legend("left", "no values", col= c("black"), pch=1, bty="n")
+ 			dev.off()
+ 		}	
+ }
> 
> buildBlacklist <- function(workingDataSet, descriptorSet) {
+ 	
+ 	searchString <- ".histogram."
+ 	searchString <- paste(searchString,"mark",sep = "|")	
+ 	additionalDescriptors <- c(descriptorSet, "Day (Int)","Day","Time", "Plant ID", "vis.side", "fluo.side", "nir.side", "vis.top", "fluo.top", "nir.top")
+ 	
+ 	return(c(colnames(workingDataSet)[grep(searchString,colnames(workingDataSet), ignore.case = TRUE)], preprocessingOfValues(additionalDescriptors, TRUE)))
+ }
> 
> initRfunction <- function(DEBUG = FALSE){
+ 	
+ 	if(DEBUG) {
+ 		
+ 		options(error = quote({
+ 			#sink(file="error.txt", split = TRUE);
+ 			dump.frames();
+ 			print(attr(last.dump,"error.message"));
+ 			#x <- attr(last.dump,"error.message")
+ 			traceback();
+ 			#sink(file=NULL);		
+ 			#q()
+ 		}))
+ 	} else {	
+ 		options(error = NULL)
+ 	}
+ 	memory.limit(size=3500)
+ 
+ 	while(!is.null(dev.list())) {
+ 		dev.off()
+ 	}
+ }
> typOfStartOptions = "test"
> 	typOfStartOptions <- tolower(typOfStartOptions)
> 	
> 	args <- commandArgs(TRUE)
> 	print("#### Arguments")
[1] "#### Arguments"
> 	print(args)
character(0)
> 	print("####")
[1] "####"
> 	
> 	saveFormat <- "pdf"	
> 	dpi <- "150" ##90
> 	
> 	isGray <- FALSE
> 	showResultInR <- FALSE
> 	
> 	treatment <- "Treatment"
> 	filterTreatment <- "none"
> 	
> 	secondTreatment <- "none"
> 	filterSecondTreatment <- "none"
> 	
> 	xAxis <- "Day (Int)" 
> 	xAxisName <- "DAS"
> 	filterXaxis <- "none"
> 	
> #	diagramTypVector <- vector()
> 	descriptorSet <- vector()
> 	descriptorSetName <- vector()
> 	
> 	fileName <- "error"
> 
> 	appendix <- FALSE
> 	#appendix <- TRUE
> 	
> 	separation <- ";"
> #	if (length(args) < 1) {
> #		englischVersion <- FALSE
> #		#englischVersion <- TRUE
> #	} else {
> #		englischVersion <- TRUE
> #	}
> 
> 	if (typOfStartOptions == "all" | typOfStartOptions == "report" | typOfStartOptions == "allmanual") {
+ 
+ 		if (typOfStartOptions != "allmanual") {
+ 			fileName <- fileName %exists% args[1]
+ 		} else {
+ 			fileName <- "numeric_data.MaizeAnalysisAction_ 1116BA_new3.csv"
+ 			#fileName <- "report.csv" ## englischVersion <- TRUE setzen!!
+ 			#fileName <- "testDataset3.csv"
+ 		}
+ 		
+ 		if (fileName != "error") {
+ 			workingDataSet <- separation %getData% fileName
+ 			
+ 			if(workingDataSet != "error") {
+ 				#nboxplot
+ 				if (typOfStartOptions == "all") {
+ 					descriptorSet_nBoxplot <- colnames(workingDataSet)
+ 					descriptorSetName_nBoxplot <- descriptorSet
+ 					
+ 				} else { #Report	
+ 					descriptorSet_nBoxplot <- c("Weight A (g)","Weight B (g)","Water (weight-diff)","side.height.norm (mm)","side.width.norm (mm)","side.area.norm (mm^2)", "top.area.norm (mm^2)",
+ 							"side.fluo.intensity.chlorophyl.average (relative)","side.fluo.intensity.phenol.average (relative)",
+ 							"side.nir.intensity.average (relative)","side.leaf.count.median (leafs)","side.bloom.count (tassel)",
+ 							"side.leaf.length.sum.norm.max (mm)", "volume.fluo.iap","volume.iap (px^3)", "volume.iap_max", "volume.lt (px^3)",
+ 							"volume.iap.wue", "side.nir.wetness.plant_weight_drought_loss", "top.nir.wetness.plant_weight_drought_loss", "side.nir.wetness.av", "top.nir.wetness.av",
+ 							"side.area.relative", "side.height.norm.relative", "side.width.norm.relative", "top.area.relative", "side.area.relative", "volume.iap.relative",
+ 							"side.height (mm)","side.width (mm)","side.area (px)", "top.area (px)")
+ 				
+ 					descriptorSetName_nBoxplot <- c("weight before watering (g)","weight after watering (g)", "water weight (g)", "normalized height (mm)", "normalized width (mm)", "normalized side area (mm^2)", "normalized top area (mm^2)",
+ 							"chlorophyl intensity (relative intensity/pixel)", "fluorescence intensity (relative intensity/pixel)", "nir intensity (relative intensity/pixel)",
+ 							"number of leafs (leaf)", "number of tassels (tassel)", "length of leafs plus stem (mm)", "volume based on FLUO (IAP) (px^3)", "volume based on RGB (IAP) (px^3)", "volume based on max RGB-image (IAP) (px^3)", "volume based on RGB (LemnaTec) (px^3)",
+ 							"volume based water use efficiency", "weighted loss through drought stress (side)", "weighted loss through drought stress (top)", "Average wetness of side image", "Average wetness of top image",
+ 							"relative projected side area (%)", "relative plant height (%)", "relative plant width (%)", "relative projected top area (%)", "relative projected side area (%)", "relative volume (IAP based formular - RGB) (%)",
+ 							"height (px)", "width (px)", "side area (px)", "top area (px)")		
+ 				}
+ 				#diagramTypVector <- rep.int("nboxplot", times=length(descriptorSetName))
+ 	
+ 				
+ 				#boxplot
+ 				descriptorSet_boxplot <- c("side.height.norm (mm)","side.width.norm (mm)","side.area.norm (mm^2)", "top.area.norm (mm^2)",
+ 						"volume.fluo.iap","volume.iap (px^3)", "volume.iap_max", "volume.lt (px^3)",
+ 						"side.height (mm)","side.width (mm)","side.area (px)", "top.area (px)")
+ 				
+ 				descriptorSetName_boxplot <- c("normalized height (mm)", "normalized width (mm)", "normalized side area (mm^2)", "normalized top area (mm^2)",
+ 						"volume based on FLUO (IAP) (px^3)", "volume based on RGB (IAP) (px^3)", "volume based on max RGB-image (IAP) (px^3)", "volume based on RGB (LemnaTec) (px^3)",
+ 						"height (px)", "width (px)", "side area (px)", "top area (px)")	
+ 				
+ 				#diagramTypVectorBox <- rep.int("boxplot", times=length(descriptorSetBox))
+ 				
+ 				#descriptorSet <- c(descriptorSet, descriptorSetBox)
+ 				#descriptorSetName <- c(descriptorSetName, descriptorSetNameBox)
+ 				#diagramTypVector <- c(diagramTypVector, diagramTypVectorBox)
+ 				
+ 				#boxplotStacked
+ 				descriptorSet_boxplotStacked <- c("side.nir.normalized.histogram.bin.1.0_25$side.nir.normalized.histogram.bin.2.25_51$side.nir.normalized.histogram.bin.3.51_76$side.nir.normalized.histogram.bin.4.76_102$side.nir.normalized.histogram.bin.5.102_127$side.nir.normalized.histogram.bin.6.127_153$side.nir.normalized.histogram.bin.7.153_178$side.nir.normalized.histogram.bin.8.178_204$side.nir.normalized.histogram.bin.9.204_229$side.nir.normalized.histogram.bin.10.229_255",
+ 								   				  "side.fluo.normalized.histogram.bin.1.0_25$side.fluo.normalized.histogram.bin.2.25_51$side.fluo.normalized.histogram.bin.3.51_76$side.fluo.normalized.histogram.bin.4.76_102$side.fluo.normalized.histogram.bin.5.102_127$side.fluo.normalized.histogram.bin.6.127_153$side.fluo.normalized.histogram.bin.7.153_178$side.fluo.normalized.histogram.bin.8.178_204$side.fluo.normalized.histogram.bin.9.204_229$side.fluo.normalized.histogram.bin.10.229_255")
+ 				descriptorSetName_boxplotStacked <- c("NIR absorption class (%)", "red fluorescence histogram (%)")
+ 				#diagramTypVector <- c(diagramTypVector, "boxplotStacked", "boxplotStacked")
+ 				
+ 				appendix <- appendix %exists% args[3]
+ 				
+ 				if(appendix) {
+ 					blacklist <- buildBlacklist(workingDataSet, descriptorSet)
+ 					descriptorSetAppendix <- colnames(workingDataSet[!as.data.frame(sapply(colnames(workingDataSet),'%in%', blacklist))[,1]])
+ 					descriptorSetNameAppendix <- descriptorSetAppendix
+ 					#diagramTypVectorAppendix <- rep.int("nboxplot", times=length(descriptorSetNameAppendix))
+ 				}
+ 			
+ 				saveFormat <- saveFormat %exists% args[2]
+ 							
+ 				listOfTreatAndFilterTreat <- checkOfTreatments(args, treatment, filterTreatment, secondTreatment, filterSecondTreatment, workingDataSet, debug)
+ 				treatment <- listOfTreatAndFilterTreat[[1]][[1]]
+ 				secondTreatment <- listOfTreatAndFilterTreat[[1]][[2]]
+ 				filterTreatment <- listOfTreatAndFilterTreat[[2]][[1]]
+ 				filterSecondTreatment <- listOfTreatAndFilterTreat[[2]][[2]]
+ 			} else {
+ 				fileName = "error"
+ 			}
+ 		}
+ 		
+ 	} else if (typOfStartOptions == "test"){
+ 		
+ 		
+ 		#fileName <- "1107BA_Corn_new2.csv"
+ 			
+ 		#workingDataSet <- read.csv2(fileName, header=TRUE, sep=";", fileEncoding="ISO-8859-1", encoding="UTF-8")                   
+ 		#descriptorSet <- c("side.nir.intensity.average.norm","side.nir.intensity.average","side.hull.area.norm","side.height.norm","Gewicht.B","water.consumption")                   
+ 		#descriptorSetName <- c("nir intensity (rel. intensity/px)","nir intensity (rel. intensity/px)","convex hull area (mm^2)","height (mm)","target weight (g)","water consumption")
+ 			
+ 		#descriptorSet <- c("side.nir.intensity.average.norm","Gewicht.B")                   
+ 		#descriptorSetName <- c("nir intensity (rel. intensity/px)","target weight (g)")
+ 				
+ 		#descriptorSet <- c("digital.biomass.unnormal","digital.biomass.normal","mark3.y")                   
+ 		#descriptorSetName <- c("digital biomass (mm^3)","digital biomass (mm^3)","mark (% from image height)")
+ 			
+ 		#descriptorSet <- c("digital.biomass.keygene.norm","side.area","top.area")                   
+ 		#descriptorSetName <- c("digital biomass (mm^3)","test1", "test2")
+ 			
+ #		descriptorSet <- c("side.nir.normalized.histogram.bin.1.0_25$side.nir.normalized.histogram.bin.2.25_51$side.nir.normalized.histogram.bin.3.51_76$side.nir.normalized.histogram.bin.4.76_102$side.nir.normalized.histogram.bin.5.102_127$side.nir.normalized.histogram.bin.6.127_153$side.nir.normalized.histogram.bin.7.153_178$side.nir.normalized.histogram.bin.8.178_204$side.nir.normalized.histogram.bin.9.204_229$side.nir.normalized.histogram.bin.10.229_255",
+ #					"side.fluo.normalized.histogram.bin.1.0_25$side.fluo.normalized.histogram.bin.2.25_51$side.fluo.normalized.histogram.bin.3.51_76$side.fluo.normalized.histogram.bin.4.76_102$side.fluo.normalized.histogram.bin.5.102_127$side.fluo.normalized.histogram.bin.6.127_153$side.fluo.normalized.histogram.bin.7.153_178$side.fluo.normalized.histogram.bin.8.178_204$side.fluo.normalized.histogram.bin.9.204_229$side.fluo.normalized.histogram.bin.10.229_255")
+ #		descriptorSetName <- c("NIR absorption class (%)", "chlorophyll fluorescence histogram (%)")
+ 			
+ #		descriptorSet <- c("side.nir.normalized.histogram.bin.1.0_25$side.nir.normalized.histogram.bin.2.25_51$side.nir.normalized.histogram.bin.3.51_76$side.nir.normalized.histogram.bin.4.76_102$side.nir.normalized.histogram.bin.5.102_127$side.nir.normalized.histogram.bin.6.127_153$side.nir.normalized.histogram.bin.7.153_178$side.nir.normalized.histogram.bin.8.178_204$side.nir.normalized.histogram.bin.9.204_229$side.nir.normalized.histogram.bin.10.229_255")
+ #		descriptorSetName <- c("NIR absorption class (%)")
+ 			
+ 		#descriptorSet <- c("Plant ID$Treatment$Hallo$Wert1$Repl ID")
+ 		#descriptorSetName <- c("VariableMix")
+ 	
+ #		descriptorSet <- c("side.fluo.normalized.histogram.bin.1.0_25$side.fluo.normalized.histogram.bin.2.25_51$side.fluo.normalized.histogram.bin.3.51_76$side.fluo.normalized.histogram.bin.4.76_102$side.fluo.normalized.histogram.bin.5.102_127$side.fluo.normalized.histogram.bin.6.127_153$side.fluo.normalized.histogram.bin.7.153_178$side.fluo.normalized.histogram.bin.8.178_204$side.fluo.normalized.histogram.bin.9.204_229$side.fluo.normalized.histogram.bin.10.229_255")
+ #		#descriptorSet <- c("side.fluo.normalized.histogram.bin.2.25_51$side.fluo.normalized.histogram.bin.1.0_25$side.fluo.normalized.histogram.bin.3.51_76$side.fluo.normalized.histogram.bin.4.76_102$side.fluo.normalized.histogram.bin.5.102_127$side.fluo.normalized.histogram.bin.6.127_153$side.fluo.normalized.histogram.bin.7.153_178$side.fluo.normalized.histogram.bin.8.178_204$side.fluo.normalized.histogram.bin.9.204_229$side.fluo.normalized.histogram.bin.10.229_255")
+ #		descriptorSetName <- c("red fluorescence histogram (%)")
+ 	
+ 	
+ 		#descriptorSet <- c("Weight B (g)","side.height.norm (mm)","side.width.norm (mm)","side.area.norm (mm^2)",
+ 		#		"side.fluo.intensity.chlorophyl.average (relative)","side.fluo.intensity.phenol.average (relative)",
+ 		#		"side.nir.intensity.average (relative)",
+ 		#		"side.leaf.count.median (leafs)","side.bloom.count (tassel)","side.leaf.length.sum.norm.max (mm)")
+ 			
+ 		# "digital biomass IAP (pixel^3)","digital biomass KeyGene (pixel^3)", 
+ 		#descriptorSetName <- c("weight (g)","height (mm)", "width (mm)", "side area (pixel^2)",
+ 		#		"chlorophyl intensity (relative intensity/pixel)", "fluorescence intensity (relative intensity/pixel)", "nir intensity (relative intensity/pixel)",
+ 		#		"number of leafs (leaf)", "number of tassels (tassel)", "length of leafs plus stem (mm)")
+ 		
+ #		descriptorSet <- c("side.area (px)","side.area.norm (mm^2)")
+ #		descriptorSetName <- c("side area uncorrected (mm^2)", "side area corrected (mm^2)")
+ 		
+ 		#descriptorSet <- c("Hallo2")
+ 		#descriptorSetName <- c("Test")
+ 		
+ 		#descriptorSet <- colnames(workingDataSet)
+ 		#descriptorSetName <- colnames(workingDataSet)
+ 		
+ 		#treatment <- "none"
+ 		treatment <- "Treatment"
+ 		#treatment <- "Condition"
+ 		#filterTreatment <- "dry$normal$wet"
+ 		#filterTreatment <- "dry$normal"
+ 		#filterTreatment <- "normal bewaessert$Trockentress"
+ 		#filterTreatment <- "ganz"
+ 		filterTreatment <- "none"
+ 		##filterTreatment <- "Deutschland$Spanien$Italien$China"
+ 		
+ 		secondTreatment <- "Genotype"
+ 		#secondTreatment <- "none"
+ 		#secondTreatment <- "Species"
+ 		#secondTreatment <- "Variety"
+ 		filterSecondTreatment <- "none"
+ 		
+ 		#secondTreatment <- "secondTreatment"
+ 		#filterSecondTreatment <- "a$c"
+ 		
+ 		###1116BA#########6 8 10 12 13 14 15 16 17 19 20 21 22 23 24 25 26 27 28 29 30 31 33 34 35 36 37 38 39 40
+ 		#filterXaxis <- c("6$8$10$12$13$14$15$16$20$21$22$23$26$27$28$29$30$31$33$34$35$36$37$38")
+ 		#filterXaxis <- c("6$8$13")
+ 		###1107BA#########2$4$6$8$10$12$13$15$16$21$22$25$27$29$30$31$33$35$36$37$39$41$42$43$45$47$49$50$51$55$57$59$61$63$64
+ 		#filterXaxis <- c("2$4$6$8$10$12$13$15$16$21$22$25$27$29$30$31$33$35$36$37$39$41$43$45$47$49$50$51$55$57$59$61$63$64")
+ 		#filterXaxis <- c("6$8$10")
+ 		filterXaxis <- "none"
+ 		#filterXaxis <- c("6$8$10$12$13$14$15$16$20$21$22$23$26$27$28$29$30$31$33$34$35$36$37$38")
+ 		
+ 		#treatment <- "Treatment"
+ 		##treatment <- "Variety"
+ 		#treatment <- "none"
+ 		
+ 		#diagramTyp="boxplotStacked"
+ 		#diagramTyp="nboxplot"
+ 		#diagramTyp="boxplot"
+ 		
+ 		bgColor <- "transparent"
+ 		isGray="FALSE"
+ 		#transparent <- "TRUE"
+ 		#legendUnderImage <- "TRUE"
+ 		#showResultInR <- TRUE
+ 		showResultInR <- FALSE
+ 		
+ 		#fileName <- "numeric_data.MaizeAnalysisAction_ 1116BA_new3.csv"
+ 		#fileName <- "testDataset2.csv"
+ 		fileName <- "report.csv"
+ 		#fileName <- "testDataset3.csv"
+ 		#englischVersion <- FALSE
+ 		#englischVersion <- TRUE
+ 		separation <- ";"
+ 		workingDataSet <- separation %getData% fileName
+ 		
+ 		#descriptor <- c("Hallo2")
+ 		#descriptor <- c("Plant ID","Treatment","Hallo","Wert1", "Repl ID")
+ 		#descriptor <- c("Repl ID")		
+ 		#descriptorSet <- c("nir.top")
+ 		#descriptorSet <- c("Plant ID")
+ 		#descriptorSet <- c("side.height.norm (mm)")
+ 
+ 		#descriptorSet <- c("side.area.norm (mm^2)")
+ 		#descriptorSetName <- c("Das ist ein Testname")
+ 		if(FALSE) {
+ 			
+ 			descriptorSet_nBoxplot <- c("Weight A (g)","Weight B (g)","Water (weight-diff)","side.height.norm (mm)","side.width.norm (mm)","side.area.norm (mm^2)", "top.area.norm (mm^2)",
+ 					"side.fluo.intensity.chlorophyl.average (relative)","side.fluo.intensity.phenol.average (relative)",
+ 					"side.nir.intensity.average (relative)","side.leaf.count.median (leafs)","side.bloom.count (tassel)",
+ 					"side.leaf.length.sum.norm.max (mm)", "volume.fluo.iap","volume.iap (px^3)", "volume.iap_max", "volume.lt (px^3)",
+ 					"volume.iap.wue", "side.nir.wetness.plant_weight_drought_loss", "top.nir.wetness.plant_weight_drought_loss", "side.nir.wetness.av", "top.nir.wetness.av",
+ 					"side.area.relative", "side.height.norm.relative", "side.width.norm.relative", "top.area.relative", "side.area.relative", "volume.iap.relative",
+ 					"side.height (mm)","side.width (mm)","side.area (px)", "top.area (px)")
+ 			
+ 			descriptorSetName_nBoxplot <- c("weight before watering (g)","weight after watering (g)", "water weight (g)", "normalized height (mm)", "normalized width (mm)", "normalized side area (mm^2)", "normalized top area (mm^2)",
+ 					"chlorophyl intensity (relative intensity/pixel)", "fluorescence intensity (relative intensity/pixel)", "nir intensity (relative intensity/pixel)",
+ 					"number of leafs (leaf)", "number of tassels (tassel)", "length of leafs plus stem (mm)", "volume based on FLUO (IAP) (px^3)", "volume based on RGB (IAP) (px^3)", "volume based on max RGB-image (IAP) (px^3)", "volume based on RGB (LemnaTec) (px^3)",
+ 					"volume based water use efficiency", "weighted loss through drought stress (side)", "weighted loss through drought stress (top)", "Average wetness of side image", "Average wetness of top image",
+ 					"relative projected side area (%)", "relative plant height (%)", "relative plant width (%)", "relative projected top area (%)", "relative projected side area (%)", "relative volume (IAP based formular - RGB) (%)",
+ 					"height (px)", "width (px)", "side area (px)", "top area (px)")		
+ 			
+ 			descriptorSet_boxplot <- c("side.height.norm (mm)","side.width.norm (mm)","side.area.norm (mm^2)", "top.area.norm (mm^2)",
+ 					"volume.fluo.iap","volume.iap (px^3)", "volume.iap_max", "volume.lt (px^3)",
+ 					"side.height (mm)","side.width (mm)","side.area (px)", "top.area (px)")
+ 			
+ 			descriptorSetName_boxplot <- c("normalized height (mm)", "normalized width (mm)", "normalized side area (mm^2)", "normalized top area (mm^2)",
+ 					"volume based on FLUO (IAP) (px^3)", "volume based on RGB (IAP) (px^3)", "volume based on max RGB-image (IAP) (px^3)", "volume based on RGB (LemnaTec) (px^3)",
+ 					"height (px)", "width (px)", "side area (px)", "top area (px)")	
+ 			
+ 			descriptorSet_boxplotStacked <- c("side.nir.normalized.histogram.bin.1.0_25$side.nir.normalized.histogram.bin.2.25_51$side.nir.normalized.histogram.bin.3.51_76$side.nir.normalized.histogram.bin.4.76_102$side.nir.normalized.histogram.bin.5.102_127$side.nir.normalized.histogram.bin.6.127_153$side.nir.normalized.histogram.bin.7.153_178$side.nir.normalized.histogram.bin.8.178_204$side.nir.normalized.histogram.bin.9.204_229$side.nir.normalized.histogram.bin.10.229_255",
+ 					"side.fluo.normalized.histogram.bin.1.0_25$side.fluo.normalized.histogram.bin.2.25_51$side.fluo.normalized.histogram.bin.3.51_76$side.fluo.normalized.histogram.bin.4.76_102$side.fluo.normalized.histogram.bin.5.102_127$side.fluo.normalized.histogram.bin.6.127_153$side.fluo.normalized.histogram.bin.7.153_178$side.fluo.normalized.histogram.bin.8.178_204$side.fluo.normalized.histogram.bin.9.204_229$side.fluo.normalized.histogram.bin.10.229_255")
+ 			descriptorSetName_boxplotStacked <- c("NIR side (%)", "red side fluorescence histogram (%)")
+ 		} else {
+ 
+ 			descriptorSet_nBoxplot <- c("side.area.norm (mm^2)", "Weight A (g)","side.height.norm (mm)")
+ 			descriptorSetName_nBoxplot <- c("Area", "Gewicht", "Heigh")
+ 	
+ 			descriptorSet_boxplot <- c("side.area.norm (mm^2)", "side.height.norm (mm)")
+ 			descriptorSetName_boxplot <- c("Area Boxplot", "Heigh Boxplot")
+ 			
+ 	#		descriptorSet_boxplotStacked <- c("side.nir.normalized.histogram.bin.1.0_25$side.nir.normalized.histogram.bin.2.25_51$side.nir.normalized.histogram.bin.3.51_76$side.nir.normalized.histogram.bin.4.76_102$side.nir.normalized.histogram.bin.5.102_127$side.nir.normalized.histogram.bin.6.127_153$side.nir.normalized.histogram.bin.7.153_178$side.nir.normalized.histogram.bin.8.178_204$side.nir.normalized.histogram.bin.9.204_229$side.nir.normalized.histogram.bin.10.229_255",
+ 	#										  "side.fluo.normalized.histogram.bin.1.0_25$side.fluo.normalized.histogram.bin.2.25_51$side.fluo.normalized.histogram.bin.3.51_76$side.fluo.normalized.histogram.bin.4.76_102$side.fluo.normalized.histogram.bin.5.102_127$side.fluo.normalized.histogram.bin.6.127_153$side.fluo.normalized.histogram.bin.7.153_178$side.fluo.normalized.histogram.bin.8.178_204$side.fluo.normalized.histogram.bin.9.204_229$side.fluo.normalized.histogram.bin.10.229_255")
+ 			
+ 			descriptorSet_boxplotStacked <- c("side.fluo.normalized.histogram.bin.1.0_25$side.fluo.normalized.histogram.bin.2.25_51$side.fluo.normalized.histogram.bin.3.51_76$side.fluo.normalized.histogram.bin.4.76_102$side.fluo.normalized.histogram.bin.5.102_127$side.fluo.normalized.histogram.bin.6.127_153$side.fluo.normalized.histogram.bin.7.153_178$side.fluo.normalized.histogram.bin.8.178_204$side.fluo.normalized.histogram.bin.9.204_229$side.fluo.normalized.histogram.bin.10.229_255",
+ 									  "side.nir.normalized.histogram.bin.1.0_25$side.nir.normalized.histogram.bin.2.25_51$side.nir.normalized.histogram.bin.3.51_76$side.nir.normalized.histogram.bin.4.76_102$side.nir.normalized.histogram.bin.5.102_127$side.nir.normalized.histogram.bin.6.127_153$side.nir.normalized.histogram.bin.7.153_178$side.nir.normalized.histogram.bin.8.178_204$side.nir.normalized.histogram.bin.9.204_229$side.nir.normalized.histogram.bin.10.229_255",
+ 									  "top.nir.histogram.bin.1.0_25$top.nir.histogram.bin.2.25_51$top.nir.histogram.bin.3.51_76$top.nir.histogram.bin.4.76_102$top.nir.histogram.bin.5.102_127$top.nir.histogram.bin.6.127_153$top.nir.histogram.bin.7.153_178$top.nir.histogram.bin.8.178_204$top.nir.histogram.bin.9.204_229$top.nir.histogram.bin.10.229_255")
+ 			
+ 			descriptorSetName_boxplotStacked <- c("red fluorescence histogram (%)", "NIR absorption class (%)", "NIR Top")
+ 		
+ 		}	
+ 	
+ 		
+ 		#descriptorSet <- c("Plant ID$Treatment$Hallo$Wert1$Repl ID")
+ 		#diagramTypVector <- diagramTyp
+ 		#diagramTypVector <- rep.int(diagramTyp, times=length(descriptorSetName))
+ 		
+ 		
+ 
+ 		nBoxDes = descriptorSet_nBoxplot
+ 		boxDes = descriptorSet_boxplot
+ 		boxStackDes = descriptorSet_boxplotStacked
+ 		SaveName_nBoxDes = nBoxDes
+ 		SaveName_boxDes = boxDes
+ 		SaveName_boxStackDes = boxStackDes
+ 		nBoxDesName = descriptorSetName_nBoxplot
+ 		boxDesName = descriptorSetName_boxplot
+ 		boxStackDesName = descriptorSetName_boxplotStacked
+ 
+ 		saveName <- "test2"
+ 		yAxisName <- "test2"
+ 		debug <- TRUE
+ 		iniDataSet = workingDataSet
+ 		#descriptor <- c("Plant ID$Treatment$Hallo$Wert1$Repl ID")
+ 		#descriptor <- c("side.area.norm (mm^2)")
+ 		#descriptorSet <- c("side.fluo.bloom.area.size (mm^2)")
+ 		#descriptor <- c("side.fluo.bloom.area.size (mm^2)")
+ 		descriptor <- descriptorSet
+ 		#descriptor <- c("Repl ID")
+ 		#descriptor <- c("side.nir.normalized.histogram.bin.1.0_25$side.nir.normalized.histogram.bin.2.25_51$side.nir.normalized.histogram.bin.3.51_76$side.nir.normalized.histogram.bin.4.76_102$side.nir.normalized.histogram.bin.5.102_127$side.nir.normalized.histogram.bin.6.127_153$side.nir.normalized.histogram.bin.7.153_178$side.nir.normalized.histogram.bin.8.178_204$side.nir.normalized.histogram.bin.9.204_229$side.nir.normalized.histogram.bin.10.229_255")
+ 		appendix <- FALSE
+ 		stoppTheCalculation <- FALSE
+ 		
+ }
[1] "... Read input file"
Read 2 items
[1] "... english Version"
> overallList <- list(iniDataSet=iniDataSet, saveFormat=saveFormat, dpi=dpi, isGray=isGray, 
+ 						nBoxDes = nBoxDes, boxDes = boxDes, boxStackDes = boxStackDes,
+ 						saveName_nBoxDes = nBoxDes, saveName_boxDes = boxDes, saveName_boxStackDes = boxStackDes,
+ 						nBoxDesName = nBoxDesName, boxDesName = boxDesName, boxStackDesName = boxStackDesName,
+ 						treatment=treatment, filterTreatment=filterTreatment,
+ 						secondTreatment=secondTreatment, filterSecondTreatment=filterSecondTreatment, filterXaxis=filterXaxis, xAxis=xAxis,
+ 						showResultInR=showResultInR, xAxisName=xAxisName, debug=debug, 
+ 						appendix=appendix, stoppTheCalculation=stoppTheCalculation,
+ 						overallResult_nBoxDes=data.frame(), overallResult_boxDes=data.frame(), overallResult_boxStackDes=data.frame(),
+ 						color_nBox = list(), color_box=list(), color_boxStack=list())	
> 				
> 	#install.packages(c("Cairo"), repos="http://cran.r-project.org", dependencies = TRUE)
> 	library("Cairo")
Warnmeldung:
Paket 'Cairo' wurde unter R Version 2.13.2 gebaut 
> 	#install.packages(c("RColorBrewer"), repos="http://cran.r-project.org", dependencies = TRUE)
> 	library("RColorBrewer")
Warnmeldung:
Paket 'RColorBrewer' wurde unter R Version 2.13.2 gebaut 
> 	#install.packages(c("data.table"), repos="http://cran.r-project.org", dependencies = TRUE)
> 	library(data.table)
data.table 1.7.7  For help type: help("data.table")
Warnmeldung:
Paket 'data.table' wurde unter R Version 2.13.2 gebaut 
> 	#install.packages(c("ggplot2"), repos="http://cran.r-project.org", dependencies = TRUE)
> 	library(ggplot2)
Lade nötiges Paket: reshape
Lade nötiges Paket: plyr

Attache Paket: 'reshape'

The following object(s) are masked from 'package:plyr':

    rename, round_any

Lade nötiges Paket: grid
Lade nötiges Paket: proto
Warnmeldungen:
1: Paket 'ggplot2' wurde unter R Version 2.13.2 gebaut 
2: Paket 'reshape' wurde unter R Version 2.13.1 gebaut 
3: Paket 'plyr' wurde unter R Version 2.13.2 gebaut 
4: Paket 'proto' wurde unter R Version 2.13.1 gebaut 
> 	#install.packages(c("Hmisc"), repos="http://cran.r-project.org", dependencies = TRUE)
> 	#library("Hmisc")
> 	
> 	overallList$debug %debug% "Start"
[1] "DebugBreakPoint:  Start"
> 	
> 	overallList <- overallChangeName(overallList)
[1] "DebugBreakPoint:  overallChangeSaveName()"
[1] "... nBoxplot"
[1] "... Boxplot"
[1] "... stackedBoxplot"
> 	overallList <- overallPreprocessingOfDescriptor(overallList)
[1] "DebugBreakPoint:  overallPreprocessingOfDescriptor()"
[1] "... nBoxplot"
[1] "... Boxplot"
[1] "... stackedBoxplot"
> 	
> 	
> ###############################	
> 	overallList <- preprocessingOfxAxisValue(overallList)
[1] "DebugBreakPoint:  preprocessingOfxAxisValue()"
> 	overallList <- preprocessingOfTreatment(overallList)
[1] "DebugBreakPoint:  preprocessingOfTheTreatment()"
> 	overallList <- preprocessingOfSecondTreatment(overallList)
[1] "DebugBreakPoint:  preprocessingOfTheSecondTreatment()"
> overallList <- overallCheckIfDescriptorIsNaOrAllZero(overallList)
[1] "DebugBreakPoint:  overallCheckIfDescriptorIsNaOrAllZero()"
[1] "... nBoxplot"
[1] "Dummy plotting for this descriptor(s) ((Weight.A..g.), because all zero or not numeric!"
[1] "... Boxplot"
[1] "... stackedBoxplot"
[1] "Dummy plotting for this descriptor(s) ((side.fluo.normalized.histogram.bin.4.76_102), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((side.nir.normalized.histogram.bin.3.51_76), because all zero or not numeric!"  
[2] "Dummy plotting for this descriptor(s) ((side.nir.normalized.histogram.bin.4.76_102), because all zero or not numeric!" 
[3] "Dummy plotting for this descriptor(s) ((side.nir.normalized.histogram.bin.5.102_127), because all zero or not numeric!"
[4] "Dummy plotting for this descriptor(s) ((side.nir.normalized.histogram.bin.6.127_153), because all zero or not numeric!"
[5] "Dummy plotting for this descriptor(s) ((side.nir.normalized.histogram.bin.7.153_178), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((top.nir.histogram.bin.5.102_127), because all zero or not numeric!"
[2] "Dummy plotting for this descriptor(s) ((top.nir.histogram.bin.6.127_153), because all zero or not numeric!"
Warnmeldungen:
1: In if (!is.na(overallList$boxStackDes[[n]])) { :
  Bedingung hat Länge > 1 und nur das erste Element wird benutzt
2: In if (!is.na(overallList$boxStackDes[[n]])) { :
  Bedingung hat Länge > 1 und nur das erste Element wird benutzt
3: In if (!is.na(overallList$boxStackDes[[n]])) { :
  Bedingung hat Länge > 1 und nur das erste Element wird benutzt
> 	overallList <- reduceWorkingDataSize(overallList)
[1] "DebugBreakPoint:  reduceWorkingDataSize()"
> 	overallList <- setDefaultAxisNames(overallList)	
[1] "DebugBreakPoint:  setDefaultAxisNames()"
> 	overallList <- overallGetResultDataFrame(overallList)
[1] "DebugBreakPoint:  overallGetResultDataFrame()"
[1] "DebugBreakPoint:  buildList()"
[1] "... nBoxplot"
[1] "DebugBreakPoint:  getResultDataFrame()"
[1] "... Boxplot"
[1] "DebugBreakPoint:  getResultDataFrame()"
[1] "... stackedBoxplot"
[1] "DebugBreakPoint:  getResultDataFrame()"
> head(overallList$overallResult_nBoxDes)
                       name  primaerTreatment xAxis mean1 mean3 se1 se3
1 normal bewaessert#BarkeCS normal bewaessert     3   NaN   NaN  NA  NA
2 normal bewaessert#BarkeCS normal bewaessert     4   NaN   NaN  NA  NA
3 normal bewaessert#BarkeCS normal bewaessert     5   NaN   NaN  NA  NA
4 normal bewaessert#BarkeCS normal bewaessert     6   NaN   NaN  NA  NA
5 normal bewaessert#BarkeCS normal bewaessert     7   NaN   NaN  NA  NA
6 normal bewaessert#BarkeCS normal bewaessert     8   NaN   NaN  NA  NA
> unique(overallList$overallResult_nBoxDes$name)
 [1] normal bewaessert#BarkeCS                   
 [2] normal bewaessert#BarkePE                   
 [3] normal bewaessert#BCC_1367_Apex             
 [4] normal bewaessert#BCC_1391_Isaria           
 [5] normal bewaessert#BCC_1403_Perun            
 [6] normal bewaessert#BCC_1413_Sissy            
 [7] normal bewaessert#BCC_1417_Trumpf           
 [8] normal bewaessert#BCC_1433_HeilsFranken     
 [9] normal bewaessert#BCC_1441_PflugsIntensiv   
[10] normal bewaessert#BCC_1524_AckermannsBavaria
[11] normal bewaessert#Beatrix                   
[12] normal bewaessert#Djamilia                  
[13] normal bewaessert#Eunova                    
[14] normal bewaessert#MorexPE                   
[15] normal bewaessert#Streif                    
[16] normal bewaessert#Ursa                      
[17] normal bewaessert#Victoriana                
[18] normal bewaessert#Wiebke                    
[19] Trockenstress#BarkeCS                       
[20] Trockenstress#BarkePE                       
[21] Trockenstress#BCC_1367_Apex                 
[22] Trockenstress#BCC_1391_Isaria               
[23] Trockenstress#BCC_1403_Perun                
[24] Trockenstress#BCC_1413_Sissy                
[25] Trockenstress#BCC_1417_Trumpf               
[26] Trockenstress#BCC_1433_HeilsFranken         
[27] Trockenstress#BCC_1441_PflugsIntensiv       
[28] Trockenstress#BCC_1524_AckermannsBavaria    
[29] Trockenstress#Beatrix                       
[30] Trockenstress#Djamilia                      
[31] Trockenstress#Eunova                        
[32] Trockenstress#MorexPE                       
[33] Trockenstress#Streif                        
[34] Trockenstress#Ursa                          
[35] Trockenstress#Victoriana                    
[36] Trockenstress#Wiebke                        
36 Levels: normal bewaessert#BarkeCS ... Trockenstress#Wiebke
> unique(overallList$overallResult_boxDes$name)
 [1] normal bewaessert#BCC_1367_Apex             
 [2] Trockenstress#BCC_1367_Apex                 
 [3] normal bewaessert#BCC_1391_Isaria           
 [4] Trockenstress#BCC_1391_Isaria               
 [5] normal bewaessert#BCC_1403_Perun            
 [6] Trockenstress#BCC_1403_Perun                
 [7] Trockenstress#BarkeCS                       
 [8] normal bewaessert#Beatrix                   
 [9] Trockenstress#Beatrix                       
[10] normal bewaessert#Djamilia                  
[11] Trockenstress#Djamilia                      
[12] normal bewaessert#Eunova                    
[13] Trockenstress#Eunova                        
[14] normal bewaessert#Streif                    
[15] Trockenstress#Streif                        
[16] normal bewaessert#Ursa                      
[17] Trockenstress#Ursa                          
[18] normal bewaessert#Victoriana                
[19] Trockenstress#BCC_1433_HeilsFranken         
[20] normal bewaessert#BCC_1441_PflugsIntensiv   
[21] Trockenstress#BCC_1441_PflugsIntensiv       
[22] normal bewaessert#BCC_1524_AckermannsBavaria
[23] Trockenstress#BCC_1524_AckermannsBavaria    
[24] normal bewaessert#BarkeCS                   
[25] normal bewaessert#BCC_1413_Sissy            
[26] Trockenstress#BCC_1413_Sissy                
[27] normal bewaessert#BCC_1417_Trumpf           
[28] Trockenstress#BCC_1417_Trumpf               
[29] normal bewaessert#BCC_1433_HeilsFranken     
[30] Trockenstress#Victoriana                    
[31] normal bewaessert#Wiebke                    
[32] Trockenstress#Wiebke                        
[33] normal bewaessert#MorexPE                   
[34] Trockenstress#MorexPE                       
[35] normal bewaessert#BarkePE                   
[36] Trockenstress#BarkePE                       
36 Levels: normal bewaessert#BarkeCS ... Trockenstress#Wiebke
> unique(overallList$overallResult_boxStackDes$name)
 [1] normal bewaessert#BarkeCS                   
 [2] normal bewaessert#BarkePE                   
 [3] normal bewaessert#BCC_1367_Apex             
 [4] normal bewaessert#BCC_1391_Isaria           
 [5] normal bewaessert#BCC_1403_Perun            
 [6] normal bewaessert#BCC_1413_Sissy            
 [7] normal bewaessert#BCC_1417_Trumpf           
 [8] normal bewaessert#BCC_1433_HeilsFranken     
 [9] normal bewaessert#BCC_1441_PflugsIntensiv   
[10] normal bewaessert#BCC_1524_AckermannsBavaria
[11] normal bewaessert#Beatrix                   
[12] normal bewaessert#Djamilia                  
[13] normal bewaessert#Eunova                    
[14] normal bewaessert#MorexPE                   
[15] normal bewaessert#Streif                    
[16] normal bewaessert#Ursa                      
[17] normal bewaessert#Victoriana                
[18] normal bewaessert#Wiebke                    
[19] Trockenstress#BarkeCS                       
[20] Trockenstress#BarkePE                       
[21] Trockenstress#BCC_1367_Apex                 
[22] Trockenstress#BCC_1391_Isaria               
[23] Trockenstress#BCC_1403_Perun                
[24] Trockenstress#BCC_1413_Sissy                
[25] Trockenstress#BCC_1417_Trumpf               
[26] Trockenstress#BCC_1433_HeilsFranken         
[27] Trockenstress#BCC_1441_PflugsIntensiv       
[28] Trockenstress#BCC_1524_AckermannsBavaria    
[29] Trockenstress#Beatrix                       
[30] Trockenstress#Djamilia                      
[31] Trockenstress#Eunova                        
[32] Trockenstress#MorexPE                       
[33] Trockenstress#Streif                        
[34] Trockenstress#Ursa                          
[35] Trockenstress#Victoriana                    
[36] Trockenstress#Wiebke                        
36 Levels: normal bewaessert#BarkeCS ... Trockenstress#Wiebke
> overallList <- setColor(overallList) 
[1] "DebugBreakPoint:  setColor()"
> overallList$color_nBox
$`1`
 [1] "#9E0142" "#AD1245" "#BD2349" "#CD354D" "#D9444D" "#E25249" "#EB5F46"
 [8] "#F46C43" "#F67F4B" "#F99254" "#FBA45C" "#FDB566" "#FDC372" "#FDD17E"
[15] "#FEDF8A" "#FEE899" "#FEF1A8" "#FEFAB7" "#FBFDB9" "#F4FAAE" "#EDF7A3"
[22] "#E6F598" "#D5EE9B" "#C4E79E" "#B3E0A2" "#A1D9A4" "#8DD1A4" "#79C9A4"
[29] "#66C2A5" "#57B1AB" "#48A0B2" "#3990B9" "#387FB9" "#446FB1" "#515FA9"
[36] "#5E4FA2"

$`2`
 [1] "#9E0142" "#AD1245" "#BD2349" "#CD354D" "#D9444D" "#E25249" "#EB5F46"
 [8] "#F46C43" "#F67F4B" "#F99254" "#FBA45C" "#FDB566" "#FDC372" "#FDD17E"
[15] "#FEDF8A" "#FEE899" "#FEF1A8" "#FEFAB7" "#FBFDB9" "#F4FAAE" "#EDF7A3"
[22] "#E6F598" "#D5EE9B" "#C4E79E" "#B3E0A2" "#A1D9A4" "#8DD1A4" "#79C9A4"
[29] "#66C2A5" "#57B1AB" "#48A0B2" "#3990B9" "#387FB9" "#446FB1" "#515FA9"
[36] "#5E4FA2"

$`3`
 [1] "#9E0142" "#AD1245" "#BD2349" "#CD354D" "#D9444D" "#E25249" "#EB5F46"
 [8] "#F46C43" "#F67F4B" "#F99254" "#FBA45C" "#FDB566" "#FDC372" "#FDD17E"
[15] "#FEDF8A" "#FEE899" "#FEF1A8" "#FEFAB7" "#FBFDB9" "#F4FAAE" "#EDF7A3"
[22] "#E6F598" "#D5EE9B" "#C4E79E" "#B3E0A2" "#A1D9A4" "#8DD1A4" "#79C9A4"
[29] "#66C2A5" "#57B1AB" "#48A0B2" "#3990B9" "#387FB9" "#446FB1" "#515FA9"
[36] "#5E4FA2"

> overallList$color_box
$`1`
 [1] "#9E0142" "#AD1245" "#BD2349" "#CD354D" "#D9444D" "#E25249" "#EB5F46"
 [8] "#F46C43" "#F67F4B" "#F99254" "#FBA45C" "#FDB566" "#FDC372" "#FDD17E"
[15] "#FEDF8A" "#FEE899" "#FEF1A8" "#FEFAB7" "#FBFDB9" "#F4FAAE" "#EDF7A3"
[22] "#E6F598" "#D5EE9B" "#C4E79E" "#B3E0A2" "#A1D9A4" "#8DD1A4" "#79C9A4"
[29] "#66C2A5" "#57B1AB" "#48A0B2" "#3990B9" "#387FB9" "#446FB1" "#515FA9"
[36] "#5E4FA2"

$`2`
 [1] "#9E0142" "#AD1245" "#BD2349" "#CD354D" "#D9444D" "#E25249" "#EB5F46"
 [8] "#F46C43" "#F67F4B" "#F99254" "#FBA45C" "#FDB566" "#FDC372" "#FDD17E"
[15] "#FEDF8A" "#FEE899" "#FEF1A8" "#FEFAB7" "#FBFDB9" "#F4FAAE" "#EDF7A3"
[22] "#E6F598" "#D5EE9B" "#C4E79E" "#B3E0A2" "#A1D9A4" "#8DD1A4" "#79C9A4"
[29] "#66C2A5" "#57B1AB" "#48A0B2" "#3990B9" "#387FB9" "#446FB1" "#515FA9"
[36] "#5E4FA2"

> overallList$nBoxDes
$`1`
[1] side.area.norm..mm.2.
Levels: side.area.norm..mm.2.

$`2`
[1] NA

$`3`
[1] side.height.norm..mm.
Levels: side.height.norm..mm.

> setColorList <- function(diagramTyp, descriptorList, overallResult, isGray) {
+ #################	
+ #diagramTyp = "boxplotStacked"
+ #descriptorList = overallList$boxStackDes
+ #isGrey = overallList$isGray
+ #	overallResult=overallList$overallResult_nBoxDes
+ #	diagramTyp = "boxplotStacked"
+ #	descriptorList = overallList$nBoxDes	
+ ##################
+ 	
+ 	if(!as.logical(isGray)) {
+ 		colorVector <- c(brewer.pal(11, "Spectral"))
+ 	} else {
+ 		colorVector <- c(brewer.pal(9, "Greys"))
+ 	}
+ 	
+ 	colorList <- list()
+ 	if(diagramTyp == "nboxplot" || diagramTyp == "boxplot") {
+ 		for(n in names(descriptorList)) {
+ 			if(!is.na(descriptorList[[n]])) {
+ 				colorList[[n]] <- colorRampPalette(colorVector)(length(unique(overallResult$name)))
+ 			} else {
+ 				print("... all values are 'NA'")
+ 			}
+ 		}
+ 	} else {
+ 		for(n in names(descriptorList)) {
+ 			if(!is.na(descriptorList[[n]])) {
+ 				colorList[[n]] <- setColorListHist(descriptorList[n])
+ 			} else {
+ 				print("... all values are 'NA'")
+ 			}
+ 		}
+ 	}
+ 	return(colorList)
+ }
> h <- 2
> 	h=h 
> 	overallResult = overallList$overallResult_nBoxDes
> 	overallColor=overallList$color_nBox
> #	debug = overallList$debug
> 	overallDescriptor = overallList$nBoxDes
> 	overallDesName = overallList$nBoxDesName
> names(overallDescriptor)
[1] "1" "2" "3"
> imagesIndex <- "1"
> !is.na(overallDescriptor[[imagesIndex]])
[1] TRUE
> 			overallResult <- reduceWholeOverallResultToOneValue(tempOverallResult, imagesIndex, overallList$debug, "nboxplot")
[1] "DebugBreakPoint:  reduceWholeOverallResultToOneValue()"
Fehler in cbind(workingDataSet, overallResult[paste(colname[n], index,  : 
  Objekt 'tempOverallResult' nicht gefunden
> tempOverallResult <-  overallResult
> 			overallResult <- reduceWholeOverallResultToOneValue(tempOverallResult, imagesIndex, overallList$debug, "nboxplot")
[1] "DebugBreakPoint:  reduceWholeOverallResultToOneValue()"
> !CheckIfOneColumnHasOnlyValues(overallResult)
[1] TRUE
> plot <-	ggplot(data=overallResult, aes(x=xAxis, y=mean, shape=name)) +
+ 						#geom_smooth(aes(ymin=mean-se, ymax=mean+se, colour=name, fill=name), stat="identity", alpha=0.1) +
+ 						geom_ribbon(aes(ymin=mean-se, ymax=mean+se, fill=name), stat="identity", alpha=0.1) +
+ 						geom_line(aes(color=name), alpha=0.2) +
+ 						geom_point(aes(color=name), size=3) +
+ 						scale_x_continuous(name=overallList$xAxisName, minor_breaks = min(overallResult$xAxis):max(overallResult$xAxis)) +
+ 						ylab(overallDesName[[imagesIndex]]) +
+ 						scale_fill_manual(values = overallColor[[imagesIndex]]) +
+ 						scale_colour_manual(values= overallColor[[imagesIndex]]) +
+ 						scale_shape_manual(values = c(1:length(overallColor[[imagesIndex]]))) +
+ 						theme_bw() +
+ 						opts(axis.title.x = theme_text(face="bold", size=11),
+ 								axis.title.y = theme_text(face="bold", size=11, angle=90),
+ 								#panel.grid.major = theme_blank(), # switch off major gridlines
+ 								#panel.grid.minor = theme_blank(), # switch off minor gridlines
+ 								legend.position = "right", # manually position the legend (numbers being from 0,0 at bottom left of whole plot to 1,1 at top right)
+ 								legend.title = theme_blank(), # switch off the legend title						
+ 								#legend.key.size = unit(1.5, "lines"),
+ 								legend.key = theme_blank(), # switch off the rectangle around symbols in the legend
+ 								panel.border = theme_rect(colour="Grey", size=0.1)
+ 						)
Fehler in min(overallResult$xAxis):max(overallResult$xAxis) : 
  Resultat wäre zu langer Vektor
Zusätzlich: Warnmeldungen:
1: In min(overallResult$xAxis) :
  kein nicht-fehlendes Argument für min; gebe Inf zurück
2: In max(overallResult$xAxis) :
  kein nicht-fehlendes Argument für max; gebe -Inf zurück
> 				
> 				if(length(overallColor[[imagesIndex]]) > 25) {
+ 					plot <- plot + opts(legend.text = theme_text(size=6),
+ 										legend.key.size = unit(0.7, "lines")
+ 										)
+ 				} else {
+ 					plot <- plot + opts(legend.text = theme_text(size=11))
+ 				}
Fehler in plot + opts(legend.text = theme_text(size = 6), legend.key.size = unit(0.7,  : 
  nicht-numerisches Argument für binären Operator
> 								
> 	#			print(plot)
> 		
> 		##!# nicht löschen, ist die interpolation (alles in dieser if Abfrage mit #!# makiert)
> 		##!#				newCoords <- seq(min(overallList$filterXaxis,na.rm=TRUE),max(overallList$filterXaxis,na.rm=TRUE),1)
> 		##!#				newValue <- approx(overallList$filterXaxis, overallList$overallResult[y,],xout=newCoords,method="linear")
> 		##!#				
> 		##!#				naVector <- is.na(overallList$overallResult[y,])
> 		##!#				overallResultWithNaValues <- overallList$overallResult[y,]
> 		##!#				overallList$overallResult[y,naVector] <- newValue$y[overallList$filterXaxis[naVector]]
> 		#				
> 		#				if (firstPlot) {
> 		#					firstPlot <- FALSE
> 		##!#				plot(overallList$filterXaxis, overallList$overallResult[y,], main="", type="c", xlab=overallList$xAxisName, col=overallList$color[y], ylab=overallList$yAxisName, pch=y, lty=1, lwd=3, ylim=c(min(overallList$overallResult,na.rm=TRUE),max(overallList$overallResult,na.rm=TRUE)))
> 		#					plot(overallList$filterXaxis, overallList$overallResult[y,], main="", type="b", xlab=overallList$xAxisName, col=overallList$color[y], ylab=overallList$yAxisName, pch=y, lty=1, lwd=3, ylim=c(min(overallList$overallResult,na.rm=TRUE),max(overallList$overallResult,na.rm=TRUE)))
> 		#				} else {
> 		##!#				points(overallList$filterXaxis, overallList$overallResult[y,], type="c", col=overallList$color[y], pch=y, lty=1, lwd=3 )	
> 		#					points(overallList$filterXaxis, overallList$overallResult[y,], type="b", col=overallList$color[y], pch=y, lty=1, lwd=3 )
> 		#				}
> 		##!#				points(overallList$filterXaxis, overallResultWithNaValues, type="p", col=overallList$color[y], pch=y, lty=1, lwd=3 )
> 		#			} 
> 		
> 				if(h==1) {
+ 					saveImageFile(overallList, plot, overallSaveName[[imagesIndex]], "nboxplot")
+ 				} else {
+ 					print(plot)
+ 				}
function (x, y, ...) 
{
    if (is.function(x) && is.null(attr(x, "class"))) {
        if (missing(y)) 
            y <- NULL
        hasylab <- function(...) !all(is.na(pmatch(names(list(...)), 
            "ylab")))
        if (hasylab(...)) 
            plot.function(x, y, ...)
        else plot.function(x, y, ylab = paste(deparse(substitute(x)), 
            "(x)"), ...)
    }
    else UseMethod("plot")
}
<environment: namespace:graphics>
> 				if(overallList$appendix) {
+ 					writeLatexFile("appendixImage", overallSaveName[[imagesIndex]], "nboxplot")
+ 				}
> 	plot <-	ggplot(data=overallResult, aes(x=xAxis, y=mean, shape=name)) +
+ 						#geom_smooth(aes(ymin=mean-se, ymax=mean+se, colour=name, fill=name), stat="identity", alpha=0.1) +
+ 						geom_ribbon(aes(ymin=mean-se, ymax=mean+se, fill=name), stat="identity", alpha=0.1) +
+ 						geom_line(aes(color=name), alpha=0.2) +
+ 						geom_point(aes(color=name), size=3) +
+ 						scale_x_continuous(name=overallList$xAxisName, minor_breaks = min(overallResult$xAxis):max(overallResult$xAxis)) +
+ 						ylab(overallDesName[[imagesIndex]]) +
+ 						scale_fill_manual(values = overallColor[[imagesIndex]]) +
+ 						scale_colour_manual(values= overallColor[[imagesIndex]]) +
+ 						scale_shape_manual(values = c(1:length(overallColor[[imagesIndex]]))) +
+ 						theme_bw() +
+ 						opts(axis.title.x = theme_text(face="bold", size=11),
+ 								axis.title.y = theme_text(face="bold", size=11, angle=90),
+ 								#panel.grid.major = theme_blank(), # switch off major gridlines
+ 								#panel.grid.minor = theme_blank(), # switch off minor gridlines
+ 								legend.position = "right", # manually position the legend (numbers being from 0,0 at bottom left of whole plot to 1,1 at top right)
+ 								legend.title = theme_blank(), # switch off the legend title						
+ 								#legend.key.size = unit(1.5, "lines"),
+ 								legend.key = theme_blank(), # switch off the rectangle around symbols in the legend
+ 								panel.border = theme_rect(colour="Grey", size=0.1)
+ 						)
Fehler in min(overallResult$xAxis):max(overallResult$xAxis) : 
  Resultat wäre zu langer Vektor
Zusätzlich: Warnmeldungen:
1: In min(overallResult$xAxis) :
  kein nicht-fehlendes Argument für min; gebe Inf zurück
2: In max(overallResult$xAxis) :
  kein nicht-fehlendes Argument für max; gebe -Inf zurück
> 				
> 				if(length(overallColor[[imagesIndex]]) > 25) {
+ 					plot <- plot + opts(legend.text = theme_text(size=6),
+ 										legend.key.size = unit(0.7, "lines")
+ 										)
+ 				} else {
+ 					plot <- plot + opts(legend.text = theme_text(size=11))
+ 				}
Fehler in plot + opts(legend.text = theme_text(size = 6), legend.key.size = unit(0.7,  : 
  nicht-numerisches Argument für binären Operator
> 								
> 	#			print(plot)
> 		
> 		##!# nicht löschen, ist die interpolation (alles in dieser if Abfrage mit #!# makiert)
> 		##!#				newCoords <- seq(min(overallList$filterXaxis,na.rm=TRUE),max(overallList$filterXaxis,na.rm=TRUE),1)
> 		##!#				newValue <- approx(overallList$filterXaxis, overallList$overallResult[y,],xout=newCoords,method="linear")
> 		##!#				
> 		##!#				naVector <- is.na(overallList$overallResult[y,])
> 		##!#				overallResultWithNaValues <- overallList$overallResult[y,]
> 		##!#				overallList$overallResult[y,naVector] <- newValue$y[overallList$filterXaxis[naVector]]
> 		#				
> 		#				if (firstPlot) {
> 		#					firstPlot <- FALSE
> 		##!#				plot(overallList$filterXaxis, overallList$overallResult[y,], main="", type="c", xlab=overallList$xAxisName, col=overallList$color[y], ylab=overallList$yAxisName, pch=y, lty=1, lwd=3, ylim=c(min(overallList$overallResult,na.rm=TRUE),max(overallList$overallResult,na.rm=TRUE)))
> 		#					plot(overallList$filterXaxis, overallList$overallResult[y,], main="", type="b", xlab=overallList$xAxisName, col=overallList$color[y], ylab=overallList$yAxisName, pch=y, lty=1, lwd=3, ylim=c(min(overallList$overallResult,na.rm=TRUE),max(overallList$overallResult,na.rm=TRUE)))
> 		#				} else {
> 		##!#				points(overallList$filterXaxis, overallList$overallResult[y,], type="c", col=overallList$color[y], pch=y, lty=1, lwd=3 )	
> 		#					points(overallList$filterXaxis, overallList$overallResult[y,], type="b", col=overallList$color[y], pch=y, lty=1, lwd=3 )
> 		#				}
> 		##!#				points(overallList$filterXaxis, overallResultWithNaValues, type="p", col=overallList$color[y], pch=y, lty=1, lwd=3 )
> 		#			} 
> 		
> print(plot)
function (x, y, ...) 
{
    if (is.function(x) && is.null(attr(x, "class"))) {
        if (missing(y)) 
            y <- NULL
        hasylab <- function(...) !all(is.na(pmatch(names(list(...)), 
            "ylab")))
        if (hasylab(...)) 
            plot.function(x, y, ...)
        else plot.function(x, y, ylab = paste(deparse(substitute(x)), 
            "(x)"), ...)
    }
    else UseMethod("plot")
}
<environment: namespace:graphics>
> plot <-	ggplot(data=overallResult, aes(x=xAxis, y=mean, shape=name)) +
+ 						#geom_smooth(aes(ymin=mean-se, ymax=mean+se, colour=name, fill=name), stat="identity", alpha=0.1) +
+ 						geom_ribbon(aes(ymin=mean-se, ymax=mean+se, fill=name), stat="identity", alpha=0.1) +
+ 						geom_line(aes(color=name), alpha=0.2) +
+ 						geom_point(aes(color=name), size=3) +
+ 						scale_x_continuous(name=overallList$xAxisName, minor_breaks = min(overallResult$xAxis):max(overallResult$xAxis)) +
+ 						ylab(overallDesName[[imagesIndex]]) +
+ 						scale_fill_manual(values = overallColor[[imagesIndex]]) +
+ 						scale_colour_manual(values= overallColor[[imagesIndex]]) +
+ 						scale_shape_manual(values = c(1:length(overallColor[[imagesIndex]]))) +
+ 						theme_bw() +
+ 						opts(axis.title.x = theme_text(face="bold", size=11),
+ 								axis.title.y = theme_text(face="bold", size=11, angle=90),
+ 								#panel.grid.major = theme_blank(), # switch off major gridlines
+ 								#panel.grid.minor = theme_blank(), # switch off minor gridlines
+ 								legend.position = "right", # manually position the legend (numbers being from 0,0 at bottom left of whole plot to 1,1 at top right)
+ 								legend.title = theme_blank(), # switch off the legend title						
+ 								#legend.key.size = unit(1.5, "lines"),
+ 								legend.key = theme_blank(), # switch off the rectangle around symbols in the legend
+ 								panel.border = theme_rect(colour="Grey", size=0.1)
+ 						)
Fehler in min(overallResult$xAxis):max(overallResult$xAxis) : 
  Resultat wäre zu langer Vektor
Zusätzlich: Warnmeldungen:
1: In min(overallResult$xAxis) :
  kein nicht-fehlendes Argument für min; gebe Inf zurück
2: In max(overallResult$xAxis) :
  kein nicht-fehlendes Argument für max; gebe -Inf zurück
> 				
> 				if(length(overallColor[[imagesIndex]]) > 25) {
+ 					plot <- plot + opts(legend.text = theme_text(size=6),
+ 										legend.key.size = unit(0.7, "lines")
+ 										)
+ 				} else {
+ 					plot <- plot + opts(legend.text = theme_text(size=11))
+ 				}
Fehler in plot + opts(legend.text = theme_text(size = 6), legend.key.size = unit(0.7,  : 
  nicht-numerisches Argument für binären Operator
> plot <-	ggplot(data=overallResult, aes(x=xAxis, y=mean, shape=name)) +
+ 						#geom_smooth(aes(ymin=mean-se, ymax=mean+se, colour=name, fill=name), stat="identity", alpha=0.1) +
+ 						geom_ribbon(aes(ymin=mean-se, ymax=mean+se, fill=name), stat="identity", alpha=0.1) +
+ 						geom_line(aes(color=name), alpha=0.2) +
+ 						geom_point(aes(color=name), size=3) +
+ 						scale_x_continuous(name=overallList$xAxisName, minor_breaks = min(overallResult$xAxis):max(overallResult$xAxis)) +
+ 						ylab(overallDesName[[imagesIndex]]) +
+ 						scale_fill_manual(values = overallColor[[imagesIndex]]) +
+ 						scale_colour_manual(values= overallColor[[imagesIndex]]) +
+ 						scale_shape_manual(values = c(1:length(overallColor[[imagesIndex]]))) +
+ 						theme_bw() +
+ 						opts(axis.title.x = theme_text(face="bold", size=11),
+ 								axis.title.y = theme_text(face="bold", size=11, angle=90),
+ 								#panel.grid.major = theme_blank(), # switch off major gridlines
+ 								#panel.grid.minor = theme_blank(), # switch off minor gridlines
+ 								legend.position = "right", # manually position the legend (numbers being from 0,0 at bottom left of whole plot to 1,1 at top right)
+ 								legend.title = theme_blank(), # switch off the legend title						
+ 								#legend.key.size = unit(1.5, "lines"),
+ 								legend.key = theme_blank(), # switch off the rectangle around symbols in the legend
+ 								panel.border = theme_rect(colour="Grey", size=0.1)
+ 						)
Fehler in min(overallResult$xAxis):max(overallResult$xAxis) : 
  Resultat wäre zu langer Vektor
Zusätzlich: Warnmeldungen:
1: In min(overallResult$xAxis) :
  kein nicht-fehlendes Argument für min; gebe Inf zurück
2: In max(overallResult$xAxis) :
  kein nicht-fehlendes Argument für max; gebe -Inf zurück
> 				
> 				if(length(overallColor[[imagesIndex]]) > 25) {
+ 					plot <- plot + opts(legend.text = theme_text(size=6),
+ 										legend.key.size = unit(0.7, "lines")
+ 										)
+ 				} else {
+ 					plot <- plot + opts(legend.text = theme_text(size=11))
+ 				}
Fehler in plot + opts(legend.text = theme_text(size = 6), legend.key.size = unit(0.7,  : 
  nicht-numerisches Argument für binären Operator
> plot <- null
Fehler: Objekt 'null' nicht gefunden
> plot <- NULL
> head(overallResult)
                       name  primaerTreatment mean se
1 normal bewaessert#BarkeCS normal bewaessert  NaN NA
2 normal bewaessert#BarkeCS normal bewaessert  NaN NA
3 normal bewaessert#BarkeCS normal bewaessert  NaN NA
4 normal bewaessert#BarkeCS normal bewaessert  NaN NA
5 normal bewaessert#BarkeCS normal bewaessert  NaN NA
6 normal bewaessert#BarkeCS normal bewaessert  NaN NA
> tail(overallResult)
                     name primaerTreatment     mean       se
1882 Trockenstress#Wiebke    Trockenstress 1571.458 128.3242
1883 Trockenstress#Wiebke    Trockenstress 1598.083 100.3579
1884 Trockenstress#Wiebke    Trockenstress 1749.583 117.8821
1885 Trockenstress#Wiebke    Trockenstress 1777.625 142.5015
1886 Trockenstress#Wiebke    Trockenstress 1917.667 158.3067
1887 Trockenstress#Wiebke    Trockenstress 1993.333 185.5249
> plot <-	ggplot(data=overallResult, aes(x=xAxis, y=mean, shape=name)) +
+ 						#geom_smooth(aes(ymin=mean-se, ymax=mean+se, colour=name, fill=name), stat="identity", alpha=0.1) +
+ 						geom_ribbon(aes(ymin=mean-se, ymax=mean+se, fill=name), stat="identity", alpha=0.1) +
+ 						geom_line(aes(color=name), alpha=0.2) +
+ 						geom_point(aes(color=name), size=3) +
+ 						scale_x_continuous(name=overallList$xAxisName, minor_breaks = min(overallResult$xAxis):max(overallResult$xAxis)) +
+ 						ylab(overallDesName[[imagesIndex]]) +
+ 						scale_fill_manual(values = overallColor[[imagesIndex]]) +
+ 						scale_colour_manual(values= overallColor[[imagesIndex]]) +
+ 						scale_shape_manual(values = c(1:length(overallColor[[imagesIndex]]))) +
+ 						theme_bw() +
+ 						opts(axis.title.x = theme_text(face="bold", size=11),
+ 								axis.title.y = theme_text(face="bold", size=11, angle=90),
+ 								#panel.grid.major = theme_blank(), # switch off major gridlines
+ 								#panel.grid.minor = theme_blank(), # switch off minor gridlines
+ 								legend.position = "right", # manually position the legend (numbers being from 0,0 at bottom left of whole plot to 1,1 at top right)
+ 								legend.title = theme_blank(), # switch off the legend title						
+ 								#legend.key.size = unit(1.5, "lines"),
+ 								legend.key = theme_blank(), # switch off the rectangle around symbols in the legend
+ 								panel.border = theme_rect(colour="Grey", size=0.1)
+ 						)
Fehler in min(overallResult$xAxis):max(overallResult$xAxis) : 
  Resultat wäre zu langer Vektor
Zusätzlich: Warnmeldungen:
1: In min(overallResult$xAxis) :
  kein nicht-fehlendes Argument für min; gebe Inf zurück
2: In max(overallResult$xAxis) :
  kein nicht-fehlendes Argument für max; gebe -Inf zurück
> plot <-	ggplot(data=overallResult, aes(x=xAxis, y=mean, shape=name)) +
+ 						#geom_smooth(aes(ymin=mean-se, ymax=mean+se, colour=name, fill=name), stat="identity", alpha=0.1) +
+ 						geom_ribbon(aes(ymin=mean-se, ymax=mean+se, fill=name), stat="identity", alpha=0.1) +
+ 						geom_line(aes(color=name), alpha=0.2) +
+ 						geom_point(aes(color=name), size=3)
> print(plot)
Fehler: scale_shape_discrete can deal with a maximum of 6 discrete values, but you have 36.  See ?scale_manual for a possible alternative
> ?scale_manual
> plot <-	ggplot(data=overallResult, aes(x=xAxis, y=mean, shape=name)) +
+ 						#geom_smooth(aes(ymin=mean-se, ymax=mean+se, colour=name, fill=name), stat="identity", alpha=0.1) +
+ 						geom_ribbon(aes(ymin=mean-se, ymax=mean+se, fill=name), stat="identity", alpha=0.1) +
+ 						geom_line(aes(color=name), alpha=0.2) +
+ 						geom_point(aes(color=name), size=3)
> print(plot)
Fehler: scale_shape_discrete can deal with a maximum of 6 discrete values, but you have 36.  See ?scale_manual for a possible alternative
> plot <-	ggplot(data=overallResult, aes(x=xAxis, y=mean, shape=name)) +
+ 						#geom_smooth(aes(ymin=mean-se, ymax=mean+se, colour=name, fill=name), stat="identity", alpha=0.1) +
+ 						geom_ribbon(aes(ymin=mean-se, ymax=mean+se, fill=name), stat="identity", alpha=0.1) +
+ 						geom_line(aes(color=name), alpha=0.2) +
+ 						geom_point(aes(color=name), size=3) +
+ 						scale_x_continuous(name=overallList$xAxisName, minor_breaks = min(overallResult$xAxis):max(overallResult$xAxis)) +
+ 						ylab(overallDesName[[imagesIndex]]) +
+ 						scale_fill_manual(values = overallColor[[imagesIndex]]) +
+ 						scale_colour_manual(values= overallColor[[imagesIndex]]) +
+ 						scale_shape_manual(values = c(1:length(overallColor[[imagesIndex]])))
Fehler in min(overallResult$xAxis):max(overallResult$xAxis) : 
  Resultat wäre zu langer Vektor
Zusätzlich: Warnmeldungen:
1: In min(overallResult$xAxis) :
  kein nicht-fehlendes Argument für min; gebe Inf zurück
2: In max(overallResult$xAxis) :
  kein nicht-fehlendes Argument für max; gebe -Inf zurück
> min(overallResult$xAxis)
[1] Inf
Warnmeldung:
In min(overallResult$xAxis) :
  kein nicht-fehlendes Argument für min; gebe Inf zurück
> overallResult$xAxis
NULL
> head(overallResult)
                       name  primaerTreatment mean se
1 normal bewaessert#BarkeCS normal bewaessert  NaN NA
2 normal bewaessert#BarkeCS normal bewaessert  NaN NA
3 normal bewaessert#BarkeCS normal bewaessert  NaN NA
4 normal bewaessert#BarkeCS normal bewaessert  NaN NA
5 normal bewaessert#BarkeCS normal bewaessert  NaN NA
6 normal bewaessert#BarkeCS normal bewaessert  NaN NA
> head(tempOverallResult)
                       name  primaerTreatment xAxis mean1 mean3 se1 se3
1 normal bewaessert#BarkeCS normal bewaessert     3   NaN   NaN  NA  NA
2 normal bewaessert#BarkeCS normal bewaessert     4   NaN   NaN  NA  NA
3 normal bewaessert#BarkeCS normal bewaessert     5   NaN   NaN  NA  NA
4 normal bewaessert#BarkeCS normal bewaessert     6   NaN   NaN  NA  NA
5 normal bewaessert#BarkeCS normal bewaessert     7   NaN   NaN  NA  NA
6 normal bewaessert#BarkeCS normal bewaessert     8   NaN   NaN  NA  NA
> reduceWholeOverallResultToOneValue <- function(tempOverallResult, imagesIndex, debug, diagramTyp="nboxplot") {
+ 	debug %debug% "reduceWholeOverallResultToOneValue()"
+ 	
+ 	if(diagramTyp == "boxplotstacked") {
+ 		
+ 		workingDataSet <- tempOverallResult[tempOverallResult$plot == imagesIndex,]
+ 		workingDataSet$hist <- factor(workingDataSet$hist, unique(workingDataSet$hist))
+ 		
+ 	} else {
+ 		colNames <- vector()
+ 		if(diagramTyp == "nboxplot" || diagramTyp == "barplot") {
+ 			colNames <- c("mean", "se")
+ 		} else if(diagramTyp == "boxplot") {
+ 			colNames <- c("value")
+ 		} 
+ 		
+ 		standardColumnName <- c("name", "primaerTreatment", "xAxis")
+ 		
+ 		workingDataSet <- buildDataSet(tempOverallResult[,standardColumnName], tempOverallResult, colNames, imagesIndex)
+ 		colnames(workingDataSet) <- c(standardColumnName, colNames)
+ 	}
+ 	return(workingDataSet)	
+ }
> 			overallResult <- reduceWholeOverallResultToOneValue(tempOverallResult, imagesIndex, overallList$debug, "nboxplot")
[1] "DebugBreakPoint:  reduceWholeOverallResultToOneValue()"
> head(overallResult)
                       name  primaerTreatment xAxis mean se
1 normal bewaessert#BarkeCS normal bewaessert     3  NaN NA
2 normal bewaessert#BarkeCS normal bewaessert     4  NaN NA
3 normal bewaessert#BarkeCS normal bewaessert     5  NaN NA
4 normal bewaessert#BarkeCS normal bewaessert     6  NaN NA
5 normal bewaessert#BarkeCS normal bewaessert     7  NaN NA
6 normal bewaessert#BarkeCS normal bewaessert     8  NaN NA
> plot <-	ggplot(data=overallResult, aes(x=xAxis, y=mean, shape=name)) +
+ 						#geom_smooth(aes(ymin=mean-se, ymax=mean+se, colour=name, fill=name), stat="identity", alpha=0.1) +
+ 						geom_ribbon(aes(ymin=mean-se, ymax=mean+se, fill=name), stat="identity", alpha=0.1) +
+ 						geom_line(aes(color=name), alpha=0.2) +
+ 						geom_point(aes(color=name), size=3) +
+ 						scale_x_continuous(name=overallList$xAxisName, minor_breaks = min(overallResult$xAxis):max(overallResult$xAxis)) +
+ 						ylab(overallDesName[[imagesIndex]]) +
+ 						scale_fill_manual(values = overallColor[[imagesIndex]]) +
+ 						scale_colour_manual(values= overallColor[[imagesIndex]]) +
+ 						scale_shape_manual(values = c(1:length(overallColor[[imagesIndex]]))) +
+ 						theme_bw() +
+ 						opts(axis.title.x = theme_text(face="bold", size=11),
+ 								axis.title.y = theme_text(face="bold", size=11, angle=90),
+ 								#panel.grid.major = theme_blank(), # switch off major gridlines
+ 								#panel.grid.minor = theme_blank(), # switch off minor gridlines
+ 								legend.position = "right", # manually position the legend (numbers being from 0,0 at bottom left of whole plot to 1,1 at top right)
+ 								legend.title = theme_blank(), # switch off the legend title						
+ 								#legend.key.size = unit(1.5, "lines"),
+ 								legend.key = theme_blank(), # switch off the rectangle around symbols in the legend
+ 								panel.border = theme_rect(colour="Grey", size=0.1)
+ 						)
> 				
> 				if(length(overallColor[[imagesIndex]]) > 25) {
+ 					plot <- plot + opts(legend.text = theme_text(size=6),
+ 										legend.key.size = unit(0.7, "lines")
+ 										)
+ 				} else {
+ 					plot <- plot + opts(legend.text = theme_text(size=11))
+ 				}
> print(plot)
Es gab 50 oder mehr Warnungen (Anzeige der ersten 50 mit warnings())
> 	h=h 
Es gab 50 oder mehr Warnungen (Anzeige der ersten 50 mit warnings())
> 	overallResult = overallList$overallResult_boxDes
> 	overallColor=overallList$color_box
> #	debug = overallList$debug
> 	overallDescriptor = overallList$boxDes
> 	overallDesName = overallList$boxDesName
> 	tempOverallResult <-  overallResult
> 			overallResult <- reduceWholeOverallResultToOneValue(tempOverallResult, imagesIndex, overallList$debug, "boxplot")
[1] "DebugBreakPoint:  reduceWholeOverallResultToOneValue()"
> head(overallResult)
                             name  primaerTreatment xAxis value
1 normal bewaessert#BCC_1367_Apex normal bewaessert     3    NA
2 normal bewaessert#BCC_1367_Apex normal bewaessert     3    NA
3 normal bewaessert#BCC_1367_Apex normal bewaessert     3    NA
4 normal bewaessert#BCC_1367_Apex normal bewaessert     3    NA
5 normal bewaessert#BCC_1367_Apex normal bewaessert     3    NA
6 normal bewaessert#BCC_1367_Apex normal bewaessert     3    NA
> myPlot <- ggplot(overallResult, aes(factor(name), value, fill=name)) +
+ 					geom_boxplot() +
+ 					ylab(overallDesName[[imagesIndex]]) +
+ 					#coord_cartesian(ylim=c(0,max(overallList$overallResult$mean + overallList$overallResult$se + 10,na.rm=TRUE))) +
+ 					xlab(overallList$xAxisName) +
+ 					scale_fill_manual(values = overallColor[[imagesIndex]]) +
+ 					#stat_summary(fun.data = f, geom = "crossbar", height = 0.1,	colour = NA, fill = "skyblue", width = 0.8, alpha = 0.5) +
+ 					theme_bw() +
+ 					opts(legend.position="none",
+ 							plot.margin = unit(c(0.1, 0.1, 0, 0), "cm"),
+ 							axis.title.x = theme_text(face="bold", size=11),
+ 							axis.title.y = theme_text(face="bold", size=11, angle=90),
+ 							panel.grid.minor = theme_blank(),
+ 							panel.border = theme_rect(colour="Grey", size=0.1)
+ 					)
> 		
> 			if(length(overallColor[[imagesIndex]]) > 10) {
+ 				myPlot <- myPlot + opts(axis.text.x = theme_text(size=6, angle=90))
+ 			}	
> print(myPlot)
Warnmeldung:
Removed 2066 rows containing missing values (stat_boxplot). 
> 	h=h
> 	overallResult=overallList$overallResult_boxStackDes
> 	overallDescriptor=overallList$boxStackDes
> 	overallColor=overallList$color_boxStack
> 	overallDesName=overallList$boxStackDesName
> 	overallList=overallList
> 	overallSaveName = overallList$saveName_nBoxD
> overallResult[is.na(overallResult)] <- 0
> 	tempOverallResult <- overallResult
> 		overallResult <- reduceWholeOverallResultToOneValue(tempOverallResult, imagesIndex, overallList$debug, "boxplotstacked")
[1] "DebugBreakPoint:  reduceWholeOverallResultToOneValue()"
> head(overallResult)
   hist  primaerTreatment values xAxis                      name plot
1 0..25 normal bewaessert      0     3 normal bewaessert#BarkeCS    1
2 0..25 normal bewaessert      0     4 normal bewaessert#BarkeCS    1
3 0..25 normal bewaessert      0     5 normal bewaessert#BarkeCS    1
4 0..25 normal bewaessert      0     6 normal bewaessert#BarkeCS    1
5 0..25 normal bewaessert      0     7 normal bewaessert#BarkeCS    1
6 0..25 normal bewaessert      0     8 normal bewaessert#BarkeCS    1
> groupBy <- groupByFunction(list(overallList$treatment, overallList$secondTreatment))
> groupBy
[1] "Treatment" "Genotype" 
> overallList$filterSecondTreatment
 [1] "BCC_1367_Apex"              "BCC_1391_Isaria"           
 [3] "BCC_1403_Perun"             "BarkeCS"                   
 [5] "Beatrix"                    "Djamilia"                  
 [7] "Eunova"                     "Streif"                    
 [9] "Ursa"                       "Victoriana"                
[11] "BCC_1433_HeilsFranken"      "BCC_1441_PflugsIntensiv"   
[13] "BCC_1524_AckermannsBavaria" "BCC_1413_Sissy"            
[15] "BCC_1417_Trumpf"            "Wiebke"                    
[17] "MorexPE"                    "BarkePE"                   
> value <- overallList$filterSecondTreatment
> value <- overallList$filterSecondTreatment[1]
> value
[1] "BCC_1367_Apex"
> title <- value
> 			plottedName <- overallList$filterTreatment %contactAllWithAll% value
> 			booleanVector <- getBooleanVectorForFilterValues(overallResult, list(name = plottedName))
> 			plotThisValues <- overallResult[booleanVector,]
> 			plotThisValues <- reNameColumn(plotThisValues, "name", "primaerTreatment")
> head(plotThisValues)
     hist  primaerTreatment values xAxis              name plot
106 0..25 normal bewaessert      0     3 normal bewaessert    1
107 0..25 normal bewaessert      0     4 normal bewaessert    1
108 0..25 normal bewaessert      0     5 normal bewaessert    1
109 0..25 normal bewaessert      0     6 normal bewaessert    1
110 0..25 normal bewaessert      0     7 normal bewaessert    1
111 0..25 normal bewaessert      0     8 normal bewaessert    1
> makeOverallImage = TRUE;  legende=TRUE; minor_breaks=FALSE
> plot <- ggplot(overallResult, aes(xAxis, values, fill=hist)) + 
+ 				geom_bar(stat="identity", position = "fill") +
+ 			 	ylab(overallDesName[[imagesIndex]]) 
> 				#coord_cartesian(ylim=c(0,1)) +
> 			
> 		if(minor_breaks) {
+ 			plot <- plot + scale_x_continuous(name=overallList$xAxisName, minor_breaks = min(overallResult$xAxis):max(overallResult$xAxis))
+ 		} else {
+ 			plot <- plot + xlab(overallList$xAxisName)
+ 		}
> 				
> 		plot <- plot +		
+ 				scale_fill_manual(values = getColor(overallColor[[imagesIndex]], overallResult), name="") +
+ 				theme_bw() +
+ 				opts(axis.title.x = theme_text(face="bold", size=11),
+ 						axis.title.y = theme_text(face="bold", size=11, angle=90),
+ 						plot.margin = unit(c(0.1, 0.1, 0, 0), "cm"),
+ 						#panel.background = theme_rect(linetype = "dotted"),
+ 						panel.border = theme_rect(colour="Grey", size=0.1),
+ 						strip.background = theme_rect(colour=NA)
+ #						plot.title = theme_text(size=10),
+ #						plot.title = theme_rect(colour="Pink", size=0.1),
+ 				) 
> 		
> 		if(!legende) {
+ 			plot <- plot + opts(legend.position="none")
+ 		} else {
+ 			plot <- plot + opts(legend.position="right", 
+ 								legend.title = theme_blank(),
+ 								legend.text = theme_text(size=11),
+ 								legend.key = theme_blank())
+ 		}
> 		
> 		if(title != "") {
+ 			plot <- plot + opts(title = title)
+ 		}
> 		
> 		if(!minor_breaks) {
+ 			plot <- plot + opts(panel.grid.minor = theme_blank())
+ 		}
> 		
> 		if(makeOverallImage) {
+ 			#plot <- plot + facet_wrap(~ name, drop=TRUE)
+ 			plot <- plot + facet_wrap(~ name)
+ 		}
> 			print(plot)
> ?geom_bar
> test <- NULL
> length(test)
[1] 0
> test <- c("hallo")
> length(test)
[1] 1
> test <- c("hallo", "duda")
> rm(list=ls(all=TRUE))
> # TODO: Add comment
> # 
> # Author: Entzian
> ###############################################################################
> 
> "%debug%" <- function(debug, debugNumber) {
+ 	if (debug) {
+ 		print(paste("DebugBreakPoint: ", debugNumber))
+ 	}
+ }
> 
> "%checkEqual%" <- function(treat, seconTreat) {
+ 	if(treat == seconTreat) {
+ 		print("SecondTreatment are the same value as Treatment so it set to \"none\"")
+ 		return("none")
+ 	} else {
+ 		return(seconTreat)
+ 	}
+ }
> 
> "%errorReport%" <- function(errorDescriptor, typOfError="notExists") {
+ 	#overallList$debug %debug% "%errorReport%"
+ 	if (length(errorDescriptor) > 0) {
+ 		if (tolower(typOfError) == "notexists"){
+ 			print(paste("No plotting, because the descriptor(s) (",errorDescriptor,") don't exists!", sep=""))
+ 			
+ 		} else if (tolower(typOfError) == "notnumericorallzero") {
+ 			#plotDummy(overallList)
+ 			print(paste("Dummy plotting for this descriptor(s) ((",errorDescriptor,"), because all zero or not numeric!", sep=""))
+ 		}
+ 	}
+ }
> 
> "%exists%" <- function(standardValue, argsValue){
+ 	
+ 	if(!is.na(argsValue) & argsValue != "")	{
+ 		return(argsValue)
+ 	} else {
+ 		return(standardValue)
+ 	}
+ }
> 
> "%getData%" <- function(separation, fileName){	
+ 	#separation <- ";"
+ 	print("... Read input file")
+ 	
+ 	if(file.exists(fileName)) {
+ 		preScanForPointOrComma <- scan(file=fileName, what=character(0), nlines=2, sep="\n")
+ 		preScanForPointOrComma <- paste(preScanForPointOrComma[2],",.", sep="")
+ 		allCharacterSeparated <- table(strsplit(toupper(preScanForPointOrComma), '')[[1]])
+ 		
+ 		if(allCharacterSeparated["."] > allCharacterSeparated[","]) {
+ 			print("... english Version")
+ 			return(read.csv(fileName, header=TRUE, sep=separation, fileEncoding="ISO-8859-1", encoding="UTF-8"))
+ 		} else {
+ 			print("... german Version")
+ 			return(read.csv2(fileName, header=TRUE, sep=separation, fileEncoding="ISO-8859-1", encoding="UTF-8"))
+ 		}
+ 	} else {
+ 		return("error")
+ 	}
+ 	
+ #	if (englischVersion) {
+ #		return(read.csv(fileName, header=TRUE, sep=separation, fileEncoding="ISO-8859-1", encoding="UTF-8"))
+ #	} else {
+ #		return(read.csv2(fileName, header=TRUE, sep=separation, fileEncoding="ISO-8859-1", encoding="UTF-8"))
+ #	}
+ }
> 
> "%checkIfDescriptorExists%" <- function(descriptor, dataSet) {
+ 	if (is.data.frame(dataSet)) {
+ 		return(descriptor %in% colnames(dataSet))
+ 	} else {
+ 		return(descriptor %in% dataSet)
+ 	}	
+ }
> 
> "%GetDescriptorsAfterCheckIfDescriptorExists%" <- function(descriptor, dataSet) {
+ 	return(descriptor[descriptor %checkIfDescriptorExists% dataSet])
+ 	
+ }
> 
> "%GetDescriptorAfterCheckIfDescriptorNotExists%" <- function(descriptor, dataSet) {
+ 	return(descriptor[!descriptor %checkIfDescriptorExists% dataSet])
+ 	
+ }
> 
> "%contactAllWithAll%" <- function(vector1, vector2) {
+ 	vectorTemp <- character(0)
+ 	for(k in vector2) {
+ 		if(k=="none") {
+ 			vectorTemp <- c(vectorTemp,vector1)
+ 		} else {
+ 			vectorTemp <- c(vectorTemp,paste(vector1,k, sep = "#"))
+ 		}
+ 	}
+ 	return(vectorTemp)
+ }
> 
> "%allColnamesWithoutThisOnes%" <- function(dataSet, withoutColNamesVector) {
+ 	return(colnames(dataSet)[!colnames(dataSet) %in% withoutColNamesVector])
+ }
> 
> buildDataSet <- function(workingDataSet, overallResult, colname, index) {
+ 	
+ 	if(length(colname) > 0) {
+ 		for(n in 1:length(colname)) {
+ 			workingDataSet <- cbind(workingDataSet, overallResult[paste(colname[n],index, sep="")])
+ 		}	
+ 		return(workingDataSet)
+ 	}
+ }
> 
> 
> reNameHist <-  function(colNameWichMustBind) {
+ 	colNameWichMustBind <- as.character(colNameWichMustBind)
+ 	positions <- which(strsplit(colNameWichMustBind, '')[[1]]=='.')
+ 	colNameWichMustBind <- substr(colNameWichMustBind,positions[length(positions)]+1,nchar(colNameWichMustBind))
+ 	
+ 	regExpressionSpezialCharacter <- "\\_"
+ 	colNameWichMustBind <- gsub(regExpressionSpezialCharacter,"..",colNameWichMustBind)
+ 	
+ 	return(colNameWichMustBind)	
+ }
> 
> reNameColumn <-  function(plotThisValues, columnNameReplace="name", columnNameWhichUsedToReplace="primaerTreatment") {
+ 	if(!is.null(plotThisValues[columnNameWhichUsedToReplace])){
+ 		plotThisValues[columnNameReplace] <- plotThisValues[columnNameWhichUsedToReplace]
+ 	}
+ 	
+ 	return(plotThisValues)
+ }
> 
> swap <- function(listWithTwoParameter) {
+ 	temp <- listWithTwoParameter[[1]]
+ 	listWithTwoParameter[[1]] <- listWithTwoParameter[[2]]
+ 	listWithTwoParameter[[2]] <- temp
+ 	return(listWithTwoParameter)
+ }
> 
> changeWhenTreatmentNoneAndSecondTreatmentNotNone <- function(listOfTreat, listOfFilterTreat) {
+ 	if(listOfTreat[[1]] == "none" & listOfTreat[[2]] != "none") {
+ 		print("The values of Treatment and SecondTreamt are changed (filter values also)")
+ 		return(list(swap(listOfTreat),swap(listOfFilterTreat)))	
+ 	} else {
+ 		return(list(listOfTreat,listOfFilterTreat))
+ 	}
+ }
> 
> checkOfTreatments <- function(args, treatment, filterTreatment, secondTreatment, filterSecondTreatment, workingDataSet, debug) {
+ 	debug %debug% "Start of checkOfTreatments()"
+ 	
+ 	treatment <- treatment %exists% args[4]
+ 	secondTreatment <- secondTreatment %exists% args[5]
+ 	secondTreatment <- treatment %checkEqual% secondTreatment
+ 	
+ 	listOfTreat <- list(treatment=treatment, secondTreatment=secondTreatment)
+ 	listOfFilterTreat <- list(filterTreatment=filterTreatment, filterSecondTreatment=filterSecondTreatment)	## wird erstmal noch nichts weiter mit gemacht! nur geswapt falls notwendig
+ 
+ 	for(k in names(listOfTreat)){
+ 		if(listOfTreat[[k]] != "none") {
+ 			#overallTreat <- list(iniDataSet=workingDataSet, descriptor=listOfTreat[[k]], debug=debug, stoppTheCalculation = FALSE, errorDescriptor=character())
+ 			#overallTreat <- list(iniDataSet=workingDataSet, descriptor=listOfTreat[[k]], debug=debug, stoppTheCalculation = FALSE)
+ 			descriptorVector <- getVector(preprocessingOfDescriptor(listOfTreat[[k]], workingDataSet))
+ 			
+ 			if(!is.null(descriptorVector)) {
+ 				descriptorVector <- getVector(checkIfDescriptorIsNaOrAllZero(descriptorVector, workingDataSet, FALSE))
+ 				
+ 				if(!is.null(descriptorVector)) {
+ 					listOfTreat[[k]] <- descriptorVector
+ 				} 
+ 			} 
+ 			
+ 			if(is.null(descriptorVector)) {
+ 				print(paste(k, "set to \"none\""))
+ 				listOfTreat[[k]] <- "none"
+ 			}
+ 		}
+ 	}
+ 	
+ 	listOfTreatAndFilterTreat <- changeWhenTreatmentNoneAndSecondTreatmentNotNone(listOfTreat, listOfFilterTreat)
+ 	debug %debug% "End of checkOfTreatments()"
+ 	return(listOfTreatAndFilterTreat)
+ }
> 
> overallCheckIfDescriptorIsNaOrAllZero <- function(overallList) {
+ 	overallList$debug %debug% "overallCheckIfDescriptorIsNaOrAllZero()"	
+ 	
+ 	if(sum(!is.na(overallList$nBoxDes)) > 0) {
+ 		if(overallList$debug) {print("... nBoxplot")}
+ 		for(n in 1:length(overallList$nBoxDes)) {
+ 			if(!is.na(overallList$nBoxDes[[n]])) {
+ 				overallList$nBoxDes[n] <- checkIfDescriptorIsNaOrAllZero(overallList$nBoxDes[[n]], overallList$iniDataSet)
+ 			}
+ 		}
+ 		names(overallList$nBoxDes) <- c(1:length(overallList$nBoxDes))
+ 	} else {
+ 		print("... all in nBoxplot is 'NA'")
+ 	}
+ 	
+ 	if(sum(!is.na(overallList$boxDes)) > 0) {
+ 		if(overallList$debug) {print("... Boxplot")}
+ 		for(n in 1:length(overallList$boxDes)) {
+ 			if(!is.na(overallList$boxDes[[n]])) {
+ 				overallList$boxDes[[n]] <- checkIfDescriptorIsNaOrAllZero(overallList$boxDes[[n]], overallList$iniDataSet)
+ 			}
+ 		}
+ 		names(overallList$boxDes) <- c(1:length(overallList$boxDes))
+ 	} else {
+ 		print("... all in Boxplot is 'NA'")
+ 	}
+ 
+ 	if(sum(!is.na(overallList$boxStackDes)) > 0) {
+ 		if(overallList$debug) {print("... stackedBoxplot")}
+ 		for(n in 1:length(overallList$boxStackDes)) {
+ 			if(!is.na(overallList$boxStackDes[[n]])) {
+ 				overallList$boxStackDes[[n]] <- checkIfDescriptorIsNaOrAllZero(overallList$boxStackDes[[n]], overallList$iniDataSet)
+ 			}
+ 		}
+ 		names(overallList$boxStackDes) <- c(1:length(overallList$boxStackDes))
+ 	} else {
+ 		print("... all in stackedBoxplot is 'NA'")
+ 	}
+ 	
+ 	if(!sum(!is.na(overallList$boxStackDes)) > 0 && !sum(!is.na(overallList$boxDes)) > 0 && !sum(!is.na(overallList$nBoxDes)) > 0) {
+ 		print("... no descriptor set (all descriptors are zero or NA) - the program stopp!")
+ 		overallList$stoppTheCalculation <- TRUE 
+ 	}
+ 	
+ 	return(overallList)
+ }
> 
> checkIfDescriptorIsNaOrAllZero <- function(descriptorVector, iniDataSet, isDescriptor = TRUE){
+ 	#overallList$debug %debug% "checkIfDescriptorIsNaOrAllZero()"
+ 	descriptorVector <- as.vector(descriptorVector)
+ 	#descriptorVector <- getVector(descriptorVector)
+ 	tempDescriptor <- descriptorVector 
+ 	if(isDescriptor) {
+ 		descriptorVector <- descriptorVector[colSums(!is.na(iniDataSet[descriptorVector])) != 0 & colSums(iniDataSet[descriptorVector] *1, na.rm = TRUE) > 0]
+ 	} else {
+ 		descriptorVector <- descriptorVector[colSums(!is.na(iniDataSet[descriptorVector])) != 0]
+ 	}
+ 	errorDescriptor <- tempDescriptor %GetDescriptorAfterCheckIfDescriptorNotExists% descriptorVector
+ 
+ 	if (length(errorDescriptor) > 0) {
+ 		errorDescriptor %errorReport% "NotNumericOrAllZero"	
+ 	}
+ 	
+ 	if(length(descriptorVector) > 0) {
+ 		return(as.data.frame(descriptorVector))
+ 	} else {
+ 		return(NA)
+ 	}
+ }
> 
> overallChangeName <- function(overallList) {
+ 	overallList$debug %debug% "overallChangeSaveName()"	
+ 	
+ 	if(!is.null(overallList$saveName_nBoxDes)) {
+ 		if(overallList$debug) {print("... nBoxplot")}
+ 		overallList$saveName_nBoxDes <- changeSaveName(overallList$saveName_nBoxDes)
+ 		names(overallList$saveName_nBoxDes) <- c(1:length(overallList$saveName_nBoxDes))
+ 		
+ 		overallList$nBoxDesName <- as.list(overallList$nBoxDesName)
+ 		names(overallList$nBoxDesName) <- c(1:length(overallList$nBoxDesName))
+ 	}
+ 	
+ 	if(!is.null(overallList$saveName_boxDes)) {
+ 		if(overallList$debug) {print("... Boxplot")}
+ 		overallList$saveName_boxDes <- changeSaveName(overallList$saveName_boxDes)
+ 		names(overallList$saveName_boxDes) <- c(1:length(overallList$saveName_boxDes))
+ 		
+ 		overallList$boxDesName <- as.list(overallList$boxDesName)
+ 		names(overallList$boxDesName) <- c(1:length(overallList$boxDesName))
+ 	}
+ 	
+ 	if(!is.null(overallList$saveName_boxStackDes)) {
+ 		if(overallList$debug) {print("... stackedBoxplot")}
+ 		overallList$saveName_boxStackDes <- changeSaveName(overallList$saveName_boxStackDes)
+ 		names(overallList$saveName_boxStackDes) <- c(1:length(overallList$saveName_boxStackDes))
+ 		
+ 		overallList$boxStackDesName <- as.list(overallList$boxStackDesName)
+ 		names(overallList$boxStackDesName) <- c(1:length(overallList$boxStackDesName))
+ 	}
+ 	
+ 	return(overallList)
+ }
> 
> changeSaveName <- function(saveNameVector) {
+ 	#Sollte hier nicht noch die Leerzeichen durch Punkte ersetzt werden?
+ 	saveNameVector <- gsub("\\$",";",substr(saveNameVector,1,70))
+ 	saveNameVector <- gsub("\\^", "", saveNameVector);
+ 	
+ 	return(as.list(saveNameVector))
+ }
> 
> preprocessingOfValues <- function(value, isColValue=FALSE, replaceString=".") {
+ 
+ 	if (!is.null(value)) {
+ 		regExpressionCol <- "[^[:alnum:]|^_]|[[:space:]|\\^]"
+ 		if(isColValue) {
+ 			value <- strsplit(value, "$", fixed=TRUE)
+ 		}
+ 		
+ 		for(n in 1:length(value)) {
+ 			value[[n]] <- gsub(regExpressionCol,replaceString,value[[n]])
+ 		}
+ 	} else {
+ 			return("none")
+ 		}
+ 	return(value)
+ }
> 
> overallPreprocessingOfDescriptor <- function(overallList) {
+ 	overallList$debug %debug% "overallPreprocessingOfDescriptor()"	
+ 	
+ 	if(!is.null(overallList$nBoxDes)) {
+ 		if(overallList$debug) {print("... nBoxplot")}
+ 		for(n in 1:length(overallList$nBoxDes)) {
+ 			overallList$nBoxDes[n] <- preprocessingOfDescriptor(overallList$nBoxDes[[n]], overallList$iniDataSet)
+ 		}
+ 	} else {
+ 		print("... nBoxplot is NULL")
+ 	} 
+ 	
+ 	if(!is.null(overallList$boxDes)) {
+ 		if(overallList$debug) {print("... Boxplot")}
+ 		for(n in 1:length(overallList$boxDes)) {
+ 			overallList$boxDes[n] <- preprocessingOfDescriptor(overallList$boxDes[[n]], overallList$iniDataSet)
+ 		}
+ 	} else {
+ 		print("... Boxplot is NULL")
+ 	} 
+ 	
+ 	if(!is.null(overallList$boxStackDes)) {
+ 		if(overallList$debug) {print("... stackedBoxplot")}
+ 		for(n in 1:length(overallList$boxStackDes)) {
+ 			overallList$boxStackDes[n] <- preprocessingOfDescriptor(overallList$boxStackDes[[n]], overallList$iniDataSet)
+ 		}
+ 	} else {
+ 		print("... stackedBoxplot is NULL")
+ 	} 
+ 	
+ 	if(!sum(!is.na(overallList$boxStackDes)) > 0 && !sum(!is.na(overallList$boxDes)) > 0 && !sum(!is.na(overallList$nBoxDes)) > 0) {
+ 		print("... no descriptor set - this pass stopped!")
+ 		overallList$stoppTheCalculation <- TRUE
+ 	}
+ 	
+ 	return(overallList)
+ }
> 
> preprocessingOfDescriptor <- function(descriptorVector, iniDataSet) {
+ 	#overallList$debug %debug% "preprocessingOfDescriptor()"
+ 	descriptorVector <- unlist(preprocessingOfValues(descriptorVector, TRUE))	#descriptor is value for yAxis
+ 	
+ 	errorDescriptor <- descriptorVector %GetDescriptorAfterCheckIfDescriptorNotExists% iniDataSet 
+ 	descriptorVector <- descriptorVector %GetDescriptorsAfterCheckIfDescriptorExists% iniDataSet
+ 	if (length(errorDescriptor)>0) {
+ 		errorDescriptor %errorReport% "notExists"
+ 	} 
+ 	
+ 	if(length(descriptorVector) > 0) {
+ 		return(as.data.frame(descriptorVector))
+ 	} else {
+ 		return(NA)
+ 	}	
+ }
> 
> preprocessingOfxAxisValue <- function(overallList) {
+ 	overallList$debug %debug% "preprocessingOfxAxisValue()"
+ 	overallList$xAxis <- unlist(preprocessingOfValues(overallList$xAxis, TRUE))
+ 	
+ 	if (overallList$filterXaxis != "none") {
+ 		overallList$filterXaxis <- as.numeric(strsplit(overallList$filterXaxis, "$", fixed=TRUE)[[1]])
+ 	} else {
+ 		overallList$filterXaxis <- as.numeric(unique(overallList$iniDataSet[overallList$xAxis])[[1]])	#xAxis muss einen Wert enthalten ansonsten Bricht das Program weiter oben ab
+ 	}
+ 	
+ 	return(overallList)
+ }
> 
> getSingelFilter <- function(filter, treatment, dataSet) {
+ 	if(filter != "none") {
+ 		return(strsplit(filter, "$", fixed=TRUE)[[1]])
+ 	} else {
+ 		return(as.character(unique(dataSet[treatment])[[1]]))
+ 	}
+ }
> 
> preprocessingOfTreatment <- function(overallList) {
+ 	overallList$debug %debug% "preprocessingOfTheTreatment()"
+ 	
+ 	if(!is.null(overallList$treatment)){
+ 		overallList$treatment <- preprocessingOfValues(overallList$treatment)
+ 		
+ 		if(overallList$treatment != "none" & (overallList$treatment %checkIfDescriptorExists% overallList$iniDataSet)) {	
+ 			overallList$filterTreatment <- getSingelFilter(overallList$filterTreatment, overallList$treatment, overallList$iniDataSet)
+ 
+ 		} else {
+ 			overallList$treatment <- "none"
+ 			overallList$filterTreatment <- "none"
+ 			print("... set 'filterTreatment' and 'treatment' to 'none'!")		
+ 		}
+ 			
+ 	} else {
+ 		overallList$treatment <- "none"
+ 		overallList$filterTreatment <- "none"
+ 		print("... set 'filterTreatment' and 'treatment' to 'none'!")
+ 	}
+ 
+ 	return(overallList)
+ }
> 
> preprocessingOfSecondTreatment <- function(overallList) {
+ 	overallList$debug %debug% "preprocessingOfTheSecondTreatment()"
+ 	
+ 	if(!is.null(overallList$secondTreatment)){
+ 		overallList$secondTreatment <- preprocessingOfValues(overallList$secondTreatment)
+ 
+ 		if (overallList$secondTreatment != "none" & (overallList$secondTreatment %checkIfDescriptorExists% overallList$iniDataSet)) {
+ 			overallList$filterSecondTreatment <- getSingelFilter(overallList$filterSecondTreatment, overallList$secondTreatment, overallList$iniDataSet)
+ 			
+ 		} else {
+ 			overallList$secondTreatment <- "none"
+ 			overallList$filterSecondTreatment <- "none"
+ 			print("... set 'filterSecondTreatment' and 'secondTreatment' to 'none'!")
+ 		}	
+ 	} else {
+ 		overallList$secondTreatment <- "none"
+ 		overallList$filterSecondTreatment <- "none"
+ 		print("... set 'filterSecondTreatment' and 'secondTreatment' to 'none'!")
+ 	}
+ 	return(overallList)
+ }
> 
> check <- function(value, checkValue=c("none", NA)){
+ 	if(!is.null(value)){
+ 		return(value %GetDescriptorAfterCheckIfDescriptorNotExists% checkValue)
+ 	} else {
+ 		return(character(0))
+ 	}
+ }
> 
> getVector <- function(descriptorSet) {
+ 	if(!is.null(descriptorSet)) {
+ 		vector <-  vector()
+ 		for(n in 1:length(descriptorSet)) {
+ 			vector <- c(vector, as.vector(unlist(descriptorSet[[n]])))
+ 		}
+ 		return(vector)
+ 	}
+ 	return(character(0))
+ }
> 
> reduceWorkingDataSize <- function(overallList){
+ 	overallList$debug %debug% "reduceWorkingDataSize()"
+ 	overallList$iniDataSet <- overallList$iniDataSet[unique(c(check(getVector(overallList$nBoxDes)), check(getVector(overallList$boxDes)), check(getVector(overallList$boxStackDes)), check(overallList$xAxis), check(overallList$treatment), check(overallList$secondTreatment)))]
+ 	return(overallList)
+ }
> 
> setRowAndColNameOfFinalDataFrame <- function(overallList) {
+ 	overallList$debug %debug% "setRowAndColNameOfFinalDataFrame()"
+ 
+ 	overallList$rowName <- (overallList$descriptor %contactAllWithAll% overallList$filterTreatment) %contactAllWithAll% overallList$filterSecondTreatment
+ 	overallList$colName <- as.character(overallList$filterXaxis)
+ 	
+ 	return(overallList)
+ }
> 
> groupByFunction <- function(groupByList) {
+ 	
+ 	groupByList <- unlist(groupByList)
+ 	return(unlist(groupByList[ifelse(groupByList != "none",TRUE,FALSE)]))
+ 	
+ }
> 
> getBooleanVectorForFilterValues <- function(groupedDataFrame, listOfValues) {
+ 	
+ 	tempVector <- rep.int(TRUE,times=length(groupedDataFrame[,1]))
+ 	for(h in names(listOfValues)) {
+ 		if(h != "none" & !is.null(groupedDataFrame[[h]])) {
+ 			tempVector <- tempVector & groupedDataFrame[[h]] %in% listOfValues[[h]]
+ 		}
+ 	}
+ 	return(tempVector)
+ }
> 
> buildRowForOverallList <- function(i, des, listOfValues, dataSet, day) {
+ 	rowString <- list(row=des, day=numeric())
+ 	for(k in listOfValues){
+ 		if(k != "none") {
+ 			rowString$row <- paste(rowString$row,dataSet[i,k])
+ 		}
+ 	}
+ 	return(rowString)
+ } 
> 
> fillOverallResult <- function(overallList, preErrorBars) {
+ 	overallList$debug %debug% "fillOverallResult()"
+ 	if(length(overallList$iniDataSet[,1]) > 0){
+ 		for(i in 1:length(overallList$iniDataSet[,1])) {
+ 			for(des in overallList$descriptor) {
+ 				rowAndColumn <- buildRowForOverallList(i,des, c(overallList$treatment, overallList$secondTreatment),overallList$iniDataSet, overallList$xAxis)
+ 				overallList$overallResult[rowAndColumn$row, as.character(overallList$iniDataSet[i,overallList$xAxis])] <- overallList$iniDataSet[i,des]
+ 				if(tolower(overallList$diagramTyp) != "boxplotstacked")
+ 					overallList$errorBars[rowAndColumn$row, as.character(overallList$iniDataSet[i,overallList$xAxis])] <- preErrorBars[i,des]
+ 			}
+ 		}
+ 	} else {
+ 		print("... no Value for the OverallResult-DataFrame - Wrong filter!")
+ 		overallList$stoppTheCalculation <- TRUE
+ 	}
+ 	return(overallList)
+ }
> 
> buildList <- function(overallList, colOfXaxis) {
+ 	overallList$debug %debug% "buildList()"
+ 	newList <- list()
+ 	
+ 	newList[[overallList$treatment]] <- overallList$filterTreatment
+ 	newList[[overallList$secondTreatment]] <- overallList$filterSecondTreatment
+ 	newList[[colOfXaxis]] <- overallList$filterXaxis
+ 	
+ 	return(newList)
+ }
> 
> conactAllWithAll <- function(value1, value2) {
+ 	
+ 	conactRow <- character()
+ 	for(k1 in value1){
+ 		if(k1 != "none") {
+ 			for(k2 in value2){
+ 				if(k2 != "none") {
+ 					conactRow <- c(conactRow, paste(k1,k2,sep = "#"))
+ 				}
+ 			}
+ 		}
+ 	}
+ 	return(conactRow)
+ }
> 
> buildRowName <- function(mergeDataSet,groupBy, yName = "value") {
+ 	
+ 	if(length(groupBy) == 0) {
+ 		return(data.frame(name=rep.int(yName, length(mergeDataSet[,1])), mergeDataSet))
+ 	} else if (length(groupBy) == 1) {
+ 		return(data.frame(name=mergeDataSet[,groupBy], mergeDataSet[,!(colnames(mergeDataSet) %in% groupBy)]))
+ 	} else {		
+ 		temp <- mergeDataSet[,groupBy[1]]
+ 		for(h in 2:length(groupBy)) {
+ 			temp <- paste(temp, mergeDataSet[,groupBy[h]], sep = "#")
+ 		}
+ 		return(data.frame(name=temp, primaerTreatment= mergeDataSet[,groupBy[1]], mergeDataSet[,mergeDataSet %allColnamesWithoutThisOnes% groupBy]))
+ 	}	
+ }
> 
> overallGetResultDataFrame <- function(overallList) {
+ 	overallList$debug %debug% "overallGetResultDataFrame()"	
+ 	groupBy <- groupByFunction(list(overallList$treatment, overallList$secondTreatment))
+ 	colNames <- list(colOfXaxis="xAxis", colOfMean="mean", colOfSD="se", colName="name", xAxis=overallList$xAxis)
+ 	booleanVectorList <- buildList(overallList, colNames$colOfXaxis)
+ 	columnsStandard <- c(check(overallList$xAxis), check(overallList$treatment), check(overallList$secondTreatment))
+ 		
+ 	if(sum(!is.na(overallList$nBoxDes)) > 0) {
+ 		if(overallList$debug) {print("... nBoxplot")}
+ 		columns <- c(columnsStandard, check(getVector(overallList$nBoxDes)))
+ 		overallList$overallResult_nBoxDes <- getResultDataFrame("nboxplot", overallList$nBoxDes, overallList$iniDataSet[columns], groupBy, colNames, booleanVectorList, overallList$debug)
+ 	} else {
+ 		print("... all in nBoxplot is 'NA'")
+ 	}
+ 	
+ 	if(sum(!is.na(overallList$boxDes)) > 0) {
+ 		if(overallList$debug) {print("... Boxplot")}
+ 		colNames$colOfMean <- "value"
+ 		columns <- c(columnsStandard, check(getVector(overallList$boxDes)))
+ 		overallList$overallResult_boxDes <- getResultDataFrame("boxplot", overallList$boxDes, overallList$iniDataSet[columns], groupBy, colNames, booleanVectorList, overallList$debug)
+ 	} else {
+ 		print("... all in Boxplot is 'NA'")
+ 	}
+ 	
+ 	if(sum(!is.na(overallList$boxStackDes)) > 0) {
+ 		if(overallList$debug) {print("... stackedBoxplot")}
+ 		colNames$colOfMean <- check(getVector(overallList$boxStackDes))
+ 		colNames$colOfXaxis <- overallList$xAxis
+ 		columns <- c(columnsStandard, check(getVector(overallList$boxStackDes)))
+ 		overallList$overallResult_boxStackDes <- getResultDataFrame("boxplotStacked", overallList$boxStackDes, overallList$iniDataSet[columns], groupBy, colNames, booleanVectorList,overallList$debug)
+ 	} else {
+ 		print("... all in stackedBoxplot is 'NA'")
+ 	}
+ 	
+ 	if(is.null(overallList$boxStackDes) && is.null(overallList$boxDes) && is.null(overallList$nBoxDes)) {
+ 		print("... no descriptor set - this pass stopped!")
+ 		overallList$stoppTheCalculation <- TRUE
+ 	}
+ 	
+ 	return(overallList)
+ }
> 
> getPlotNumber <- function(colNameWichMustBind, descriptorList) {
+ 	
+ 	for(n in names(descriptorList)) {
+ 		if(colNameWichMustBind %in% as.vector(unlist(descriptorList[[n]]))) {
+ 			return(n)
+ 		}
+ 	}
+ 	return(0)
+ }
> #descriptorName kann entfernt werden
> getResultDataFrame <- function(diagramTyp, descriptorList, iniDataSet, groupBy, colNames, booleanVectorList, debug) {	
+ 	debug %debug% "getResultDataFrame()"
+ 
+ ################################
+ #	diagramTyp = "boxplotStacked"
+ #	descriptorList = overallList$boxStackDes
+ #	iniDataSet = overallList$iniDataSet[columns]
+ #	groupBy = groupBy 
+ #	colNames = colNames 
+ #	booleanVectorList= booleanVectorList
+ #	descriptorName=overallList$boxStackDesName
+ #	debug = overallList$debug
+ #	diagramTyp = "nboxplot"
+ #	descriptor = getVector(overallList$nBoxDes)
+ #	iniDataSet = overallList$iniDataSet[columns]
+ #	groupBy = groupBy 
+ #	colNames = colNames 
+ #	booleanVectorList= booleanVectorList
+ #	descriptorName=overallList$boxDesName
+ ##########################
+ 
+ 	descriptor <- getVector(descriptorList)
+ 	descriptorName <- seq(1:length(descriptor))
+ 	
+ 	descriptorName <- descriptorName[!is.na(descriptor)]
+ 	descriptor <- descriptor[!is.na(descriptor)]
+ 	
+ 	if(diagramTyp != "boxplot") {
+ 		groupedDataFrame <- data.table(iniDataSet)
+ 		key(groupedDataFrame) <- c(groupBy, colNames$xAxis)		
+ 	}
+ 	
+ 	if(diagramTyp == "boxplot") {
+ 		groupedDataFrameMean <- iniDataSet[groupBy[1]]
+ 		
+ 		groupByReduce <- groupBy[groupBy!=groupBy[1]]
+ 		for(n in c(groupByReduce,  colNames$xAxis, descriptor)) {
+ 			groupedDataFrameMean <- cbind(groupedDataFrameMean,  iniDataSet[n])
+ 		}	
+ 		
+ ####################
+ #		Alternative, den Boxplot selber zu bauen!!
+ #		test <- overallList$iniDataSet %allColnamesWithoutThisOnes% c(groupBy, overallList$xAxis)
+ #		myQuantile <- as.data.frame(groupedDataFrame[,lapply(.SD,quantile, probs=c(0,0.25,0.5,0.75,1), na.rm=TRUE), by=groupBy])
+ #		numberOfGroubingElements <- length(myQuantile[,1]) / 5
+ #		
+ #		testData <- data.frame()
+ #		for(n in seq(1, length(myQuantile[,1]), by=5)) {
+ #			testData <- rbind(testData, myQuantile[n:(n+4),test])
+ #		}
+ #		colnames(testData) <- c("q0", "q25", "q50", "q75", "q100")
+ #		rownames(testData) <- unique(myQuantile[,1])
+ #		
+ #		ggplot(overallList$iniDataSet, aes(x=rownames(testData), ymin=testData[,1], lower=testData[,2], middle=testData[,3], upper=testData[,4], ymax=testData[,5])) + 
+ #				geom_boxplot(stat="identity")
+ #####################		
+ 			
+ 		
+ 	} else {
+ 		groupedDataFrameMean <- as.data.frame(groupedDataFrame[,lapply(.SD, mean, na.rm=TRUE), by=c(groupBy,colNames$xAxis)])
+ 	}
+ 	
+ 	if(diagramTyp == "nboxplot" || diagramTyp == "boxplot") {
+ 		#colNamesOfTheRest <- paste(colNames$colOfMean,seq(1:length(descriptor)), sep="")	
+ 		colNamesOfTheRest <- paste(colNames$colOfMean,descriptorName, sep="")	
+ 	} else {
+ 		colNamesOfTheRest <- groupedDataFrameMean %allColnamesWithoutThisOnes% c(groupBy, colNames$xAxis)
+ 	}
+ 		
+ #alt wenn nur ein Deskriptor übergeben wird
+ #		if(tolower(overallList$diagramTyp) == "nboxplot" || tolower(overallList$diagramTyp) == "boxplot") {
+ #			colNamesOfTheRest <- colOfMean
+ #		} else {
+ #			colNamesOfTheRest <- groupedDataFrameMean %allColnamesWithoutThisOnes% c(groupBy, overallList$xAxis)
+ #		}
+ 		
+ 	colnames(groupedDataFrameMean) <- c(groupBy, colNames$colOfXaxis, colNamesOfTheRest)
+ 	
+ 	if(diagramTyp == "nboxplot") {
+ 		groupedDataFrameSD <- as.data.frame(groupedDataFrame[,lapply(.SD, sd, na.rm=TRUE), by=c(groupBy,colNames$xAxis)])
+ 		colnames(groupedDataFrameSD) <- c(groupBy, colNames$colOfXaxis, paste(colNames$colOfSD,descriptorName, sep=""))
+ 	}
+ 	
+ 	booleanVector <- getBooleanVectorForFilterValues(groupedDataFrameMean, booleanVectorList)
+ 	
+ 	if(diagramTyp == "nboxplot") {
+ 		iniDataSet <- merge(sort=FALSE, groupedDataFrameMean[booleanVector,], groupedDataFrameSD[booleanVector,], by = c(groupBy, colNames$colOfXaxis))
+ 		#overallResult <- buildRowName(iniDataSet,groupBy, descriptorName)
+ 		overallResult <- buildRowName(iniDataSet,groupBy)
+ 		
+ 	} else if(diagramTyp == "boxplot") {
+ 		iniDataSet <- groupedDataFrameMean[booleanVector,]
+ 		#overallResult <- buildRowName(iniDataSet,groupBy, descriptorName)
+ 		overallResult <- buildRowName(iniDataSet,groupBy)
+ 		
+ 	} else {
+ 		iniDataSet <- groupedDataFrameMean[booleanVector,]		
+ 		#buildRowNameDataSet <- buildRowName(iniDataSet, groupBy, descriptorName)
+ 		buildRowNameDataSet <- buildRowName(iniDataSet, groupBy)
+ 		temp <- data.frame()
+ #		count <- 0
+ 		
+ 		for(colNameWichMustBind in buildRowNameDataSet %allColnamesWithoutThisOnes% c(colNames$xAxis, colNames$colName, "primaerTreatment")) {
+ #			count <- count+1
+ 			plot = getPlotNumber(colNameWichMustBind, descriptorList)
+ 			colNameWichMustBindReNamed <- reNameHist(colNameWichMustBind)
+ 	
+ 			if(is.null(buildRowNameDataSet$primaerTreatment)){	
+ 				temp <- rbind(temp,data.frame(hist=rep.int(x=colNameWichMustBindReNamed, times=length(buildRowNameDataSet[,colNameWichMustBind])), values=buildRowNameDataSet[,colNameWichMustBind], xAxis=buildRowNameDataSet[,colNames$colOfXaxis], name=buildRowNameDataSet[,colNames$colName], plot=plot))			
+ 			} else {
+ 				temp <- rbind(temp,data.frame(hist=rep.int(x=colNameWichMustBindReNamed, times=length(buildRowNameDataSet[,colNameWichMustBind])), primaerTreatment=buildRowNameDataSet[,"primaerTreatment"], values=buildRowNameDataSet[,colNameWichMustBind], xAxis=buildRowNameDataSet[,colNames$colOfXaxis], name=buildRowNameDataSet[,colNames$colName], plot = plot))			
+ 			}
+ 		}
+ 		overallResult <- temp		
+ 	}	
+ 
+ 	return(overallResult)
+ }
> 
> setDefaultAxisNames <- function(overallList) {
+ 	overallList$debug %debug% "setDefaultAxisNames()"
+ 	
+ 	if (overallList$xAxisName == "none") {
+ 		overallList$xAxisName <- gsub('[[:punct:]]'," ",overallList$xAxis)
+ 	}
+ #	if (overallList$yAxisName == "none") {
+ #		overallList$yAxisName <- gsub('[[:punct:]]'," ",overallList$descriptor)
+ #	}
+ 	return(overallList)
+ }
> 
> setColorListHist <- function(descriptorList) {
+ 	interval <- seq(0.05,0.95, by=0.1)
+ 	intervalSat <- rep.int(c(0.8,1.0), 5)
+ 	intervalFluo <- seq(0,0.166666666666, by=0.01666666)
+ 	
+ 	if(length(grep("fluo",getVector(descriptorList), ignore.case=TRUE)) > 0) { #rot			
+ 		#colorList <- as.list(rgb(255, seq(256/10/2,255,by=255/10), 255, max = 255))
+ 		#colorList <- as.list(rgb(1, interval, 0, max = 1))
+ 		colorList <- as.list(hsv(h=rev(intervalFluo), s=intervalSat, v=1))
+ 		
+ 	} else if(length(grep("phenol",getVector(descriptorList), ignore.case=TRUE)) > 0) { #gelb
+ 		#colorList <- as.list(rgb(255, rev(seq(256/10/2,255,by=255/10)), 255, max = 255))
+ 		#colorList <- as.list(rgb(1, rev(interval), 0, max = 1))
+ 		colorList <- as.list(hsv(h=intervalFluo, s=intervalSat, v=1))
+ 		
+ 	} else if(length(grep("vis",getVector(descriptorList), ignore.case=TRUE)) > 0) {
+ 		colorList <- as.list(hsv(h=interval, s=1, v=intervalSat))
+ 		
+ 	} else if(length(grep("nir",getVector(descriptorList), ignore.case=TRUE)) > 0) {
+ 		colorList <- as.list(rgb(rev(interval), rev(interval), rev(interval), max = 1))		
+ 	} else {
+ 		return(list(0))
+ 	}
+ 	names(colorList) <- c("0..25", "25..51", "51..76", "76..102", "102..127", "127..153", "153..178", "178..204", "204..229", "229..255")
+ 	return(colorList)
+ }
> 
> setColorList <- function(diagramTyp, descriptorList, overallResult, isGray) {
+ #################	
+ #diagramTyp = "boxplotStacked"
+ #descriptorList = overallList$boxStackDes
+ #isGrey = overallList$isGray
+ #	overallResult=overallList$overallResult_nBoxDes
+ #	diagramTyp = "boxplotStacked"
+ #	descriptorList = overallList$nBoxDes	
+ ##################
+ 	
+ 	if(!as.logical(isGray)) {
+ 		colorVector <- c(brewer.pal(11, "Spectral"))
+ 	} else {
+ 		colorVector <- c(brewer.pal(9, "Greys"))
+ 	}
+ 	
+ 	colorList <- list()
+ 	if(diagramTyp == "nboxplot" || diagramTyp == "boxplot") {
+ 		for(n in names(descriptorList)) {
+ 			if(!is.na(descriptorList[[n]])) {
+ 				colorList[[n]] <- colorRampPalette(colorVector)(length(unique(overallResult$name)))
+ 			} else {
+ 				print("... all values are 'NA'")
+ 			}
+ 		}
+ 	} else {
+ 		for(n in names(descriptorList)) {
+ 			if(!is.na(descriptorList[[n]])) {
+ 				colorList[[n]] <- setColorListHist(descriptorList[n])
+ 			} else {
+ 				print("... all values are 'NA'")
+ 			}
+ 		}
+ 	}
+ 	return(colorList)
+ }
> 
> setColor <- function(overallList) {
+ 	overallList$debug %debug% "setColor()"
+ 	  
+ 	overallList$color_nBox <- setColorList("nboxplot", overallList$nBoxDes, overallList$overallResult_nBoxDes, overallList$isGray)
+ 	overallList$color_box <- setColorList("boxplot", overallList$boxDes, overallList$overallResult_boxDes, overallList$isGray)
+ 	overallList$color_boxStack <- setColorList("boxplotStacked", overallList$boxStackDes, overallList$overallResult_boxStackDes, overallList$isGray)
+ 	return(overallList)
+ }
> 
> normalizeToHundredPercent <-  function(whichRows, overallResult) {
+ 	return(t(apply(overallResult[whichRows,], 1, function(x,y){(100*x)/y}, y=colSums(overallResult[whichRows,]))))
+ }
> 
> writeLatexFile <- function(saveNameLatexFile, saveNameImageFile="", o="") {
+ 	
+ 	saveNameImageFile <- preprocessingOfValues(saveNameImageFile, FALSE, "_")
+ 	saveNameLatexFile <- preprocessingOfValues(saveNameLatexFile, FALSE, "_")
+ 	o <- gsub('[[:punct:]]',"_",o)
+ 	
+ 	latexText <- paste("\\loadImage{",
+ 					   ifelse(saveNameImageFile=="",saveNameLatexFile,saveNameImageFile),
+ 					   ifelse(o=="", "", paste("_",o ,sep="")),
+ 					   ".pdf}", sep="")
+ 	
+ 	write(x=latexText, append=TRUE, file=paste(saveNameLatexFile,"tex",sep="."))
+ 	
+ }
> 
> saveImageFile <- function(overallList, plot, saveName, extraString="") {
+ 	filename <- preprocessingOfValues(paste(saveName,extraString,sep=""), FALSE,replaceString = "_")	
+ 	ggsave (filename=paste(filename,overallList$saveFormat,sep="."), plot = plot, dpi=as.numeric(overallList$dpi))
+ 
+ }
> 
> makeDepthBoxplotDiagram <- function(h, overallList) {
+ 
+ 	overallList$debug %debug% "makeDepthBoxplotDiagram()"
+ 	overallList$symbolParameter <- 15
+ 	
+ 	if (h==1) {
+ 		openImageFile(overallList)
+ 	}
+ 	par(mar=c(4.1,4.1,2.1,2.1))
+ 	plot.depth(as.matrix(overallList$overallResult), plot.type=h, xlabel=overallList$xAxisName, l.width=12, lp.color=overallList$color)
+ 	
+ 	grid()
+ 	if (h==1) {
+ 		dev.off()
+ 	}
+ 	if(overallList$appendix) {
+ 		writeLatexFile("appendixImage", overallList$saveName)
+ 	}
+ 	
+ 	return(overallList)
+ }
> 
> CheckIfOneColumnHasOnlyValues <- function(overallResult, descriptor="", diagramTyp="nboxplot") {	
+ 	
+ 	max <- -1	
+ 	for(index in levels(overallResult$name)){
+ 		if(diagramTyp == "nboxplot" || diagramTyp == "boxplot") {
+ 			temp <- sum(!is.na(overallResult$mean[overallResult$name == index]))
+ 		} else {
+ 			boolVec <- overallResult$name == index
+ 			temp <- sum(!is.na(overallResult[boolVec,descriptor]))
+ 		}
+ 		max <- ifelse(temp > max, temp, max)
+ 	}
+ 		
+ 	return(ifelse(max == 1,TRUE, FALSE))
+ }
> 
> 
> buildMyStats <- function(values, means, se) {
+ 	means <- as.data.frame(as.vector(means))
+ 	colnames(means) <- "means"
+ 	
+ 	se <- as.data.frame(as.vector(se))
+ 	colnames(se) <- "se"
+ 
+ 	return(data.frame(value=values,means=means, se=se))
+ }
> 
> buildMyStats2 <- function(values, means, se, rowName) {
+ 	means <- as.data.frame(as.vector(means))
+ 	colnames(means) <- "means"
+ 	
+ 	rowName <- as.data.frame(as.vector(rowName))
+ 	colnames(rowName) <- Name
+ 	
+ 	se <- as.data.frame(as.vector(se))
+ 	colnames(se) <- "se"
+ 	
+ 	return(data.frame(value=values,means=means, se=se, rowName=rowName))
+ }
> 
> reduceOverallResult <- function(tempOverallList, imagesIndex) {
+ 	tempOverallList$debug %debug% "reduceOverallResult()"
+ 
+ 	workingDataSet <- buildDataSet(tempOverallList$overallResult[,1:2], tempOverallList, c("mean", "se"), imagesIndex)
+ 	colnames(workingDataSet) <- c(colnames(workingDataSet)[1:2], "mean", "se")
+ 	return(workingDataSet)	
+ }
> 
> 
> reduceWholeOverallResultToOneValue <- function(tempOverallResult, imagesIndex, debug, diagramTyp="nboxplot") {
+ 	debug %debug% "reduceWholeOverallResultToOneValue()"
+ 	
+ 	if(diagramTyp == "boxplotstacked") {
+ 		
+ 		workingDataSet <- tempOverallResult[tempOverallResult$plot == imagesIndex,]
+ 		workingDataSet$hist <- factor(workingDataSet$hist, unique(workingDataSet$hist))
+ 		
+ 	} else {
+ 		colNames <- vector()
+ 		if(diagramTyp == "nboxplot" || diagramTyp == "barplot") {
+ 			colNames <- c("mean", "se")
+ 		} else if(diagramTyp == "boxplot") {
+ 			colNames <- c("value")
+ 		} 
+ 		
+ 		standardColumnName <- c("name", "primaerTreatment", "xAxis")
+ 		
+ 		workingDataSet <- buildDataSet(tempOverallResult[,standardColumnName], tempOverallResult, colNames, imagesIndex)
+ 		colnames(workingDataSet) <- c(standardColumnName, colNames)
+ 	}
+ 	return(workingDataSet)	
+ }
> 
> 
> makeLinearDiagram <- function(h, overallResult, overallDescriptor, overallColor, overallDesName, overallSaveName, overallList) {
+ ########################		
+ #	h=h 
+ #	overallResult = overallList$overallResult_nBoxDes
+ #	overallColor=overallList$color_nBox
+ ##	debug = overallList$debug
+ #	overallDescriptor = overallList$nBoxDes
+ #	overallDesName = overallList$nBoxDesName
+ #########################
+ 	
+ 	overallList$debug %debug% "makeLinearDiagram()"	
+ 	
+ 	tempOverallResult <-  overallResult
+ 	
+ 	for(imagesIndex in names(overallDescriptor)) {
+ 		if(!is.na(overallDescriptor[[imagesIndex]])) {
+ 			print(paste("... images",imagesIndex))
+ 			overallResult <- reduceWholeOverallResultToOneValue(tempOverallResult, imagesIndex, overallList$debug, "nboxplot")
+ 			
+ 			if(!CheckIfOneColumnHasOnlyValues(overallResult)) {	
+ 		
+ 	#			myDataSet <- data.frame(name=c("normal","wet","dry","normal","wet","dry","normal","wet","dry"), 
+ 	#									xAxis=c(6,6,6,8,8,8,10,10,10),		
+ 	#									mean=c(4883,6224,4630,6047,5790,7758,7349,7778,9725), 
+ 	#									se=c(1515,1190,1670,1831,2013,1318,2387,2182,1499))
+ 						
+ 				plot <-	ggplot(data=overallResult, aes(x=xAxis, y=mean, shape=name)) +
+ 						#geom_smooth(aes(ymin=mean-se, ymax=mean+se, colour=name, fill=name), stat="identity", alpha=0.1) +
+ 						geom_ribbon(aes(ymin=mean-se, ymax=mean+se, fill=name), stat="identity", alpha=0.1) +
+ 						geom_line(aes(color=name), alpha=0.2) +
+ 						geom_point(aes(color=name), size=3) +
+ 						scale_x_continuous(name=overallList$xAxisName, minor_breaks = min(overallResult$xAxis):max(overallResult$xAxis)) +
+ 						ylab(overallDesName[[imagesIndex]]) +
+ 						scale_fill_manual(values = overallColor[[imagesIndex]]) +
+ 						scale_colour_manual(values= overallColor[[imagesIndex]]) +
+ 						scale_shape_manual(values = c(1:length(overallColor[[imagesIndex]]))) +
+ 						theme_bw() +
+ 						opts(axis.title.x = theme_text(face="bold", size=11),
+ 								axis.title.y = theme_text(face="bold", size=11, angle=90),
+ 								#panel.grid.major = theme_blank(), # switch off major gridlines
+ 								#panel.grid.minor = theme_blank(), # switch off minor gridlines
+ 								legend.position = "right", # manually position the legend (numbers being from 0,0 at bottom left of whole plot to 1,1 at top right)
+ 								legend.title = theme_blank(), # switch off the legend title						
+ 								#legend.key.size = unit(1.5, "lines"),
+ 								legend.key = theme_blank(), # switch off the rectangle around symbols in the legend
+ 								panel.border = theme_rect(colour="Grey", size=0.1)
+ 						)
+ 				
+ 				if(length(overallColor[[imagesIndex]]) > 25) {
+ 					plot <- plot + opts(legend.text = theme_text(size=6),
+ 										legend.key.size = unit(0.7, "lines")
+ 										)
+ 				} else {
+ 					plot <- plot + opts(legend.text = theme_text(size=11))
+ 				}
+ 								
+ 	#			print(plot)
+ 		
+ 		##!# nicht löschen, ist die interpolation (alles in dieser if Abfrage mit #!# makiert)
+ 		##!#				newCoords <- seq(min(overallList$filterXaxis,na.rm=TRUE),max(overallList$filterXaxis,na.rm=TRUE),1)
+ 		##!#				newValue <- approx(overallList$filterXaxis, overallList$overallResult[y,],xout=newCoords,method="linear")
+ 		##!#				
+ 		##!#				naVector <- is.na(overallList$overallResult[y,])
+ 		##!#				overallResultWithNaValues <- overallList$overallResult[y,]
+ 		##!#				overallList$overallResult[y,naVector] <- newValue$y[overallList$filterXaxis[naVector]]
+ 		#				
+ 		#				if (firstPlot) {
+ 		#					firstPlot <- FALSE
+ 		##!#				plot(overallList$filterXaxis, overallList$overallResult[y,], main="", type="c", xlab=overallList$xAxisName, col=overallList$color[y], ylab=overallList$yAxisName, pch=y, lty=1, lwd=3, ylim=c(min(overallList$overallResult,na.rm=TRUE),max(overallList$overallResult,na.rm=TRUE)))
+ 		#					plot(overallList$filterXaxis, overallList$overallResult[y,], main="", type="b", xlab=overallList$xAxisName, col=overallList$color[y], ylab=overallList$yAxisName, pch=y, lty=1, lwd=3, ylim=c(min(overallList$overallResult,na.rm=TRUE),max(overallList$overallResult,na.rm=TRUE)))
+ 		#				} else {
+ 		##!#				points(overallList$filterXaxis, overallList$overallResult[y,], type="c", col=overallList$color[y], pch=y, lty=1, lwd=3 )	
+ 		#					points(overallList$filterXaxis, overallList$overallResult[y,], type="b", col=overallList$color[y], pch=y, lty=1, lwd=3 )
+ 		#				}
+ 		##!#				points(overallList$filterXaxis, overallResultWithNaValues, type="p", col=overallList$color[y], pch=y, lty=1, lwd=3 )
+ 		#			} 
+ 		
+ 				if(h==1) {
+ 					saveImageFile(overallList, plot, overallSaveName[[imagesIndex]], "nboxplot")
+ 				} else {
+ 					print(plot)
+ 				}
+ 				if(overallList$appendix) {
+ 					writeLatexFile("appendixImage", overallSaveName[[imagesIndex]], "nboxplot")
+ 				}
+ 			
+ 			} else {
+ 				print("... only one column has values, so it will be plot as barplot!")
+ 		
+ 				day <- overallResult$xAxis[!is.na(overallResult$mean)][1]
+ 				overallList$xAxisName <- paste(overallList$xAxisName,day)
+ 				#overallList$overallResult <- overallList$overallResult[!is.na(overallList$overallResult$mean),]
+ 				overallList <- makeBarDiagram(h, overallResult, overallDescriptor, overallColor, overallDesName, overallSaveName, overallList, TRUE)
+ 			}
+ 		}
+ 	}
+ 	#return(overallList)
+ }
> 
> getColor <- function(overallColorIndex, overallResult) {
+ 	input <- as.vector(unique(overallResult$hist))
+ 	
+ 	color <- vector()
+ 	for(n in input) {
+ 		color <- c(color, overallColorIndex[[n]])
+ 	}
+ 	return(color)
+ }
> 
> 
> plotStackedImage <- function(h, overallList, overallResult, title = "", makeOverallImage = FALSE, legende=TRUE, minor_breaks=TRUE, overallColor, overallDesName, imagesIndex, overallSaveName) {
+ 	overallList$debug %debug% "plotStackedImage()"	
+ 		
+ 	if(length(overallResult[,1]) > 0) {
+ 
+ 		if(length(overallList$stackedBarOptions$typOfGeomBar) == 0) {
+ 			overallList$stackedBarOptions$typOfGeomBar <- c("fill")
+ 		}
+ 		
+ 		for(positionTyp in overallList$stackedBarOptions$typOfGeomBar) {
+ 		
+ 		
+ 			plot <- ggplot(overallResult, aes(xAxis, values, fill=hist)) + 
+ 					geom_bar(stat="identity", position = positionTyp) +
+ 				 	ylab(overallDesName[[imagesIndex]]) 
+ 					#coord_cartesian(ylim=c(0,1)) +
+ 				
+ 			if(minor_breaks) {
+ 				plot <- plot + scale_x_continuous(name=overallList$xAxisName, minor_breaks = min(overallResult$xAxis):max(overallResult$xAxis))
+ 			} else {
+ 				plot <- plot + xlab(overallList$xAxisName)
+ 			}
+ 					
+ 			plot <- plot +		
+ 					scale_fill_manual(values = getColor(overallColor[[imagesIndex]], overallResult), name="") +
+ 					theme_bw() +
+ 					opts(axis.title.x = theme_text(face="bold", size=11),
+ 							axis.title.y = theme_text(face="bold", size=11, angle=90),
+ 							plot.margin = unit(c(0.1, 0.1, 0, 0), "cm"),
+ 							#panel.background = theme_rect(linetype = "dotted"),
+ 							panel.border = theme_rect(colour="Grey", size=0.1),
+ 							strip.background = theme_rect(colour=NA)
+ 	#						plot.title = theme_text(size=10),
+ 	#						plot.title = theme_rect(colour="Pink", size=0.1),
+ 					) 
+ 			
+ 			if(!legende) {
+ 				plot <- plot + opts(legend.position="none")
+ 			} else {
+ 				plot <- plot + opts(legend.position="right", 
+ 									legend.title = theme_blank(),
+ 									legend.text = theme_text(size=11),
+ 									legend.key = theme_blank())
+ 			}
+ 			
+ 			if(title != "") {
+ 				plot <- plot + opts(title = title)
+ 			}
+ 			
+ 			if(!minor_breaks) {
+ 				plot <- plot + opts(panel.grid.minor = theme_blank())
+ 			}
+ 			
+ 			if(makeOverallImage) {
+ 				#plot <- plot + facet_wrap(~ name, drop=TRUE)
+ 				plot <- plot + facet_wrap(~ name)
+ 			}
+ 			
+ 			if (h==1) {
+ 				saveImageFile(overallList, plot, overallSaveName[[imagesIndex]], paste("overall", title, positionTyp, sep=""))
+ 				if(makeOverallImage) {
+ 					writeLatexFile(paste(overallSaveName[[imagesIndex]], "stackedOverallImage", sep=""), paste(overallSaveName[[imagesIndex]],"overall",title, positionTyp, sep=""))	
+ 				} else {
+ 					writeLatexFile(overallSaveName[[imagesIndex]], paste(overallSaveName[[imagesIndex]],"overall",title,positionTyp, sep=""))	
+ 				}
+ 			} else {
+ 				print(plot)
+ 			}
+ 		}
+ 	}
+ }
> 
> PreWorkForMakeBigOverallImage <- function(h, overallResult, overallDescriptor, overallColor, overallDesName, overallSaveName, overallList, imagesIndex) {
+ 	overallList$debug %debug% "PreWorkForMakeBigOverallImage()"	
+ 	
+ 	groupBy <- groupByFunction(list(overallList$treatment, overallList$secondTreatment))
+ 	if(length(groupBy) == 0 || length(groupBy) == 1) {
+ 		plotStackedImage(h = h, overallList = overallList, overallResult = overallResult, makeOverallImage = TRUE, legende=TRUE, minor_breaks=FALSE, overallColor = overallColor, overallDesName = overallDesName, imagesIndex= imagesIndex, overallSaveName =overallSaveName)
+ 		
+ 	} else {
+ 		for(value in overallList$filterSecondTreatment) {
+ 			title <- value
+ 			plottedName <- overallList$filterTreatment %contactAllWithAll% value
+ 			booleanVector <- getBooleanVectorForFilterValues(overallResult, list(name = plottedName))
+ 			plotThisValues <- overallResult[booleanVector,]
+ 			plotThisValues <- reNameColumn(plotThisValues, "name", "primaerTreatment")
+ 			plotStackedImage(h, overallList, plotThisValues, title = title, makeOverallImage = TRUE,  legende=TRUE, minor_breaks=FALSE, overallColor = overallColor, overallDesName = overallDesName, imagesIndex=imagesIndex, overallSaveName=overallSaveName)
+ 		}	 
+ 	}
+ }
> 
> PreWorkForMakeNormalImages <- function(h, overallList) {
+ 	overallList$debug %debug% "PreWorkForMakeNormalImages()"
+ 	stackedImages <- unlist(unique(overallList$overallResult["name"]))
+ 	
+ 	for(o in stackedImages) {
+ 		overallList$debug %debug% paste("makeBoxplotStackedDiagram with the descriptor: ",overallList$saveName,o)
+ 		plotThisValues <- overallList$overallResult[overallList$overallResult["name"] == o,]
+ 		plotStackedImage(h, overallList, plotThisValues, o, FALSE, TRUE, TRUE)
+ 	}
+ }
> 
> 
> makeBoxplotStackedDiagram <- function(h, overallResult, overallDescriptor, overallColor, overallDesName, overallSaveName, overallList) {
+ 	########################		
+ #	h=h
+ #	overallResult=overallList$overallResult_boxStackDes
+ #	overallDescriptor=overallList$boxStackDes
+ #	overallColor=overallList$color_boxStack
+ #	overallDesName=overallList$boxStackDesName
+ #	overallList=overallList
+ #	overallSaveName = overallList$saveName_nBoxDes
+ 	#########################
+ 
+ 
+ 	
+ 	
+ 	overallList$debug %debug% "makeBoxplotStackedDiagram()"
+ 	overallResult[is.na(overallResult)] <- 0
+ 	tempOverallResult <- overallResult
+ 	
+ 	for(imagesIndex in names(overallDescriptor)) {
+ 		
+ 		overallResult <- reduceWholeOverallResultToOneValue(tempOverallResult, imagesIndex, overallList$debug, "boxplotstacked")
+ 	
+ 		PreWorkForMakeBigOverallImage(h, overallResult, overallDescriptor, overallColor, overallDesName, overallSaveName, overallList, imagesIndex)
+ 		#PreWorkForMakeNormalImages(h,overallList)
+ 	}
+ 	#return(overallList)
+ }	
> 
> makeBarDiagram <- function(h, overallResult, overallDescriptor, overallColor, overallDesName, overallSaveName, overallList, isOnlyOneValue = FALSE) {
+ 	########################		
+ #	h=h 
+ #	overallResult = overallList$overallResult_nBoxDes
+ #	overallColor=overallList$color_nBox
+ ##	debug = overallList$debug
+ #	overallDescriptor = overallList$nBoxDes
+ #	overallDesName = overallList$nBoxDesName
+ #	isOnlyOneValue = FALSE
+ 	#########################
+ 
+ 	overallList$debug %debug% "makeBarDiagram()"
+ 
+ 	tempOverallResult <-  overallResult
+ 	
+ 	for(imagesIndex in names(overallDescriptor)) {
+ 		if(!is.na(overallDescriptor[[imagesIndex]])) {
+ 			overallResult <- reduceWholeOverallResultToOneValue(tempOverallResult, imagesIndex, overallList$debug, "barplot")
+ 			overallResult <- overallResult[!is.na(overallResult$mean),]
+ 			
+ 			if(isOnlyOneValue) {
+ 				myPlot <- ggplot(data=overallResult, aes(x=name, y=mean))
+ 			} else {
+ 				myPlot <- ggplot(data=overallResult, aes(x=xAxis, y=mean))
+ 			}
+ 			
+ 			myPlot <- myPlot + 						
+ 					geom_bar(stat="identity", aes(fill=name), colour="Grey", size=0.1) +
+ 					geom_errorbar(aes(ymax=mean+se, ymin=mean-se), width=0.2, colour="black")+
+ 					#geom_errorbar(aes(ymax=mean+se, ymin=mean-se), width=0.5, colour="Pink")+
+ 					ylab(overallDesName[[imagesIndex]]) +
+ 					coord_cartesian(ylim=c(0,max(overallResult$mean + overallResult$se + 10,na.rm=TRUE))) +
+ 					xlab(overallList$xAxisName) +
+ 					scale_fill_manual(values = overallColor[[imagesIndex]]) +
+ 					theme_bw() +
+ 					opts(legend.position="none",
+ 							plot.margin = unit(c(0.1, 0.1, 0, 0), "cm"),
+ 							axis.title.x = theme_text(face="bold", size=11),
+ 							axis.title.y = theme_text(face="bold", size=11, angle=90),
+ 							panel.grid.minor = theme_blank(),
+ 							panel.border = theme_rect(colour="Grey", size=0.1)
+ 					)
+ 			
+ 			if(length(overallColor[[imagesIndex]]) > 10) {
+ 				myPlot <- myPlot + opts(axis.text.x = theme_text(size=6, angle=90))
+ 			}
+ 			print(myPlot)
+ 			
+ 			if (h==1) {
+ 				saveImageFile(overallList, myPlot, overallSaveName[[imagesIndex]], "barplot")
+ 			} else {
+ 				print(myPlot)
+ 			}
+ 			if(overallList$appendix) {
+ 				writeLatexFile("appendixImage", overallSaveName[[imagesIndex]], "barplot")
+ 			}
+ 		}
+ 	}
+ 	#return(overallList)
+ }
> 
> ##Problem: der median wird nicht angezeigt!
> makeBoxplotDiagram <- function(h, overallResult, overallDescriptor, overallColor, overallDesName, overallSaveName, overallList) {
+ 	########################		
+ #	h=h 
+ #	overallResult = overallList$overallResult_boxDes
+ #	overallColor=overallList$color_box
+ ##	debug = overallList$debug
+ #	overallDescriptor = overallList$boxDes
+ #	overallDesName = overallList$boxDesName
+ 	#########################
+ 	
+ 	overallList$debug %debug% "makeBoxplotDiagram()"
+ 	#overallList$overallResult <- overallList$overallResult[!is.na(overallList$overallResult$mean),]
+ 
+ 	tempOverallResult <-  overallResult
+ 	
+ 	for(imagesIndex in names(overallDescriptor)) {
+ 		if(!is.na(overallDescriptor[[imagesIndex]])) {
+ 			overallResult <- reduceWholeOverallResultToOneValue(tempOverallResult, imagesIndex, overallList$debug, "boxplot")
+ 			
+ 			
+ 			#myPlot <- ggplot(overallList$overallResult, aes(factor(name), value, fill=name, colour=name)) + 
+ 			myPlot <- ggplot(overallResult, aes(factor(name), value, fill=name)) +
+ 					geom_boxplot() +
+ 					ylab(overallDesName[[imagesIndex]]) +
+ 					#coord_cartesian(ylim=c(0,max(overallList$overallResult$mean + overallList$overallResult$se + 10,na.rm=TRUE))) +
+ 					xlab(overallList$xAxisName) +
+ 					scale_fill_manual(values = overallColor[[imagesIndex]]) +
+ 					#stat_summary(fun.data = f, geom = "crossbar", height = 0.1,	colour = NA, fill = "skyblue", width = 0.8, alpha = 0.5) +
+ 					theme_bw() +
+ 					opts(legend.position="none",
+ 							plot.margin = unit(c(0.1, 0.1, 0, 0), "cm"),
+ 							axis.title.x = theme_text(face="bold", size=11),
+ 							axis.title.y = theme_text(face="bold", size=11, angle=90),
+ 							panel.grid.minor = theme_blank(),
+ 							panel.border = theme_rect(colour="Grey", size=0.1)
+ 					)
+ 		
+ 			if(length(overallColor[[imagesIndex]]) > 10) {
+ 				myPlot <- myPlot + opts(axis.text.x = theme_text(size=6, angle=90))
+ 			}	
+ 			
+ 	#		print(myPlot)
+ 			
+ 			if (h==1) {
+ 				saveImageFile(overallList, myPlot, overallSaveName[[imagesIndex]], "boxplot")
+ 			} else {
+ 				print(myPlot)
+ 			}
+ 			if(overallList$appendix) {
+ 				writeLatexFile("appendixImage", overallSaveName[[imagesIndex]], "boxplot")
+ 			}
+ 		}
+ 	}
+ 	#return(overallList)
+ }
> 
> makeDiagrams <- function(overallList) {
+ 	overallList$debug %debug% "makeDiagrams()"
+ 	durchlauf <- ifelse(overallList$showResultInR, 2, 1)
+ 	
+ 	for(h in 1:durchlauf) {
+ 
+ 		if(sum(!is.na(overallList$nBoxDes)) > 0) {
+ 			if(overallList$debug) {print("... nBoxplot")}	
+ 			makeLinearDiagram(h, overallList$overallResult_nBoxDes, overallList$nBoxDes, overallList$color_nBox, overallDesName=overallList$nBoxDesName, overallList$saveName_nBoxDes ,overallList)
+ 		} else {
+ 			print("... all in nBoxplot is 'NA'")
+ 		}
+ 		
+ 		if(sum(!is.na(overallList$boxDes)) > 0) {
+ 			if(overallList$debug) {print("... Boxplot")}
+ 			makeBoxplotDiagram(h, overallList$overallResult_boxDes, overallList$boxDes, overallList$color_box, overallDesName=overallList$boxDesName, overallList$saveName_boxDes, overallList)
+ 		} else {
+ 			print("... all in Boxplot is 'NA'")
+ 		}
+ 		
+ 		if(sum(!is.na(overallList$boxStackDes)) > 0) {
+ 			if(overallList$debug) {print("... stacked Boxplot")}
+ 			makeBoxplotStackedDiagram(h, overallList$overallResult_boxStackDes, overallList$boxStackDes, overallList$color_boxStack, overallDesName=overallList$boxStackDesName, overallList$saveName_boxStackDes, overallList)
+ 		} else {
+ 			print("... all in stacked Boxplot is 'NA'")
+ 		}
+ 		
+ 		if(FALSE) {	# falls auch mal barplots erstellt werden sollen (ausser wenn nur ein Tag vorhanden ist!)
+ 			if(overallList$debug) {print("... Barplot")}
+ 			makeBarDiagram(h, overallList$overallResult_nBoxDes, overallList$nBoxDes, overallList$color_nBox, overallDesName=overallList$nBoxDesName, overallList$saveName_nBoxDes, overallList)
+ 		}
+ 	}
+ }
> 
> #makeDiagrams <- function(overallList) {
> #	overallList$debug %debug% "makeDiagrams()"
> #	durchlauf <- ifelse(overallList$showResultInR, 2, 1)
> #	
> #	for(h in 1:durchlauf) {
> #						
> #		if (tolower(overallList$diagramTyp) == "boxplot") {
> #			overallList <- makeBoxplotDiagram(h, overallList)
> #			
> #		} else if (tolower(overallList$diagramTyp) == "boxplotstacked") {
> #			overallList <- makeBoxplotStackedDiagram(h, overallList)
> #			
> #		} else if(tolower(overallList$diagramTyp) == "nboxplot"){
> #			overallList <- makeLinearDiagram(h, overallList)
> #			
> #		}  else if (tolower(overallList$diagramTyp) == "barplot") {
> #			overallList <- makeBarDiagram(h, overallList)
> #		} else {
> #			print("Error - overallList$diagramTyp is undefined!")
> #		}
> #	}
> #}
> 
> checkIfAllNecessaryFilesAreThere <- function() {
+ 		print("... check if the noValues-Image is there")
+ 		file <- "noValues.pdf"
+ 		if(!file.exists(file)){
+ 			library("Cairo")
+ 			print(paste("... create defaultImage '",file,"'",sep=""))
+ 			Cairo(width=900, height=70,file=file,type="pdf",bg="transparent",units="px",dpi=90)
+ 			par(mar = c(0,0,0,0))
+ 			plot.new()
+ 			legend("left", "no values", col= c("black"), pch=1, bty="n")
+ 			dev.off()
+ 		}	
+ }
> 
> buildBlacklist <- function(workingDataSet, descriptorSet) {
+ 	
+ 	searchString <- ".histogram."
+ 	searchString <- paste(searchString,"mark",sep = "|")	
+ 	additionalDescriptors <- c(descriptorSet, "Day (Int)","Day","Time", "Plant ID", "vis.side", "fluo.side", "nir.side", "vis.top", "fluo.top", "nir.top")
+ 	
+ 	return(c(colnames(workingDataSet)[grep(searchString,colnames(workingDataSet), ignore.case = TRUE)], preprocessingOfValues(additionalDescriptors, TRUE)))
+ }
> 
> initRfunction <- function(DEBUG = FALSE){
+ 	
+ 	if(DEBUG) {
+ 		
+ 		options(error = quote({
+ 			#sink(file="error.txt", split = TRUE);
+ 			dump.frames();
+ 			print(attr(last.dump,"error.message"));
+ 			#x <- attr(last.dump,"error.message")
+ 			traceback();
+ 			#sink(file=NULL);		
+ 			#q()
+ 		}))
+ 	} else {	
+ 		options(error = NULL)
+ 	}
+ 	memory.limit(size=3500)
+ 
+ 	while(!is.null(dev.list())) {
+ 		dev.off()
+ 	}
+ }
> typOfStartOptions = "test"
> 	typOfStartOptions <- tolower(typOfStartOptions)
> 	
> 	args <- commandArgs(TRUE)
> 	print("#### Arguments")
[1] "#### Arguments"
> 	print(args)
character(0)
> 	print("####")
[1] "####"
> 	
> 	saveFormat <- "pdf"	
> 	dpi <- "150" ##90
> 	
> 	isGray <- FALSE
> 	showResultInR <- FALSE
> 	
> 	treatment <- "Treatment"
> 	filterTreatment <- "none"
> 	
> 	secondTreatment <- "none"
> 	filterSecondTreatment <- "none"
> 	
> 	xAxis <- "Day (Int)" 
> 	xAxisName <- "DAS"
> 	filterXaxis <- "none"
> 	
> #	diagramTypVector <- vector()
> 	descriptorSet <- vector()
> 	descriptorSetName <- vector()
> 	
> 	fileName <- "error"
> 
> 	appendix <- FALSE
> 	#appendix <- TRUE
> 	
> 	separation <- ";"
> #	if (length(args) < 1) {
> #		englischVersion <- FALSE
> #		#englischVersion <- TRUE
> #	} else {
> #		englischVersion <- TRUE
> #	}
> 
> 	if (typOfStartOptions == "all" | typOfStartOptions == "report" | typOfStartOptions == "allmanual") {
+ 
+ 		if (typOfStartOptions != "allmanual") {
+ 			fileName <- fileName %exists% args[1]
+ 		} else {
+ 			fileName <- "numeric_data.MaizeAnalysisAction_ 1116BA_new3.csv"
+ 			#fileName <- "report.csv" ## englischVersion <- TRUE setzen!!
+ 			#fileName <- "testDataset3.csv"
+ 		}
+ 		
+ 		if (fileName != "error") {
+ 			workingDataSet <- separation %getData% fileName
+ 			
+ 			if(workingDataSet != "error") {
+ 				#nboxplot
+ 				if (typOfStartOptions == "all") {
+ 					descriptorSet_nBoxplot <- colnames(workingDataSet)
+ 					descriptorSetName_nBoxplot <- descriptorSet
+ 					
+ 				} else { #Report	
+ 					descriptorSet_nBoxplot <- c("Weight A (g)","Weight B (g)","Water (weight-diff)","side.height.norm (mm)","side.width.norm (mm)","side.area.norm (mm^2)", "top.area.norm (mm^2)",
+ 							"side.fluo.intensity.chlorophyl.average (relative)","side.fluo.intensity.phenol.average (relative)",
+ 							"side.nir.intensity.average (relative)","side.leaf.count.median (leafs)","side.bloom.count (tassel)",
+ 							"side.leaf.length.sum.norm.max (mm)", "volume.fluo.iap","volume.iap (px^3)", "volume.iap_max", "volume.lt (px^3)",
+ 							"volume.iap.wue", "side.nir.wetness.plant_weight_drought_loss", "top.nir.wetness.plant_weight_drought_loss", "side.nir.wetness.av", "top.nir.wetness.av",
+ 							"side.area.relative", "side.height.norm.relative", "side.width.norm.relative", "top.area.relative", "side.area.relative", "volume.iap.relative",
+ 							"side.height (mm)","side.width (mm)","side.area (px)", "top.area (px)")
+ 				
+ 					descriptorSetName_nBoxplot <- c("weight before watering (g)","weight after watering (g)", "water weight (g)", "normalized height (mm)", "normalized width (mm)", "normalized side area (mm^2)", "normalized top area (mm^2)",
+ 							"chlorophyl intensity (relative intensity/pixel)", "fluorescence intensity (relative intensity/pixel)", "nir intensity (relative intensity/pixel)",
+ 							"number of leafs (leaf)", "number of tassels (tassel)", "length of leafs plus stem (mm)", "volume based on FLUO (IAP) (px^3)", "volume based on RGB (IAP) (px^3)", "volume based on max RGB-image (IAP) (px^3)", "volume based on RGB (LemnaTec) (px^3)",
+ 							"volume based water use efficiency", "weighted loss through drought stress (side)", "weighted loss through drought stress (top)", "Average wetness of side image", "Average wetness of top image",
+ 							"relative projected side area (%)", "relative plant height (%)", "relative plant width (%)", "relative projected top area (%)", "relative projected side area (%)", "relative volume (IAP based formular - RGB) (%)",
+ 							"height (px)", "width (px)", "side area (px)", "top area (px)")		
+ 				}
+ 	
+ 				nBoxOptions= NULL
+ 				#diagramTypVector <- rep.int("nboxplot", times=length(descriptorSetName))
+ 		
+ 		
+ 				#boxplot
+ 				descriptorSet_boxplot <- c("side.height.norm (mm)","side.width.norm (mm)","side.area.norm (mm^2)", "top.area.norm (mm^2)",
+ 						"volume.fluo.iap","volume.iap (px^3)", "volume.iap_max", "volume.lt (px^3)",
+ 						"side.height (mm)","side.width (mm)","side.area (px)", "top.area (px)")
+ 				
+ 				descriptorSetName_boxplot <- c("normalized height (mm)", "normalized width (mm)", "normalized side area (mm^2)", "normalized top area (mm^2)",
+ 						"volume based on FLUO (IAP) (px^3)", "volume based on RGB (IAP) (px^3)", "volume based on max RGB-image (IAP) (px^3)", "volume based on RGB (LemnaTec) (px^3)",
+ 						"height (px)", "width (px)", "side area (px)", "top area (px)")	
+ 				
+ 				boxOptions= NULL
+ 				#diagramTypVectorBox <- rep.int("boxplot", times=length(descriptorSetBox))
+ 				
+ 				#descriptorSet <- c(descriptorSet, descriptorSetBox)
+ 				#descriptorSetName <- c(descriptorSetName, descriptorSetNameBox)
+ 				#diagramTypVector <- c(diagramTypVector, diagramTypVectorBox)
+ 				
+ 				#boxplotStacked
+ 				descriptorSet_boxplotStacked <- c("side.nir.normalized.histogram.bin.1.0_25$side.nir.normalized.histogram.bin.2.25_51$side.nir.normalized.histogram.bin.3.51_76$side.nir.normalized.histogram.bin.4.76_102$side.nir.normalized.histogram.bin.5.102_127$side.nir.normalized.histogram.bin.6.127_153$side.nir.normalized.histogram.bin.7.153_178$side.nir.normalized.histogram.bin.8.178_204$side.nir.normalized.histogram.bin.9.204_229$side.nir.normalized.histogram.bin.10.229_255",
+ 								   				  "side.fluo.histogram.bin.1.0_25$side.fluo.histogram.bin.2.25_51$side.fluo.histogram.bin.3.51_76$side.fluo.histogram.bin.4.76_102$side.fluo.histogram.bin.5.102_127$side.fluo.histogram.bin.6.127_153$side.fluo.histogram.bin.7.153_178$side.fluo.histogram.bin.8.178_204$side.fluo.histogram.bin.9.204_229$side.fluo.histogram.bin.10.229_255",
+ 										  		  "top.nir.histogram.bin.1.0_25$top.nir.histogram.bin.2.25_51$top.nir.histogram.bin.3.51_76$top.nir.histogram.bin.4.76_102$top.nir.histogram.bin.5.102_127$top.nir.histogram.bin.6.127_153$top.nir.histogram.bin.7.153_178$top.nir.histogram.bin.8.178_204$top.nir.histogram.bin.9.204_229$top.nir.histogram.bin.10.229_255",
+ 												  "side.fluo.histogram.phenol.bin.1.0_25$side.fluo.histogram.phenol.bin.2.25_51$side.fluo.histogram.phenol.bin.3.51_76$side.fluo.histogram.phenol.bin.4.76_102$side.fluo.histogram.phenol.bin.5.102_127$side.fluo.histogram.phenol.bin.6.127_153$side.fluo.histogram.phenol.bin.7.153_178$side.fluo.histogram.phenol.bin.8.178_204$side.fluo.histogram.phenol.bin.9.204_229$side.fluo.histogram.phenol.bin.10.229_255",
+ 												  "side.fluo.histogram.ratio.bin.1.0_25$side.fluo.histogram.ratio.bin.2.25_51$side.fluo.histogram.ratio.bin.3.51_76$side.fluo.histogram.ratio.bin.4.76_102$side.fluo.histogram.ratio.bin.5.102_127$side.fluo.histogram.ratio.bin.6.127_153$side.fluo.histogram.ratio.bin.7.153_178$side.fluo.histogram.ratio.bin.8.178_204$side.fluo.histogram.ratio.bin.9.204_229$side.fluo.histogram.ratio.bin.10.229_255",
+ 												  "side.nir.normalized.histogram.bin.1.0_25$side.nir.normalized.histogram.bin.2.25_51$side.nir.normalized.histogram.bin.3.51_76$side.nir.normalized.histogram.bin.4.76_102$side.nir.normalized.histogram.bin.5.102_127$side.nir.normalized.histogram.bin.6.127_153$side.nir.normalized.histogram.bin.7.153_178$side.nir.normalized.histogram.bin.8.178_204$side.nir.normalized.histogram.bin.9.204_229$side.nir.normalized.histogram.bin.10.229_255",
+ 												  "side.fluo.normalized.histogram.bin.1.0_25$side.fluo.normalized.histogram.bin.2.25_51$side.fluo.normalized.histogram.bin.3.51_76$side.fluo.normalized.histogram.bin.4.76_102$side.fluo.normalized.histogram.bin.5.102_127$side.fluo.normalized.histogram.bin.6.127_153$side.fluo.normalized.histogram.bin.7.153_178$side.fluo.normalized.histogram.bin.8.178_204$side.fluo.normalized.histogram.bin.9.204_229$side.fluo.normalized.histogram.bin.10.229_255",
+ 												  "side.fluo.normalized.histogram.phenol.bin.1.0_25$side.fluo.normalized.histogram.phenol.bin.2.25_51$side.fluo.normalized.histogram.phenol.bin.3.51_76$side.fluo.normalized.histogram.phenol.bin.4.76_102$side.fluo.normalized.histogram.phenol.bin.5.102_127$side.fluo.normalized.histogram.phenol.bin.6.127_153$side.fluo.normalized.histogram.phenol.bin.7.153_178$side.fluo.normalized.histogram.phenol.bin.8.178_204$side.fluo.normalized.histogram.phenol.bin.9.204_229$side.fluo.normalized.histogram.phenol.bin.10.229_255",
+ 												  "side.fluo.normalized.histogram.ratio.bin.1.0_25$side.fluo.normalized.histogram.ratio.bin.2.25_51$side.fluo.normalized.histogram.ratio.bin.3.51_76$side.fluo.normalized.histogram.ratio.bin.4.76_102$side.fluo.normalized.histogram.ratio.bin.5.102_127$side.fluo.normalized.histogram.ratio.bin.6.127_153$side.fluo.normalized.histogram.ratio.bin.7.153_178$side.fluo.normalized.histogram.ratio.bin.8.178_204$side.fluo.normalized.histogram.ratio.bin.9.204_229$side.fluo.normalized.histogram.ratio.bin.10.229_255",
+ 												  "side.nir.histogram.phenol.bin.1.0_25$side.nir.histogram.phenol.bin.2.25_51$side.nir.histogram.phenol.bin.3.51_76$side.nir.histogram.phenol.bin.4.76_102$side.nir.histogram.phenol.bin.5.102_127$side.nir.histogram.phenol.bin.6.127_153$side.nir.histogram.phenol.bin.7.153_178$side.nir.histogram.phenol.bin.8.178_204$side.nir.histogram.phenol.bin.9.204_229$side.nir.histogram.phenol.bin.10.229_255",
+ 												  "side.nir.histogram.ratio.bin.1.0_25$side.nir.histogram.ratio.nir.2.25_51$side.nir.histogram.ratio.bin.3.51_76$side.nir.histogram.ratio.bin.4.76_102$side.nir.histogram.ratio.bin.5.102_127$side.nir.histogram.ratio.bin.6.127_153$side.nir.histogram.ratio.bin.7.153_178$side.nir.histogram.ratio.bin.8.178_204$side.nir.histogram.ratio.bin.9.204_229$side.nir.histogram.ratio.bin.10.229_255",
+ 												  "side.vis.hue.histogram.ratio.bin.1.0_25$side.vis.hue.histogram.ratio.nir.2.25_51$side.vis.hue.histogram.ratio.bin.3.51_76$side.vis.hue.histogram.ratio.bin.4.76_102$side.vis.hue.histogram.ratio.bin.5.102_127$side.vis.hue.histogram.ratio.bin.6.127_153$side.vis.hue.histogram.ratio.bin.7.153_178$side.vis.hue.histogram.ratio.bin.8.178_204$side.vis.hue.histogram.ratio.bin.9.204_229$side.vis.hue.histogram.ratio.bin.10.229_255",
+ 												  "side.vis.normalized.histogram.ratio.bin.1.0_25$side.vis.normalized.histogram.ratio.bin.2.25_51$side.vis.normalized.histogram.ratio.bin.3.51_76$side.vis.normalized.histogram.ratio.bin.4.76_102$side.vis.normalized.histogram.ratio.bin.5.102_127$side.vis.normalized.histogram.ratio.bin.6.127_153$side.vis.normalized.histogram.ratio.bin.7.153_178$side.vis.normalized.histogram.ratio.bin.8.178_204$side.vis.normalized.histogram.ratio.bin.9.204_229$side.vis.normalized.histogram.ratio.bin.10.229_255",
+ 												  "top.fluo.histogram.bin.1.0_25$top.fluo.histogram.bin.2.25_51$top.fluo.histogram.bin.3.51_76$top.fluo.histogram.bin.4.76_102$top.fluo.histogram.bin.5.102_127$top.fluo.histogram.bin.6.127_153$top.fluo.histogram.bin.7.153_178$top.fluo.histogram.bin.8.178_204$top.fluo.histogram.bin.9.204_229$top.fluo.histogram.bin.10.229_255",
+ 												  "top.fluo.histogram.phenol.bin.1.0_25$top.fluo.histogram.phenol.bin.2.25_51$top.fluo.histogram.phenol.bin.3.51_76$top.fluo.histogram.phenol.bin.4.76_102$top.fluo.histogram.phenol.bin.5.102_127$top.fluo.histogram.phenol.bin.6.127_153$top.fluo.histogram.phenol.bin.7.153_178$top.fluo.histogram.phenol.bin.8.178_204$top.fluo.histogram.phenol.bin.9.204_229$top.fluo.histogram.phenol.bin.10.229_255",
+ 												  "top.fluo.histogram.ratio.bin.1.0_25$top.fluo.histogram.ratio.bin.2.25_51$top.fluo.histogram.ratio.bin.3.51_76$top.fluo.histogram.ratio.bin.4.76_102$top.fluo.histogram.ratio.bin.5.102_127$top.fluo.histogram.ratio.bin.6.127_153$top.fluo.histogram.ratio.bin.7.153_178$top.fluo.histogram.ratio.bin.8.178_204$top.fluo.histogram.ratio.bin.9.204_229$top.fluo.histogram.ratio.bin.10.229_255",
+ 												  "top.nir.histogram.bin.1.0_25$top.nir.histogram.bin.2.25_51$top.nir.histogram.bin.3.51_76$top.nir.histogram.bin.4.76_102$top.nir.histogram.bin.5.102_127$top.nir.histogram.bin.6.127_153$top.nir.histogram.bin.7.153_178$top.nir.histogram.bin.8.178_204$top.nir.histogram.bin.9.204_229$top.nir.histogram.bin.10.229_255",
+ 												  "top.nir.histogram.phenol.bin.1.0_25$top.nir.histogram.phenol.bin.2.25_51$top.nir.histogram.phenol.bin.3.51_76$top.nir.histogram.phenol.bin.4.76_102$top.nir.histogram.phenol.bin.5.102_127$top.nir.histogram.phenol.bin.6.127_153$top.nir.histogram.phenol.bin.7.153_178$top.nir.histogram.phenol.bin.8.178_204$top.nir.histogram.phenol.bin.9.204_229$top.nir.histogram.phenol.bin.10.229_255",
+ 												  "top.nir.histogram.ratio.bin.1.0_25$top.nir.histogram.ratio.bin.2.25_51$top.nir.histogram.ratio.bin.3.51_76$top.nir.histogram.ratio.bin.4.76_102$top.nir.histogram.ratio.bin.5.102_127$top.nir.histogram.ratio.bin.6.127_153$top.nir.histogram.ratio.bin.7.153_178$top.nir.histogram.ratio.bin.8.178_204$top.nir.histogram.ratio.bin.9.204_229$top.nir.histogram.ratio.bin.10.229_255",
+ 												  "top.vis.hue.histogram.ratio.bin.1.0_25$top.vis.hue.histogram.ratio.nir.2.25_51$top.vis.hue.histogram.ratio.bin.3.51_76$top.vis.hue.histogram.ratio.bin.4.76_102$top.vis.hue.histogram.ratio.bin.5.102_127$top.vis.hue.histogram.ratio.bin.6.127_153$top.vis.hue.histogram.ratio.bin.7.153_178$top.vis.hue.histogram.ratio.bin.8.178_204$top.vis.hue.histogram.ratio.bin.9.204_229$top.vis.hue.histogram.ratio.bin.10.229_255")
+ 												  
+ 										  
+ 										  
+ 										  
+ 				descriptorSetName_boxplotStacked <- c("NIR side (%)", "red side fluorescence histogram (%)", "NIR top (%)", "yellow side fluorescence histogram (%)", "fluo side ratio histogramm (%)",
+ 													  "NIR side normalized (%)", "red side normalized fluo histogramm (%)", "yellow side normalized fluo histogramm (%)", "fluo side normalized ratio histogramm (%)",
+ 													  "NIR side phenol (%)", "NIR side ratio histogramm (%)", "VIS HUE side ratio histogramm (%)", "VIS side normalized ratio histogramm (%)",
+ 													  "red top fluorescence histogram (%)", "yellow top fluorescence histogram (%)","fluo top ratio histogramm (%)",
+ 													  "NIR top (%)", "NIR top phenol histogram (%)","NIR top ratio histogramm (%)",
+ 													  "VIS HUE top ratio histogramm (%)")
+ 											  
+ 				stackedBarOptions = list(typOfGeomBar=c("fill", "stack", "dodge"))
+ 				#diagramTypVector <- c(diagramTypVector, "boxplotStacked", "boxplotStacked")
+ 				
+ 				appendix <- appendix %exists% args[3]
+ 				
+ 				if(appendix) {
+ 					blacklist <- buildBlacklist(workingDataSet, descriptorSet)
+ 					descriptorSetAppendix <- colnames(workingDataSet[!as.data.frame(sapply(colnames(workingDataSet),'%in%', blacklist))[,1]])
+ 					descriptorSetNameAppendix <- descriptorSetAppendix
+ 					#diagramTypVectorAppendix <- rep.int("nboxplot", times=length(descriptorSetNameAppendix))
+ 				}
+ 			
+ 				saveFormat <- saveFormat %exists% args[2]
+ 							
+ 				listOfTreatAndFilterTreat <- checkOfTreatments(args, treatment, filterTreatment, secondTreatment, filterSecondTreatment, workingDataSet, debug)
+ 				treatment <- listOfTreatAndFilterTreat[[1]][[1]]
+ 				secondTreatment <- listOfTreatAndFilterTreat[[1]][[2]]
+ 				filterTreatment <- listOfTreatAndFilterTreat[[2]][[1]]
+ 				filterSecondTreatment <- listOfTreatAndFilterTreat[[2]][[2]]
+ 			} else {
+ 				fileName = "error"
+ 			}
+ 		}
+ 		
+ 	} else if (typOfStartOptions == "test"){
+ 		
+ 		
+ 		#fileName <- "1107BA_Corn_new2.csv"
+ 			
+ 		#workingDataSet <- read.csv2(fileName, header=TRUE, sep=";", fileEncoding="ISO-8859-1", encoding="UTF-8")                   
+ 		#descriptorSet <- c("side.nir.intensity.average.norm","side.nir.intensity.average","side.hull.area.norm","side.height.norm","Gewicht.B","water.consumption")                   
+ 		#descriptorSetName <- c("nir intensity (rel. intensity/px)","nir intensity (rel. intensity/px)","convex hull area (mm^2)","height (mm)","target weight (g)","water consumption")
+ 			
+ 		#descriptorSet <- c("side.nir.intensity.average.norm","Gewicht.B")                   
+ 		#descriptorSetName <- c("nir intensity (rel. intensity/px)","target weight (g)")
+ 				
+ 		#descriptorSet <- c("digital.biomass.unnormal","digital.biomass.normal","mark3.y")                   
+ 		#descriptorSetName <- c("digital biomass (mm^3)","digital biomass (mm^3)","mark (% from image height)")
+ 			
+ 		#descriptorSet <- c("digital.biomass.keygene.norm","side.area","top.area")                   
+ 		#descriptorSetName <- c("digital biomass (mm^3)","test1", "test2")
+ 			
+ #		descriptorSet <- c("side.nir.normalized.histogram.bin.1.0_25$side.nir.normalized.histogram.bin.2.25_51$side.nir.normalized.histogram.bin.3.51_76$side.nir.normalized.histogram.bin.4.76_102$side.nir.normalized.histogram.bin.5.102_127$side.nir.normalized.histogram.bin.6.127_153$side.nir.normalized.histogram.bin.7.153_178$side.nir.normalized.histogram.bin.8.178_204$side.nir.normalized.histogram.bin.9.204_229$side.nir.normalized.histogram.bin.10.229_255",
+ #					"side.fluo.normalized.histogram.bin.1.0_25$side.fluo.normalized.histogram.bin.2.25_51$side.fluo.normalized.histogram.bin.3.51_76$side.fluo.normalized.histogram.bin.4.76_102$side.fluo.normalized.histogram.bin.5.102_127$side.fluo.normalized.histogram.bin.6.127_153$side.fluo.normalized.histogram.bin.7.153_178$side.fluo.normalized.histogram.bin.8.178_204$side.fluo.normalized.histogram.bin.9.204_229$side.fluo.normalized.histogram.bin.10.229_255")
+ #		descriptorSetName <- c("NIR absorption class (%)", "chlorophyll fluorescence histogram (%)")
+ 			
+ #		descriptorSet <- c("side.nir.normalized.histogram.bin.1.0_25$side.nir.normalized.histogram.bin.2.25_51$side.nir.normalized.histogram.bin.3.51_76$side.nir.normalized.histogram.bin.4.76_102$side.nir.normalized.histogram.bin.5.102_127$side.nir.normalized.histogram.bin.6.127_153$side.nir.normalized.histogram.bin.7.153_178$side.nir.normalized.histogram.bin.8.178_204$side.nir.normalized.histogram.bin.9.204_229$side.nir.normalized.histogram.bin.10.229_255")
+ #		descriptorSetName <- c("NIR absorption class (%)")
+ 			
+ 		#descriptorSet <- c("Plant ID$Treatment$Hallo$Wert1$Repl ID")
+ 		#descriptorSetName <- c("VariableMix")
+ 	
+ #		descriptorSet <- c("side.fluo.normalized.histogram.bin.1.0_25$side.fluo.normalized.histogram.bin.2.25_51$side.fluo.normalized.histogram.bin.3.51_76$side.fluo.normalized.histogram.bin.4.76_102$side.fluo.normalized.histogram.bin.5.102_127$side.fluo.normalized.histogram.bin.6.127_153$side.fluo.normalized.histogram.bin.7.153_178$side.fluo.normalized.histogram.bin.8.178_204$side.fluo.normalized.histogram.bin.9.204_229$side.fluo.normalized.histogram.bin.10.229_255")
+ #		#descriptorSet <- c("side.fluo.normalized.histogram.bin.2.25_51$side.fluo.normalized.histogram.bin.1.0_25$side.fluo.normalized.histogram.bin.3.51_76$side.fluo.normalized.histogram.bin.4.76_102$side.fluo.normalized.histogram.bin.5.102_127$side.fluo.normalized.histogram.bin.6.127_153$side.fluo.normalized.histogram.bin.7.153_178$side.fluo.normalized.histogram.bin.8.178_204$side.fluo.normalized.histogram.bin.9.204_229$side.fluo.normalized.histogram.bin.10.229_255")
+ #		descriptorSetName <- c("red fluorescence histogram (%)")
+ 	
+ 	
+ 		#descriptorSet <- c("Weight B (g)","side.height.norm (mm)","side.width.norm (mm)","side.area.norm (mm^2)",
+ 		#		"side.fluo.intensity.chlorophyl.average (relative)","side.fluo.intensity.phenol.average (relative)",
+ 		#		"side.nir.intensity.average (relative)",
+ 		#		"side.leaf.count.median (leafs)","side.bloom.count (tassel)","side.leaf.length.sum.norm.max (mm)")
+ 			
+ 		# "digital biomass IAP (pixel^3)","digital biomass KeyGene (pixel^3)", 
+ 		#descriptorSetName <- c("weight (g)","height (mm)", "width (mm)", "side area (pixel^2)",
+ 		#		"chlorophyl intensity (relative intensity/pixel)", "fluorescence intensity (relative intensity/pixel)", "nir intensity (relative intensity/pixel)",
+ 		#		"number of leafs (leaf)", "number of tassels (tassel)", "length of leafs plus stem (mm)")
+ 		
+ #		descriptorSet <- c("side.area (px)","side.area.norm (mm^2)")
+ #		descriptorSetName <- c("side area uncorrected (mm^2)", "side area corrected (mm^2)")
+ 		
+ 		#descriptorSet <- c("Hallo2")
+ 		#descriptorSetName <- c("Test")
+ 		
+ 		#descriptorSet <- colnames(workingDataSet)
+ 		#descriptorSetName <- colnames(workingDataSet)
+ 		
+ 		#treatment <- "none"
+ 		treatment <- "Treatment"
+ 		#treatment <- "Condition"
+ 		#filterTreatment <- "dry$normal$wet"
+ 		#filterTreatment <- "dry$normal"
+ 		#filterTreatment <- "normal bewaessert$Trockentress"
+ 		#filterTreatment <- "ganz"
+ 		filterTreatment <- "none"
+ 		##filterTreatment <- "Deutschland$Spanien$Italien$China"
+ 		
+ 		secondTreatment <- "Genotype"
+ 		#secondTreatment <- "none"
+ 		#secondTreatment <- "Species"
+ 		#secondTreatment <- "Variety"
+ 		filterSecondTreatment <- "none"
+ 		
+ 		#secondTreatment <- "secondTreatment"
+ 		#filterSecondTreatment <- "a$c"
+ 		
+ 		###1116BA#########6 8 10 12 13 14 15 16 17 19 20 21 22 23 24 25 26 27 28 29 30 31 33 34 35 36 37 38 39 40
+ 		#filterXaxis <- c("6$8$10$12$13$14$15$16$20$21$22$23$26$27$28$29$30$31$33$34$35$36$37$38")
+ 		#filterXaxis <- c("6$8$13")
+ 		###1107BA#########2$4$6$8$10$12$13$15$16$21$22$25$27$29$30$31$33$35$36$37$39$41$42$43$45$47$49$50$51$55$57$59$61$63$64
+ 		#filterXaxis <- c("2$4$6$8$10$12$13$15$16$21$22$25$27$29$30$31$33$35$36$37$39$41$43$45$47$49$50$51$55$57$59$61$63$64")
+ 		#filterXaxis <- c("6$8$10")
+ 		filterXaxis <- "none"
+ 		#filterXaxis <- c("6$8$10$12$13$14$15$16$20$21$22$23$26$27$28$29$30$31$33$34$35$36$37$38")
+ 		
+ 		#treatment <- "Treatment"
+ 		##treatment <- "Variety"
+ 		#treatment <- "none"
+ 		
+ 		#diagramTyp="boxplotStacked"
+ 		#diagramTyp="nboxplot"
+ 		#diagramTyp="boxplot"
+ 		
+ 		bgColor <- "transparent"
+ 		isGray="FALSE"
+ 		#transparent <- "TRUE"
+ 		#legendUnderImage <- "TRUE"
+ 		#showResultInR <- TRUE
+ 		showResultInR <- FALSE
+ 		
+ 		#fileName <- "numeric_data.MaizeAnalysisAction_ 1116BA_new3.csv"
+ 		#fileName <- "testDataset2.csv"
+ 		fileName <- "report.csv"
+ 		#fileName <- "testDataset3.csv"
+ 		#englischVersion <- FALSE
+ 		#englischVersion <- TRUE
+ 		separation <- ";"
+ 		workingDataSet <- separation %getData% fileName
+ 		
+ 		#descriptor <- c("Hallo2")
+ 		#descriptor <- c("Plant ID","Treatment","Hallo","Wert1", "Repl ID")
+ 		#descriptor <- c("Repl ID")		
+ 		#descriptorSet <- c("nir.top")
+ 		#descriptorSet <- c("Plant ID")
+ 		#descriptorSet <- c("side.height.norm (mm)")
+ 
+ 		#descriptorSet <- c("side.area.norm (mm^2)")
+ 		#descriptorSetName <- c("Das ist ein Testname")
+ 		if(FALSE) {
+ 			
+ 			descriptorSet_nBoxplot <- c("Weight A (g)","Weight B (g)","Water (weight-diff)","side.height.norm (mm)","side.width.norm (mm)","side.area.norm (mm^2)", "top.area.norm (mm^2)",
+ 					"side.fluo.intensity.chlorophyl.average (relative)","side.fluo.intensity.phenol.average (relative)",
+ 					"side.nir.intensity.average (relative)","side.leaf.count.median (leafs)","side.bloom.count (tassel)",
+ 					"side.leaf.length.sum.norm.max (mm)", "volume.fluo.iap","volume.iap (px^3)", "volume.iap_max", "volume.lt (px^3)",
+ 					"volume.iap.wue", "side.nir.wetness.plant_weight_drought_loss", "top.nir.wetness.plant_weight_drought_loss", "side.nir.wetness.av", "top.nir.wetness.av",
+ 					"side.area.relative", "side.height.norm.relative", "side.width.norm.relative", "top.area.relative", "side.area.relative", "volume.iap.relative",
+ 					"side.height (mm)","side.width (mm)","side.area (px)", "top.area (px)")
+ 			
+ 			descriptorSetName_nBoxplot <- c("weight before watering (g)","weight after watering (g)", "water weight (g)", "normalized height (mm)", "normalized width (mm)", "normalized side area (mm^2)", "normalized top area (mm^2)",
+ 					"chlorophyl intensity (relative intensity/pixel)", "fluorescence intensity (relative intensity/pixel)", "nir intensity (relative intensity/pixel)",
+ 					"number of leafs (leaf)", "number of tassels (tassel)", "length of leafs plus stem (mm)", "volume based on FLUO (IAP) (px^3)", "volume based on RGB (IAP) (px^3)", "volume based on max RGB-image (IAP) (px^3)", "volume based on RGB (LemnaTec) (px^3)",
+ 					"volume based water use efficiency", "weighted loss through drought stress (side)", "weighted loss through drought stress (top)", "Average wetness of side image", "Average wetness of top image",
+ 					"relative projected side area (%)", "relative plant height (%)", "relative plant width (%)", "relative projected top area (%)", "relative projected side area (%)", "relative volume (IAP based formular - RGB) (%)",
+ 					"height (px)", "width (px)", "side area (px)", "top area (px)")		
+ 		
+ 		nBoxOptions= NULL
+ 		#diagramTypVector <- rep.int("nboxplot", times=length(descriptorSetName))
+ 		
+ 		
+ 		#boxplot
+ 		descriptorSet_boxplot <- c("side.height.norm (mm)","side.width.norm (mm)","side.area.norm (mm^2)", "top.area.norm (mm^2)",
+ 				"volume.fluo.iap","volume.iap (px^3)", "volume.iap_max", "volume.lt (px^3)",
+ 				"side.height (mm)","side.width (mm)","side.area (px)", "top.area (px)")
+ 		
+ 		descriptorSetName_boxplot <- c("normalized height (mm)", "normalized width (mm)", "normalized side area (mm^2)", "normalized top area (mm^2)",
+ 				"volume based on FLUO (IAP) (px^3)", "volume based on RGB (IAP) (px^3)", "volume based on max RGB-image (IAP) (px^3)", "volume based on RGB (LemnaTec) (px^3)",
+ 				"height (px)", "width (px)", "side area (px)", "top area (px)")	
+ 		
+ 		boxOptions= NULL
+ 		#diagramTypVectorBox <- rep.int("boxplot", times=length(descriptorSetBox))
+ 		
+ 		#descriptorSet <- c(descriptorSet, descriptorSetBox)
+ 		#descriptorSetName <- c(descriptorSetName, descriptorSetNameBox)
+ 		#diagramTypVector <- c(diagramTypVector, diagramTypVectorBox)
+ 		
+ 		#boxplotStacked
+ 		descriptorSet_boxplotStacked <- c("side.nir.normalized.histogram.bin.1.0_25$side.nir.normalized.histogram.bin.2.25_51$side.nir.normalized.histogram.bin.3.51_76$side.nir.normalized.histogram.bin.4.76_102$side.nir.normalized.histogram.bin.5.102_127$side.nir.normalized.histogram.bin.6.127_153$side.nir.normalized.histogram.bin.7.153_178$side.nir.normalized.histogram.bin.8.178_204$side.nir.normalized.histogram.bin.9.204_229$side.nir.normalized.histogram.bin.10.229_255",
+ 				"side.fluo.histogram.bin.1.0_25$side.fluo.histogram.bin.2.25_51$side.fluo.histogram.bin.3.51_76$side.fluo.histogram.bin.4.76_102$side.fluo.histogram.bin.5.102_127$side.fluo.histogram.bin.6.127_153$side.fluo.histogram.bin.7.153_178$side.fluo.histogram.bin.8.178_204$side.fluo.histogram.bin.9.204_229$side.fluo.histogram.bin.10.229_255",
+ 				"top.nir.histogram.bin.1.0_25$top.nir.histogram.bin.2.25_51$top.nir.histogram.bin.3.51_76$top.nir.histogram.bin.4.76_102$top.nir.histogram.bin.5.102_127$top.nir.histogram.bin.6.127_153$top.nir.histogram.bin.7.153_178$top.nir.histogram.bin.8.178_204$top.nir.histogram.bin.9.204_229$top.nir.histogram.bin.10.229_255",
+ 				"side.fluo.histogram.phenol.bin.1.0_25$side.fluo.histogram.phenol.bin.2.25_51$side.fluo.histogram.phenol.bin.3.51_76$side.fluo.histogram.phenol.bin.4.76_102$side.fluo.histogram.phenol.bin.5.102_127$side.fluo.histogram.phenol.bin.6.127_153$side.fluo.histogram.phenol.bin.7.153_178$side.fluo.histogram.phenol.bin.8.178_204$side.fluo.histogram.phenol.bin.9.204_229$side.fluo.histogram.phenol.bin.10.229_255",
+ 				"side.fluo.histogram.ratio.bin.1.0_25$side.fluo.histogram.ratio.bin.2.25_51$side.fluo.histogram.ratio.bin.3.51_76$side.fluo.histogram.ratio.bin.4.76_102$side.fluo.histogram.ratio.bin.5.102_127$side.fluo.histogram.ratio.bin.6.127_153$side.fluo.histogram.ratio.bin.7.153_178$side.fluo.histogram.ratio.bin.8.178_204$side.fluo.histogram.ratio.bin.9.204_229$side.fluo.histogram.ratio.bin.10.229_255",
+ 				"side.nir.normalized.histogram.bin.1.0_25$side.nir.normalized.histogram.bin.2.25_51$side.nir.normalized.histogram.bin.3.51_76$side.nir.normalized.histogram.bin.4.76_102$side.nir.normalized.histogram.bin.5.102_127$side.nir.normalized.histogram.bin.6.127_153$side.nir.normalized.histogram.bin.7.153_178$side.nir.normalized.histogram.bin.8.178_204$side.nir.normalized.histogram.bin.9.204_229$side.nir.normalized.histogram.bin.10.229_255",
+ 				"side.fluo.normalized.histogram.bin.1.0_25$side.fluo.normalized.histogram.bin.2.25_51$side.fluo.normalized.histogram.bin.3.51_76$side.fluo.normalized.histogram.bin.4.76_102$side.fluo.normalized.histogram.bin.5.102_127$side.fluo.normalized.histogram.bin.6.127_153$side.fluo.normalized.histogram.bin.7.153_178$side.fluo.normalized.histogram.bin.8.178_204$side.fluo.normalized.histogram.bin.9.204_229$side.fluo.normalized.histogram.bin.10.229_255",
+ 				"side.fluo.normalized.histogram.phenol.bin.1.0_25$side.fluo.normalized.histogram.phenol.bin.2.25_51$side.fluo.normalized.histogram.phenol.bin.3.51_76$side.fluo.normalized.histogram.phenol.bin.4.76_102$side.fluo.normalized.histogram.phenol.bin.5.102_127$side.fluo.normalized.histogram.phenol.bin.6.127_153$side.fluo.normalized.histogram.phenol.bin.7.153_178$side.fluo.normalized.histogram.phenol.bin.8.178_204$side.fluo.normalized.histogram.phenol.bin.9.204_229$side.fluo.normalized.histogram.phenol.bin.10.229_255",
+ 				"side.fluo.normalized.histogram.ratio.bin.1.0_25$side.fluo.normalized.histogram.ratio.bin.2.25_51$side.fluo.normalized.histogram.ratio.bin.3.51_76$side.fluo.normalized.histogram.ratio.bin.4.76_102$side.fluo.normalized.histogram.ratio.bin.5.102_127$side.fluo.normalized.histogram.ratio.bin.6.127_153$side.fluo.normalized.histogram.ratio.bin.7.153_178$side.fluo.normalized.histogram.ratio.bin.8.178_204$side.fluo.normalized.histogram.ratio.bin.9.204_229$side.fluo.normalized.histogram.ratio.bin.10.229_255",
+ 				"side.nir.histogram.phenol.bin.1.0_25$side.nir.histogram.phenol.bin.2.25_51$side.nir.histogram.phenol.bin.3.51_76$side.nir.histogram.phenol.bin.4.76_102$side.nir.histogram.phenol.bin.5.102_127$side.nir.histogram.phenol.bin.6.127_153$side.nir.histogram.phenol.bin.7.153_178$side.nir.histogram.phenol.bin.8.178_204$side.nir.histogram.phenol.bin.9.204_229$side.nir.histogram.phenol.bin.10.229_255",
+ 				"side.nir.histogram.ratio.bin.1.0_25$side.nir.histogram.ratio.nir.2.25_51$side.nir.histogram.ratio.bin.3.51_76$side.nir.histogram.ratio.bin.4.76_102$side.nir.histogram.ratio.bin.5.102_127$side.nir.histogram.ratio.bin.6.127_153$side.nir.histogram.ratio.bin.7.153_178$side.nir.histogram.ratio.bin.8.178_204$side.nir.histogram.ratio.bin.9.204_229$side.nir.histogram.ratio.bin.10.229_255",
+ 				"side.vis.hue.histogram.ratio.bin.1.0_25$side.vis.hue.histogram.ratio.nir.2.25_51$side.vis.hue.histogram.ratio.bin.3.51_76$side.vis.hue.histogram.ratio.bin.4.76_102$side.vis.hue.histogram.ratio.bin.5.102_127$side.vis.hue.histogram.ratio.bin.6.127_153$side.vis.hue.histogram.ratio.bin.7.153_178$side.vis.hue.histogram.ratio.bin.8.178_204$side.vis.hue.histogram.ratio.bin.9.204_229$side.vis.hue.histogram.ratio.bin.10.229_255",
+ 				"side.vis.normalized.histogram.ratio.bin.1.0_25$side.vis.normalized.histogram.ratio.bin.2.25_51$side.vis.normalized.histogram.ratio.bin.3.51_76$side.vis.normalized.histogram.ratio.bin.4.76_102$side.vis.normalized.histogram.ratio.bin.5.102_127$side.vis.normalized.histogram.ratio.bin.6.127_153$side.vis.normalized.histogram.ratio.bin.7.153_178$side.vis.normalized.histogram.ratio.bin.8.178_204$side.vis.normalized.histogram.ratio.bin.9.204_229$side.vis.normalized.histogram.ratio.bin.10.229_255",
+ 				"top.fluo.histogram.bin.1.0_25$top.fluo.histogram.bin.2.25_51$top.fluo.histogram.bin.3.51_76$top.fluo.histogram.bin.4.76_102$top.fluo.histogram.bin.5.102_127$top.fluo.histogram.bin.6.127_153$top.fluo.histogram.bin.7.153_178$top.fluo.histogram.bin.8.178_204$top.fluo.histogram.bin.9.204_229$top.fluo.histogram.bin.10.229_255",
+ 				"top.fluo.histogram.phenol.bin.1.0_25$top.fluo.histogram.phenol.bin.2.25_51$top.fluo.histogram.phenol.bin.3.51_76$top.fluo.histogram.phenol.bin.4.76_102$top.fluo.histogram.phenol.bin.5.102_127$top.fluo.histogram.phenol.bin.6.127_153$top.fluo.histogram.phenol.bin.7.153_178$top.fluo.histogram.phenol.bin.8.178_204$top.fluo.histogram.phenol.bin.9.204_229$top.fluo.histogram.phenol.bin.10.229_255",
+ 				"top.fluo.histogram.ratio.bin.1.0_25$top.fluo.histogram.ratio.bin.2.25_51$top.fluo.histogram.ratio.bin.3.51_76$top.fluo.histogram.ratio.bin.4.76_102$top.fluo.histogram.ratio.bin.5.102_127$top.fluo.histogram.ratio.bin.6.127_153$top.fluo.histogram.ratio.bin.7.153_178$top.fluo.histogram.ratio.bin.8.178_204$top.fluo.histogram.ratio.bin.9.204_229$top.fluo.histogram.ratio.bin.10.229_255",
+ 				"top.nir.histogram.bin.1.0_25$top.nir.histogram.bin.2.25_51$top.nir.histogram.bin.3.51_76$top.nir.histogram.bin.4.76_102$top.nir.histogram.bin.5.102_127$top.nir.histogram.bin.6.127_153$top.nir.histogram.bin.7.153_178$top.nir.histogram.bin.8.178_204$top.nir.histogram.bin.9.204_229$top.nir.histogram.bin.10.229_255",
+ 				"top.nir.histogram.phenol.bin.1.0_25$top.nir.histogram.phenol.bin.2.25_51$top.nir.histogram.phenol.bin.3.51_76$top.nir.histogram.phenol.bin.4.76_102$top.nir.histogram.phenol.bin.5.102_127$top.nir.histogram.phenol.bin.6.127_153$top.nir.histogram.phenol.bin.7.153_178$top.nir.histogram.phenol.bin.8.178_204$top.nir.histogram.phenol.bin.9.204_229$top.nir.histogram.phenol.bin.10.229_255",
+ 				"top.nir.histogram.ratio.bin.1.0_25$top.nir.histogram.ratio.bin.2.25_51$top.nir.histogram.ratio.bin.3.51_76$top.nir.histogram.ratio.bin.4.76_102$top.nir.histogram.ratio.bin.5.102_127$top.nir.histogram.ratio.bin.6.127_153$top.nir.histogram.ratio.bin.7.153_178$top.nir.histogram.ratio.bin.8.178_204$top.nir.histogram.ratio.bin.9.204_229$top.nir.histogram.ratio.bin.10.229_255",
+ 				"top.vis.hue.histogram.ratio.bin.1.0_25$top.vis.hue.histogram.ratio.nir.2.25_51$top.vis.hue.histogram.ratio.bin.3.51_76$top.vis.hue.histogram.ratio.bin.4.76_102$top.vis.hue.histogram.ratio.bin.5.102_127$top.vis.hue.histogram.ratio.bin.6.127_153$top.vis.hue.histogram.ratio.bin.7.153_178$top.vis.hue.histogram.ratio.bin.8.178_204$top.vis.hue.histogram.ratio.bin.9.204_229$top.vis.hue.histogram.ratio.bin.10.229_255")
+ 		
+ 		
+ 		
+ 		
+ 		descriptorSetName_boxplotStacked <- c("NIR side (%)", "red side fluorescence histogram (%)", "NIR top (%)", "yellow side fluorescence histogram (%)", "fluo side ratio histogramm (%)",
+ 				"NIR side normalized (%)", "red side normalized fluo histogramm (%)", "yellow side normalized fluo histogramm (%)", "fluo side normalized ratio histogramm (%)",
+ 				"NIR side phenol (%)", "NIR side ratio histogramm (%)", "VIS HUE side ratio histogramm (%)", "VIS side normalized ratio histogramm (%)",
+ 				"red top fluorescence histogram (%)", "yellow top fluorescence histogram (%)","fluo top ratio histogramm (%)",
+ 				"NIR top (%)", "NIR top phenol histogram (%)","NIR top ratio histogramm (%)",
+ 				"VIS HUE top ratio histogramm (%)")
+ 		
+ 		stackedBarOptions = list(typOfGeomBar=c("fill", "stack", "dodge"))
+ 		#diagramTypVector <- c(diagramTypVector, "boxplotStacked", "boxplotStacked")
+ 		} else {
+ 
+ 			descriptorSet_nBoxplot <- c("side.area.norm (mm^2)", "Weight A (g)","side.height.norm (mm)")
+ 			descriptorSetName_nBoxplot <- c("Area", "Gewicht", "Heigh")
+ 	
+ 			descriptorSet_boxplot <- c("side.area.norm (mm^2)", "side.height.norm (mm)")
+ 			descriptorSetName_boxplot <- c("Area Boxplot", "Heigh Boxplot")
+ 			
+ 	#		descriptorSet_boxplotStacked <- c("side.nir.normalized.histogram.bin.1.0_25$side.nir.normalized.histogram.bin.2.25_51$side.nir.normalized.histogram.bin.3.51_76$side.nir.normalized.histogram.bin.4.76_102$side.nir.normalized.histogram.bin.5.102_127$side.nir.normalized.histogram.bin.6.127_153$side.nir.normalized.histogram.bin.7.153_178$side.nir.normalized.histogram.bin.8.178_204$side.nir.normalized.histogram.bin.9.204_229$side.nir.normalized.histogram.bin.10.229_255",
+ 	#										  "side.fluo.normalized.histogram.bin.1.0_25$side.fluo.normalized.histogram.bin.2.25_51$side.fluo.normalized.histogram.bin.3.51_76$side.fluo.normalized.histogram.bin.4.76_102$side.fluo.normalized.histogram.bin.5.102_127$side.fluo.normalized.histogram.bin.6.127_153$side.fluo.normalized.histogram.bin.7.153_178$side.fluo.normalized.histogram.bin.8.178_204$side.fluo.normalized.histogram.bin.9.204_229$side.fluo.normalized.histogram.bin.10.229_255")
+ 			
+ 			descriptorSet_boxplotStacked <- c("side.fluo.normalized.histogram.bin.1.0_25$side.fluo.normalized.histogram.bin.2.25_51$side.fluo.normalized.histogram.bin.3.51_76$side.fluo.normalized.histogram.bin.4.76_102$side.fluo.normalized.histogram.bin.5.102_127$side.fluo.normalized.histogram.bin.6.127_153$side.fluo.normalized.histogram.bin.7.153_178$side.fluo.normalized.histogram.bin.8.178_204$side.fluo.normalized.histogram.bin.9.204_229$side.fluo.normalized.histogram.bin.10.229_255",
+ 									  "side.nir.normalized.histogram.bin.1.0_25$side.nir.normalized.histogram.bin.2.25_51$side.nir.normalized.histogram.bin.3.51_76$side.nir.normalized.histogram.bin.4.76_102$side.nir.normalized.histogram.bin.5.102_127$side.nir.normalized.histogram.bin.6.127_153$side.nir.normalized.histogram.bin.7.153_178$side.nir.normalized.histogram.bin.8.178_204$side.nir.normalized.histogram.bin.9.204_229$side.nir.normalized.histogram.bin.10.229_255",
+ 									  "top.nir.histogram.bin.1.0_25$top.nir.histogram.bin.2.25_51$top.nir.histogram.bin.3.51_76$top.nir.histogram.bin.4.76_102$top.nir.histogram.bin.5.102_127$top.nir.histogram.bin.6.127_153$top.nir.histogram.bin.7.153_178$top.nir.histogram.bin.8.178_204$top.nir.histogram.bin.9.204_229$top.nir.histogram.bin.10.229_255")
+ 			
+ 			descriptorSetName_boxplotStacked <- c("red fluorescence histogram (%)", "NIR absorption class (%)", "NIR Top")
+ 		
+ 			
+ 			nBoxOptions= NULL
+ 			boxOptions= NULL
+ 			stackedBarOptions = list(typOfGeomBar=c("fill", "stack", "dodge"))
+ 		}	
+ 	
+ 		
+ 		#descriptorSet <- c("Plant ID$Treatment$Hallo$Wert1$Repl ID")
+ 		#diagramTypVector <- diagramTyp
+ 		#diagramTypVector <- rep.int(diagramTyp, times=length(descriptorSetName))
+ 		
+ 		
+ 
+ 		nBoxDes = descriptorSet_nBoxplot
+ 		boxDes = descriptorSet_boxplot
+ 		boxStackDes = descriptorSet_boxplotStacked
+ 		SaveName_nBoxDes = nBoxDes
+ 		SaveName_boxDes = boxDes
+ 		SaveName_boxStackDes = boxStackDes
+ 		nBoxDesName = descriptorSetName_nBoxplot
+ 		boxDesName = descriptorSetName_boxplot
+ 		boxStackDesName = descriptorSetName_boxplotStacked
+ 
+ 		saveName <- "test2"
+ 		yAxisName <- "test2"
+ 		debug <- TRUE
+ 		iniDataSet = workingDataSet
+ 		#descriptor <- c("Plant ID$Treatment$Hallo$Wert1$Repl ID")
+ 		#descriptor <- c("side.area.norm (mm^2)")
+ 		#descriptorSet <- c("side.fluo.bloom.area.size (mm^2)")
+ 		#descriptor <- c("side.fluo.bloom.area.size (mm^2)")
+ 		descriptor <- descriptorSet
+ 		#descriptor <- c("Repl ID")
+ 		#descriptor <- c("side.nir.normalized.histogram.bin.1.0_25$side.nir.normalized.histogram.bin.2.25_51$side.nir.normalized.histogram.bin.3.51_76$side.nir.normalized.histogram.bin.4.76_102$side.nir.normalized.histogram.bin.5.102_127$side.nir.normalized.histogram.bin.6.127_153$side.nir.normalized.histogram.bin.7.153_178$side.nir.normalized.histogram.bin.8.178_204$side.nir.normalized.histogram.bin.9.204_229$side.nir.normalized.histogram.bin.10.229_255")
+ 		appendix <- FALSE
+ 		stoppTheCalculation <- FALSE
+ 		
+ }
[1] "... Read input file"
Read 2 items
[1] "... english Version"
> overallList <- list(iniDataSet=iniDataSet, saveFormat=saveFormat, dpi=dpi, isGray=isGray, 
+ 						nBoxDes = nBoxDes, boxDes = boxDes, boxStackDes = boxStackDes,
+ 						saveName_nBoxDes = nBoxDes, saveName_boxDes = boxDes, saveName_boxStackDes = boxStackDes,
+ 						nBoxDesName = nBoxDesName, boxDesName = boxDesName, boxStackDesName = boxStackDesName,
+ 						nBoxOptions= nBoxOptions, boxOptions= boxOptions, stackedBarOptions = stackedBarOptions, 
+ 						treatment=treatment, filterTreatment=filterTreatment,
+ 						secondTreatment=secondTreatment, filterSecondTreatment=filterSecondTreatment, filterXaxis=filterXaxis, xAxis=xAxis,
+ 						showResultInR=showResultInR, xAxisName=xAxisName, debug=debug, 
+ 						appendix=appendix, stoppTheCalculation=stoppTheCalculation,
+ 						overallResult_nBoxDes=data.frame(), overallResult_boxDes=data.frame(), overallResult_boxStackDes=data.frame(),
+ 						color_nBox = list(), color_box=list(), color_boxStack=list())	
> 				
> 	#install.packages(c("Cairo"), repos="http://cran.r-project.org", dependencies = TRUE)
> 	library("Cairo")
> 	#install.packages(c("RColorBrewer"), repos="http://cran.r-project.org", dependencies = TRUE)
> 	library("RColorBrewer")
> 	#install.packages(c("data.table"), repos="http://cran.r-project.org", dependencies = TRUE)
> 	library(data.table)
> 	#install.packages(c("ggplot2"), repos="http://cran.r-project.org", dependencies = TRUE)
> 	library(ggplot2)
> 	#install.packages(c("Hmisc"), repos="http://cran.r-project.org", dependencies = TRUE)
> 	#library("Hmisc")
> 	
> 	overallList$debug %debug% "Start"
[1] "DebugBreakPoint:  Start"
> 	
> 	overallList <- overallChangeName(overallList)
[1] "DebugBreakPoint:  overallChangeSaveName()"
[1] "... nBoxplot"
[1] "... Boxplot"
[1] "... stackedBoxplot"
> 	overallList <- overallPreprocessingOfDescriptor(overallList)
[1] "DebugBreakPoint:  overallPreprocessingOfDescriptor()"
[1] "... nBoxplot"
[1] "... Boxplot"
[1] "... stackedBoxplot"
> 	
> 	
> ###############################	
> 	overallList <- preprocessingOfxAxisValue(overallList)
[1] "DebugBreakPoint:  preprocessingOfxAxisValue()"
> 	overallList <- preprocessingOfTreatment(overallList)
[1] "DebugBreakPoint:  preprocessingOfTheTreatment()"
> 	overallList <- preprocessingOfSecondTreatment(overallList)
[1] "DebugBreakPoint:  preprocessingOfTheSecondTreatment()"
> 	overallList <- overallCheckIfDescriptorIsNaOrAllZero(overallList)
[1] "DebugBreakPoint:  overallCheckIfDescriptorIsNaOrAllZero()"
[1] "... nBoxplot"
[1] "... Boxplot"
[1] "... stackedBoxplot"
[1] "Dummy plotting for this descriptor(s) ((side.fluo.normalized.histogram.bin.9.204_229), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((side.nir.normalized.histogram.bin.1.0_25), because all zero or not numeric!"    
[2] "Dummy plotting for this descriptor(s) ((side.nir.normalized.histogram.bin.2.25_51), because all zero or not numeric!"   
[3] "Dummy plotting for this descriptor(s) ((side.nir.normalized.histogram.bin.8.178_204), because all zero or not numeric!" 
[4] "Dummy plotting for this descriptor(s) ((side.nir.normalized.histogram.bin.9.204_229), because all zero or not numeric!" 
[5] "Dummy plotting for this descriptor(s) ((side.nir.normalized.histogram.bin.10.229_255), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((top.nir.histogram.bin.1.0_25), because all zero or not numeric!"    
[2] "Dummy plotting for this descriptor(s) ((top.nir.histogram.bin.10.229_255), because all zero or not numeric!"
Warnmeldungen:
1: In if (!is.na(overallList$boxStackDes[[n]])) { :
  Bedingung hat Länge > 1 und nur das erste Element wird benutzt
2: In if (!is.na(overallList$boxStackDes[[n]])) { :
  Bedingung hat Länge > 1 und nur das erste Element wird benutzt
3: In if (!is.na(overallList$boxStackDes[[n]])) { :
  Bedingung hat Länge > 1 und nur das erste Element wird benutzt
> 	overallList <- reduceWorkingDataSize(overallList)
[1] "DebugBreakPoint:  reduceWorkingDataSize()"
> 	overallList <- setDefaultAxisNames(overallList)	
[1] "DebugBreakPoint:  setDefaultAxisNames()"
> 	overallList <- overallGetResultDataFrame(overallList)
[1] "DebugBreakPoint:  overallGetResultDataFrame()"
[1] "DebugBreakPoint:  buildList()"
[1] "... nBoxplot"
[1] "DebugBreakPoint:  getResultDataFrame()"
[1] "... Boxplot"
[1] "DebugBreakPoint:  getResultDataFrame()"
[1] "... stackedBoxplot"
[1] "DebugBreakPoint:  getResultDataFrame()"
> 	overallList <- setColor(overallList) 
[1] "DebugBreakPoint:  setColor()"
Warnmeldungen:
1: In if (!is.na(descriptorList[[n]])) { :
  Bedingung hat Länge > 1 und nur das erste Element wird benutzt
2: In if (!is.na(descriptorList[[n]])) { :
  Bedingung hat Länge > 1 und nur das erste Element wird benutzt
3: In if (!is.na(descriptorList[[n]])) { :
  Bedingung hat Länge > 1 und nur das erste Element wird benutzt
> 	makeDiagrams(overallList)
[1] "DebugBreakPoint:  makeDiagrams()"
[1] "... nBoxplot"
[1] "DebugBreakPoint:  makeLinearDiagram()"
[1] "... images 1"
[1] "DebugBreakPoint:  reduceWholeOverallResultToOneValue()"
Saving 6.99" x 6.99" image
[1] "... images 2"
[1] "DebugBreakPoint:  reduceWholeOverallResultToOneValue()"
Saving 6.99" x 6.99" image
[1] "... images 3"
[1] "DebugBreakPoint:  reduceWholeOverallResultToOneValue()"
Saving 6.99" x 6.99" image
[1] "... Boxplot"
[1] "DebugBreakPoint:  makeBoxplotDiagram()"
[1] "DebugBreakPoint:  reduceWholeOverallResultToOneValue()"
Saving 6.99" x 6.99" image
[1] "DebugBreakPoint:  reduceWholeOverallResultToOneValue()"
Saving 6.99" x 6.99" image
[1] "... stacked Boxplot"
[1] "DebugBreakPoint:  makeBoxplotStackedDiagram()"
[1] "DebugBreakPoint:  reduceWholeOverallResultToOneValue()"
[1] "DebugBreakPoint:  PreWorkForMakeBigOverallImage()"
[1] "DebugBreakPoint:  plotStackedImage()"
Saving 6.99" x 6.99" image
Saving 6.99" x 6.99" image
Saving 6.99" x 6.99" image
[1] "DebugBreakPoint:  reduceWholeOverallResultToOneValue()"
[1] "DebugBreakPoint:  PreWorkForMakeBigOverallImage()"
[1] "DebugBreakPoint:  plotStackedImage()"
Saving 6.99" x 6.99" image
Saving 6.99" x 6.99" image
Saving 6.99" x 6.99" image
[1] "DebugBreakPoint:  reduceWholeOverallResultToOneValue()"
[1] "DebugBreakPoint:  PreWorkForMakeBigOverallImage()"
[1] "DebugBreakPoint:  plotStackedImage()"
Saving 6.99" x 6.99" image
Saving 6.99" x 6.99" image
Saving 6.99" x 6.99" image
Warnmeldungen:
1: Removed 1 rows containing missing values (geom_path). 
2: Removed 23 rows containing missing values (geom_point). 
3: Removed 8 rows containing missing values (geom_path). 
4: Removed 8 rows containing missing values (geom_point). 
5: Removed 1 rows containing missing values (geom_path). 
6: Removed 23 rows containing missing values (geom_point). 
7: Removed 1236 rows containing missing values (stat_boxplot). 
8: Removed 1236 rows containing missing values (stat_boxplot). 
> typOfStartOptions = "test"
> 	typOfStartOptions <- tolower(typOfStartOptions)
> 	
> 	args <- commandArgs(TRUE)
> 	print("#### Arguments")
[1] "#### Arguments"
> 	print(args)
character(0)
> 	print("####")
[1] "####"
> 	
> 	saveFormat <- "pdf"	
> 	dpi <- "150" ##90
> 	
> 	isGray <- FALSE
> 	showResultInR <- FALSE
> 	
> 	treatment <- "Treatment"
> 	filterTreatment <- "none"
> 	
> 	secondTreatment <- "none"
> 	filterSecondTreatment <- "none"
> 	
> 	xAxis <- "Day (Int)" 
> 	xAxisName <- "DAS"
> 	filterXaxis <- "none"
> 	
> #	diagramTypVector <- vector()
> 	descriptorSet <- vector()
> 	descriptorSetName <- vector()
> 	
> 	fileName <- "error"
> 
> 	appendix <- FALSE
> 	#appendix <- TRUE
> 	
> 	separation <- ";"
> #	if (length(args) < 1) {
> #		englischVersion <- FALSE
> #		#englischVersion <- TRUE
> #	} else {
> #		englischVersion <- TRUE
> #	}
> 
> 	if (typOfStartOptions == "all" | typOfStartOptions == "report" | typOfStartOptions == "allmanual") {
+ 
+ 		if (typOfStartOptions != "allmanual") {
+ 			fileName <- fileName %exists% args[1]
+ 		} else {
+ 			fileName <- "numeric_data.MaizeAnalysisAction_ 1116BA_new3.csv"
+ 			#fileName <- "report.csv" ## englischVersion <- TRUE setzen!!
+ 			#fileName <- "testDataset3.csv"
+ 		}
+ 		
+ 		if (fileName != "error") {
+ 			workingDataSet <- separation %getData% fileName
+ 			
+ 			if(workingDataSet != "error") {
+ 				#nboxplot
+ 				if (typOfStartOptions == "all") {
+ 					descriptorSet_nBoxplot <- colnames(workingDataSet)
+ 					descriptorSetName_nBoxplot <- descriptorSet
+ 					
+ 				} else { #Report	
+ 					descriptorSet_nBoxplot <- c("Weight A (g)","Weight B (g)","Water (weight-diff)","side.height.norm (mm)","side.width.norm (mm)","side.area.norm (mm^2)", "top.area.norm (mm^2)",
+ 							"side.fluo.intensity.chlorophyl.average (relative)","side.fluo.intensity.phenol.average (relative)",
+ 							"side.nir.intensity.average (relative)","side.leaf.count.median (leafs)","side.bloom.count (tassel)",
+ 							"side.leaf.length.sum.norm.max (mm)", "volume.fluo.iap","volume.iap (px^3)", "volume.iap_max", "volume.lt (px^3)",
+ 							"volume.iap.wue", "side.nir.wetness.plant_weight_drought_loss", "top.nir.wetness.plant_weight_drought_loss", "side.nir.wetness.av", "top.nir.wetness.av",
+ 							"side.area.relative", "side.height.norm.relative", "side.width.norm.relative", "top.area.relative", "side.area.relative", "volume.iap.relative",
+ 							"side.height (mm)","side.width (mm)","side.area (px)", "top.area (px)")
+ 				
+ 					descriptorSetName_nBoxplot <- c("weight before watering (g)","weight after watering (g)", "water weight (g)", "normalized height (mm)", "normalized width (mm)", "normalized side area (mm^2)", "normalized top area (mm^2)",
+ 							"chlorophyl intensity (relative intensity/pixel)", "fluorescence intensity (relative intensity/pixel)", "nir intensity (relative intensity/pixel)",
+ 							"number of leafs (leaf)", "number of tassels (tassel)", "length of leafs plus stem (mm)", "volume based on FLUO (IAP) (px^3)", "volume based on RGB (IAP) (px^3)", "volume based on max RGB-image (IAP) (px^3)", "volume based on RGB (LemnaTec) (px^3)",
+ 							"volume based water use efficiency", "weighted loss through drought stress (side)", "weighted loss through drought stress (top)", "Average wetness of side image", "Average wetness of top image",
+ 							"relative projected side area (%)", "relative plant height (%)", "relative plant width (%)", "relative projected top area (%)", "relative projected side area (%)", "relative volume (IAP based formular - RGB) (%)",
+ 							"height (px)", "width (px)", "side area (px)", "top area (px)")		
+ 				}
+ 	
+ 				nBoxOptions= NULL
+ 				#diagramTypVector <- rep.int("nboxplot", times=length(descriptorSetName))
+ 		
+ 		
+ 				#boxplot
+ 				descriptorSet_boxplot <- c("side.height.norm (mm)","side.width.norm (mm)","side.area.norm (mm^2)", "top.area.norm (mm^2)",
+ 						"volume.fluo.iap","volume.iap (px^3)", "volume.iap_max", "volume.lt (px^3)",
+ 						"side.height (mm)","side.width (mm)","side.area (px)", "top.area (px)")
+ 				
+ 				descriptorSetName_boxplot <- c("normalized height (mm)", "normalized width (mm)", "normalized side area (mm^2)", "normalized top area (mm^2)",
+ 						"volume based on FLUO (IAP) (px^3)", "volume based on RGB (IAP) (px^3)", "volume based on max RGB-image (IAP) (px^3)", "volume based on RGB (LemnaTec) (px^3)",
+ 						"height (px)", "width (px)", "side area (px)", "top area (px)")	
+ 				
+ 				boxOptions= NULL
+ 				#diagramTypVectorBox <- rep.int("boxplot", times=length(descriptorSetBox))
+ 				
+ 				#descriptorSet <- c(descriptorSet, descriptorSetBox)
+ 				#descriptorSetName <- c(descriptorSetName, descriptorSetNameBox)
+ 				#diagramTypVector <- c(diagramTypVector, diagramTypVectorBox)
+ 				
+ 				#boxplotStacked
+ 				descriptorSet_boxplotStacked <- c("side.nir.normalized.histogram.bin.1.0_25$side.nir.normalized.histogram.bin.2.25_51$side.nir.normalized.histogram.bin.3.51_76$side.nir.normalized.histogram.bin.4.76_102$side.nir.normalized.histogram.bin.5.102_127$side.nir.normalized.histogram.bin.6.127_153$side.nir.normalized.histogram.bin.7.153_178$side.nir.normalized.histogram.bin.8.178_204$side.nir.normalized.histogram.bin.9.204_229$side.nir.normalized.histogram.bin.10.229_255",
+ 								   				  "side.fluo.histogram.bin.1.0_25$side.fluo.histogram.bin.2.25_51$side.fluo.histogram.bin.3.51_76$side.fluo.histogram.bin.4.76_102$side.fluo.histogram.bin.5.102_127$side.fluo.histogram.bin.6.127_153$side.fluo.histogram.bin.7.153_178$side.fluo.histogram.bin.8.178_204$side.fluo.histogram.bin.9.204_229$side.fluo.histogram.bin.10.229_255",
+ 										  		  "top.nir.histogram.bin.1.0_25$top.nir.histogram.bin.2.25_51$top.nir.histogram.bin.3.51_76$top.nir.histogram.bin.4.76_102$top.nir.histogram.bin.5.102_127$top.nir.histogram.bin.6.127_153$top.nir.histogram.bin.7.153_178$top.nir.histogram.bin.8.178_204$top.nir.histogram.bin.9.204_229$top.nir.histogram.bin.10.229_255",
+ 												  "side.fluo.histogram.phenol.bin.1.0_25$side.fluo.histogram.phenol.bin.2.25_51$side.fluo.histogram.phenol.bin.3.51_76$side.fluo.histogram.phenol.bin.4.76_102$side.fluo.histogram.phenol.bin.5.102_127$side.fluo.histogram.phenol.bin.6.127_153$side.fluo.histogram.phenol.bin.7.153_178$side.fluo.histogram.phenol.bin.8.178_204$side.fluo.histogram.phenol.bin.9.204_229$side.fluo.histogram.phenol.bin.10.229_255",
+ 												  "side.fluo.histogram.ratio.bin.1.0_25$side.fluo.histogram.ratio.bin.2.25_51$side.fluo.histogram.ratio.bin.3.51_76$side.fluo.histogram.ratio.bin.4.76_102$side.fluo.histogram.ratio.bin.5.102_127$side.fluo.histogram.ratio.bin.6.127_153$side.fluo.histogram.ratio.bin.7.153_178$side.fluo.histogram.ratio.bin.8.178_204$side.fluo.histogram.ratio.bin.9.204_229$side.fluo.histogram.ratio.bin.10.229_255",
+ 												  "side.nir.normalized.histogram.bin.1.0_25$side.nir.normalized.histogram.bin.2.25_51$side.nir.normalized.histogram.bin.3.51_76$side.nir.normalized.histogram.bin.4.76_102$side.nir.normalized.histogram.bin.5.102_127$side.nir.normalized.histogram.bin.6.127_153$side.nir.normalized.histogram.bin.7.153_178$side.nir.normalized.histogram.bin.8.178_204$side.nir.normalized.histogram.bin.9.204_229$side.nir.normalized.histogram.bin.10.229_255",
+ 												  "side.fluo.normalized.histogram.bin.1.0_25$side.fluo.normalized.histogram.bin.2.25_51$side.fluo.normalized.histogram.bin.3.51_76$side.fluo.normalized.histogram.bin.4.76_102$side.fluo.normalized.histogram.bin.5.102_127$side.fluo.normalized.histogram.bin.6.127_153$side.fluo.normalized.histogram.bin.7.153_178$side.fluo.normalized.histogram.bin.8.178_204$side.fluo.normalized.histogram.bin.9.204_229$side.fluo.normalized.histogram.bin.10.229_255",
+ 												  "side.fluo.normalized.histogram.phenol.bin.1.0_25$side.fluo.normalized.histogram.phenol.bin.2.25_51$side.fluo.normalized.histogram.phenol.bin.3.51_76$side.fluo.normalized.histogram.phenol.bin.4.76_102$side.fluo.normalized.histogram.phenol.bin.5.102_127$side.fluo.normalized.histogram.phenol.bin.6.127_153$side.fluo.normalized.histogram.phenol.bin.7.153_178$side.fluo.normalized.histogram.phenol.bin.8.178_204$side.fluo.normalized.histogram.phenol.bin.9.204_229$side.fluo.normalized.histogram.phenol.bin.10.229_255",
+ 												  "side.fluo.normalized.histogram.ratio.bin.1.0_25$side.fluo.normalized.histogram.ratio.bin.2.25_51$side.fluo.normalized.histogram.ratio.bin.3.51_76$side.fluo.normalized.histogram.ratio.bin.4.76_102$side.fluo.normalized.histogram.ratio.bin.5.102_127$side.fluo.normalized.histogram.ratio.bin.6.127_153$side.fluo.normalized.histogram.ratio.bin.7.153_178$side.fluo.normalized.histogram.ratio.bin.8.178_204$side.fluo.normalized.histogram.ratio.bin.9.204_229$side.fluo.normalized.histogram.ratio.bin.10.229_255",
+ 												  "side.nir.histogram.phenol.bin.1.0_25$side.nir.histogram.phenol.bin.2.25_51$side.nir.histogram.phenol.bin.3.51_76$side.nir.histogram.phenol.bin.4.76_102$side.nir.histogram.phenol.bin.5.102_127$side.nir.histogram.phenol.bin.6.127_153$side.nir.histogram.phenol.bin.7.153_178$side.nir.histogram.phenol.bin.8.178_204$side.nir.histogram.phenol.bin.9.204_229$side.nir.histogram.phenol.bin.10.229_255",
+ 												  "side.nir.histogram.ratio.bin.1.0_25$side.nir.histogram.ratio.nir.2.25_51$side.nir.histogram.ratio.bin.3.51_76$side.nir.histogram.ratio.bin.4.76_102$side.nir.histogram.ratio.bin.5.102_127$side.nir.histogram.ratio.bin.6.127_153$side.nir.histogram.ratio.bin.7.153_178$side.nir.histogram.ratio.bin.8.178_204$side.nir.histogram.ratio.bin.9.204_229$side.nir.histogram.ratio.bin.10.229_255",
+ 												  "side.vis.hue.histogram.ratio.bin.1.0_25$side.vis.hue.histogram.ratio.nir.2.25_51$side.vis.hue.histogram.ratio.bin.3.51_76$side.vis.hue.histogram.ratio.bin.4.76_102$side.vis.hue.histogram.ratio.bin.5.102_127$side.vis.hue.histogram.ratio.bin.6.127_153$side.vis.hue.histogram.ratio.bin.7.153_178$side.vis.hue.histogram.ratio.bin.8.178_204$side.vis.hue.histogram.ratio.bin.9.204_229$side.vis.hue.histogram.ratio.bin.10.229_255",
+ 												  "side.vis.normalized.histogram.ratio.bin.1.0_25$side.vis.normalized.histogram.ratio.bin.2.25_51$side.vis.normalized.histogram.ratio.bin.3.51_76$side.vis.normalized.histogram.ratio.bin.4.76_102$side.vis.normalized.histogram.ratio.bin.5.102_127$side.vis.normalized.histogram.ratio.bin.6.127_153$side.vis.normalized.histogram.ratio.bin.7.153_178$side.vis.normalized.histogram.ratio.bin.8.178_204$side.vis.normalized.histogram.ratio.bin.9.204_229$side.vis.normalized.histogram.ratio.bin.10.229_255",
+ 												  "top.fluo.histogram.bin.1.0_25$top.fluo.histogram.bin.2.25_51$top.fluo.histogram.bin.3.51_76$top.fluo.histogram.bin.4.76_102$top.fluo.histogram.bin.5.102_127$top.fluo.histogram.bin.6.127_153$top.fluo.histogram.bin.7.153_178$top.fluo.histogram.bin.8.178_204$top.fluo.histogram.bin.9.204_229$top.fluo.histogram.bin.10.229_255",
+ 												  "top.fluo.histogram.phenol.bin.1.0_25$top.fluo.histogram.phenol.bin.2.25_51$top.fluo.histogram.phenol.bin.3.51_76$top.fluo.histogram.phenol.bin.4.76_102$top.fluo.histogram.phenol.bin.5.102_127$top.fluo.histogram.phenol.bin.6.127_153$top.fluo.histogram.phenol.bin.7.153_178$top.fluo.histogram.phenol.bin.8.178_204$top.fluo.histogram.phenol.bin.9.204_229$top.fluo.histogram.phenol.bin.10.229_255",
+ 												  "top.fluo.histogram.ratio.bin.1.0_25$top.fluo.histogram.ratio.bin.2.25_51$top.fluo.histogram.ratio.bin.3.51_76$top.fluo.histogram.ratio.bin.4.76_102$top.fluo.histogram.ratio.bin.5.102_127$top.fluo.histogram.ratio.bin.6.127_153$top.fluo.histogram.ratio.bin.7.153_178$top.fluo.histogram.ratio.bin.8.178_204$top.fluo.histogram.ratio.bin.9.204_229$top.fluo.histogram.ratio.bin.10.229_255",
+ 												  "top.nir.histogram.bin.1.0_25$top.nir.histogram.bin.2.25_51$top.nir.histogram.bin.3.51_76$top.nir.histogram.bin.4.76_102$top.nir.histogram.bin.5.102_127$top.nir.histogram.bin.6.127_153$top.nir.histogram.bin.7.153_178$top.nir.histogram.bin.8.178_204$top.nir.histogram.bin.9.204_229$top.nir.histogram.bin.10.229_255",
+ 												  "top.nir.histogram.phenol.bin.1.0_25$top.nir.histogram.phenol.bin.2.25_51$top.nir.histogram.phenol.bin.3.51_76$top.nir.histogram.phenol.bin.4.76_102$top.nir.histogram.phenol.bin.5.102_127$top.nir.histogram.phenol.bin.6.127_153$top.nir.histogram.phenol.bin.7.153_178$top.nir.histogram.phenol.bin.8.178_204$top.nir.histogram.phenol.bin.9.204_229$top.nir.histogram.phenol.bin.10.229_255",
+ 												  "top.nir.histogram.ratio.bin.1.0_25$top.nir.histogram.ratio.bin.2.25_51$top.nir.histogram.ratio.bin.3.51_76$top.nir.histogram.ratio.bin.4.76_102$top.nir.histogram.ratio.bin.5.102_127$top.nir.histogram.ratio.bin.6.127_153$top.nir.histogram.ratio.bin.7.153_178$top.nir.histogram.ratio.bin.8.178_204$top.nir.histogram.ratio.bin.9.204_229$top.nir.histogram.ratio.bin.10.229_255",
+ 												  "top.vis.hue.histogram.ratio.bin.1.0_25$top.vis.hue.histogram.ratio.nir.2.25_51$top.vis.hue.histogram.ratio.bin.3.51_76$top.vis.hue.histogram.ratio.bin.4.76_102$top.vis.hue.histogram.ratio.bin.5.102_127$top.vis.hue.histogram.ratio.bin.6.127_153$top.vis.hue.histogram.ratio.bin.7.153_178$top.vis.hue.histogram.ratio.bin.8.178_204$top.vis.hue.histogram.ratio.bin.9.204_229$top.vis.hue.histogram.ratio.bin.10.229_255")
+ 												  
+ 										  
+ 										  
+ 										  
+ 				descriptorSetName_boxplotStacked <- c("NIR side (%)", "red side fluorescence histogram (%)", "NIR top (%)", "yellow side fluorescence histogram (%)", "fluo side ratio histogramm (%)",
+ 													  "NIR side normalized (%)", "red side normalized fluo histogramm (%)", "yellow side normalized fluo histogramm (%)", "fluo side normalized ratio histogramm (%)",
+ 													  "NIR side phenol (%)", "NIR side ratio histogramm (%)", "VIS HUE side ratio histogramm (%)", "VIS side normalized ratio histogramm (%)",
+ 													  "red top fluorescence histogram (%)", "yellow top fluorescence histogram (%)","fluo top ratio histogramm (%)",
+ 													  "NIR top (%)", "NIR top phenol histogram (%)","NIR top ratio histogramm (%)",
+ 													  "VIS HUE top ratio histogramm (%)")
+ 											  
+ 				stackedBarOptions = list(typOfGeomBar=c("fill", "stack", "dodge"))
+ 				#diagramTypVector <- c(diagramTypVector, "boxplotStacked", "boxplotStacked")
+ 				
+ 				appendix <- appendix %exists% args[3]
+ 				
+ 				if(appendix) {
+ 					blacklist <- buildBlacklist(workingDataSet, descriptorSet)
+ 					descriptorSetAppendix <- colnames(workingDataSet[!as.data.frame(sapply(colnames(workingDataSet),'%in%', blacklist))[,1]])
+ 					descriptorSetNameAppendix <- descriptorSetAppendix
+ 					#diagramTypVectorAppendix <- rep.int("nboxplot", times=length(descriptorSetNameAppendix))
+ 				}
+ 			
+ 				saveFormat <- saveFormat %exists% args[2]
+ 							
+ 				listOfTreatAndFilterTreat <- checkOfTreatments(args, treatment, filterTreatment, secondTreatment, filterSecondTreatment, workingDataSet, debug)
+ 				treatment <- listOfTreatAndFilterTreat[[1]][[1]]
+ 				secondTreatment <- listOfTreatAndFilterTreat[[1]][[2]]
+ 				filterTreatment <- listOfTreatAndFilterTreat[[2]][[1]]
+ 				filterSecondTreatment <- listOfTreatAndFilterTreat[[2]][[2]]
+ 			} else {
+ 				fileName = "error"
+ 			}
+ 		}
+ 		
+ 	} else if (typOfStartOptions == "test"){
+ 		
+ 		
+ 		#fileName <- "1107BA_Corn_new2.csv"
+ 			
+ 		#workingDataSet <- read.csv2(fileName, header=TRUE, sep=";", fileEncoding="ISO-8859-1", encoding="UTF-8")                   
+ 		#descriptorSet <- c("side.nir.intensity.average.norm","side.nir.intensity.average","side.hull.area.norm","side.height.norm","Gewicht.B","water.consumption")                   
+ 		#descriptorSetName <- c("nir intensity (rel. intensity/px)","nir intensity (rel. intensity/px)","convex hull area (mm^2)","height (mm)","target weight (g)","water consumption")
+ 			
+ 		#descriptorSet <- c("side.nir.intensity.average.norm","Gewicht.B")                   
+ 		#descriptorSetName <- c("nir intensity (rel. intensity/px)","target weight (g)")
+ 				
+ 		#descriptorSet <- c("digital.biomass.unnormal","digital.biomass.normal","mark3.y")                   
+ 		#descriptorSetName <- c("digital biomass (mm^3)","digital biomass (mm^3)","mark (% from image height)")
+ 			
+ 		#descriptorSet <- c("digital.biomass.keygene.norm","side.area","top.area")                   
+ 		#descriptorSetName <- c("digital biomass (mm^3)","test1", "test2")
+ 			
+ #		descriptorSet <- c("side.nir.normalized.histogram.bin.1.0_25$side.nir.normalized.histogram.bin.2.25_51$side.nir.normalized.histogram.bin.3.51_76$side.nir.normalized.histogram.bin.4.76_102$side.nir.normalized.histogram.bin.5.102_127$side.nir.normalized.histogram.bin.6.127_153$side.nir.normalized.histogram.bin.7.153_178$side.nir.normalized.histogram.bin.8.178_204$side.nir.normalized.histogram.bin.9.204_229$side.nir.normalized.histogram.bin.10.229_255",
+ #					"side.fluo.normalized.histogram.bin.1.0_25$side.fluo.normalized.histogram.bin.2.25_51$side.fluo.normalized.histogram.bin.3.51_76$side.fluo.normalized.histogram.bin.4.76_102$side.fluo.normalized.histogram.bin.5.102_127$side.fluo.normalized.histogram.bin.6.127_153$side.fluo.normalized.histogram.bin.7.153_178$side.fluo.normalized.histogram.bin.8.178_204$side.fluo.normalized.histogram.bin.9.204_229$side.fluo.normalized.histogram.bin.10.229_255")
+ #		descriptorSetName <- c("NIR absorption class (%)", "chlorophyll fluorescence histogram (%)")
+ 			
+ #		descriptorSet <- c("side.nir.normalized.histogram.bin.1.0_25$side.nir.normalized.histogram.bin.2.25_51$side.nir.normalized.histogram.bin.3.51_76$side.nir.normalized.histogram.bin.4.76_102$side.nir.normalized.histogram.bin.5.102_127$side.nir.normalized.histogram.bin.6.127_153$side.nir.normalized.histogram.bin.7.153_178$side.nir.normalized.histogram.bin.8.178_204$side.nir.normalized.histogram.bin.9.204_229$side.nir.normalized.histogram.bin.10.229_255")
+ #		descriptorSetName <- c("NIR absorption class (%)")
+ 			
+ 		#descriptorSet <- c("Plant ID$Treatment$Hallo$Wert1$Repl ID")
+ 		#descriptorSetName <- c("VariableMix")
+ 	
+ #		descriptorSet <- c("side.fluo.normalized.histogram.bin.1.0_25$side.fluo.normalized.histogram.bin.2.25_51$side.fluo.normalized.histogram.bin.3.51_76$side.fluo.normalized.histogram.bin.4.76_102$side.fluo.normalized.histogram.bin.5.102_127$side.fluo.normalized.histogram.bin.6.127_153$side.fluo.normalized.histogram.bin.7.153_178$side.fluo.normalized.histogram.bin.8.178_204$side.fluo.normalized.histogram.bin.9.204_229$side.fluo.normalized.histogram.bin.10.229_255")
+ #		#descriptorSet <- c("side.fluo.normalized.histogram.bin.2.25_51$side.fluo.normalized.histogram.bin.1.0_25$side.fluo.normalized.histogram.bin.3.51_76$side.fluo.normalized.histogram.bin.4.76_102$side.fluo.normalized.histogram.bin.5.102_127$side.fluo.normalized.histogram.bin.6.127_153$side.fluo.normalized.histogram.bin.7.153_178$side.fluo.normalized.histogram.bin.8.178_204$side.fluo.normalized.histogram.bin.9.204_229$side.fluo.normalized.histogram.bin.10.229_255")
+ #		descriptorSetName <- c("red fluorescence histogram (%)")
+ 	
+ 	
+ 		#descriptorSet <- c("Weight B (g)","side.height.norm (mm)","side.width.norm (mm)","side.area.norm (mm^2)",
+ 		#		"side.fluo.intensity.chlorophyl.average (relative)","side.fluo.intensity.phenol.average (relative)",
+ 		#		"side.nir.intensity.average (relative)",
+ 		#		"side.leaf.count.median (leafs)","side.bloom.count (tassel)","side.leaf.length.sum.norm.max (mm)")
+ 			
+ 		# "digital biomass IAP (pixel^3)","digital biomass KeyGene (pixel^3)", 
+ 		#descriptorSetName <- c("weight (g)","height (mm)", "width (mm)", "side area (pixel^2)",
+ 		#		"chlorophyl intensity (relative intensity/pixel)", "fluorescence intensity (relative intensity/pixel)", "nir intensity (relative intensity/pixel)",
+ 		#		"number of leafs (leaf)", "number of tassels (tassel)", "length of leafs plus stem (mm)")
+ 		
+ #		descriptorSet <- c("side.area (px)","side.area.norm (mm^2)")
+ #		descriptorSetName <- c("side area uncorrected (mm^2)", "side area corrected (mm^2)")
+ 		
+ 		#descriptorSet <- c("Hallo2")
+ 		#descriptorSetName <- c("Test")
+ 		
+ 		#descriptorSet <- colnames(workingDataSet)
+ 		#descriptorSetName <- colnames(workingDataSet)
+ 		
+ 		#treatment <- "none"
+ 		treatment <- "Genotype"
+ 		#treatment <- "Treatment"
+ 		#treatment <- "Condition"
+ 		#filterTreatment <- "dry$normal$wet"
+ 		#filterTreatment <- "dry$normal"
+ 		#filterTreatment <- "normal bewaessert$Trockentress"
+ 		#filterTreatment <- "ganz"
+ 		filterTreatment <- "none"
+ 		##filterTreatment <- "Deutschland$Spanien$Italien$China"
+ 		
+ 		#secondTreatment <- "Genotype"
+ 		secondTreatment <- "none"
+ 		#secondTreatment <- "Species"
+ 		#secondTreatment <- "Variety"
+ 		filterSecondTreatment <- "none"
+ 		
+ 		#secondTreatment <- "secondTreatment"
+ 		#filterSecondTreatment <- "a$c"
+ 		
+ 		###1116BA#########6 8 10 12 13 14 15 16 17 19 20 21 22 23 24 25 26 27 28 29 30 31 33 34 35 36 37 38 39 40
+ 		#filterXaxis <- c("6$8$10$12$13$14$15$16$20$21$22$23$26$27$28$29$30$31$33$34$35$36$37$38")
+ 		#filterXaxis <- c("6$8$13")
+ 		###1107BA#########2$4$6$8$10$12$13$15$16$21$22$25$27$29$30$31$33$35$36$37$39$41$42$43$45$47$49$50$51$55$57$59$61$63$64
+ 		#filterXaxis <- c("2$4$6$8$10$12$13$15$16$21$22$25$27$29$30$31$33$35$36$37$39$41$43$45$47$49$50$51$55$57$59$61$63$64")
+ 		#filterXaxis <- c("6$8$10")
+ 		filterXaxis <- "none"
+ 		#filterXaxis <- c("6$8$10$12$13$14$15$16$20$21$22$23$26$27$28$29$30$31$33$34$35$36$37$38")
+ 		
+ 		#treatment <- "Treatment"
+ 		##treatment <- "Variety"
+ 		#treatment <- "none"
+ 		
+ 		#diagramTyp="boxplotStacked"
+ 		#diagramTyp="nboxplot"
+ 		#diagramTyp="boxplot"
+ 		
+ 		bgColor <- "transparent"
+ 		isGray="FALSE"
+ 		#transparent <- "TRUE"
+ 		#legendUnderImage <- "TRUE"
+ 		#showResultInR <- TRUE
+ 		showResultInR <- FALSE
+ 		
+ 		#fileName <- "numeric_data.MaizeAnalysisAction_ 1116BA_new3.csv"
+ 		#fileName <- "testDataset2.csv"
+ 		fileName <- "report.csv"
+ 		#fileName <- "testDataset3.csv"
+ 		#englischVersion <- FALSE
+ 		#englischVersion <- TRUE
+ 		separation <- ";"
+ 		workingDataSet <- separation %getData% fileName
+ 		
+ 		#descriptor <- c("Hallo2")
+ 		#descriptor <- c("Plant ID","Treatment","Hallo","Wert1", "Repl ID")
+ 		#descriptor <- c("Repl ID")		
+ 		#descriptorSet <- c("nir.top")
+ 		#descriptorSet <- c("Plant ID")
+ 		#descriptorSet <- c("side.height.norm (mm)")
+ 
+ 		#descriptorSet <- c("side.area.norm (mm^2)")
+ 		#descriptorSetName <- c("Das ist ein Testname")
+ 		if(TRUE) {
+ 			
+ 			descriptorSet_nBoxplot <- c("Weight A (g)","Weight B (g)","Water (weight-diff)","side.height.norm (mm)","side.width.norm (mm)","side.area.norm (mm^2)", "top.area.norm (mm^2)",
+ 					"side.fluo.intensity.chlorophyl.average (relative)","side.fluo.intensity.phenol.average (relative)",
+ 					"side.nir.intensity.average (relative)","side.leaf.count.median (leafs)","side.bloom.count (tassel)",
+ 					"side.leaf.length.sum.norm.max (mm)", "volume.fluo.iap","volume.iap (px^3)", "volume.iap_max", "volume.lt (px^3)",
+ 					"volume.iap.wue", "side.nir.wetness.plant_weight_drought_loss", "top.nir.wetness.plant_weight_drought_loss", "side.nir.wetness.av", "top.nir.wetness.av",
+ 					"side.area.relative", "side.height.norm.relative", "side.width.norm.relative", "top.area.relative", "side.area.relative", "volume.iap.relative",
+ 					"side.height (mm)","side.width (mm)","side.area (px)", "top.area (px)")
+ 			
+ 			descriptorSetName_nBoxplot <- c("weight before watering (g)","weight after watering (g)", "water weight (g)", "normalized height (mm)", "normalized width (mm)", "normalized side area (mm^2)", "normalized top area (mm^2)",
+ 					"chlorophyl intensity (relative intensity/pixel)", "fluorescence intensity (relative intensity/pixel)", "nir intensity (relative intensity/pixel)",
+ 					"number of leafs (leaf)", "number of tassels (tassel)", "length of leafs plus stem (mm)", "volume based on FLUO (IAP) (px^3)", "volume based on RGB (IAP) (px^3)", "volume based on max RGB-image (IAP) (px^3)", "volume based on RGB (LemnaTec) (px^3)",
+ 					"volume based water use efficiency", "weighted loss through drought stress (side)", "weighted loss through drought stress (top)", "Average wetness of side image", "Average wetness of top image",
+ 					"relative projected side area (%)", "relative plant height (%)", "relative plant width (%)", "relative projected top area (%)", "relative projected side area (%)", "relative volume (IAP based formular - RGB) (%)",
+ 					"height (px)", "width (px)", "side area (px)", "top area (px)")		
+ 		
+ 		nBoxOptions= NULL
+ 		#diagramTypVector <- rep.int("nboxplot", times=length(descriptorSetName))
+ 		
+ 		
+ 		#boxplot
+ 		descriptorSet_boxplot <- c("side.height.norm (mm)","side.width.norm (mm)","side.area.norm (mm^2)", "top.area.norm (mm^2)",
+ 				"volume.fluo.iap","volume.iap (px^3)", "volume.iap_max", "volume.lt (px^3)",
+ 				"side.height (mm)","side.width (mm)","side.area (px)", "top.area (px)")
+ 		
+ 		descriptorSetName_boxplot <- c("normalized height (mm)", "normalized width (mm)", "normalized side area (mm^2)", "normalized top area (mm^2)",
+ 				"volume based on FLUO (IAP) (px^3)", "volume based on RGB (IAP) (px^3)", "volume based on max RGB-image (IAP) (px^3)", "volume based on RGB (LemnaTec) (px^3)",
+ 				"height (px)", "width (px)", "side area (px)", "top area (px)")	
+ 		
+ 		boxOptions= NULL
+ 		#diagramTypVectorBox <- rep.int("boxplot", times=length(descriptorSetBox))
+ 		
+ 		#descriptorSet <- c(descriptorSet, descriptorSetBox)
+ 		#descriptorSetName <- c(descriptorSetName, descriptorSetNameBox)
+ 		#diagramTypVector <- c(diagramTypVector, diagramTypVectorBox)
+ 		
+ 		#boxplotStacked
+ 		descriptorSet_boxplotStacked <- c("side.nir.normalized.histogram.bin.1.0_25$side.nir.normalized.histogram.bin.2.25_51$side.nir.normalized.histogram.bin.3.51_76$side.nir.normalized.histogram.bin.4.76_102$side.nir.normalized.histogram.bin.5.102_127$side.nir.normalized.histogram.bin.6.127_153$side.nir.normalized.histogram.bin.7.153_178$side.nir.normalized.histogram.bin.8.178_204$side.nir.normalized.histogram.bin.9.204_229$side.nir.normalized.histogram.bin.10.229_255",
+ 				"side.fluo.histogram.bin.1.0_25$side.fluo.histogram.bin.2.25_51$side.fluo.histogram.bin.3.51_76$side.fluo.histogram.bin.4.76_102$side.fluo.histogram.bin.5.102_127$side.fluo.histogram.bin.6.127_153$side.fluo.histogram.bin.7.153_178$side.fluo.histogram.bin.8.178_204$side.fluo.histogram.bin.9.204_229$side.fluo.histogram.bin.10.229_255",
+ 				"top.nir.histogram.bin.1.0_25$top.nir.histogram.bin.2.25_51$top.nir.histogram.bin.3.51_76$top.nir.histogram.bin.4.76_102$top.nir.histogram.bin.5.102_127$top.nir.histogram.bin.6.127_153$top.nir.histogram.bin.7.153_178$top.nir.histogram.bin.8.178_204$top.nir.histogram.bin.9.204_229$top.nir.histogram.bin.10.229_255",
+ 				"side.fluo.histogram.phenol.bin.1.0_25$side.fluo.histogram.phenol.bin.2.25_51$side.fluo.histogram.phenol.bin.3.51_76$side.fluo.histogram.phenol.bin.4.76_102$side.fluo.histogram.phenol.bin.5.102_127$side.fluo.histogram.phenol.bin.6.127_153$side.fluo.histogram.phenol.bin.7.153_178$side.fluo.histogram.phenol.bin.8.178_204$side.fluo.histogram.phenol.bin.9.204_229$side.fluo.histogram.phenol.bin.10.229_255",
+ 				"side.fluo.histogram.ratio.bin.1.0_25$side.fluo.histogram.ratio.bin.2.25_51$side.fluo.histogram.ratio.bin.3.51_76$side.fluo.histogram.ratio.bin.4.76_102$side.fluo.histogram.ratio.bin.5.102_127$side.fluo.histogram.ratio.bin.6.127_153$side.fluo.histogram.ratio.bin.7.153_178$side.fluo.histogram.ratio.bin.8.178_204$side.fluo.histogram.ratio.bin.9.204_229$side.fluo.histogram.ratio.bin.10.229_255",
+ 				"side.nir.normalized.histogram.bin.1.0_25$side.nir.normalized.histogram.bin.2.25_51$side.nir.normalized.histogram.bin.3.51_76$side.nir.normalized.histogram.bin.4.76_102$side.nir.normalized.histogram.bin.5.102_127$side.nir.normalized.histogram.bin.6.127_153$side.nir.normalized.histogram.bin.7.153_178$side.nir.normalized.histogram.bin.8.178_204$side.nir.normalized.histogram.bin.9.204_229$side.nir.normalized.histogram.bin.10.229_255",
+ 				"side.fluo.normalized.histogram.bin.1.0_25$side.fluo.normalized.histogram.bin.2.25_51$side.fluo.normalized.histogram.bin.3.51_76$side.fluo.normalized.histogram.bin.4.76_102$side.fluo.normalized.histogram.bin.5.102_127$side.fluo.normalized.histogram.bin.6.127_153$side.fluo.normalized.histogram.bin.7.153_178$side.fluo.normalized.histogram.bin.8.178_204$side.fluo.normalized.histogram.bin.9.204_229$side.fluo.normalized.histogram.bin.10.229_255",
+ 				"side.fluo.normalized.histogram.phenol.bin.1.0_25$side.fluo.normalized.histogram.phenol.bin.2.25_51$side.fluo.normalized.histogram.phenol.bin.3.51_76$side.fluo.normalized.histogram.phenol.bin.4.76_102$side.fluo.normalized.histogram.phenol.bin.5.102_127$side.fluo.normalized.histogram.phenol.bin.6.127_153$side.fluo.normalized.histogram.phenol.bin.7.153_178$side.fluo.normalized.histogram.phenol.bin.8.178_204$side.fluo.normalized.histogram.phenol.bin.9.204_229$side.fluo.normalized.histogram.phenol.bin.10.229_255",
+ 				"side.fluo.normalized.histogram.ratio.bin.1.0_25$side.fluo.normalized.histogram.ratio.bin.2.25_51$side.fluo.normalized.histogram.ratio.bin.3.51_76$side.fluo.normalized.histogram.ratio.bin.4.76_102$side.fluo.normalized.histogram.ratio.bin.5.102_127$side.fluo.normalized.histogram.ratio.bin.6.127_153$side.fluo.normalized.histogram.ratio.bin.7.153_178$side.fluo.normalized.histogram.ratio.bin.8.178_204$side.fluo.normalized.histogram.ratio.bin.9.204_229$side.fluo.normalized.histogram.ratio.bin.10.229_255",
+ 				"side.nir.histogram.phenol.bin.1.0_25$side.nir.histogram.phenol.bin.2.25_51$side.nir.histogram.phenol.bin.3.51_76$side.nir.histogram.phenol.bin.4.76_102$side.nir.histogram.phenol.bin.5.102_127$side.nir.histogram.phenol.bin.6.127_153$side.nir.histogram.phenol.bin.7.153_178$side.nir.histogram.phenol.bin.8.178_204$side.nir.histogram.phenol.bin.9.204_229$side.nir.histogram.phenol.bin.10.229_255",
+ 				"side.nir.histogram.ratio.bin.1.0_25$side.nir.histogram.ratio.nir.2.25_51$side.nir.histogram.ratio.bin.3.51_76$side.nir.histogram.ratio.bin.4.76_102$side.nir.histogram.ratio.bin.5.102_127$side.nir.histogram.ratio.bin.6.127_153$side.nir.histogram.ratio.bin.7.153_178$side.nir.histogram.ratio.bin.8.178_204$side.nir.histogram.ratio.bin.9.204_229$side.nir.histogram.ratio.bin.10.229_255",
+ 				"side.vis.hue.histogram.ratio.bin.1.0_25$side.vis.hue.histogram.ratio.nir.2.25_51$side.vis.hue.histogram.ratio.bin.3.51_76$side.vis.hue.histogram.ratio.bin.4.76_102$side.vis.hue.histogram.ratio.bin.5.102_127$side.vis.hue.histogram.ratio.bin.6.127_153$side.vis.hue.histogram.ratio.bin.7.153_178$side.vis.hue.histogram.ratio.bin.8.178_204$side.vis.hue.histogram.ratio.bin.9.204_229$side.vis.hue.histogram.ratio.bin.10.229_255",
+ 				"side.vis.normalized.histogram.ratio.bin.1.0_25$side.vis.normalized.histogram.ratio.bin.2.25_51$side.vis.normalized.histogram.ratio.bin.3.51_76$side.vis.normalized.histogram.ratio.bin.4.76_102$side.vis.normalized.histogram.ratio.bin.5.102_127$side.vis.normalized.histogram.ratio.bin.6.127_153$side.vis.normalized.histogram.ratio.bin.7.153_178$side.vis.normalized.histogram.ratio.bin.8.178_204$side.vis.normalized.histogram.ratio.bin.9.204_229$side.vis.normalized.histogram.ratio.bin.10.229_255",
+ 				"top.fluo.histogram.bin.1.0_25$top.fluo.histogram.bin.2.25_51$top.fluo.histogram.bin.3.51_76$top.fluo.histogram.bin.4.76_102$top.fluo.histogram.bin.5.102_127$top.fluo.histogram.bin.6.127_153$top.fluo.histogram.bin.7.153_178$top.fluo.histogram.bin.8.178_204$top.fluo.histogram.bin.9.204_229$top.fluo.histogram.bin.10.229_255",
+ 				"top.fluo.histogram.phenol.bin.1.0_25$top.fluo.histogram.phenol.bin.2.25_51$top.fluo.histogram.phenol.bin.3.51_76$top.fluo.histogram.phenol.bin.4.76_102$top.fluo.histogram.phenol.bin.5.102_127$top.fluo.histogram.phenol.bin.6.127_153$top.fluo.histogram.phenol.bin.7.153_178$top.fluo.histogram.phenol.bin.8.178_204$top.fluo.histogram.phenol.bin.9.204_229$top.fluo.histogram.phenol.bin.10.229_255",
+ 				"top.fluo.histogram.ratio.bin.1.0_25$top.fluo.histogram.ratio.bin.2.25_51$top.fluo.histogram.ratio.bin.3.51_76$top.fluo.histogram.ratio.bin.4.76_102$top.fluo.histogram.ratio.bin.5.102_127$top.fluo.histogram.ratio.bin.6.127_153$top.fluo.histogram.ratio.bin.7.153_178$top.fluo.histogram.ratio.bin.8.178_204$top.fluo.histogram.ratio.bin.9.204_229$top.fluo.histogram.ratio.bin.10.229_255",
+ 				"top.nir.histogram.bin.1.0_25$top.nir.histogram.bin.2.25_51$top.nir.histogram.bin.3.51_76$top.nir.histogram.bin.4.76_102$top.nir.histogram.bin.5.102_127$top.nir.histogram.bin.6.127_153$top.nir.histogram.bin.7.153_178$top.nir.histogram.bin.8.178_204$top.nir.histogram.bin.9.204_229$top.nir.histogram.bin.10.229_255",
+ 				"top.nir.histogram.phenol.bin.1.0_25$top.nir.histogram.phenol.bin.2.25_51$top.nir.histogram.phenol.bin.3.51_76$top.nir.histogram.phenol.bin.4.76_102$top.nir.histogram.phenol.bin.5.102_127$top.nir.histogram.phenol.bin.6.127_153$top.nir.histogram.phenol.bin.7.153_178$top.nir.histogram.phenol.bin.8.178_204$top.nir.histogram.phenol.bin.9.204_229$top.nir.histogram.phenol.bin.10.229_255",
+ 				"top.nir.histogram.ratio.bin.1.0_25$top.nir.histogram.ratio.bin.2.25_51$top.nir.histogram.ratio.bin.3.51_76$top.nir.histogram.ratio.bin.4.76_102$top.nir.histogram.ratio.bin.5.102_127$top.nir.histogram.ratio.bin.6.127_153$top.nir.histogram.ratio.bin.7.153_178$top.nir.histogram.ratio.bin.8.178_204$top.nir.histogram.ratio.bin.9.204_229$top.nir.histogram.ratio.bin.10.229_255",
+ 				"top.vis.hue.histogram.ratio.bin.1.0_25$top.vis.hue.histogram.ratio.nir.2.25_51$top.vis.hue.histogram.ratio.bin.3.51_76$top.vis.hue.histogram.ratio.bin.4.76_102$top.vis.hue.histogram.ratio.bin.5.102_127$top.vis.hue.histogram.ratio.bin.6.127_153$top.vis.hue.histogram.ratio.bin.7.153_178$top.vis.hue.histogram.ratio.bin.8.178_204$top.vis.hue.histogram.ratio.bin.9.204_229$top.vis.hue.histogram.ratio.bin.10.229_255")
+ 		
+ 		
+ 		
+ 		
+ 		descriptorSetName_boxplotStacked <- c("NIR side (%)", "red side fluorescence histogram (%)", "NIR top (%)", "yellow side fluorescence histogram (%)", "fluo side ratio histogramm (%)",
+ 				"NIR side normalized (%)", "red side normalized fluo histogramm (%)", "yellow side normalized fluo histogramm (%)", "fluo side normalized ratio histogramm (%)",
+ 				"NIR side phenol (%)", "NIR side ratio histogramm (%)", "VIS HUE side ratio histogramm (%)", "VIS side normalized ratio histogramm (%)",
+ 				"red top fluorescence histogram (%)", "yellow top fluorescence histogram (%)","fluo top ratio histogramm (%)",
+ 				"NIR top (%)", "NIR top phenol histogram (%)","NIR top ratio histogramm (%)",
+ 				"VIS HUE top ratio histogramm (%)")
+ 		
+ 		stackedBarOptions = list(typOfGeomBar=c("fill", "stack", "dodge"))
+ 		#diagramTypVector <- c(diagramTypVector, "boxplotStacked", "boxplotStacked")
+ 		} else {
+ 
+ 			descriptorSet_nBoxplot <- c("side.area.norm (mm^2)", "Weight A (g)","side.height.norm (mm)")
+ 			descriptorSetName_nBoxplot <- c("Area", "Gewicht", "Heigh")
+ 	
+ 			descriptorSet_boxplot <- c("side.area.norm (mm^2)", "side.height.norm (mm)")
+ 			descriptorSetName_boxplot <- c("Area Boxplot", "Heigh Boxplot")
+ 			
+ 	#		descriptorSet_boxplotStacked <- c("side.nir.normalized.histogram.bin.1.0_25$side.nir.normalized.histogram.bin.2.25_51$side.nir.normalized.histogram.bin.3.51_76$side.nir.normalized.histogram.bin.4.76_102$side.nir.normalized.histogram.bin.5.102_127$side.nir.normalized.histogram.bin.6.127_153$side.nir.normalized.histogram.bin.7.153_178$side.nir.normalized.histogram.bin.8.178_204$side.nir.normalized.histogram.bin.9.204_229$side.nir.normalized.histogram.bin.10.229_255",
+ 	#										  "side.fluo.normalized.histogram.bin.1.0_25$side.fluo.normalized.histogram.bin.2.25_51$side.fluo.normalized.histogram.bin.3.51_76$side.fluo.normalized.histogram.bin.4.76_102$side.fluo.normalized.histogram.bin.5.102_127$side.fluo.normalized.histogram.bin.6.127_153$side.fluo.normalized.histogram.bin.7.153_178$side.fluo.normalized.histogram.bin.8.178_204$side.fluo.normalized.histogram.bin.9.204_229$side.fluo.normalized.histogram.bin.10.229_255")
+ 			
+ 			descriptorSet_boxplotStacked <- c("side.fluo.normalized.histogram.bin.1.0_25$side.fluo.normalized.histogram.bin.2.25_51$side.fluo.normalized.histogram.bin.3.51_76$side.fluo.normalized.histogram.bin.4.76_102$side.fluo.normalized.histogram.bin.5.102_127$side.fluo.normalized.histogram.bin.6.127_153$side.fluo.normalized.histogram.bin.7.153_178$side.fluo.normalized.histogram.bin.8.178_204$side.fluo.normalized.histogram.bin.9.204_229$side.fluo.normalized.histogram.bin.10.229_255",
+ 									  "side.nir.normalized.histogram.bin.1.0_25$side.nir.normalized.histogram.bin.2.25_51$side.nir.normalized.histogram.bin.3.51_76$side.nir.normalized.histogram.bin.4.76_102$side.nir.normalized.histogram.bin.5.102_127$side.nir.normalized.histogram.bin.6.127_153$side.nir.normalized.histogram.bin.7.153_178$side.nir.normalized.histogram.bin.8.178_204$side.nir.normalized.histogram.bin.9.204_229$side.nir.normalized.histogram.bin.10.229_255",
+ 									  "top.nir.histogram.bin.1.0_25$top.nir.histogram.bin.2.25_51$top.nir.histogram.bin.3.51_76$top.nir.histogram.bin.4.76_102$top.nir.histogram.bin.5.102_127$top.nir.histogram.bin.6.127_153$top.nir.histogram.bin.7.153_178$top.nir.histogram.bin.8.178_204$top.nir.histogram.bin.9.204_229$top.nir.histogram.bin.10.229_255")
+ 			
+ 			descriptorSetName_boxplotStacked <- c("red fluorescence histogram (%)", "NIR absorption class (%)", "NIR Top")
+ 		
+ 			
+ 			nBoxOptions= NULL
+ 			boxOptions= NULL
+ 			stackedBarOptions = list(typOfGeomBar=c("fill", "stack", "dodge"))
+ 		}	
+ 	
+ 		
+ 		#descriptorSet <- c("Plant ID$Treatment$Hallo$Wert1$Repl ID")
+ 		#diagramTypVector <- diagramTyp
+ 		#diagramTypVector <- rep.int(diagramTyp, times=length(descriptorSetName))
+ 		
+ 		
+ 
+ 		nBoxDes = descriptorSet_nBoxplot
+ 		boxDes = descriptorSet_boxplot
+ 		boxStackDes = descriptorSet_boxplotStacked
+ 		SaveName_nBoxDes = nBoxDes
+ 		SaveName_boxDes = boxDes
+ 		SaveName_boxStackDes = boxStackDes
+ 		nBoxDesName = descriptorSetName_nBoxplot
+ 		boxDesName = descriptorSetName_boxplot
+ 		boxStackDesName = descriptorSetName_boxplotStacked
+ 
+ 		saveName <- "test2"
+ 		yAxisName <- "test2"
+ 		debug <- TRUE
+ 		iniDataSet = workingDataSet
+ 		#descriptor <- c("Plant ID$Treatment$Hallo$Wert1$Repl ID")
+ 		#descriptor <- c("side.area.norm (mm^2)")
+ 		#descriptorSet <- c("side.fluo.bloom.area.size (mm^2)")
+ 		#descriptor <- c("side.fluo.bloom.area.size (mm^2)")
+ 		descriptor <- descriptorSet
+ 		#descriptor <- c("Repl ID")
+ 		#descriptor <- c("side.nir.normalized.histogram.bin.1.0_25$side.nir.normalized.histogram.bin.2.25_51$side.nir.normalized.histogram.bin.3.51_76$side.nir.normalized.histogram.bin.4.76_102$side.nir.normalized.histogram.bin.5.102_127$side.nir.normalized.histogram.bin.6.127_153$side.nir.normalized.histogram.bin.7.153_178$side.nir.normalized.histogram.bin.8.178_204$side.nir.normalized.histogram.bin.9.204_229$side.nir.normalized.histogram.bin.10.229_255")
+ 		appendix <- FALSE
+ 		stoppTheCalculation <- FALSE
+ 		
+ }
[1] "... Read input file"
Read 2 items
[1] "... english Version"
> overallList <- list(iniDataSet=iniDataSet, saveFormat=saveFormat, dpi=dpi, isGray=isGray, 
+ 						nBoxDes = nBoxDes, boxDes = boxDes, boxStackDes = boxStackDes,
+ 						saveName_nBoxDes = nBoxDes, saveName_boxDes = boxDes, saveName_boxStackDes = boxStackDes,
+ 						nBoxDesName = nBoxDesName, boxDesName = boxDesName, boxStackDesName = boxStackDesName,
+ 						nBoxOptions= nBoxOptions, boxOptions= boxOptions, stackedBarOptions = stackedBarOptions, 
+ 						treatment=treatment, filterTreatment=filterTreatment,
+ 						secondTreatment=secondTreatment, filterSecondTreatment=filterSecondTreatment, filterXaxis=filterXaxis, xAxis=xAxis,
+ 						showResultInR=showResultInR, xAxisName=xAxisName, debug=debug, 
+ 						appendix=appendix, stoppTheCalculation=stoppTheCalculation,
+ 						overallResult_nBoxDes=data.frame(), overallResult_boxDes=data.frame(), overallResult_boxStackDes=data.frame(),
+ 						color_nBox = list(), color_box=list(), color_boxStack=list())	
> 				
> 	#install.packages(c("Cairo"), repos="http://cran.r-project.org", dependencies = TRUE)
> 	library("Cairo")
> 	#install.packages(c("RColorBrewer"), repos="http://cran.r-project.org", dependencies = TRUE)
> 	library("RColorBrewer")
> 	#install.packages(c("data.table"), repos="http://cran.r-project.org", dependencies = TRUE)
> 	library(data.table)
> 	#install.packages(c("ggplot2"), repos="http://cran.r-project.org", dependencies = TRUE)
> 	library(ggplot2)
> 	#install.packages(c("Hmisc"), repos="http://cran.r-project.org", dependencies = TRUE)
> 	#library("Hmisc")
> 	
> 	overallList$debug %debug% "Start"
[1] "DebugBreakPoint:  Start"
> 	
> 	overallList <- overallChangeName(overallList)
[1] "DebugBreakPoint:  overallChangeSaveName()"
[1] "... nBoxplot"
[1] "... Boxplot"
[1] "... stackedBoxplot"
> 	overallList <- overallPreprocessingOfDescriptor(overallList)
[1] "DebugBreakPoint:  overallPreprocessingOfDescriptor()"
[1] "... nBoxplot"
[1] "No plotting, because the descriptor(s) (top.area.norm..mm.2.) don't exists!"
[1] "No plotting, because the descriptor(s) (side.nir.wetness.av) don't exists!"
[1] "No plotting, because the descriptor(s) (top.nir.wetness.av) don't exists!"
[1] "... Boxplot"
[1] "No plotting, because the descriptor(s) (top.area.norm..mm.2.) don't exists!"
[1] "... stackedBoxplot"
[1] "No plotting, because the descriptor(s) (side.nir.histogram.ratio.nir.2.25_51) don't exists!"
[1] "No plotting, because the descriptor(s) (side.vis.hue.histogram.ratio.nir.2.25_51) don't exists!"
[1] "No plotting, because the descriptor(s) (top.vis.hue.histogram.ratio.nir.2.25_51) don't exists!"
> 	
> 	
> ###############################	
> 	overallList <- preprocessingOfxAxisValue(overallList)
[1] "DebugBreakPoint:  preprocessingOfxAxisValue()"
> 	overallList <- preprocessingOfTreatment(overallList)
[1] "DebugBreakPoint:  preprocessingOfTheTreatment()"
> 	overallList <- preprocessingOfSecondTreatment(overallList)
[1] "DebugBreakPoint:  preprocessingOfTheSecondTreatment()"
[1] "... set 'filterSecondTreatment' and 'secondTreatment' to 'none'!"
> 	overallList <- overallCheckIfDescriptorIsNaOrAllZero(overallList)
[1] "DebugBreakPoint:  overallCheckIfDescriptorIsNaOrAllZero()"
[1] "... nBoxplot"
[1] "Dummy plotting for this descriptor(s) ((side.bloom.count..tassel.), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((side.nir.wetness.plant_weight_drought_loss), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((top.nir.wetness.plant_weight_drought_loss), because all zero or not numeric!"
[1] "... Boxplot"
[1] "... stackedBoxplot"
[1] "Dummy plotting for this descriptor(s) ((side.nir.normalized.histogram.bin.1.0_25), because all zero or not numeric!"    
[2] "Dummy plotting for this descriptor(s) ((side.nir.normalized.histogram.bin.2.25_51), because all zero or not numeric!"   
[3] "Dummy plotting for this descriptor(s) ((side.nir.normalized.histogram.bin.8.178_204), because all zero or not numeric!" 
[4] "Dummy plotting for this descriptor(s) ((side.nir.normalized.histogram.bin.9.204_229), because all zero or not numeric!" 
[5] "Dummy plotting for this descriptor(s) ((side.nir.normalized.histogram.bin.10.229_255), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((side.fluo.histogram.bin.9.204_229), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((top.nir.histogram.bin.1.0_25), because all zero or not numeric!"    
[2] "Dummy plotting for this descriptor(s) ((top.nir.histogram.bin.10.229_255), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((side.fluo.histogram.phenol.bin.8.178_204), because all zero or not numeric!"
[2] "Dummy plotting for this descriptor(s) ((side.fluo.histogram.phenol.bin.9.204_229), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((side.fluo.histogram.ratio.bin.2.25_51), because all zero or not numeric!"  
[2] "Dummy plotting for this descriptor(s) ((side.fluo.histogram.ratio.bin.3.51_76), because all zero or not numeric!"  
[3] "Dummy plotting for this descriptor(s) ((side.fluo.histogram.ratio.bin.9.204_229), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((side.nir.normalized.histogram.bin.1.0_25), because all zero or not numeric!"    
[2] "Dummy plotting for this descriptor(s) ((side.nir.normalized.histogram.bin.2.25_51), because all zero or not numeric!"   
[3] "Dummy plotting for this descriptor(s) ((side.nir.normalized.histogram.bin.8.178_204), because all zero or not numeric!" 
[4] "Dummy plotting for this descriptor(s) ((side.nir.normalized.histogram.bin.9.204_229), because all zero or not numeric!" 
[5] "Dummy plotting for this descriptor(s) ((side.nir.normalized.histogram.bin.10.229_255), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((side.fluo.normalized.histogram.bin.9.204_229), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((side.fluo.normalized.histogram.phenol.bin.8.178_204), because all zero or not numeric!"
[2] "Dummy plotting for this descriptor(s) ((side.fluo.normalized.histogram.phenol.bin.9.204_229), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((side.fluo.normalized.histogram.ratio.bin.2.25_51), because all zero or not numeric!"  
[2] "Dummy plotting for this descriptor(s) ((side.fluo.normalized.histogram.ratio.bin.3.51_76), because all zero or not numeric!"  
[3] "Dummy plotting for this descriptor(s) ((side.fluo.normalized.histogram.ratio.bin.9.204_229), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((side.nir.histogram.phenol.bin.1.0_25), because all zero or not numeric!"    
[2] "Dummy plotting for this descriptor(s) ((side.nir.histogram.phenol.bin.2.25_51), because all zero or not numeric!"   
[3] "Dummy plotting for this descriptor(s) ((side.nir.histogram.phenol.bin.8.178_204), because all zero or not numeric!" 
[4] "Dummy plotting for this descriptor(s) ((side.nir.histogram.phenol.bin.9.204_229), because all zero or not numeric!" 
[5] "Dummy plotting for this descriptor(s) ((side.nir.histogram.phenol.bin.10.229_255), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((side.nir.histogram.ratio.bin.1.0_25), because all zero or not numeric!"    
[2] "Dummy plotting for this descriptor(s) ((side.nir.histogram.ratio.bin.3.51_76), because all zero or not numeric!"   
[3] "Dummy plotting for this descriptor(s) ((side.nir.histogram.ratio.bin.4.76_102), because all zero or not numeric!"  
[4] "Dummy plotting for this descriptor(s) ((side.nir.histogram.ratio.bin.6.127_153), because all zero or not numeric!" 
[5] "Dummy plotting for this descriptor(s) ((side.nir.histogram.ratio.bin.7.153_178), because all zero or not numeric!" 
[6] "Dummy plotting for this descriptor(s) ((side.nir.histogram.ratio.bin.8.178_204), because all zero or not numeric!" 
[7] "Dummy plotting for this descriptor(s) ((side.nir.histogram.ratio.bin.9.204_229), because all zero or not numeric!" 
[8] "Dummy plotting for this descriptor(s) ((side.nir.histogram.ratio.bin.10.229_255), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((side.vis.hue.histogram.ratio.bin.1.0_25), because all zero or not numeric!"    
[2] "Dummy plotting for this descriptor(s) ((side.vis.hue.histogram.ratio.bin.3.51_76), because all zero or not numeric!"   
[3] "Dummy plotting for this descriptor(s) ((side.vis.hue.histogram.ratio.bin.4.76_102), because all zero or not numeric!"  
[4] "Dummy plotting for this descriptor(s) ((side.vis.hue.histogram.ratio.bin.5.102_127), because all zero or not numeric!" 
[5] "Dummy plotting for this descriptor(s) ((side.vis.hue.histogram.ratio.bin.6.127_153), because all zero or not numeric!" 
[6] "Dummy plotting for this descriptor(s) ((side.vis.hue.histogram.ratio.bin.7.153_178), because all zero or not numeric!" 
[7] "Dummy plotting for this descriptor(s) ((side.vis.hue.histogram.ratio.bin.8.178_204), because all zero or not numeric!" 
[8] "Dummy plotting for this descriptor(s) ((side.vis.hue.histogram.ratio.bin.9.204_229), because all zero or not numeric!" 
[9] "Dummy plotting for this descriptor(s) ((side.vis.hue.histogram.ratio.bin.10.229_255), because all zero or not numeric!"
 [1] "Dummy plotting for this descriptor(s) ((side.vis.normalized.histogram.ratio.bin.1.0_25), because all zero or not numeric!"    
 [2] "Dummy plotting for this descriptor(s) ((side.vis.normalized.histogram.ratio.bin.2.25_51), because all zero or not numeric!"   
 [3] "Dummy plotting for this descriptor(s) ((side.vis.normalized.histogram.ratio.bin.3.51_76), because all zero or not numeric!"   
 [4] "Dummy plotting for this descriptor(s) ((side.vis.normalized.histogram.ratio.bin.4.76_102), because all zero or not numeric!"  
 [5] "Dummy plotting for this descriptor(s) ((side.vis.normalized.histogram.ratio.bin.5.102_127), because all zero or not numeric!" 
 [6] "Dummy plotting for this descriptor(s) ((side.vis.normalized.histogram.ratio.bin.6.127_153), because all zero or not numeric!" 
 [7] "Dummy plotting for this descriptor(s) ((side.vis.normalized.histogram.ratio.bin.7.153_178), because all zero or not numeric!" 
 [8] "Dummy plotting for this descriptor(s) ((side.vis.normalized.histogram.ratio.bin.8.178_204), because all zero or not numeric!" 
 [9] "Dummy plotting for this descriptor(s) ((side.vis.normalized.histogram.ratio.bin.9.204_229), because all zero or not numeric!" 
[10] "Dummy plotting for this descriptor(s) ((side.vis.normalized.histogram.ratio.bin.10.229_255), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((top.fluo.histogram.bin.9.204_229), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((top.fluo.histogram.phenol.bin.8.178_204), because all zero or not numeric!"
[2] "Dummy plotting for this descriptor(s) ((top.fluo.histogram.phenol.bin.9.204_229), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((top.fluo.histogram.ratio.bin.2.25_51), because all zero or not numeric!"  
[2] "Dummy plotting for this descriptor(s) ((top.fluo.histogram.ratio.bin.3.51_76), because all zero or not numeric!"  
[3] "Dummy plotting for this descriptor(s) ((top.fluo.histogram.ratio.bin.9.204_229), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((top.nir.histogram.bin.1.0_25), because all zero or not numeric!"    
[2] "Dummy plotting for this descriptor(s) ((top.nir.histogram.bin.10.229_255), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((top.nir.histogram.phenol.bin.1.0_25), because all zero or not numeric!"    
[2] "Dummy plotting for this descriptor(s) ((top.nir.histogram.phenol.bin.10.229_255), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((top.nir.histogram.ratio.bin.1.0_25), because all zero or not numeric!"    
[2] "Dummy plotting for this descriptor(s) ((top.nir.histogram.ratio.bin.2.25_51), because all zero or not numeric!"   
[3] "Dummy plotting for this descriptor(s) ((top.nir.histogram.ratio.bin.3.51_76), because all zero or not numeric!"   
[4] "Dummy plotting for this descriptor(s) ((top.nir.histogram.ratio.bin.4.76_102), because all zero or not numeric!"  
[5] "Dummy plotting for this descriptor(s) ((top.nir.histogram.ratio.bin.6.127_153), because all zero or not numeric!" 
[6] "Dummy plotting for this descriptor(s) ((top.nir.histogram.ratio.bin.7.153_178), because all zero or not numeric!" 
[7] "Dummy plotting for this descriptor(s) ((top.nir.histogram.ratio.bin.8.178_204), because all zero or not numeric!" 
[8] "Dummy plotting for this descriptor(s) ((top.nir.histogram.ratio.bin.9.204_229), because all zero or not numeric!" 
[9] "Dummy plotting for this descriptor(s) ((top.nir.histogram.ratio.bin.10.229_255), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((top.vis.hue.histogram.ratio.bin.1.0_25), because all zero or not numeric!"    
[2] "Dummy plotting for this descriptor(s) ((top.vis.hue.histogram.ratio.bin.3.51_76), because all zero or not numeric!"   
[3] "Dummy plotting for this descriptor(s) ((top.vis.hue.histogram.ratio.bin.4.76_102), because all zero or not numeric!"  
[4] "Dummy plotting for this descriptor(s) ((top.vis.hue.histogram.ratio.bin.5.102_127), because all zero or not numeric!" 
[5] "Dummy plotting for this descriptor(s) ((top.vis.hue.histogram.ratio.bin.6.127_153), because all zero or not numeric!" 
[6] "Dummy plotting for this descriptor(s) ((top.vis.hue.histogram.ratio.bin.7.153_178), because all zero or not numeric!" 
[7] "Dummy plotting for this descriptor(s) ((top.vis.hue.histogram.ratio.bin.8.178_204), because all zero or not numeric!" 
[8] "Dummy plotting for this descriptor(s) ((top.vis.hue.histogram.ratio.bin.9.204_229), because all zero or not numeric!" 
[9] "Dummy plotting for this descriptor(s) ((top.vis.hue.histogram.ratio.bin.10.229_255), because all zero or not numeric!"
Es gab 20 Warnungen (Anzeige mit warnings())
> 	overallList <- reduceWorkingDataSize(overallList)
[1] "DebugBreakPoint:  reduceWorkingDataSize()"
> 	overallList <- setDefaultAxisNames(overallList)	
[1] "DebugBreakPoint:  setDefaultAxisNames()"
> 	overallList <- overallGetResultDataFrame(overallList)
[1] "DebugBreakPoint:  overallGetResultDataFrame()"
[1] "DebugBreakPoint:  buildList()"
[1] "... nBoxplot"
[1] "DebugBreakPoint:  getResultDataFrame()"
[1] "... Boxplot"
[1] "DebugBreakPoint:  getResultDataFrame()"
[1] "... stackedBoxplot"
[1] "DebugBreakPoint:  getResultDataFrame()"
Es gab 13 Warnungen (Anzeige mit warnings())
> 	overallList <- setColor(overallList) 
[1] "DebugBreakPoint:  setColor()"
[1] "... all values are 'NA'"
[1] "... all values are 'NA'"
[1] "... all values are 'NA'"
[1] "... all values are 'NA'"
[1] "... all values are 'NA'"
[1] "... all values are 'NA'"
[1] "... all values are 'NA'"
[1] "... all values are 'NA'"
[1] "... all values are 'NA'"
[1] "... all values are 'NA'"
Es gab 15 Warnungen (Anzeige mit warnings())
> 	makeDiagrams(overallList)
[1] "DebugBreakPoint:  makeDiagrams()"
[1] "... nBoxplot"
[1] "DebugBreakPoint:  makeLinearDiagram()"
[1] "... images 1"
[1] "DebugBreakPoint:  reduceWholeOverallResultToOneValue()"
Fehler in `[.data.frame`(tempOverallResult, , standardColumnName) : 
  undefined columns selected
> overallList <- list(iniDataSet=iniDataSet, saveFormat=saveFormat, dpi=dpi, isGray=isGray, 
+ 						nBoxDes = nBoxDes, boxDes = boxDes, boxStackDes = boxStackDes,
+ 						saveName_nBoxDes = nBoxDes, saveName_boxDes = boxDes, saveName_boxStackDes = boxStackDes,
+ 						nBoxDesName = nBoxDesName, boxDesName = boxDesName, boxStackDesName = boxStackDesName,
+ 						nBoxOptions= nBoxOptions, boxOptions= boxOptions, stackedBarOptions = stackedBarOptions, 
+ 						treatment=treatment, filterTreatment=filterTreatment,
+ 						secondTreatment=secondTreatment, filterSecondTreatment=filterSecondTreatment, filterXaxis=filterXaxis, xAxis=xAxis,
+ 						showResultInR=showResultInR, xAxisName=xAxisName, debug=debug, 
+ 						appendix=appendix, stoppTheCalculation=stoppTheCalculation,
+ 						overallResult_nBoxDes=data.frame(), overallResult_boxDes=data.frame(), overallResult_boxStackDes=data.frame(),
+ 						color_nBox = list(), color_box=list(), color_boxStack=list())	
> 				
> 	#install.packages(c("Cairo"), repos="http://cran.r-project.org", dependencies = TRUE)
> 	library("Cairo")
> 	#install.packages(c("RColorBrewer"), repos="http://cran.r-project.org", dependencies = TRUE)
> 	library("RColorBrewer")
> 	#install.packages(c("data.table"), repos="http://cran.r-project.org", dependencies = TRUE)
> 	library(data.table)
> 	#install.packages(c("ggplot2"), repos="http://cran.r-project.org", dependencies = TRUE)
> 	library(ggplot2)
> 	#install.packages(c("Hmisc"), repos="http://cran.r-project.org", dependencies = TRUE)
> 	#library("Hmisc")
> 	
> 	overallList$debug %debug% "Start"
[1] "DebugBreakPoint:  Start"
> 	
> 	overallList <- overallChangeName(overallList)
[1] "DebugBreakPoint:  overallChangeSaveName()"
[1] "... nBoxplot"
[1] "... Boxplot"
[1] "... stackedBoxplot"
> 	overallList <- overallPreprocessingOfDescriptor(overallList)
[1] "DebugBreakPoint:  overallPreprocessingOfDescriptor()"
[1] "... nBoxplot"
[1] "No plotting, because the descriptor(s) (top.area.norm..mm.2.) don't exists!"
[1] "No plotting, because the descriptor(s) (side.nir.wetness.av) don't exists!"
[1] "No plotting, because the descriptor(s) (top.nir.wetness.av) don't exists!"
[1] "... Boxplot"
[1] "No plotting, because the descriptor(s) (top.area.norm..mm.2.) don't exists!"
[1] "... stackedBoxplot"
[1] "No plotting, because the descriptor(s) (side.nir.histogram.ratio.nir.2.25_51) don't exists!"
[1] "No plotting, because the descriptor(s) (side.vis.hue.histogram.ratio.nir.2.25_51) don't exists!"
[1] "No plotting, because the descriptor(s) (top.vis.hue.histogram.ratio.nir.2.25_51) don't exists!"
> 	
> 	
> ###############################	
> 	overallList <- preprocessingOfxAxisValue(overallList)
[1] "DebugBreakPoint:  preprocessingOfxAxisValue()"
> 	overallList <- preprocessingOfTreatment(overallList)
[1] "DebugBreakPoint:  preprocessingOfTheTreatment()"
> 	overallList <- preprocessingOfSecondTreatment(overallList)
[1] "DebugBreakPoint:  preprocessingOfTheSecondTreatment()"
[1] "... set 'filterSecondTreatment' and 'secondTreatment' to 'none'!"
> 	overallList <- overallCheckIfDescriptorIsNaOrAllZero(overallList)
[1] "DebugBreakPoint:  overallCheckIfDescriptorIsNaOrAllZero()"
[1] "... nBoxplot"
[1] "Dummy plotting for this descriptor(s) ((side.bloom.count..tassel.), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((side.nir.wetness.plant_weight_drought_loss), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((top.nir.wetness.plant_weight_drought_loss), because all zero or not numeric!"
[1] "... Boxplot"
[1] "... stackedBoxplot"
[1] "Dummy plotting for this descriptor(s) ((side.nir.normalized.histogram.bin.1.0_25), because all zero or not numeric!"    
[2] "Dummy plotting for this descriptor(s) ((side.nir.normalized.histogram.bin.2.25_51), because all zero or not numeric!"   
[3] "Dummy plotting for this descriptor(s) ((side.nir.normalized.histogram.bin.8.178_204), because all zero or not numeric!" 
[4] "Dummy plotting for this descriptor(s) ((side.nir.normalized.histogram.bin.9.204_229), because all zero or not numeric!" 
[5] "Dummy plotting for this descriptor(s) ((side.nir.normalized.histogram.bin.10.229_255), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((side.fluo.histogram.bin.9.204_229), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((top.nir.histogram.bin.1.0_25), because all zero or not numeric!"    
[2] "Dummy plotting for this descriptor(s) ((top.nir.histogram.bin.10.229_255), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((side.fluo.histogram.phenol.bin.8.178_204), because all zero or not numeric!"
[2] "Dummy plotting for this descriptor(s) ((side.fluo.histogram.phenol.bin.9.204_229), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((side.fluo.histogram.ratio.bin.2.25_51), because all zero or not numeric!"  
[2] "Dummy plotting for this descriptor(s) ((side.fluo.histogram.ratio.bin.3.51_76), because all zero or not numeric!"  
[3] "Dummy plotting for this descriptor(s) ((side.fluo.histogram.ratio.bin.9.204_229), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((side.nir.normalized.histogram.bin.1.0_25), because all zero or not numeric!"    
[2] "Dummy plotting for this descriptor(s) ((side.nir.normalized.histogram.bin.2.25_51), because all zero or not numeric!"   
[3] "Dummy plotting for this descriptor(s) ((side.nir.normalized.histogram.bin.8.178_204), because all zero or not numeric!" 
[4] "Dummy plotting for this descriptor(s) ((side.nir.normalized.histogram.bin.9.204_229), because all zero or not numeric!" 
[5] "Dummy plotting for this descriptor(s) ((side.nir.normalized.histogram.bin.10.229_255), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((side.fluo.normalized.histogram.bin.9.204_229), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((side.fluo.normalized.histogram.phenol.bin.8.178_204), because all zero or not numeric!"
[2] "Dummy plotting for this descriptor(s) ((side.fluo.normalized.histogram.phenol.bin.9.204_229), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((side.fluo.normalized.histogram.ratio.bin.2.25_51), because all zero or not numeric!"  
[2] "Dummy plotting for this descriptor(s) ((side.fluo.normalized.histogram.ratio.bin.3.51_76), because all zero or not numeric!"  
[3] "Dummy plotting for this descriptor(s) ((side.fluo.normalized.histogram.ratio.bin.9.204_229), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((side.nir.histogram.phenol.bin.1.0_25), because all zero or not numeric!"    
[2] "Dummy plotting for this descriptor(s) ((side.nir.histogram.phenol.bin.2.25_51), because all zero or not numeric!"   
[3] "Dummy plotting for this descriptor(s) ((side.nir.histogram.phenol.bin.8.178_204), because all zero or not numeric!" 
[4] "Dummy plotting for this descriptor(s) ((side.nir.histogram.phenol.bin.9.204_229), because all zero or not numeric!" 
[5] "Dummy plotting for this descriptor(s) ((side.nir.histogram.phenol.bin.10.229_255), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((side.nir.histogram.ratio.bin.1.0_25), because all zero or not numeric!"    
[2] "Dummy plotting for this descriptor(s) ((side.nir.histogram.ratio.bin.3.51_76), because all zero or not numeric!"   
[3] "Dummy plotting for this descriptor(s) ((side.nir.histogram.ratio.bin.4.76_102), because all zero or not numeric!"  
[4] "Dummy plotting for this descriptor(s) ((side.nir.histogram.ratio.bin.6.127_153), because all zero or not numeric!" 
[5] "Dummy plotting for this descriptor(s) ((side.nir.histogram.ratio.bin.7.153_178), because all zero or not numeric!" 
[6] "Dummy plotting for this descriptor(s) ((side.nir.histogram.ratio.bin.8.178_204), because all zero or not numeric!" 
[7] "Dummy plotting for this descriptor(s) ((side.nir.histogram.ratio.bin.9.204_229), because all zero or not numeric!" 
[8] "Dummy plotting for this descriptor(s) ((side.nir.histogram.ratio.bin.10.229_255), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((side.vis.hue.histogram.ratio.bin.1.0_25), because all zero or not numeric!"    
[2] "Dummy plotting for this descriptor(s) ((side.vis.hue.histogram.ratio.bin.3.51_76), because all zero or not numeric!"   
[3] "Dummy plotting for this descriptor(s) ((side.vis.hue.histogram.ratio.bin.4.76_102), because all zero or not numeric!"  
[4] "Dummy plotting for this descriptor(s) ((side.vis.hue.histogram.ratio.bin.5.102_127), because all zero or not numeric!" 
[5] "Dummy plotting for this descriptor(s) ((side.vis.hue.histogram.ratio.bin.6.127_153), because all zero or not numeric!" 
[6] "Dummy plotting for this descriptor(s) ((side.vis.hue.histogram.ratio.bin.7.153_178), because all zero or not numeric!" 
[7] "Dummy plotting for this descriptor(s) ((side.vis.hue.histogram.ratio.bin.8.178_204), because all zero or not numeric!" 
[8] "Dummy plotting for this descriptor(s) ((side.vis.hue.histogram.ratio.bin.9.204_229), because all zero or not numeric!" 
[9] "Dummy plotting for this descriptor(s) ((side.vis.hue.histogram.ratio.bin.10.229_255), because all zero or not numeric!"
 [1] "Dummy plotting for this descriptor(s) ((side.vis.normalized.histogram.ratio.bin.1.0_25), because all zero or not numeric!"    
 [2] "Dummy plotting for this descriptor(s) ((side.vis.normalized.histogram.ratio.bin.2.25_51), because all zero or not numeric!"   
 [3] "Dummy plotting for this descriptor(s) ((side.vis.normalized.histogram.ratio.bin.3.51_76), because all zero or not numeric!"   
 [4] "Dummy plotting for this descriptor(s) ((side.vis.normalized.histogram.ratio.bin.4.76_102), because all zero or not numeric!"  
 [5] "Dummy plotting for this descriptor(s) ((side.vis.normalized.histogram.ratio.bin.5.102_127), because all zero or not numeric!" 
 [6] "Dummy plotting for this descriptor(s) ((side.vis.normalized.histogram.ratio.bin.6.127_153), because all zero or not numeric!" 
 [7] "Dummy plotting for this descriptor(s) ((side.vis.normalized.histogram.ratio.bin.7.153_178), because all zero or not numeric!" 
 [8] "Dummy plotting for this descriptor(s) ((side.vis.normalized.histogram.ratio.bin.8.178_204), because all zero or not numeric!" 
 [9] "Dummy plotting for this descriptor(s) ((side.vis.normalized.histogram.ratio.bin.9.204_229), because all zero or not numeric!" 
[10] "Dummy plotting for this descriptor(s) ((side.vis.normalized.histogram.ratio.bin.10.229_255), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((top.fluo.histogram.bin.9.204_229), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((top.fluo.histogram.phenol.bin.8.178_204), because all zero or not numeric!"
[2] "Dummy plotting for this descriptor(s) ((top.fluo.histogram.phenol.bin.9.204_229), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((top.fluo.histogram.ratio.bin.2.25_51), because all zero or not numeric!"  
[2] "Dummy plotting for this descriptor(s) ((top.fluo.histogram.ratio.bin.3.51_76), because all zero or not numeric!"  
[3] "Dummy plotting for this descriptor(s) ((top.fluo.histogram.ratio.bin.9.204_229), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((top.nir.histogram.bin.1.0_25), because all zero or not numeric!"    
[2] "Dummy plotting for this descriptor(s) ((top.nir.histogram.bin.10.229_255), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((top.nir.histogram.phenol.bin.1.0_25), because all zero or not numeric!"    
[2] "Dummy plotting for this descriptor(s) ((top.nir.histogram.phenol.bin.10.229_255), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((top.nir.histogram.ratio.bin.1.0_25), because all zero or not numeric!"    
[2] "Dummy plotting for this descriptor(s) ((top.nir.histogram.ratio.bin.2.25_51), because all zero or not numeric!"   
[3] "Dummy plotting for this descriptor(s) ((top.nir.histogram.ratio.bin.3.51_76), because all zero or not numeric!"   
[4] "Dummy plotting for this descriptor(s) ((top.nir.histogram.ratio.bin.4.76_102), because all zero or not numeric!"  
[5] "Dummy plotting for this descriptor(s) ((top.nir.histogram.ratio.bin.6.127_153), because all zero or not numeric!" 
[6] "Dummy plotting for this descriptor(s) ((top.nir.histogram.ratio.bin.7.153_178), because all zero or not numeric!" 
[7] "Dummy plotting for this descriptor(s) ((top.nir.histogram.ratio.bin.8.178_204), because all zero or not numeric!" 
[8] "Dummy plotting for this descriptor(s) ((top.nir.histogram.ratio.bin.9.204_229), because all zero or not numeric!" 
[9] "Dummy plotting for this descriptor(s) ((top.nir.histogram.ratio.bin.10.229_255), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((top.vis.hue.histogram.ratio.bin.1.0_25), because all zero or not numeric!"    
[2] "Dummy plotting for this descriptor(s) ((top.vis.hue.histogram.ratio.bin.3.51_76), because all zero or not numeric!"   
[3] "Dummy plotting for this descriptor(s) ((top.vis.hue.histogram.ratio.bin.4.76_102), because all zero or not numeric!"  
[4] "Dummy plotting for this descriptor(s) ((top.vis.hue.histogram.ratio.bin.5.102_127), because all zero or not numeric!" 
[5] "Dummy plotting for this descriptor(s) ((top.vis.hue.histogram.ratio.bin.6.127_153), because all zero or not numeric!" 
[6] "Dummy plotting for this descriptor(s) ((top.vis.hue.histogram.ratio.bin.7.153_178), because all zero or not numeric!" 
[7] "Dummy plotting for this descriptor(s) ((top.vis.hue.histogram.ratio.bin.8.178_204), because all zero or not numeric!" 
[8] "Dummy plotting for this descriptor(s) ((top.vis.hue.histogram.ratio.bin.9.204_229), because all zero or not numeric!" 
[9] "Dummy plotting for this descriptor(s) ((top.vis.hue.histogram.ratio.bin.10.229_255), because all zero or not numeric!"
Es gab 20 Warnungen (Anzeige mit warnings())
> 	overallList <- reduceWorkingDataSize(overallList)
[1] "DebugBreakPoint:  reduceWorkingDataSize()"
> 	overallList <- setDefaultAxisNames(overallList)	
[1] "DebugBreakPoint:  setDefaultAxisNames()"
> 	overallList <- overallGetResultDataFrame(overallList)
[1] "DebugBreakPoint:  overallGetResultDataFrame()"
[1] "DebugBreakPoint:  buildList()"
[1] "... nBoxplot"
[1] "DebugBreakPoint:  getResultDataFrame()"
[1] "... Boxplot"
[1] "DebugBreakPoint:  getResultDataFrame()"
[1] "... stackedBoxplot"
[1] "DebugBreakPoint:  getResultDataFrame()"
Es gab 13 Warnungen (Anzeige mit warnings())
> 	overallList <- setColor(overallList) 
[1] "DebugBreakPoint:  setColor()"
[1] "... all values are 'NA'"
[1] "... all values are 'NA'"
[1] "... all values are 'NA'"
[1] "... all values are 'NA'"
[1] "... all values are 'NA'"
[1] "... all values are 'NA'"
[1] "... all values are 'NA'"
[1] "... all values are 'NA'"
[1] "... all values are 'NA'"
[1] "... all values are 'NA'"
Es gab 15 Warnungen (Anzeige mit warnings())
> overallList$nBoxDes
$`1`
[1] Weight.A..g.
Levels: Weight.A..g.

$`2`
[1] Weight.B..g.
Levels: Weight.B..g.

$`3`
[1] Water..weight.diff.
Levels: Water..weight.diff.

$`4`
[1] side.height.norm..mm.
Levels: side.height.norm..mm.

$`5`
[1] side.width.norm..mm.
Levels: side.width.norm..mm.

$`6`
[1] side.area.norm..mm.2.
Levels: side.area.norm..mm.2.

$`7`
[1] NA

$`8`
[1] side.fluo.intensity.chlorophyl.average..relative.
Levels: side.fluo.intensity.chlorophyl.average..relative.

$`9`
[1] side.fluo.intensity.phenol.average..relative.
Levels: side.fluo.intensity.phenol.average..relative.

$`10`
[1] side.nir.intensity.average..relative.
Levels: side.nir.intensity.average..relative.

$`11`
[1] side.leaf.count.median..leafs.
Levels: side.leaf.count.median..leafs.

$`12`
[1] NA

$`13`
[1] side.leaf.length.sum.norm.max..mm.
Levels: side.leaf.length.sum.norm.max..mm.

$`14`
[1] volume.fluo.iap
Levels: volume.fluo.iap

$`15`
[1] volume.iap..px.3.
Levels: volume.iap..px.3.

$`16`
[1] volume.iap_max
Levels: volume.iap_max

$`17`
[1] volume.lt..px.3.
Levels: volume.lt..px.3.

$`18`
[1] volume.iap.wue
Levels: volume.iap.wue

$`19`
[1] NA

$`20`
[1] NA

$`21`
[1] NA

$`22`
[1] NA

$`23`
[1] side.area.relative
Levels: side.area.relative

$`24`
[1] side.height.norm.relative
Levels: side.height.norm.relative

$`25`
[1] side.width.norm.relative
Levels: side.width.norm.relative

$`26`
[1] top.area.relative
Levels: top.area.relative

$`27`
[1] side.area.relative
Levels: side.area.relative

$`28`
[1] volume.iap.relative
Levels: volume.iap.relative

$`29`
[1] side.height..mm.
Levels: side.height..mm.

$`30`
[1] side.width..mm.
Levels: side.width..mm.

$`31`
[1] side.area..px.
Levels: side.area..px.

$`32`
[1] top.area..px.
Levels: top.area..px.

> #	h=h 
> #	overallResult = overallList$overallResult_nBoxDes
> #	overallColor=overallList$color_nBox
> ##	debug = overallList$debug
> #	overallDescriptor = overallList$nBoxDes
> #	overallDesName = overallLis
> 	h=h 
Fehler: Objekt 'h' nicht gefunden
> 	overallResult = overallList$overallResult_nBoxDes
> 	overallColor=overallList$color_nBox
> #	debug = overallList$debug
> 	overallDescriptor = overallList$nBoxDes
> 	overallDesName = overallLis
Fehler: Objekt 'overallLis' nicht gefunden
> h <- 2
> 	h=h 
> 	overallResult = overallList$overallResult_nBoxDes
> 	overallColor=overallList$color_nBox
> #	debug = overallList$debug
> 	overallDescriptor = overallList$nBoxDes
> 	overallDesName = overallList$nBoxDesName
> tempOverallResult <-  overallResult
> head(tempOverallResult)
       name xAxis    mean1    mean2    mean3    mean4    mean5    mean6
1 Fernandez    12 14222.24 14316.55 94.30303      NaN      NaN      NaN
2 Fernandez    13 14230.30 14296.76 66.45455 515.8003 239.1985 3582.223
3 Fernandez    15 14156.61 14197.97 43.12500 580.9489 357.7420 5105.076
4 Fernandez    16 14133.00 14197.64 64.63636      NaN      NaN      NaN
5 Fernandez    17 14110.58 14197.45 86.87879 657.5638 427.4456 6824.464
6 Fernandez    18 14115.00 14197.42 82.42424      NaN      NaN      NaN
      mean8 mean9    mean10   mean11    mean13    mean14    mean15    mean16
1       NaN   NaN       NaN      NaN       NaN       NaN       NaN       NaN
2 0.4982545     0 0.4682974 4.333333  822.6993  363721.9  363721.9  390453.4
3 0.5221606     0 0.4781860 5.033333 1081.6250  717918.7  717918.7  765791.6
4       NaN   NaN       NaN      NaN       NaN       NaN       NaN       NaN
5 0.5304711     0 0.4801384 5.333333 1409.4839 1139741.6 1139741.6 1205525.8
6       NaN   NaN       NaN      NaN       NaN       NaN       NaN       NaN
     mean17 mean18    mean23    mean24    mean25    mean26    mean27    mean28
1       NaN    NaN       NaN       NaN       NaN       NaN       NaN       NaN
2  361784.1    NaN       NaN       NaN       NaN       NaN       NaN       NaN
3  715574.8    NaN 0.7613692 0.5900634 0.7841904 1.0196135 0.7613692 1.0388182
4       NaN    NaN       NaN       NaN       NaN       NaN       NaN       NaN
5 1136326.8 1939.9 0.6556622 0.5639434 0.5604018 0.7337209 0.6556622 0.8136379
6       NaN    NaN       NaN       NaN       NaN       NaN       NaN       NaN
    mean29   mean30    mean31   mean32       se1        se2       se3      se4
1      NaN      NaN       NaN      NaN 21.071352 20.8882307  1.131505       NA
2 670.9394 311.1364  6061.121 3460.750 25.972924  1.1188807 25.892918 69.25394
3 754.6719 464.7188  8614.750 6765.562 17.919855  0.8974651 15.541308 73.33046
4      NaN      NaN       NaN      NaN 11.450982  0.9293204 11.642643       NA
5 856.4677 556.7419 11577.500 9453.194 11.486487  1.0633352 11.485745 82.51333
6      NaN      NaN       NaN      NaN  9.624188  1.2997669 10.099599       NA
       se5      se6        se8 se9        se10      se11     se13      se14
1       NA       NA         NA  NA          NA        NA       NA        NA
2 48.90238  699.767 0.03228020   0 0.010168248 0.5466723 144.9556  98838.87
3 69.74004  934.678 0.03639961   0 0.009786229 0.4901325 189.0518 187562.52
4       NA       NA         NA  NA          NA        NA       NA        NA
5 63.30494 1266.297 0.02871898   0 0.009495662 0.6608946 248.6255 273923.73
6       NA       NA         NA  NA          NA        NA       NA        NA
       se15     se16      se17     se18       se23       se24      se25
1        NA       NA        NA       NA         NA         NA        NA
2  98838.87 103986.5  99083.41       NA         NA         NA        NA
3 187562.52 201755.2 187055.54       NA 0.10988046 0.05638938 0.3099407
4        NA       NA        NA       NA         NA         NA        NA
5 273923.73 284599.4 274298.43 462.6041 0.06346119 0.05170813 0.1302697
6        NA       NA        NA       NA         NA         NA        NA
       se26       se27       se28      se29     se30     se31      se32
1        NA         NA         NA        NA       NA       NA        NA
2        NA         NA         NA  90.08154 63.60514 1184.047  901.8215
3 0.1089024 0.10988046 0.09272520  95.25870 90.59463 1577.257 1852.0174
4        NA         NA         NA        NA       NA       NA        NA
5 0.1537523 0.06346119 0.09800071 107.47247 82.45381 2148.235 2121.5764
6        NA         NA         NA        NA       NA       NA        NA
> names(overallDescriptor)
 [1] "1"  "2"  "3"  "4"  "5"  "6"  "7"  "8"  "9"  "10" "11" "12" "13" "14" "15"
[16] "16" "17" "18" "19" "20" "21" "22" "23" "24" "25" "26" "27" "28" "29" "30"
[31] "31" "32"
> imagesIndex <- "1"
> !is.na(overallDescriptor[[imagesIndex]])
[1] TRUE
> reduceWholeOverallResultToOneValue(tempOverallResult, imagesIndex, overallList$debug, "nboxplot")
[1] "DebugBreakPoint:  reduceWholeOverallResultToOneValue()"
Fehler in `[.data.frame`(tempOverallResult, , standardColumnName) : 
  undefined columns selected
> colNames <- vector()
> colNames <- c("mean", "se")
> "primaerTreatment" %in% tempOverallResult
[1] FALSE
> reduceWholeOverallResultToOneValue <- function(tempOverallResult, imagesIndex, debug, diagramTyp="nboxplot") {
+ 	debug %debug% "reduceWholeOverallResultToOneValue()"
+ 	
+ 	if(diagramTyp == "boxplotstacked") {
+ 		
+ 		workingDataSet <- tempOverallResult[tempOverallResult$plot == imagesIndex,]
+ 		workingDataSet$hist <- factor(workingDataSet$hist, unique(workingDataSet$hist))
+ 		
+ 	} else {
+ 		colNames <- vector()
+ 		if(diagramTyp == "nboxplot" || diagramTyp == "barplot") {
+ 			colNames <- c("mean", "se")
+ 		} else if(diagramTyp == "boxplot") {
+ 			colNames <- c("value")
+ 		} 
+ 		
+ 		if("primaerTreatment" %in% tempOverallResult) {
+ 			standardColumnName <- c("name", "primaerTreatment", "xAxis")
+ 		} else {
+ 			standardColumnName <- c("name", "xAxis")
+ 		}
+ 		
+ 		workingDataSet <- buildDataSet(tempOverallResult[,standardColumnName], tempOverallResult, colNames, imagesIndex)
+ 		colnames(workingDataSet) <- c(standardColumnName, colNames)
+ 	}
+ 	return(workingDataSet)	
+ }
> overallList <- list(iniDataSet=iniDataSet, saveFormat=saveFormat, dpi=dpi, isGray=isGray, 
+ 						nBoxDes = nBoxDes, boxDes = boxDes, boxStackDes = boxStackDes,
+ 						saveName_nBoxDes = nBoxDes, saveName_boxDes = boxDes, saveName_boxStackDes = boxStackDes,
+ 						nBoxDesName = nBoxDesName, boxDesName = boxDesName, boxStackDesName = boxStackDesName,
+ 						nBoxOptions= nBoxOptions, boxOptions= boxOptions, stackedBarOptions = stackedBarOptions, 
+ 						treatment=treatment, filterTreatment=filterTreatment,
+ 						secondTreatment=secondTreatment, filterSecondTreatment=filterSecondTreatment, filterXaxis=filterXaxis, xAxis=xAxis,
+ 						showResultInR=showResultInR, xAxisName=xAxisName, debug=debug, 
+ 						appendix=appendix, stoppTheCalculation=stoppTheCalculation,
+ 						overallResult_nBoxDes=data.frame(), overallResult_boxDes=data.frame(), overallResult_boxStackDes=data.frame(),
+ 						color_nBox = list(), color_box=list(), color_boxStack=list())	
> 				
> 	#install.packages(c("Cairo"), repos="http://cran.r-project.org", dependencies = TRUE)
> 	library("Cairo")
> 	#install.packages(c("RColorBrewer"), repos="http://cran.r-project.org", dependencies = TRUE)
> 	library("RColorBrewer")
> 	#install.packages(c("data.table"), repos="http://cran.r-project.org", dependencies = TRUE)
> 	library(data.table)
> 	#install.packages(c("ggplot2"), repos="http://cran.r-project.org", dependencies = TRUE)
> 	library(ggplot2)
> 	#install.packages(c("Hmisc"), repos="http://cran.r-project.org", dependencies = TRUE)
> 	#library("Hmisc")
> 	
> 	overallList$debug %debug% "Start"
[1] "DebugBreakPoint:  Start"
> 	
> 	overallList <- overallChangeName(overallList)
[1] "DebugBreakPoint:  overallChangeSaveName()"
[1] "... nBoxplot"
[1] "... Boxplot"
[1] "... stackedBoxplot"
> 	overallList <- overallPreprocessingOfDescriptor(overallList)
[1] "DebugBreakPoint:  overallPreprocessingOfDescriptor()"
[1] "... nBoxplot"
[1] "No plotting, because the descriptor(s) (top.area.norm..mm.2.) don't exists!"
[1] "No plotting, because the descriptor(s) (side.nir.wetness.av) don't exists!"
[1] "No plotting, because the descriptor(s) (top.nir.wetness.av) don't exists!"
[1] "... Boxplot"
[1] "No plotting, because the descriptor(s) (top.area.norm..mm.2.) don't exists!"
[1] "... stackedBoxplot"
[1] "No plotting, because the descriptor(s) (side.nir.histogram.ratio.nir.2.25_51) don't exists!"
[1] "No plotting, because the descriptor(s) (side.vis.hue.histogram.ratio.nir.2.25_51) don't exists!"
[1] "No plotting, because the descriptor(s) (top.vis.hue.histogram.ratio.nir.2.25_51) don't exists!"
> 	
> 	
> ###############################	
> 	overallList <- preprocessingOfxAxisValue(overallList)
[1] "DebugBreakPoint:  preprocessingOfxAxisValue()"
> 	overallList <- preprocessingOfTreatment(overallList)
[1] "DebugBreakPoint:  preprocessingOfTheTreatment()"
> 	overallList <- preprocessingOfSecondTreatment(overallList)
[1] "DebugBreakPoint:  preprocessingOfTheSecondTreatment()"
[1] "... set 'filterSecondTreatment' and 'secondTreatment' to 'none'!"
> 	overallList <- overallCheckIfDescriptorIsNaOrAllZero(overallList)
[1] "DebugBreakPoint:  overallCheckIfDescriptorIsNaOrAllZero()"
[1] "... nBoxplot"
[1] "Dummy plotting for this descriptor(s) ((side.bloom.count..tassel.), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((side.nir.wetness.plant_weight_drought_loss), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((top.nir.wetness.plant_weight_drought_loss), because all zero or not numeric!"
[1] "... Boxplot"
[1] "... stackedBoxplot"
[1] "Dummy plotting for this descriptor(s) ((side.nir.normalized.histogram.bin.1.0_25), because all zero or not numeric!"    
[2] "Dummy plotting for this descriptor(s) ((side.nir.normalized.histogram.bin.2.25_51), because all zero or not numeric!"   
[3] "Dummy plotting for this descriptor(s) ((side.nir.normalized.histogram.bin.8.178_204), because all zero or not numeric!" 
[4] "Dummy plotting for this descriptor(s) ((side.nir.normalized.histogram.bin.9.204_229), because all zero or not numeric!" 
[5] "Dummy plotting for this descriptor(s) ((side.nir.normalized.histogram.bin.10.229_255), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((side.fluo.histogram.bin.9.204_229), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((top.nir.histogram.bin.1.0_25), because all zero or not numeric!"    
[2] "Dummy plotting for this descriptor(s) ((top.nir.histogram.bin.10.229_255), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((side.fluo.histogram.phenol.bin.8.178_204), because all zero or not numeric!"
[2] "Dummy plotting for this descriptor(s) ((side.fluo.histogram.phenol.bin.9.204_229), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((side.fluo.histogram.ratio.bin.2.25_51), because all zero or not numeric!"  
[2] "Dummy plotting for this descriptor(s) ((side.fluo.histogram.ratio.bin.3.51_76), because all zero or not numeric!"  
[3] "Dummy plotting for this descriptor(s) ((side.fluo.histogram.ratio.bin.9.204_229), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((side.nir.normalized.histogram.bin.1.0_25), because all zero or not numeric!"    
[2] "Dummy plotting for this descriptor(s) ((side.nir.normalized.histogram.bin.2.25_51), because all zero or not numeric!"   
[3] "Dummy plotting for this descriptor(s) ((side.nir.normalized.histogram.bin.8.178_204), because all zero or not numeric!" 
[4] "Dummy plotting for this descriptor(s) ((side.nir.normalized.histogram.bin.9.204_229), because all zero or not numeric!" 
[5] "Dummy plotting for this descriptor(s) ((side.nir.normalized.histogram.bin.10.229_255), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((side.fluo.normalized.histogram.bin.9.204_229), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((side.fluo.normalized.histogram.phenol.bin.8.178_204), because all zero or not numeric!"
[2] "Dummy plotting for this descriptor(s) ((side.fluo.normalized.histogram.phenol.bin.9.204_229), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((side.fluo.normalized.histogram.ratio.bin.2.25_51), because all zero or not numeric!"  
[2] "Dummy plotting for this descriptor(s) ((side.fluo.normalized.histogram.ratio.bin.3.51_76), because all zero or not numeric!"  
[3] "Dummy plotting for this descriptor(s) ((side.fluo.normalized.histogram.ratio.bin.9.204_229), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((side.nir.histogram.phenol.bin.1.0_25), because all zero or not numeric!"    
[2] "Dummy plotting for this descriptor(s) ((side.nir.histogram.phenol.bin.2.25_51), because all zero or not numeric!"   
[3] "Dummy plotting for this descriptor(s) ((side.nir.histogram.phenol.bin.8.178_204), because all zero or not numeric!" 
[4] "Dummy plotting for this descriptor(s) ((side.nir.histogram.phenol.bin.9.204_229), because all zero or not numeric!" 
[5] "Dummy plotting for this descriptor(s) ((side.nir.histogram.phenol.bin.10.229_255), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((side.nir.histogram.ratio.bin.1.0_25), because all zero or not numeric!"    
[2] "Dummy plotting for this descriptor(s) ((side.nir.histogram.ratio.bin.3.51_76), because all zero or not numeric!"   
[3] "Dummy plotting for this descriptor(s) ((side.nir.histogram.ratio.bin.4.76_102), because all zero or not numeric!"  
[4] "Dummy plotting for this descriptor(s) ((side.nir.histogram.ratio.bin.6.127_153), because all zero or not numeric!" 
[5] "Dummy plotting for this descriptor(s) ((side.nir.histogram.ratio.bin.7.153_178), because all zero or not numeric!" 
[6] "Dummy plotting for this descriptor(s) ((side.nir.histogram.ratio.bin.8.178_204), because all zero or not numeric!" 
[7] "Dummy plotting for this descriptor(s) ((side.nir.histogram.ratio.bin.9.204_229), because all zero or not numeric!" 
[8] "Dummy plotting for this descriptor(s) ((side.nir.histogram.ratio.bin.10.229_255), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((side.vis.hue.histogram.ratio.bin.1.0_25), because all zero or not numeric!"    
[2] "Dummy plotting for this descriptor(s) ((side.vis.hue.histogram.ratio.bin.3.51_76), because all zero or not numeric!"   
[3] "Dummy plotting for this descriptor(s) ((side.vis.hue.histogram.ratio.bin.4.76_102), because all zero or not numeric!"  
[4] "Dummy plotting for this descriptor(s) ((side.vis.hue.histogram.ratio.bin.5.102_127), because all zero or not numeric!" 
[5] "Dummy plotting for this descriptor(s) ((side.vis.hue.histogram.ratio.bin.6.127_153), because all zero or not numeric!" 
[6] "Dummy plotting for this descriptor(s) ((side.vis.hue.histogram.ratio.bin.7.153_178), because all zero or not numeric!" 
[7] "Dummy plotting for this descriptor(s) ((side.vis.hue.histogram.ratio.bin.8.178_204), because all zero or not numeric!" 
[8] "Dummy plotting for this descriptor(s) ((side.vis.hue.histogram.ratio.bin.9.204_229), because all zero or not numeric!" 
[9] "Dummy plotting for this descriptor(s) ((side.vis.hue.histogram.ratio.bin.10.229_255), because all zero or not numeric!"
 [1] "Dummy plotting for this descriptor(s) ((side.vis.normalized.histogram.ratio.bin.1.0_25), because all zero or not numeric!"    
 [2] "Dummy plotting for this descriptor(s) ((side.vis.normalized.histogram.ratio.bin.2.25_51), because all zero or not numeric!"   
 [3] "Dummy plotting for this descriptor(s) ((side.vis.normalized.histogram.ratio.bin.3.51_76), because all zero or not numeric!"   
 [4] "Dummy plotting for this descriptor(s) ((side.vis.normalized.histogram.ratio.bin.4.76_102), because all zero or not numeric!"  
 [5] "Dummy plotting for this descriptor(s) ((side.vis.normalized.histogram.ratio.bin.5.102_127), because all zero or not numeric!" 
 [6] "Dummy plotting for this descriptor(s) ((side.vis.normalized.histogram.ratio.bin.6.127_153), because all zero or not numeric!" 
 [7] "Dummy plotting for this descriptor(s) ((side.vis.normalized.histogram.ratio.bin.7.153_178), because all zero or not numeric!" 
 [8] "Dummy plotting for this descriptor(s) ((side.vis.normalized.histogram.ratio.bin.8.178_204), because all zero or not numeric!" 
 [9] "Dummy plotting for this descriptor(s) ((side.vis.normalized.histogram.ratio.bin.9.204_229), because all zero or not numeric!" 
[10] "Dummy plotting for this descriptor(s) ((side.vis.normalized.histogram.ratio.bin.10.229_255), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((top.fluo.histogram.bin.9.204_229), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((top.fluo.histogram.phenol.bin.8.178_204), because all zero or not numeric!"
[2] "Dummy plotting for this descriptor(s) ((top.fluo.histogram.phenol.bin.9.204_229), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((top.fluo.histogram.ratio.bin.2.25_51), because all zero or not numeric!"  
[2] "Dummy plotting for this descriptor(s) ((top.fluo.histogram.ratio.bin.3.51_76), because all zero or not numeric!"  
[3] "Dummy plotting for this descriptor(s) ((top.fluo.histogram.ratio.bin.9.204_229), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((top.nir.histogram.bin.1.0_25), because all zero or not numeric!"    
[2] "Dummy plotting for this descriptor(s) ((top.nir.histogram.bin.10.229_255), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((top.nir.histogram.phenol.bin.1.0_25), because all zero or not numeric!"    
[2] "Dummy plotting for this descriptor(s) ((top.nir.histogram.phenol.bin.10.229_255), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((top.nir.histogram.ratio.bin.1.0_25), because all zero or not numeric!"    
[2] "Dummy plotting for this descriptor(s) ((top.nir.histogram.ratio.bin.2.25_51), because all zero or not numeric!"   
[3] "Dummy plotting for this descriptor(s) ((top.nir.histogram.ratio.bin.3.51_76), because all zero or not numeric!"   
[4] "Dummy plotting for this descriptor(s) ((top.nir.histogram.ratio.bin.4.76_102), because all zero or not numeric!"  
[5] "Dummy plotting for this descriptor(s) ((top.nir.histogram.ratio.bin.6.127_153), because all zero or not numeric!" 
[6] "Dummy plotting for this descriptor(s) ((top.nir.histogram.ratio.bin.7.153_178), because all zero or not numeric!" 
[7] "Dummy plotting for this descriptor(s) ((top.nir.histogram.ratio.bin.8.178_204), because all zero or not numeric!" 
[8] "Dummy plotting for this descriptor(s) ((top.nir.histogram.ratio.bin.9.204_229), because all zero or not numeric!" 
[9] "Dummy plotting for this descriptor(s) ((top.nir.histogram.ratio.bin.10.229_255), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((top.vis.hue.histogram.ratio.bin.1.0_25), because all zero or not numeric!"    
[2] "Dummy plotting for this descriptor(s) ((top.vis.hue.histogram.ratio.bin.3.51_76), because all zero or not numeric!"   
[3] "Dummy plotting for this descriptor(s) ((top.vis.hue.histogram.ratio.bin.4.76_102), because all zero or not numeric!"  
[4] "Dummy plotting for this descriptor(s) ((top.vis.hue.histogram.ratio.bin.5.102_127), because all zero or not numeric!" 
[5] "Dummy plotting for this descriptor(s) ((top.vis.hue.histogram.ratio.bin.6.127_153), because all zero or not numeric!" 
[6] "Dummy plotting for this descriptor(s) ((top.vis.hue.histogram.ratio.bin.7.153_178), because all zero or not numeric!" 
[7] "Dummy plotting for this descriptor(s) ((top.vis.hue.histogram.ratio.bin.8.178_204), because all zero or not numeric!" 
[8] "Dummy plotting for this descriptor(s) ((top.vis.hue.histogram.ratio.bin.9.204_229), because all zero or not numeric!" 
[9] "Dummy plotting for this descriptor(s) ((top.vis.hue.histogram.ratio.bin.10.229_255), because all zero or not numeric!"
Es gab 20 Warnungen (Anzeige mit warnings())
> 	overallList <- reduceWorkingDataSize(overallList)
[1] "DebugBreakPoint:  reduceWorkingDataSize()"
> 	overallList <- setDefaultAxisNames(overallList)	
[1] "DebugBreakPoint:  setDefaultAxisNames()"
> 	overallList <- overallGetResultDataFrame(overallList)
[1] "DebugBreakPoint:  overallGetResultDataFrame()"
[1] "DebugBreakPoint:  buildList()"
[1] "... nBoxplot"
[1] "DebugBreakPoint:  getResultDataFrame()"
[1] "... Boxplot"
[1] "DebugBreakPoint:  getResultDataFrame()"
[1] "... stackedBoxplot"
[1] "DebugBreakPoint:  getResultDataFrame()"
Es gab 13 Warnungen (Anzeige mit warnings())
> 	overallList <- setColor(overallList) 
[1] "DebugBreakPoint:  setColor()"
[1] "... all values are 'NA'"
[1] "... all values are 'NA'"
[1] "... all values are 'NA'"
[1] "... all values are 'NA'"
[1] "... all values are 'NA'"
[1] "... all values are 'NA'"
[1] "... all values are 'NA'"
[1] "... all values are 'NA'"
[1] "... all values are 'NA'"
[1] "... all values are 'NA'"
Es gab 15 Warnungen (Anzeige mit warnings())
> 	makeDiagrams(overallList)
[1] "DebugBreakPoint:  makeDiagrams()"
[1] "... nBoxplot"
[1] "DebugBreakPoint:  makeLinearDiagram()"
[1] "... images 1"
[1] "DebugBreakPoint:  reduceWholeOverallResultToOneValue()"
Saving 6.99" x 6.99" image
[1] "... images 2"
[1] "DebugBreakPoint:  reduceWholeOverallResultToOneValue()"
Saving 6.99" x 6.99" image
[1] "... images 3"
[1] "DebugBreakPoint:  reduceWholeOverallResultToOneValue()"
Saving 6.99" x 6.99" image
[1] "... images 4"
[1] "DebugBreakPoint:  reduceWholeOverallResultToOneValue()"
Saving 6.99" x 6.99" image
[1] "... images 5"
[1] "DebugBreakPoint:  reduceWholeOverallResultToOneValue()"
Saving 6.99" x 6.99" image
[1] "... images 6"
[1] "DebugBreakPoint:  reduceWholeOverallResultToOneValue()"
Saving 6.99" x 6.99" image
[1] "... images 8"
[1] "DebugBreakPoint:  reduceWholeOverallResultToOneValue()"
Saving 6.99" x 6.99" image
[1] "... images 9"
[1] "DebugBreakPoint:  reduceWholeOverallResultToOneValue()"
Saving 6.99" x 6.99" image
[1] "... images 10"
[1] "DebugBreakPoint:  reduceWholeOverallResultToOneValue()"
Saving 6.99" x 6.99" image
[1] "... images 11"
[1] "DebugBreakPoint:  reduceWholeOverallResultToOneValue()"
Saving 6.99" x 6.99" image
[1] "... images 13"
[1] "DebugBreakPoint:  reduceWholeOverallResultToOneValue()"
Saving 6.99" x 6.99" image
[1] "... images 14"
[1] "DebugBreakPoint:  reduceWholeOverallResultToOneValue()"
Saving 6.99" x 6.99" image
[1] "... images 15"
[1] "DebugBreakPoint:  reduceWholeOverallResultToOneValue()"
Saving 6.99" x 6.99" image
[1] "... images 16"
[1] "DebugBreakPoint:  reduceWholeOverallResultToOneValue()"
Saving 6.99" x 6.99" image
[1] "... images 17"
[1] "DebugBreakPoint:  reduceWholeOverallResultToOneValue()"
Saving 6.99" x 6.99" image
[1] "... images 18"
[1] "DebugBreakPoint:  reduceWholeOverallResultToOneValue()"
Saving 6.99" x 6.99" image
[1] "... images 23"
[1] "DebugBreakPoint:  reduceWholeOverallResultToOneValue()"
Saving 6.99" x 6.99" image
[1] "... images 24"
[1] "DebugBreakPoint:  reduceWholeOverallResultToOneValue()"
Saving 6.99" x 6.99" image
[1] "... images 25"
[1] "DebugBreakPoint:  reduceWholeOverallResultToOneValue()"
Saving 6.99" x 6.99" image
[1] "... images 26"
[1] "DebugBreakPoint:  reduceWholeOverallResultToOneValue()"
Saving 6.99" x 6.99" image
[1] "... images 27"
[1] "DebugBreakPoint:  reduceWholeOverallResultToOneValue()"
Saving 6.99" x 6.99" image
[1] "... images 28"
[1] "DebugBreakPoint:  reduceWholeOverallResultToOneValue()"
Saving 6.99" x 6.99" image
[1] "... images 29"
[1] "DebugBreakPoint:  reduceWholeOverallResultToOneValue()"
Saving 6.99" x 6.99" image
[1] "... images 30"
[1] "DebugBreakPoint:  reduceWholeOverallResultToOneValue()"
Saving 6.99" x 6.99" image
[1] "... images 31"
[1] "DebugBreakPoint:  reduceWholeOverallResultToOneValue()"
Saving 6.99" x 6.99" image
[1] "... images 32"
[1] "DebugBreakPoint:  reduceWholeOverallResultToOneValue()"
Saving 6.99" x 6.99" image
[1] "... Boxplot"
[1] "DebugBreakPoint:  makeBoxplotDiagram()"
[1] "DebugBreakPoint:  reduceWholeOverallResultToOneValue()"
Saving 6.99" x 6.99" image
[1] "DebugBreakPoint:  reduceWholeOverallResultToOneValue()"
Saving 6.99" x 6.99" image
[1] "DebugBreakPoint:  reduceWholeOverallResultToOneValue()"
Saving 6.99" x 6.99" image
[1] "DebugBreakPoint:  reduceWholeOverallResultToOneValue()"
Saving 6.99" x 6.99" image
[1] "DebugBreakPoint:  reduceWholeOverallResultToOneValue()"
Saving 6.99" x 6.99" image
[1] "DebugBreakPoint:  reduceWholeOverallResultToOneValue()"
Saving 6.99" x 6.99" image
[1] "DebugBreakPoint:  reduceWholeOverallResultToOneValue()"
Saving 6.99" x 6.99" image
[1] "DebugBreakPoint:  reduceWholeOverallResultToOneValue()"
Saving 6.99" x 6.99" image
[1] "DebugBreakPoint:  reduceWholeOverallResultToOneValue()"
Saving 6.99" x 6.99" image
[1] "DebugBreakPoint:  reduceWholeOverallResultToOneValue()"
Saving 6.99" x 6.99" image
[1] "DebugBreakPoint:  reduceWholeOverallResultToOneValue()"
Saving 6.99" x 6.99" image
[1] "... stacked Boxplot"
[1] "DebugBreakPoint:  makeBoxplotStackedDiagram()"
[1] "DebugBreakPoint:  reduceWholeOverallResultToOneValue()"
[1] "DebugBreakPoint:  PreWorkForMakeBigOverallImage()"
[1] "DebugBreakPoint:  plotStackedImage()"
Saving 6.99" x 6.99" image
Fehler in if (!all(data$ymin == 0)) warning("Filling not well defined when ymin != 0") : 
  Fehlender Wert, wo TRUE/FALSE nötig ist
Zusätzlich: Es gab 50 oder mehr Warnungen (Anzeige der ersten 50 mit warnings())
> overallList <- list(iniDataSet=iniDataSet, saveFormat=saveFormat, dpi=dpi, isGray=isGray, 
+ 						nBoxDes = nBoxDes, boxDes = boxDes, boxStackDes = boxStackDes,
+ 						saveName_nBoxDes = nBoxDes, saveName_boxDes = boxDes, saveName_boxStackDes = boxStackDes,
+ 						nBoxDesName = nBoxDesName, boxDesName = boxDesName, boxStackDesName = boxStackDesName,
+ 						nBoxOptions= nBoxOptions, boxOptions= boxOptions, stackedBarOptions = stackedBarOptions, 
+ 						treatment=treatment, filterTreatment=filterTreatment,
+ 						secondTreatment=secondTreatment, filterSecondTreatment=filterSecondTreatment, filterXaxis=filterXaxis, xAxis=xAxis,
+ 						showResultInR=showResultInR, xAxisName=xAxisName, debug=debug, 
+ 						appendix=appendix, stoppTheCalculation=stoppTheCalculation,
+ 						overallResult_nBoxDes=data.frame(), overallResult_boxDes=data.frame(), overallResult_boxStackDes=data.frame(),
+ 						color_nBox = list(), color_box=list(), color_boxStack=list())	
> 				
> 	#install.packages(c("Cairo"), repos="http://cran.r-project.org", dependencies = TRUE)
> 	library("Cairo")
> 	#install.packages(c("RColorBrewer"), repos="http://cran.r-project.org", dependencies = TRUE)
> 	library("RColorBrewer")
> 	#install.packages(c("data.table"), repos="http://cran.r-project.org", dependencies = TRUE)
> 	library(data.table)
> 	#install.packages(c("ggplot2"), repos="http://cran.r-project.org", dependencies = TRUE)
> 	library(ggplot2)
> 	#install.packages(c("Hmisc"), repos="http://cran.r-project.org", dependencies = TRUE)
> 	#library("Hmisc")
> 	
> 	overallList$debug %debug% "Start"
[1] "DebugBreakPoint:  Start"
> 	
> 	overallList <- overallChangeName(overallList)
[1] "DebugBreakPoint:  overallChangeSaveName()"
[1] "... nBoxplot"
[1] "... Boxplot"
[1] "... stackedBoxplot"
> 	overallList <- overallPreprocessingOfDescriptor(overallList)
[1] "DebugBreakPoint:  overallPreprocessingOfDescriptor()"
[1] "... nBoxplot"
[1] "No plotting, because the descriptor(s) (top.area.norm..mm.2.) don't exists!"
[1] "No plotting, because the descriptor(s) (side.nir.wetness.av) don't exists!"
[1] "No plotting, because the descriptor(s) (top.nir.wetness.av) don't exists!"
[1] "... Boxplot"
[1] "No plotting, because the descriptor(s) (top.area.norm..mm.2.) don't exists!"
[1] "... stackedBoxplot"
[1] "No plotting, because the descriptor(s) (side.nir.histogram.ratio.nir.2.25_51) don't exists!"
[1] "No plotting, because the descriptor(s) (side.vis.hue.histogram.ratio.nir.2.25_51) don't exists!"
[1] "No plotting, because the descriptor(s) (top.vis.hue.histogram.ratio.nir.2.25_51) don't exists!"
> 	
> 	
> ###############################	
> 	overallList <- preprocessingOfxAxisValue(overallList)
[1] "DebugBreakPoint:  preprocessingOfxAxisValue()"
> 	overallList <- preprocessingOfTreatment(overallList)
[1] "DebugBreakPoint:  preprocessingOfTheTreatment()"
> 	overallList <- preprocessingOfSecondTreatment(overallList)
[1] "DebugBreakPoint:  preprocessingOfTheSecondTreatment()"
[1] "... set 'filterSecondTreatment' and 'secondTreatment' to 'none'!"
> 	overallList <- overallCheckIfDescriptorIsNaOrAllZero(overallList)
[1] "DebugBreakPoint:  overallCheckIfDescriptorIsNaOrAllZero()"
[1] "... nBoxplot"
[1] "Dummy plotting for this descriptor(s) ((side.bloom.count..tassel.), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((side.nir.wetness.plant_weight_drought_loss), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((top.nir.wetness.plant_weight_drought_loss), because all zero or not numeric!"
[1] "... Boxplot"
[1] "... stackedBoxplot"
[1] "Dummy plotting for this descriptor(s) ((side.nir.normalized.histogram.bin.1.0_25), because all zero or not numeric!"    
[2] "Dummy plotting for this descriptor(s) ((side.nir.normalized.histogram.bin.2.25_51), because all zero or not numeric!"   
[3] "Dummy plotting for this descriptor(s) ((side.nir.normalized.histogram.bin.8.178_204), because all zero or not numeric!" 
[4] "Dummy plotting for this descriptor(s) ((side.nir.normalized.histogram.bin.9.204_229), because all zero or not numeric!" 
[5] "Dummy plotting for this descriptor(s) ((side.nir.normalized.histogram.bin.10.229_255), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((side.fluo.histogram.bin.9.204_229), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((top.nir.histogram.bin.1.0_25), because all zero or not numeric!"    
[2] "Dummy plotting for this descriptor(s) ((top.nir.histogram.bin.10.229_255), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((side.fluo.histogram.phenol.bin.8.178_204), because all zero or not numeric!"
[2] "Dummy plotting for this descriptor(s) ((side.fluo.histogram.phenol.bin.9.204_229), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((side.fluo.histogram.ratio.bin.2.25_51), because all zero or not numeric!"  
[2] "Dummy plotting for this descriptor(s) ((side.fluo.histogram.ratio.bin.3.51_76), because all zero or not numeric!"  
[3] "Dummy plotting for this descriptor(s) ((side.fluo.histogram.ratio.bin.9.204_229), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((side.nir.normalized.histogram.bin.1.0_25), because all zero or not numeric!"    
[2] "Dummy plotting for this descriptor(s) ((side.nir.normalized.histogram.bin.2.25_51), because all zero or not numeric!"   
[3] "Dummy plotting for this descriptor(s) ((side.nir.normalized.histogram.bin.8.178_204), because all zero or not numeric!" 
[4] "Dummy plotting for this descriptor(s) ((side.nir.normalized.histogram.bin.9.204_229), because all zero or not numeric!" 
[5] "Dummy plotting for this descriptor(s) ((side.nir.normalized.histogram.bin.10.229_255), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((side.fluo.normalized.histogram.bin.9.204_229), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((side.fluo.normalized.histogram.phenol.bin.8.178_204), because all zero or not numeric!"
[2] "Dummy plotting for this descriptor(s) ((side.fluo.normalized.histogram.phenol.bin.9.204_229), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((side.fluo.normalized.histogram.ratio.bin.2.25_51), because all zero or not numeric!"  
[2] "Dummy plotting for this descriptor(s) ((side.fluo.normalized.histogram.ratio.bin.3.51_76), because all zero or not numeric!"  
[3] "Dummy plotting for this descriptor(s) ((side.fluo.normalized.histogram.ratio.bin.9.204_229), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((side.nir.histogram.phenol.bin.1.0_25), because all zero or not numeric!"    
[2] "Dummy plotting for this descriptor(s) ((side.nir.histogram.phenol.bin.2.25_51), because all zero or not numeric!"   
[3] "Dummy plotting for this descriptor(s) ((side.nir.histogram.phenol.bin.8.178_204), because all zero or not numeric!" 
[4] "Dummy plotting for this descriptor(s) ((side.nir.histogram.phenol.bin.9.204_229), because all zero or not numeric!" 
[5] "Dummy plotting for this descriptor(s) ((side.nir.histogram.phenol.bin.10.229_255), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((side.nir.histogram.ratio.bin.1.0_25), because all zero or not numeric!"    
[2] "Dummy plotting for this descriptor(s) ((side.nir.histogram.ratio.bin.3.51_76), because all zero or not numeric!"   
[3] "Dummy plotting for this descriptor(s) ((side.nir.histogram.ratio.bin.4.76_102), because all zero or not numeric!"  
[4] "Dummy plotting for this descriptor(s) ((side.nir.histogram.ratio.bin.6.127_153), because all zero or not numeric!" 
[5] "Dummy plotting for this descriptor(s) ((side.nir.histogram.ratio.bin.7.153_178), because all zero or not numeric!" 
[6] "Dummy plotting for this descriptor(s) ((side.nir.histogram.ratio.bin.8.178_204), because all zero or not numeric!" 
[7] "Dummy plotting for this descriptor(s) ((side.nir.histogram.ratio.bin.9.204_229), because all zero or not numeric!" 
[8] "Dummy plotting for this descriptor(s) ((side.nir.histogram.ratio.bin.10.229_255), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((side.vis.hue.histogram.ratio.bin.1.0_25), because all zero or not numeric!"    
[2] "Dummy plotting for this descriptor(s) ((side.vis.hue.histogram.ratio.bin.3.51_76), because all zero or not numeric!"   
[3] "Dummy plotting for this descriptor(s) ((side.vis.hue.histogram.ratio.bin.4.76_102), because all zero or not numeric!"  
[4] "Dummy plotting for this descriptor(s) ((side.vis.hue.histogram.ratio.bin.5.102_127), because all zero or not numeric!" 
[5] "Dummy plotting for this descriptor(s) ((side.vis.hue.histogram.ratio.bin.6.127_153), because all zero or not numeric!" 
[6] "Dummy plotting for this descriptor(s) ((side.vis.hue.histogram.ratio.bin.7.153_178), because all zero or not numeric!" 
[7] "Dummy plotting for this descriptor(s) ((side.vis.hue.histogram.ratio.bin.8.178_204), because all zero or not numeric!" 
[8] "Dummy plotting for this descriptor(s) ((side.vis.hue.histogram.ratio.bin.9.204_229), because all zero or not numeric!" 
[9] "Dummy plotting for this descriptor(s) ((side.vis.hue.histogram.ratio.bin.10.229_255), because all zero or not numeric!"
 [1] "Dummy plotting for this descriptor(s) ((side.vis.normalized.histogram.ratio.bin.1.0_25), because all zero or not numeric!"    
 [2] "Dummy plotting for this descriptor(s) ((side.vis.normalized.histogram.ratio.bin.2.25_51), because all zero or not numeric!"   
 [3] "Dummy plotting for this descriptor(s) ((side.vis.normalized.histogram.ratio.bin.3.51_76), because all zero or not numeric!"   
 [4] "Dummy plotting for this descriptor(s) ((side.vis.normalized.histogram.ratio.bin.4.76_102), because all zero or not numeric!"  
 [5] "Dummy plotting for this descriptor(s) ((side.vis.normalized.histogram.ratio.bin.5.102_127), because all zero or not numeric!" 
 [6] "Dummy plotting for this descriptor(s) ((side.vis.normalized.histogram.ratio.bin.6.127_153), because all zero or not numeric!" 
 [7] "Dummy plotting for this descriptor(s) ((side.vis.normalized.histogram.ratio.bin.7.153_178), because all zero or not numeric!" 
 [8] "Dummy plotting for this descriptor(s) ((side.vis.normalized.histogram.ratio.bin.8.178_204), because all zero or not numeric!" 
 [9] "Dummy plotting for this descriptor(s) ((side.vis.normalized.histogram.ratio.bin.9.204_229), because all zero or not numeric!" 
[10] "Dummy plotting for this descriptor(s) ((side.vis.normalized.histogram.ratio.bin.10.229_255), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((top.fluo.histogram.bin.9.204_229), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((top.fluo.histogram.phenol.bin.8.178_204), because all zero or not numeric!"
[2] "Dummy plotting for this descriptor(s) ((top.fluo.histogram.phenol.bin.9.204_229), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((top.fluo.histogram.ratio.bin.2.25_51), because all zero or not numeric!"  
[2] "Dummy plotting for this descriptor(s) ((top.fluo.histogram.ratio.bin.3.51_76), because all zero or not numeric!"  
[3] "Dummy plotting for this descriptor(s) ((top.fluo.histogram.ratio.bin.9.204_229), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((top.nir.histogram.bin.1.0_25), because all zero or not numeric!"    
[2] "Dummy plotting for this descriptor(s) ((top.nir.histogram.bin.10.229_255), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((top.nir.histogram.phenol.bin.1.0_25), because all zero or not numeric!"    
[2] "Dummy plotting for this descriptor(s) ((top.nir.histogram.phenol.bin.10.229_255), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((top.nir.histogram.ratio.bin.1.0_25), because all zero or not numeric!"    
[2] "Dummy plotting for this descriptor(s) ((top.nir.histogram.ratio.bin.2.25_51), because all zero or not numeric!"   
[3] "Dummy plotting for this descriptor(s) ((top.nir.histogram.ratio.bin.3.51_76), because all zero or not numeric!"   
[4] "Dummy plotting for this descriptor(s) ((top.nir.histogram.ratio.bin.4.76_102), because all zero or not numeric!"  
[5] "Dummy plotting for this descriptor(s) ((top.nir.histogram.ratio.bin.6.127_153), because all zero or not numeric!" 
[6] "Dummy plotting for this descriptor(s) ((top.nir.histogram.ratio.bin.7.153_178), because all zero or not numeric!" 
[7] "Dummy plotting for this descriptor(s) ((top.nir.histogram.ratio.bin.8.178_204), because all zero or not numeric!" 
[8] "Dummy plotting for this descriptor(s) ((top.nir.histogram.ratio.bin.9.204_229), because all zero or not numeric!" 
[9] "Dummy plotting for this descriptor(s) ((top.nir.histogram.ratio.bin.10.229_255), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((top.vis.hue.histogram.ratio.bin.1.0_25), because all zero or not numeric!"    
[2] "Dummy plotting for this descriptor(s) ((top.vis.hue.histogram.ratio.bin.3.51_76), because all zero or not numeric!"   
[3] "Dummy plotting for this descriptor(s) ((top.vis.hue.histogram.ratio.bin.4.76_102), because all zero or not numeric!"  
[4] "Dummy plotting for this descriptor(s) ((top.vis.hue.histogram.ratio.bin.5.102_127), because all zero or not numeric!" 
[5] "Dummy plotting for this descriptor(s) ((top.vis.hue.histogram.ratio.bin.6.127_153), because all zero or not numeric!" 
[6] "Dummy plotting for this descriptor(s) ((top.vis.hue.histogram.ratio.bin.7.153_178), because all zero or not numeric!" 
[7] "Dummy plotting for this descriptor(s) ((top.vis.hue.histogram.ratio.bin.8.178_204), because all zero or not numeric!" 
[8] "Dummy plotting for this descriptor(s) ((top.vis.hue.histogram.ratio.bin.9.204_229), because all zero or not numeric!" 
[9] "Dummy plotting for this descriptor(s) ((top.vis.hue.histogram.ratio.bin.10.229_255), because all zero or not numeric!"
Es gab 20 Warnungen (Anzeige mit warnings())
> 	overallList <- reduceWorkingDataSize(overallList)
[1] "DebugBreakPoint:  reduceWorkingDataSize()"
> 	overallList <- setDefaultAxisNames(overallList)	
[1] "DebugBreakPoint:  setDefaultAxisNames()"
> 	overallList <- overallGetResultDataFrame(overallList)
[1] "DebugBreakPoint:  overallGetResultDataFrame()"
[1] "DebugBreakPoint:  buildList()"
[1] "... nBoxplot"
[1] "DebugBreakPoint:  getResultDataFrame()"
[1] "... Boxplot"
[1] "DebugBreakPoint:  getResultDataFrame()"
[1] "... stackedBoxplot"
[1] "DebugBreakPoint:  getResultDataFrame()"
Es gab 13 Warnungen (Anzeige mit warnings())
> 	overallList <- setColor(overallList) 
[1] "DebugBreakPoint:  setColor()"
[1] "... all values are 'NA'"
[1] "... all values are 'NA'"
[1] "... all values are 'NA'"
[1] "... all values are 'NA'"
[1] "... all values are 'NA'"
[1] "... all values are 'NA'"
[1] "... all values are 'NA'"
[1] "... all values are 'NA'"
[1] "... all values are 'NA'"
[1] "... all values are 'NA'"
Es gab 15 Warnungen (Anzeige mit warnings())
> 	tempOverallResult <-  overallResult
> names(overallDescriptor)
 [1] "1"  "2"  "3"  "4"  "5"  "6"  "7"  "8"  "9"  "10" "11" "12" "13" "14" "15"
[16] "16" "17" "18" "19" "20" "21" "22" "23" "24" "25" "26" "27" "28" "29" "30"
[31] "31" "32"
> imagesIndex
[1] "1"
> reduceWholeOverallResultToOneValue(tempOverallResult, imagesIndex, overallList$debug, "boxplot")
[1] "DebugBreakPoint:  reduceWholeOverallResultToOneValue()"
Fehler in `[.data.frame`(overallResult, paste(colname[n], index, sep = "")) : 
  undefined columns selected
> colNames <- c("value")
> head(tempOverallResult)
       name xAxis    mean1    mean2    mean3    mean4    mean5    mean6
1 Fernandez    12 14222.24 14316.55 94.30303      NaN      NaN      NaN
2 Fernandez    13 14230.30 14296.76 66.45455 515.8003 239.1985 3582.223
3 Fernandez    15 14156.61 14197.97 43.12500 580.9489 357.7420 5105.076
4 Fernandez    16 14133.00 14197.64 64.63636      NaN      NaN      NaN
5 Fernandez    17 14110.58 14197.45 86.87879 657.5638 427.4456 6824.464
6 Fernandez    18 14115.00 14197.42 82.42424      NaN      NaN      NaN
      mean8 mean9    mean10   mean11    mean13    mean14    mean15    mean16
1       NaN   NaN       NaN      NaN       NaN       NaN       NaN       NaN
2 0.4982545     0 0.4682974 4.333333  822.6993  363721.9  363721.9  390453.4
3 0.5221606     0 0.4781860 5.033333 1081.6250  717918.7  717918.7  765791.6
4       NaN   NaN       NaN      NaN       NaN       NaN       NaN       NaN
5 0.5304711     0 0.4801384 5.333333 1409.4839 1139741.6 1139741.6 1205525.8
6       NaN   NaN       NaN      NaN       NaN       NaN       NaN       NaN
     mean17 mean18    mean23    mean24    mean25    mean26    mean27    mean28
1       NaN    NaN       NaN       NaN       NaN       NaN       NaN       NaN
2  361784.1    NaN       NaN       NaN       NaN       NaN       NaN       NaN
3  715574.8    NaN 0.7613692 0.5900634 0.7841904 1.0196135 0.7613692 1.0388182
4       NaN    NaN       NaN       NaN       NaN       NaN       NaN       NaN
5 1136326.8 1939.9 0.6556622 0.5639434 0.5604018 0.7337209 0.6556622 0.8136379
6       NaN    NaN       NaN       NaN       NaN       NaN       NaN       NaN
    mean29   mean30    mean31   mean32       se1        se2       se3      se4
1      NaN      NaN       NaN      NaN 21.071352 20.8882307  1.131505       NA
2 670.9394 311.1364  6061.121 3460.750 25.972924  1.1188807 25.892918 69.25394
3 754.6719 464.7188  8614.750 6765.562 17.919855  0.8974651 15.541308 73.33046
4      NaN      NaN       NaN      NaN 11.450982  0.9293204 11.642643       NA
5 856.4677 556.7419 11577.500 9453.194 11.486487  1.0633352 11.485745 82.51333
6      NaN      NaN       NaN      NaN  9.624188  1.2997669 10.099599       NA
       se5      se6        se8 se9        se10      se11     se13      se14
1       NA       NA         NA  NA          NA        NA       NA        NA
2 48.90238  699.767 0.03228020   0 0.010168248 0.5466723 144.9556  98838.87
3 69.74004  934.678 0.03639961   0 0.009786229 0.4901325 189.0518 187562.52
4       NA       NA         NA  NA          NA        NA       NA        NA
5 63.30494 1266.297 0.02871898   0 0.009495662 0.6608946 248.6255 273923.73
6       NA       NA         NA  NA          NA        NA       NA        NA
       se15     se16      se17     se18       se23       se24      se25
1        NA       NA        NA       NA         NA         NA        NA
2  98838.87 103986.5  99083.41       NA         NA         NA        NA
3 187562.52 201755.2 187055.54       NA 0.10988046 0.05638938 0.3099407
4        NA       NA        NA       NA         NA         NA        NA
5 273923.73 284599.4 274298.43 462.6041 0.06346119 0.05170813 0.1302697
6        NA       NA        NA       NA         NA         NA        NA
       se26       se27       se28      se29     se30     se31      se32
1        NA         NA         NA        NA       NA       NA        NA
2        NA         NA         NA  90.08154 63.60514 1184.047  901.8215
3 0.1089024 0.10988046 0.09272520  95.25870 90.59463 1577.257 1852.0174
4        NA         NA         NA        NA       NA       NA        NA
5 0.1537523 0.06346119 0.09800071 107.47247 82.45381 2148.235 2121.5764
6        NA         NA         NA        NA       NA       NA        NA
> 		
> 	overallList <- list(iniDataSet=iniDataSet, saveFormat=saveFormat, dpi=dpi, isGray=isGray, 
+ 						nBoxDes = nBoxDes, boxDes = boxDes, boxStackDes = boxStackDes,
+ 						saveName_nBoxDes = nBoxDes, saveName_boxDes = boxDes, saveName_boxStackDes = boxStackDes,
+ 						nBoxDesName = nBoxDesName, boxDesName = boxDesName, boxStackDesName = boxStackDesName,
+ 						nBoxOptions= nBoxOptions, boxOptions= boxOptions, stackedBarOptions = stackedBarOptions, 
+ 						treatment=treatment, filterTreatment=filterTreatment,
+ 						secondTreatment=secondTreatment, filterSecondTreatment=filterSecondTreatment, filterXaxis=filterXaxis, xAxis=xAxis,
+ 						showResultInR=showResultInR, xAxisName=xAxisName, debug=debug, 
+ 						appendix=appendix, stoppTheCalculation=stoppTheCalculation,
+ 						overallResult_nBoxDes=data.frame(), overallResult_boxDes=data.frame(), overallResult_boxStackDes=data.frame(),
+ 						color_nBox = list(), color_box=list(), color_boxStack=list())	
> 				
> 	#install.packages(c("Cairo"), repos="http://cran.r-project.org", dependencies = TRUE)
> 	library("Cairo")
> 	#install.packages(c("RColorBrewer"), repos="http://cran.r-project.org", dependencies = TRUE)
> 	library("RColorBrewer")
> 	#install.packages(c("data.table"), repos="http://cran.r-project.org", dependencies = TRUE)
> 	library(data.table)
> 	#install.packages(c("ggplot2"), repos="http://cran.r-project.org", dependencies = TRUE)
> 	library(ggplot2)
> 	#install.packages(c("Hmisc"), repos="http://cran.r-project.org", dependencies = TRUE)
> 	#library("Hmisc")
> 	
> 	overallList$debug %debug% "Start"
[1] "DebugBreakPoint:  Start"
> 	
> 	overallList <- overallChangeName(overallList)
[1] "DebugBreakPoint:  overallChangeSaveName()"
[1] "... nBoxplot"
[1] "... Boxplot"
[1] "... stackedBoxplot"
> 	overallList <- overallPreprocessingOfDescriptor(overallList)
[1] "DebugBreakPoint:  overallPreprocessingOfDescriptor()"
[1] "... nBoxplot"
[1] "No plotting, because the descriptor(s) (top.area.norm..mm.2.) don't exists!"
[1] "No plotting, because the descriptor(s) (side.nir.wetness.av) don't exists!"
[1] "No plotting, because the descriptor(s) (top.nir.wetness.av) don't exists!"
[1] "... Boxplot"
[1] "No plotting, because the descriptor(s) (top.area.norm..mm.2.) don't exists!"
[1] "... stackedBoxplot"
[1] "No plotting, because the descriptor(s) (side.nir.histogram.ratio.nir.2.25_51) don't exists!"
[1] "No plotting, because the descriptor(s) (side.vis.hue.histogram.ratio.nir.2.25_51) don't exists!"
[1] "No plotting, because the descriptor(s) (top.vis.hue.histogram.ratio.nir.2.25_51) don't exists!"
> 	
> 	
> ###############################	
> 	overallList <- preprocessingOfxAxisValue(overallList)
[1] "DebugBreakPoint:  preprocessingOfxAxisValue()"
> 	overallList <- preprocessingOfTreatment(overallList)
[1] "DebugBreakPoint:  preprocessingOfTheTreatment()"
> 	overallList <- preprocessingOfSecondTreatment(overallList)
[1] "DebugBreakPoint:  preprocessingOfTheSecondTreatment()"
[1] "... set 'filterSecondTreatment' and 'secondTreatment' to 'none'!"
> 	overallList <- overallCheckIfDescriptorIsNaOrAllZero(overallList)
[1] "DebugBreakPoint:  overallCheckIfDescriptorIsNaOrAllZero()"
[1] "... nBoxplot"
[1] "Dummy plotting for this descriptor(s) ((side.bloom.count..tassel.), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((side.nir.wetness.plant_weight_drought_loss), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((top.nir.wetness.plant_weight_drought_loss), because all zero or not numeric!"
[1] "... Boxplot"
[1] "... stackedBoxplot"
[1] "Dummy plotting for this descriptor(s) ((side.nir.normalized.histogram.bin.1.0_25), because all zero or not numeric!"    
[2] "Dummy plotting for this descriptor(s) ((side.nir.normalized.histogram.bin.2.25_51), because all zero or not numeric!"   
[3] "Dummy plotting for this descriptor(s) ((side.nir.normalized.histogram.bin.8.178_204), because all zero or not numeric!" 
[4] "Dummy plotting for this descriptor(s) ((side.nir.normalized.histogram.bin.9.204_229), because all zero or not numeric!" 
[5] "Dummy plotting for this descriptor(s) ((side.nir.normalized.histogram.bin.10.229_255), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((side.fluo.histogram.bin.9.204_229), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((top.nir.histogram.bin.1.0_25), because all zero or not numeric!"    
[2] "Dummy plotting for this descriptor(s) ((top.nir.histogram.bin.10.229_255), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((side.fluo.histogram.phenol.bin.8.178_204), because all zero or not numeric!"
[2] "Dummy plotting for this descriptor(s) ((side.fluo.histogram.phenol.bin.9.204_229), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((side.fluo.histogram.ratio.bin.2.25_51), because all zero or not numeric!"  
[2] "Dummy plotting for this descriptor(s) ((side.fluo.histogram.ratio.bin.3.51_76), because all zero or not numeric!"  
[3] "Dummy plotting for this descriptor(s) ((side.fluo.histogram.ratio.bin.9.204_229), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((side.nir.normalized.histogram.bin.1.0_25), because all zero or not numeric!"    
[2] "Dummy plotting for this descriptor(s) ((side.nir.normalized.histogram.bin.2.25_51), because all zero or not numeric!"   
[3] "Dummy plotting for this descriptor(s) ((side.nir.normalized.histogram.bin.8.178_204), because all zero or not numeric!" 
[4] "Dummy plotting for this descriptor(s) ((side.nir.normalized.histogram.bin.9.204_229), because all zero or not numeric!" 
[5] "Dummy plotting for this descriptor(s) ((side.nir.normalized.histogram.bin.10.229_255), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((side.fluo.normalized.histogram.bin.9.204_229), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((side.fluo.normalized.histogram.phenol.bin.8.178_204), because all zero or not numeric!"
[2] "Dummy plotting for this descriptor(s) ((side.fluo.normalized.histogram.phenol.bin.9.204_229), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((side.fluo.normalized.histogram.ratio.bin.2.25_51), because all zero or not numeric!"  
[2] "Dummy plotting for this descriptor(s) ((side.fluo.normalized.histogram.ratio.bin.3.51_76), because all zero or not numeric!"  
[3] "Dummy plotting for this descriptor(s) ((side.fluo.normalized.histogram.ratio.bin.9.204_229), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((side.nir.histogram.phenol.bin.1.0_25), because all zero or not numeric!"    
[2] "Dummy plotting for this descriptor(s) ((side.nir.histogram.phenol.bin.2.25_51), because all zero or not numeric!"   
[3] "Dummy plotting for this descriptor(s) ((side.nir.histogram.phenol.bin.8.178_204), because all zero or not numeric!" 
[4] "Dummy plotting for this descriptor(s) ((side.nir.histogram.phenol.bin.9.204_229), because all zero or not numeric!" 
[5] "Dummy plotting for this descriptor(s) ((side.nir.histogram.phenol.bin.10.229_255), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((side.nir.histogram.ratio.bin.1.0_25), because all zero or not numeric!"    
[2] "Dummy plotting for this descriptor(s) ((side.nir.histogram.ratio.bin.3.51_76), because all zero or not numeric!"   
[3] "Dummy plotting for this descriptor(s) ((side.nir.histogram.ratio.bin.4.76_102), because all zero or not numeric!"  
[4] "Dummy plotting for this descriptor(s) ((side.nir.histogram.ratio.bin.6.127_153), because all zero or not numeric!" 
[5] "Dummy plotting for this descriptor(s) ((side.nir.histogram.ratio.bin.7.153_178), because all zero or not numeric!" 
[6] "Dummy plotting for this descriptor(s) ((side.nir.histogram.ratio.bin.8.178_204), because all zero or not numeric!" 
[7] "Dummy plotting for this descriptor(s) ((side.nir.histogram.ratio.bin.9.204_229), because all zero or not numeric!" 
[8] "Dummy plotting for this descriptor(s) ((side.nir.histogram.ratio.bin.10.229_255), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((side.vis.hue.histogram.ratio.bin.1.0_25), because all zero or not numeric!"    
[2] "Dummy plotting for this descriptor(s) ((side.vis.hue.histogram.ratio.bin.3.51_76), because all zero or not numeric!"   
[3] "Dummy plotting for this descriptor(s) ((side.vis.hue.histogram.ratio.bin.4.76_102), because all zero or not numeric!"  
[4] "Dummy plotting for this descriptor(s) ((side.vis.hue.histogram.ratio.bin.5.102_127), because all zero or not numeric!" 
[5] "Dummy plotting for this descriptor(s) ((side.vis.hue.histogram.ratio.bin.6.127_153), because all zero or not numeric!" 
[6] "Dummy plotting for this descriptor(s) ((side.vis.hue.histogram.ratio.bin.7.153_178), because all zero or not numeric!" 
[7] "Dummy plotting for this descriptor(s) ((side.vis.hue.histogram.ratio.bin.8.178_204), because all zero or not numeric!" 
[8] "Dummy plotting for this descriptor(s) ((side.vis.hue.histogram.ratio.bin.9.204_229), because all zero or not numeric!" 
[9] "Dummy plotting for this descriptor(s) ((side.vis.hue.histogram.ratio.bin.10.229_255), because all zero or not numeric!"
 [1] "Dummy plotting for this descriptor(s) ((side.vis.normalized.histogram.ratio.bin.1.0_25), because all zero or not numeric!"    
 [2] "Dummy plotting for this descriptor(s) ((side.vis.normalized.histogram.ratio.bin.2.25_51), because all zero or not numeric!"   
 [3] "Dummy plotting for this descriptor(s) ((side.vis.normalized.histogram.ratio.bin.3.51_76), because all zero or not numeric!"   
 [4] "Dummy plotting for this descriptor(s) ((side.vis.normalized.histogram.ratio.bin.4.76_102), because all zero or not numeric!"  
 [5] "Dummy plotting for this descriptor(s) ((side.vis.normalized.histogram.ratio.bin.5.102_127), because all zero or not numeric!" 
 [6] "Dummy plotting for this descriptor(s) ((side.vis.normalized.histogram.ratio.bin.6.127_153), because all zero or not numeric!" 
 [7] "Dummy plotting for this descriptor(s) ((side.vis.normalized.histogram.ratio.bin.7.153_178), because all zero or not numeric!" 
 [8] "Dummy plotting for this descriptor(s) ((side.vis.normalized.histogram.ratio.bin.8.178_204), because all zero or not numeric!" 
 [9] "Dummy plotting for this descriptor(s) ((side.vis.normalized.histogram.ratio.bin.9.204_229), because all zero or not numeric!" 
[10] "Dummy plotting for this descriptor(s) ((side.vis.normalized.histogram.ratio.bin.10.229_255), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((top.fluo.histogram.bin.9.204_229), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((top.fluo.histogram.phenol.bin.8.178_204), because all zero or not numeric!"
[2] "Dummy plotting for this descriptor(s) ((top.fluo.histogram.phenol.bin.9.204_229), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((top.fluo.histogram.ratio.bin.2.25_51), because all zero or not numeric!"  
[2] "Dummy plotting for this descriptor(s) ((top.fluo.histogram.ratio.bin.3.51_76), because all zero or not numeric!"  
[3] "Dummy plotting for this descriptor(s) ((top.fluo.histogram.ratio.bin.9.204_229), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((top.nir.histogram.bin.1.0_25), because all zero or not numeric!"    
[2] "Dummy plotting for this descriptor(s) ((top.nir.histogram.bin.10.229_255), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((top.nir.histogram.phenol.bin.1.0_25), because all zero or not numeric!"    
[2] "Dummy plotting for this descriptor(s) ((top.nir.histogram.phenol.bin.10.229_255), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((top.nir.histogram.ratio.bin.1.0_25), because all zero or not numeric!"    
[2] "Dummy plotting for this descriptor(s) ((top.nir.histogram.ratio.bin.2.25_51), because all zero or not numeric!"   
[3] "Dummy plotting for this descriptor(s) ((top.nir.histogram.ratio.bin.3.51_76), because all zero or not numeric!"   
[4] "Dummy plotting for this descriptor(s) ((top.nir.histogram.ratio.bin.4.76_102), because all zero or not numeric!"  
[5] "Dummy plotting for this descriptor(s) ((top.nir.histogram.ratio.bin.6.127_153), because all zero or not numeric!" 
[6] "Dummy plotting for this descriptor(s) ((top.nir.histogram.ratio.bin.7.153_178), because all zero or not numeric!" 
[7] "Dummy plotting for this descriptor(s) ((top.nir.histogram.ratio.bin.8.178_204), because all zero or not numeric!" 
[8] "Dummy plotting for this descriptor(s) ((top.nir.histogram.ratio.bin.9.204_229), because all zero or not numeric!" 
[9] "Dummy plotting for this descriptor(s) ((top.nir.histogram.ratio.bin.10.229_255), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((top.vis.hue.histogram.ratio.bin.1.0_25), because all zero or not numeric!"    
[2] "Dummy plotting for this descriptor(s) ((top.vis.hue.histogram.ratio.bin.3.51_76), because all zero or not numeric!"   
[3] "Dummy plotting for this descriptor(s) ((top.vis.hue.histogram.ratio.bin.4.76_102), because all zero or not numeric!"  
[4] "Dummy plotting for this descriptor(s) ((top.vis.hue.histogram.ratio.bin.5.102_127), because all zero or not numeric!" 
[5] "Dummy plotting for this descriptor(s) ((top.vis.hue.histogram.ratio.bin.6.127_153), because all zero or not numeric!" 
[6] "Dummy plotting for this descriptor(s) ((top.vis.hue.histogram.ratio.bin.7.153_178), because all zero or not numeric!" 
[7] "Dummy plotting for this descriptor(s) ((top.vis.hue.histogram.ratio.bin.8.178_204), because all zero or not numeric!" 
[8] "Dummy plotting for this descriptor(s) ((top.vis.hue.histogram.ratio.bin.9.204_229), because all zero or not numeric!" 
[9] "Dummy plotting for this descriptor(s) ((top.vis.hue.histogram.ratio.bin.10.229_255), because all zero or not numeric!"
Es gab 20 Warnungen (Anzeige mit warnings())
> 	overallList <- reduceWorkingDataSize(overallList)
[1] "DebugBreakPoint:  reduceWorkingDataSize()"
> 	overallList <- setDefaultAxisNames(overallList)	
[1] "DebugBreakPoint:  setDefaultAxisNames()"
> colnames(overallList$overallResult_boxDes)
character(0)
> overallList <- overallGetResultDataFrame(overallList)
[1] "DebugBreakPoint:  overallGetResultDataFrame()"
[1] "DebugBreakPoint:  buildList()"
[1] "... nBoxplot"
[1] "DebugBreakPoint:  getResultDataFrame()"
[1] "... Boxplot"
[1] "DebugBreakPoint:  getResultDataFrame()"
[1] "... stackedBoxplot"
[1] "DebugBreakPoint:  getResultDataFrame()"
Es gab 13 Warnungen (Anzeige mit warnings())
> colnames(overallList$overallResult_boxDes)
 [1] "name"    "xAxis"   "value1"  "value2"  "value3"  "value5"  "value6" 
 [8] "value7"  "value8"  "value9"  "value10" "value11" "value12"
> overallList <- setColor(overallList) 
[1] "DebugBreakPoint:  setColor()"
[1] "... all values are 'NA'"
[1] "... all values are 'NA'"
[1] "... all values are 'NA'"
[1] "... all values are 'NA'"
[1] "... all values are 'NA'"
[1] "... all values are 'NA'"
[1] "... all values are 'NA'"
[1] "... all values are 'NA'"
[1] "... all values are 'NA'"
[1] "... all values are 'NA'"
Es gab 15 Warnungen (Anzeige mit warnings())
> 	h=h 
> 	overallResult = overallList$overallResult_boxDes
> 	overallColor=overallList$color_box
> #	debug = overallList$debug
> 	overallDescriptor = overallList$boxDes
> 	overallDesName = overallList$boxDesName
> 	tempOverallResult <-  overallResult
> reduceWholeOverallResultToOneValue(tempOverallResult, imagesIndex, overallList$debug, "boxplot")
[1] "DebugBreakPoint:  reduceWholeOverallResultToOneValue()"
          name xAxis     value
1    Fernandez    12        NA
2    Fernandez    12        NA
3    Fernandez    12        NA
4    Fernandez    12        NA
5    Fernandez    12        NA
6    Fernandez    12        NA
7    Fernandez    12        NA
8    Fernandez    12        NA
9    Fernandez    12        NA
10   Fernandez    12        NA
11   Fernandez    12        NA
12   Fernandez    12        NA
13   Fernandez    12        NA
14   Fernandez    12        NA
15   Fernandez    12        NA
16   Fernandez    12        NA
17   Fernandez    12        NA
18   Fernandez    12        NA
19   Fernandez    12        NA
20   Fernandez    12        NA
21   Fernandez    12        NA
22   Fernandez    12        NA
23   Fernandez    12        NA
24   Fernandez    12        NA
25   Fernandez    12        NA
26   Fernandez    12        NA
27   Fernandez    12        NA
28   Fernandez    12        NA
29   Fernandez    12        NA
30   Fernandez    12        NA
31   Fernandez    12        NA
32   Fernandez    12        NA
33   Fernandez    12        NA
34   Fernandez    13  435.5140
35   Fernandez    13  227.9436
36   Fernandez    13  431.2861
37   Fernandez    13  538.1459
38   Fernandez    13  483.5630
39   Fernandez    13  504.1868
40   Fernandez    13  488.9428
41   Fernandez    13  519.6949
42   Fernandez    13  532.9071
43   Fernandez    13  479.3334
44   Fernandez    13  503.9368
45   Fernandez    13  551.2188
46   Fernandez    13  544.6819
47   Fernandez    13  557.7473
48   Fernandez    13  527.3831
49   Fernandez    13  523.9225
50   Fernandez    13  522.3833
51   Fernandez    13  636.9077
52   Fernandez    13  492.0196
53   Fernandez    13  569.6659
54   Fernandez    13  530.0750
55   Fernandez    13  495.7325
56   Fernandez    13  506.2413
57   Fernandez    13  599.2617
58   Fernandez    13  507.3932
59   Fernandez    13  482.4087
60   Fernandez    13  571.5912
61   Fernandez    13  463.9624
62   Fernandez    13  623.0878
63   Fernandez    13  523.9280
64   Fernandez    13  525.4609
65   Fernandez    13  547.7568
66   Fernandez    13  573.1268
67   Fernandez    15  570.8091
68   Fernandez    15  285.9819
69   Fernandez    15  571.5789
70   Fernandez    15  599.6768
71   Fernandez    15  512.3041
72   Fernandez    15  611.9936
73   Fernandez    15  555.4131
74   Fernandez    15  640.8612
75   Fernandez    15        NA
76   Fernandez    15  520.7719
77   Fernandez    15  519.2323
78   Fernandez    15  602.7560
79   Fernandez    15  712.4530
80   Fernandez    15  603.9107
81   Fernandez    15  560.8017
82   Fernandez    15  565.4205
83   Fernandez    15  598.9070
84   Fernandez    15  620.8464
85   Fernandez    15  576.1978
86   Fernandez    15  600.4466
87   Fernandez    15  585.4354
88   Fernandez    15  519.6172
89   Fernandez    15  561.9564
90   Fernandez    15  675.8873
91   Fernandez    15  543.8660
92   Fernandez    15  569.6544
93   Fernandez    15  702.0606
94   Fernandez    15  538.8623
95   Fernandez    15  601.6013
96   Fernandez    15  631.6236
97   Fernandez    15  570.0393
98   Fernandez    15  657.7969
99   Fernandez    15  601.6013
100  Fernandez    16        NA
101  Fernandez    16        NA
102  Fernandez    16        NA
103  Fernandez    16        NA
104  Fernandez    16        NA
105  Fernandez    16        NA
106  Fernandez    16        NA
107  Fernandez    16        NA
108  Fernandez    16        NA
109  Fernandez    16        NA
110  Fernandez    16        NA
111  Fernandez    16        NA
112  Fernandez    16        NA
113  Fernandez    16        NA
114  Fernandez    16        NA
115  Fernandez    16        NA
116  Fernandez    16        NA
117  Fernandez    16        NA
118  Fernandez    16        NA
119  Fernandez    16        NA
120  Fernandez    16        NA
121  Fernandez    16        NA
122  Fernandez    16        NA
123  Fernandez    16        NA
124  Fernandez    16        NA
125  Fernandez    16        NA
126  Fernandez    16        NA
127  Fernandez    16        NA
128  Fernandez    16        NA
129  Fernandez    16        NA
130  Fernandez    16        NA
131  Fernandez    16        NA
132  Fernandez    16        NA
133  Fernandez    17  671.0244
134  Fernandez    17  337.8155
135  Fernandez    17  563.5376
136  Fernandez    17  677.5504
137  Fernandez    17  608.0679
138  Fernandez    17        NA
139  Fernandez    17  553.5567
140  Fernandez    17  680.6214
141  Fernandez    17        NA
142  Fernandez    17  717.0901
143  Fernandez    17  684.4602
144  Fernandez    17  734.3648
145  Fernandez    17  798.0891
146  Fernandez    17  656.0530
147  Fernandez    17  681.3892
148  Fernandez    17  665.6501
149  Fernandez    17  642.6172
150  Fernandez    17  623.4231
151  Fernandez    17  595.3998
152  Fernandez    17  681.7731
153  Fernandez    17  567.7603
154  Fernandez    17  695.2089
155  Fernandez    17  663.7306
156  Fernandez    17  702.5027
157  Fernandez    17  720.5451
158  Fernandez    17  729.7582
159  Fernandez    17  719.3934
160  Fernandez    17  586.5705
161  Fernandez    17  624.9586
162  Fernandez    17  648.7593
163  Fernandez    17  727.0710
164  Fernandez    17  693.6734
165  Fernandez    17  732.0615
166  Fernandez    18        NA
167  Fernandez    18        NA
168  Fernandez    18        NA
169  Fernandez    18        NA
170  Fernandez    18        NA
171  Fernandez    18        NA
172  Fernandez    18        NA
173  Fernandez    18        NA
174  Fernandez    18        NA
175  Fernandez    18        NA
176  Fernandez    18        NA
177  Fernandez    18        NA
178  Fernandez    18        NA
179  Fernandez    18        NA
180  Fernandez    18        NA
181  Fernandez    18        NA
182  Fernandez    18        NA
183  Fernandez    18        NA
184  Fernandez    18        NA
185  Fernandez    18        NA
186  Fernandez    18        NA
187  Fernandez    18        NA
188  Fernandez    18        NA
189  Fernandez    18        NA
190  Fernandez    18        NA
191  Fernandez    18        NA
192  Fernandez    18        NA
193  Fernandez    18        NA
194  Fernandez    18        NA
195  Fernandez    18        NA
196  Fernandez    18        NA
197  Fernandez    18        NA
198  Fernandez    18        NA
199  Fernandez    19  665.5260
200  Fernandez    19  444.7099
201  Fernandez    19  667.8342
202  Fernandez    19  775.5494
203  Fernandez    19  792.8608
204  Fernandez    19        NA
205  Fernandez    19  719.7683
206  Fernandez    19  781.3199
207  Fernandez    19        NA
208  Fernandez    19  902.1148
209  Fernandez    19  931.3518
210  Fernandez    19  937.8916
211  Fernandez    19  733.2327
212  Fernandez    19  765.9320
213  Fernandez    19  858.2593
214  Fernandez    19  894.0361
215  Fernandez    19  767.4708
216  Fernandez    19  715.5367
217  Fernandez    19  644.7524
218  Fernandez    19  787.8597
219  Fernandez    19  662.0638
220  Fernandez    19  910.9628
221  Fernandez    19  903.6536
222  Fernandez    19  724.3847
223  Fernandez    19  914.0404
224  Fernandez    19  873.6472
225  Fernandez    19  707.8427
226  Fernandez    19  719.7683
227  Fernandez    19  685.5303
228  Fernandez    19  663.6026
229  Fernandez    19  941.3539
230  Fernandez    19  703.9957
231  Fernandez    19  983.2859
232  Fernandez    19        NA
233  Fernandez    19        NA
234  Fernandez    19        NA
235  Fernandez    19        NA
236  Fernandez    19        NA
237  Fernandez    19        NA
238  Fernandez    19        NA
239  Fernandez    19        NA
240  Fernandez    19        NA
241  Fernandez    19        NA
242  Fernandez    19        NA
243  Fernandez    19        NA
244  Fernandez    19        NA
245  Fernandez    19        NA
246  Fernandez    19        NA
247  Fernandez    19        NA
248  Fernandez    19        NA
249  Fernandez    19        NA
250  Fernandez    19        NA
251  Fernandez    19        NA
252  Fernandez    19        NA
253  Fernandez    19        NA
254  Fernandez    19        NA
255  Fernandez    19        NA
256  Fernandez    19        NA
257  Fernandez    19        NA
258  Fernandez    19        NA
259  Fernandez    19        NA
260  Fernandez    19        NA
261  Fernandez    19        NA
262  Fernandez    19        NA
263  Fernandez    19        NA
264  Fernandez    19        NA
265  Fernandez    20        NA
266  Fernandez    20        NA
267  Fernandez    20        NA
268  Fernandez    20        NA
269  Fernandez    20        NA
270  Fernandez    20        NA
271  Fernandez    20        NA
272  Fernandez    20        NA
273  Fernandez    20        NA
274  Fernandez    20        NA
275  Fernandez    20        NA
276  Fernandez    20        NA
277  Fernandez    20        NA
278  Fernandez    20        NA
279  Fernandez    20        NA
280  Fernandez    20        NA
281  Fernandez    20        NA
282  Fernandez    20        NA
283  Fernandez    20        NA
284  Fernandez    20        NA
285  Fernandez    20        NA
286  Fernandez    20        NA
287  Fernandez    20        NA
288  Fernandez    20        NA
289  Fernandez    20        NA
290  Fernandez    20        NA
291  Fernandez    20        NA
292  Fernandez    20        NA
293  Fernandez    20        NA
294  Fernandez    20        NA
295  Fernandez    20        NA
296  Fernandez    20        NA
297  Fernandez    20        NA
298  Fernandez    21  659.7214
299  Fernandez    21  437.6332
300  Fernandez    21  764.7996
301  Fernandez    21  807.1388
302  Fernandez    21  866.7985
303  Fernandez    21        NA
304  Fernandez    21  823.6895
305  Fernandez    21  760.5657
306  Fernandez    21        NA
307  Fernandez    21  983.8086
308  Fernandez    21 1046.9325
309  Fernandez    21 1043.4684
310  Fernandez    21  790.5880
311  Fernandez    21  787.1239
312  Fernandez    21  937.6204
313  Fernandez    21 1016.5253
314  Fernandez    21  774.8070
315  Fernandez    21  762.4902
316  Fernandez    21  684.3551
317  Fernandez    21  832.1574
318  Fernandez    21  737.4716
319  Fernandez    21 1034.2307
320  Fernandez    21  939.1600
321  Fernandez    21  836.0064
322  Fernandez    21  983.0388
323  Fernandez    21  921.0696
324  Fernandez    21  790.9729
325  Fernandez    21  788.6635
326  Fernandez    21  813.6821
327  Fernandez    21  747.8639
328  Fernandez    21 1028.0723
329  Fernandez    21  790.2031
330  Fernandez    21 1093.8905
331  Fernandez    22        NA
332  Fernandez    22        NA
333  Fernandez    22        NA
334  Fernandez    22        NA
335  Fernandez    22        NA
336  Fernandez    22        NA
337  Fernandez    22        NA
338  Fernandez    22        NA
339  Fernandez    22        NA
340  Fernandez    22        NA
341  Fernandez    22        NA
342  Fernandez    22        NA
343  Fernandez    22        NA
344  Fernandez    22        NA
345  Fernandez    22        NA
346  Fernandez    22        NA
347  Fernandez    22        NA
348  Fernandez    22        NA
349  Fernandez    22        NA
350  Fernandez    22        NA
351  Fernandez    22        NA
352  Fernandez    22        NA
353  Fernandez    22        NA
354  Fernandez    22        NA
355  Fernandez    22        NA
356  Fernandez    22        NA
357  Fernandez    22        NA
358  Fernandez    22        NA
359  Fernandez    22        NA
360  Fernandez    22        NA
361  Fernandez    22        NA
362  Fernandez    22        NA
363  Fernandez    22        NA
364  Fernandez    23  852.1554
365  Fernandez    23  606.0032
366  Fernandez    23  788.4684
367  Fernandez    23  840.8246
368  Fernandez    23  860.7512
369  Fernandez    23        NA
370  Fernandez    23  832.6195
371  Fernandez    23  893.9622
372  Fernandez    23        NA
373  Fernandez    23  986.1716
374  Fernandez    23 1059.2358
375  Fernandez    23 1058.8451
376  Fernandez    23  870.1284
377  Fernandez    23  828.3216
378  Fernandez    23  933.8154
379  Fernandez    23  999.4560
380  Fernandez    23  781.0448
381  Fernandez    23  841.2153
382  Fernandez    23  818.5537
383  Fernandez    23  860.3605
384  Fernandez    23  828.3216
385  Fernandez    23 1052.5936
386  Fernandez    23  906.4652
387  Fernandez    23  906.4652
388  Fernandez    23  966.2450
389  Fernandez    23  918.1867
390  Fernandez    23  961.1657
391  Fernandez    23  826.3681
392  Fernandez    23  849.0297
393  Fernandez    23  815.0372
394  Fernandez    23 1040.0907
395  Fernandez    23  872.4727
396  Fernandez    23 1074.8645
397  Fernandez    24        NA
398  Fernandez    24        NA
399  Fernandez    24        NA
400  Fernandez    24        NA
401  Fernandez    24        NA
402  Fernandez    24        NA
403  Fernandez    24        NA
404  Fernandez    24        NA
405  Fernandez    24        NA
406  Fernandez    24        NA
407  Fernandez    24        NA
408  Fernandez    24        NA
409  Fernandez    24        NA
410  Fernandez    24        NA
411  Fernandez    24        NA
412  Fernandez    24        NA
413  Fernandez    24        NA
414  Fernandez    24        NA
415  Fernandez    24        NA
416  Fernandez    24        NA
417  Fernandez    24        NA
418  Fernandez    24        NA
419  Fernandez    24        NA
420  Fernandez    24        NA
421  Fernandez    24        NA
422  Fernandez    24        NA
423  Fernandez    24        NA
424  Fernandez    24        NA
425  Fernandez    24        NA
426  Fernandez    24        NA
427  Fernandez    24        NA
428  Fernandez    24        NA
429  Fernandez    24        NA
430  Fernandez    24  927.6445
431  Fernandez    24  701.5404
432  Fernandez    24  788.5836
433  Fernandez    24 1004.1492
434  Fernandez    24  825.6991
435  Fernandez    24 1003.9344
436  Fernandez    24  938.5204
437  Fernandez    24  969.3686
438  Fernandez    24 1042.9246
439  Fernandez    24 1032.2939
440  Fernandez    24  852.0305
441  Fernandez    24  966.1426
442  Fernandez    24  934.6488
443  Fernandez    24  958.0627
444  Fernandez    24  949.9199
445  Fernandez    24 1035.5804
446  Fernandez    24 1016.3780
447  Fernandez    24  886.7184
448  Fernandez    24  901.0976
449  Fernandez    24 1023.0485
450  Fernandez    24  872.2472
451  Fernandez    24  961.0431
452  Fernandez    24  954.4368
453  Fernandez    24  857.4994
454  Fernandez    24 1059.4534
455  Fernandez    24  877.0711
456  Fernandez    24  912.9270
457  Fernandez    24  862.1389
458  Fernandez    24  990.2622
459  Fernandez    24  925.0324
460  Fernandez    24 1028.4833
461  Fernandez    25        NA
462  Fernandez    25        NA
463  Fernandez    25        NA
464  Fernandez    25        NA
465  Fernandez    25        NA
466  Fernandez    25        NA
467  Fernandez    25        NA
468  Fernandez    25        NA
469  Fernandez    25        NA
470  Fernandez    25        NA
471  Fernandez    25        NA
472  Fernandez    25        NA
473  Fernandez    25        NA
474  Fernandez    25        NA
475  Fernandez    25        NA
476  Fernandez    25        NA
477  Fernandez    25        NA
478  Fernandez    25        NA
479  Fernandez    25        NA
480  Fernandez    25        NA
481  Fernandez    25        NA
482  Fernandez    25        NA
483  Fernandez    25        NA
484  Fernandez    25        NA
485  Fernandez    25        NA
486  Fernandez    25        NA
487  Fernandez    25        NA
488  Fernandez    25        NA
489  Fernandez    25        NA
490  Fernandez    25        NA
491  Fernandez    25        NA
492  Fernandez    25        NA
493  Fernandez    25        NA
494  Fernandez    26  993.1599
495  Fernandez    26  916.7328
496  Fernandez    26 1116.1551
497  Fernandez    26 1116.6693
498  Fernandez    26        NA
499  Fernandez    26        NA
500  Fernandez    26        NA
501  Fernandez    26        NA
502  Fernandez    26        NA
503  Fernandez    26        NA
504  Fernandez    26        NA
505  Fernandez    26        NA
506  Fernandez    26        NA
507  Fernandez    26        NA
508  Fernandez    26        NA
509  Fernandez    26        NA
510  Fernandez    26        NA
511  Fernandez    26        NA
512  Fernandez    26        NA
513  Fernandez    26        NA
514  Fernandez    26        NA
515  Fernandez    26        NA
516  Fernandez    26        NA
517  Fernandez    26        NA
518  Fernandez    26        NA
519  Fernandez    26        NA
520  Fernandez    26        NA
521  Fernandez    26        NA
522  Fernandez    26        NA
523  Fernandez    26        NA
524  Fernandez    26        NA
525  Fernandez    26        NA
526  Fernandez    26        NA
527  Fernandez    27 1004.7960
528  Fernandez    27  769.3124
529  Fernandez    27  917.6412
530  Fernandez    27 1335.0803
531  Fernandez    27 1029.7631
532  Fernandez    27  957.3793
533  Fernandez    27        NA
534  Fernandez    27 1055.7742
535  Fernandez    27 1010.5383
536  Fernandez    27 1196.8861
537  Fernandez    27  997.0875
538  Fernandez    27 1122.2301
539  Fernandez    27 1134.5448
540  Fernandez    27  991.2831
541  Fernandez    27 1129.8772
542  Fernandez    27 1133.7467
543  Fernandez    27 1226.7363
544  Fernandez    27 1120.0487
545  Fernandez    27 1021.1949
546  Fernandez    27        NA
547  Fernandez    27 1028.7187
548  Fernandez    27 1081.2629
549  Fernandez    27 1087.9268
550  Fernandez    27 1096.8017
551  Fernandez    27 1054.3312
552  Fernandez    27  907.7835
553  Fernandez    27 1064.5570
554  Fernandez    27  972.6426
555  Fernandez    27 1041.9235
556  Fernandez    28        NA
557  Fernandez    28        NA
558  Fernandez    28        NA
559  Fernandez    28        NA
560  Fernandez    28        NA
561  Fernandez    28        NA
562  Fernandez    28        NA
563  Fernandez    28        NA
564  Fernandez    28        NA
565  Fernandez    28        NA
566  Fernandez    28        NA
567  Fernandez    28        NA
568  Fernandez    28        NA
569  Fernandez    28        NA
570  Fernandez    28        NA
571  Fernandez    28        NA
572  Fernandez    28        NA
573  Fernandez    28        NA
574  Fernandez    28        NA
575  Fernandez    28        NA
576  Fernandez    28        NA
577  Fernandez    28        NA
578  Fernandez    28        NA
579  Fernandez    28        NA
580  Fernandez    28        NA
581  Fernandez    28        NA
582  Fernandez    28        NA
583  Fernandez    28        NA
584  Fernandez    28        NA
585  Fernandez    28        NA
586  Fernandez    28        NA
587  Fernandez    28        NA
588  Fernandez    28        NA
589  Fernandez    28        NA
590  Fernandez    28        NA
591  Fernandez    28        NA
592  Fernandez    28        NA
593  Fernandez    28        NA
594  Fernandez    28        NA
595  Fernandez    28        NA
596  Fernandez    28        NA
597  Fernandez    28        NA
598  Fernandez    28        NA
599  Fernandez    28        NA
600  Fernandez    28        NA
601  Fernandez    28        NA
602  Fernandez    28        NA
603  Fernandez    28        NA
604  Fernandez    28        NA
605  Fernandez    28        NA
606  Fernandez    28        NA
607  Fernandez    28        NA
608  Fernandez    28        NA
609  Fernandez    28        NA
610  Fernandez    28        NA
611  Fernandez    28        NA
612  Fernandez    28        NA
613  Fernandez    28        NA
614  Fernandez    31        NA
615  Fernandez    31        NA
616  Fernandez    31        NA
617  Fernandez    31        NA
618  Fernandez    31        NA
619  Fernandez    31        NA
620  Fernandez    31        NA
621  Fernandez    31        NA
622  Fernandez    31        NA
623  Fernandez    31        NA
624  Fernandez    31        NA
625  Fernandez    31        NA
626  Fernandez    31        NA
627  Fernandez    31        NA
628  Fernandez    31        NA
629  Fernandez    31        NA
630  Fernandez    31        NA
631  Fernandez    31        NA
632  Fernandez    31        NA
633  Fernandez    31        NA
634  Fernandez    31        NA
635  Fernandez    31        NA
636  Fernandez    31        NA
637  Fernandez    31        NA
638  Fernandez    31        NA
639  Fernandez    31        NA
640  Fernandez    31        NA
641  Fernandez    31        NA
642  Fernandez    31        NA
643  Fernandez    31        NA
644  Fernandez    31        NA
645  Fernandez    31        NA
646  Fernandez    31        NA
647  Fernandez    31        NA
648  Fernandez    31        NA
649  Fernandez    31        NA
650  Fernandez    31        NA
651  Fernandez    31        NA
652  Fernandez    31        NA
653  Fernandez    31        NA
654  Fernandez    31        NA
655  Fernandez    31        NA
656  Fernandez    31        NA
657  Fernandez    31        NA
658  Fernandez    31        NA
659  Fernandez    31        NA
660  Fernandez    31        NA
661  Fernandez    31        NA
662  Fernandez    31        NA
663  Fernandez    31        NA
664  Fernandez    31        NA
665  Fernandez    31        NA
666  Fernandez    31        NA
667  Fernandez    31        NA
668  Fernandez    31        NA
669  Fernandez    31        NA
670  Fernandez    31        NA
671  Fernandez    31        NA
672  Fernandez    32 1198.0553
673  Fernandez    32  879.8324
674  Fernandez    32 1165.2033
675  Fernandez    32 1300.9629
676  Fernandez    32 1228.4863
677  Fernandez    32 1058.3118
678  Fernandez    32        NA
679  Fernandez    32 1129.0110
680  Fernandez    32 1209.4248
681  Fernandez    32 1326.2148
682  Fernandez    32 1193.6730
683  Fernandez    32 1175.0712
684  Fernandez    32 1259.6527
685  Fernandez    32 1102.6865
686  Fernandez    32 1164.1307
687  Fernandez    32 1213.9603
688  Fernandez    32 1263.0544
689  Fernandez    32 1198.8521
690  Fernandez    32 1140.3498
691  Fernandez    32        NA
692  Fernandez    32 1203.6021
693  Fernandez    32 1248.8042
694  Fernandez    32 1167.6243
695  Fernandez    32 1162.7517
696  Fernandez    32 1124.2609
697  Fernandez    32 1080.6830
698  Fernandez    32 1161.6484
699  Fernandez    32 1075.2894
700  Fernandez    32 1241.9703
701  Fernandez    33 1073.7109
702  Fernandez    33 1167.6990
703  Fernandez    33 1290.3562
704  Fernandez    33  914.0010
705  Fernandez    33 1292.3844
706  Fernandez    33        NA
707  Fernandez    33        NA
708  Fernandez    33        NA
709  Fernandez    33        NA
710  Fernandez    33        NA
711  Fernandez    33        NA
712  Fernandez    33        NA
713  Fernandez    33        NA
714  Fernandez    33        NA
715  Fernandez    33        NA
716  Fernandez    33        NA
717  Fernandez    33        NA
718  Fernandez    33        NA
719  Fernandez    33        NA
720  Fernandez    33        NA
721  Fernandez    33        NA
722  Fernandez    33        NA
723  Fernandez    33        NA
724  Fernandez    33        NA
725  Fernandez    33        NA
726  Fernandez    33        NA
727  Fernandez    33        NA
728  Fernandez    33        NA
729  Fernandez    33        NA
730  Fernandez    33        NA
731  Fernandez    35        NA
732  Fernandez    35        NA
733  Fernandez    35        NA
734  Fernandez    35        NA
735  Fernandez    35        NA
736  Fernandez    35        NA
737  Fernandez    35        NA
738  Fernandez    35        NA
739  Fernandez    35        NA
740  Fernandez    35        NA
741  Fernandez    35        NA
742  Fernandez    35        NA
743  Fernandez    35        NA
744  Fernandez    35        NA
745  Fernandez    35        NA
746  Fernandez    35        NA
747  Fernandez    35        NA
748  Fernandez    35        NA
749  Fernandez    35        NA
750  Fernandez    35        NA
751  Fernandez    35        NA
752  Fernandez    35        NA
753  Fernandez    35        NA
754  Fernandez    35        NA
755  Fernandez    35        NA
756  Fernandez    35        NA
757  Fernandez    35        NA
758  Fernandez    35        NA
759  Fernandez    35        NA
760  Fernandez    35        NA
761  Fernandez    35        NA
762  Fernandez    35        NA
763  Fernandez    35        NA
764  Fernandez    35        NA
765  Fernandez    35        NA
766  Fernandez    35        NA
767  Fernandez    35        NA
768  Fernandez    35        NA
769  Fernandez    35        NA
770  Fernandez    35        NA
771  Fernandez    35        NA
772  Fernandez    35        NA
773  Fernandez    35        NA
774  Fernandez    35        NA
775  Fernandez    35        NA
776  Fernandez    35        NA
777  Fernandez    35        NA
778  Fernandez    35        NA
779  Fernandez    35        NA
780  Fernandez    35        NA
781  Fernandez    36 1464.7424
782  Fernandez    36 1378.0005
783  Fernandez    36        NA
784  Fernandez    36 1459.2430
785  Fernandez    36 1487.8932
786  Fernandez    36 1606.1834
787  Fernandez    36 1443.9425
788  Fernandez    36 1419.7507
789  Fernandez    36 1432.3991
790  Fernandez    36 1360.8582
791  Fernandez    36 1301.0602
792  Fernandez    36 1433.3136
793  Fernandez    36 1333.8029
794  Fernandez    36 1296.8756
795  Fernandez    36 1301.2391
796  Fernandez    36        NA
797  Fernandez    36 1336.4302
798  Fernandez    36 1392.6255
799  Fernandez    36 1240.6722
800  Fernandez    36 1325.0632
801  Fernandez    36 1329.4047
802  Fernandez    36 1232.2454
803  Fernandez    36 1355.7869
804  Fernandez    36 1220.7914
805  Fernandez    36 1547.4224
806  Fernandez    36        NA
807  Fernandez    36        NA
808  Fernandez    36        NA
809  Fernandez    36        NA
810  Fernandez    36        NA
811  Fernandez    36        NA
812  Fernandez    36        NA
813  Fernandez    36        NA
814  Fernandez    36        NA
815  Fernandez    36        NA
816  Fernandez    36        NA
817  Fernandez    36        NA
818  Fernandez    36        NA
819  Fernandez    36        NA
820  Fernandez    36        NA
821  Fernandez    36        NA
822  Fernandez    36        NA
823  Fernandez    36        NA
824  Fernandez    36        NA
825  Fernandez    36        NA
826  Fernandez    36        NA
827  Fernandez    36        NA
828  Fernandez    36        NA
829  Fernandez    36        NA
830  Fernandez    36        NA
831  Fernandez    37        NA
832  Fernandez    37        NA
833  Fernandez    37        NA
834  Fernandez    37        NA
835  Fernandez    37        NA
836  Fernandez    37        NA
837  Fernandez    37        NA
838  Fernandez    37        NA
839  Fernandez    37        NA
840  Fernandez    37        NA
841  Fernandez    37        NA
842  Fernandez    37        NA
843  Fernandez    37        NA
844  Fernandez    37        NA
845  Fernandez    37        NA
846  Fernandez    37        NA
847  Fernandez    37        NA
848  Fernandez    37        NA
849  Fernandez    37        NA
850  Fernandez    37        NA
851  Fernandez    37        NA
852  Fernandez    37        NA
853  Fernandez    37        NA
854  Fernandez    37        NA
855  Fernandez    37        NA
856  Fernandez    37        NA
857  Fernandez    37        NA
858  Fernandez    37        NA
859  Fernandez    37        NA
860  Fernandez    37        NA
861  Fernandez    37        NA
862  Fernandez    37        NA
863  Fernandez    37        NA
864  Fernandez    37        NA
865  Fernandez    37        NA
866  Fernandez    37        NA
867  Fernandez    37        NA
868  Fernandez    37        NA
869  Fernandez    37        NA
870  Fernandez    37        NA
871  Fernandez    37        NA
872  Fernandez    37        NA
873  Fernandez    37        NA
874  Fernandez    37        NA
875  Fernandez    37        NA
876  Fernandez    37        NA
877  Fernandez    37        NA
878  Fernandez    37        NA
879  Fernandez    37        NA
880  Fernandez    37        NA
881  Fernandez    38 1458.8689
882  Fernandez    38 1455.4905
883  Fernandez    38        NA
884  Fernandez    38 1555.3613
885  Fernandez    38 1565.9832
886  Fernandez    38 1617.0224
887  Fernandez    38 1368.5085
888  Fernandez    38 1534.3400
889  Fernandez    38 1468.5058
890  Fernandez    38 1386.5864
891  Fernandez    38 1449.2606
892  Fernandez    38 1548.9796
893  Fernandez    38 1358.2276
894  Fernandez    38 1393.4303
895  Fernandez    38 1384.0679
896  Fernandez    38        NA
897  Fernandez    38 1422.5590
898  Fernandez    38 1464.9711
899  Fernandez    38 1387.6305
900  Fernandez    38 1433.7275
901  Fernandez    38 1458.9592
902  Fernandez    38 1387.2949
903  Fernandez    38 1401.5597
904  Fernandez    38 1346.5348
905  Fernandez    38 1617.0838
906  Fernandez    39        NA
907  Fernandez    39        NA
908  Fernandez    39        NA
909  Fernandez    39        NA
910  Fernandez    39        NA
911  Fernandez    39        NA
912  Fernandez    39        NA
913  Fernandez    39        NA
914  Fernandez    39        NA
915  Fernandez    39        NA
916  Fernandez    39        NA
917  Fernandez    39        NA
918  Fernandez    39        NA
919  Fernandez    39        NA
920  Fernandez    39        NA
921  Fernandez    39        NA
922  Fernandez    39        NA
923  Fernandez    39        NA
924  Fernandez    39        NA
925  Fernandez    39        NA
926  Fernandez    39        NA
927  Fernandez    39        NA
928  Fernandez    39        NA
929  Fernandez    39        NA
930  Fernandez    39        NA
931  Fernandez    40 1612.0283
932  Fernandez    40 1650.4693
933  Fernandez    40 2054.0707
934  Fernandez    40 1510.7218
935  Fernandez    40 2079.1865
936  Fernandez    40        NA
937  Fernandez    40        NA
938  Fernandez    40        NA
939  Fernandez    40        NA
940  Fernandez    40        NA
941  Fernandez    40        NA
942  Fernandez    40        NA
943  Fernandez    40        NA
944  Fernandez    40        NA
945  Fernandez    40        NA
946  Fernandez    40        NA
947  Fernandez    40        NA
948  Fernandez    40        NA
949  Fernandez    40        NA
950  Fernandez    40        NA
951  Fernandez    40        NA
952  Fernandez    40        NA
953  Fernandez    40        NA
954  Fernandez    40        NA
955  Fernandez    40        NA
956  Fernandez    40        NA
957  Fernandez    40        NA
958  Fernandez    40        NA
959  Fernandez    40        NA
960  Fernandez    40        NA
961  Fernandez    41 1590.6958
962  Fernandez    41 1557.5819
963  Fernandez    41 1972.4739
964  Fernandez    41 1521.5931
965  Fernandez    41 2066.1099
966  Fernandez    41        NA
967  Fernandez    41        NA
968  Fernandez    41        NA
969  Fernandez    41        NA
970  Fernandez    41        NA
971  Fernandez    41        NA
972  Fernandez    41        NA
973  Fernandez    41        NA
974  Fernandez    41        NA
975  Fernandez    41        NA
976  Fernandez    41        NA
977  Fernandez    41        NA
978  Fernandez    41        NA
979  Fernandez    41        NA
980  Fernandez    41        NA
981  Fernandez    41        NA
982  Fernandez    41        NA
983  Fernandez    41        NA
984  Fernandez    41        NA
985  Fernandez    41        NA
986  Fernandez    41        NA
987  Fernandez    42        NA
988  Fernandez    42        NA
989  Fernandez    42        NA
990  Fernandez    42        NA
991  Fernandez    42        NA
992  Fernandez    42        NA
993  Fernandez    42        NA
994  Fernandez    42        NA
995  Fernandez    42        NA
996  Fernandez    42        NA
997  Fernandez    42        NA
998  Fernandez    42        NA
999  Fernandez    42        NA
1000 Fernandez    42        NA
1001 Fernandez    42        NA
1002 Fernandez    42        NA
1003 Fernandez    42        NA
1004 Fernandez    42        NA
1005 Fernandez    42        NA
1006 Fernandez    42        NA
1007 Fernandez    42        NA
1008 Fernandez    42 1666.1420
1009 Fernandez    42 1682.1839
1010 Fernandez    42 1800.1250
1011 Fernandez    42 1547.7227
1012 Fernandez    42 1717.5030
1013 Fernandez    42 1551.3897
1014 Fernandez    42 1645.2673
1015 Fernandez    42 1848.4357
1016 Fernandez    42 1739.5041
1017 Fernandez    42 1494.9421
1018 Fernandez    42 1646.8490
1019 Fernandez    42 1579.0572
1020 Fernandez    42 1540.7893
1021 Fernandez    42 1485.2524
1022 Fernandez    42 1772.8744
1023 Fernandez    42 1606.4808
1024 Fernandez    42 1527.4628
1025 Fernandez    42 1536.4820
1026 Fernandez    42 1606.4361
1027 Fernandez    42        NA
1028 Fernandez    42        NA
1029 Fernandez    42        NA
1030 Fernandez    42        NA
1031 Fernandez    42        NA
1032 Fernandez    42        NA
1033 Fernandez    42        NA
1034 Fernandez    42        NA
1035 Fernandez    42        NA
1036 Fernandez    42        NA
1037 Fernandez    42        NA
1038 Fernandez    42        NA
1039 Fernandez    42        NA
1040 Fernandez    42        NA
1041 Fernandez    42        NA
1042 Fernandez    42        NA
1043 Fernandez    42        NA
1044 Fernandez    42        NA
1045 Fernandez    42        NA
1046 Fernandez    42        NA
1047 Fernandez    42        NA
1048 Fernandez    43        NA
1049 Fernandez    43        NA
1050 Fernandez    43        NA
1051 Fernandez    43        NA
1052 Fernandez    43        NA
1053 Fernandez    43        NA
1054 Fernandez    43        NA
1055 Fernandez    43        NA
1056 Fernandez    43        NA
1057 Fernandez    43        NA
1058 Fernandez    43        NA
1059 Fernandez    43        NA
1060 Fernandez    43        NA
1061 Fernandez    43        NA
1062 Fernandez    43        NA
1063 Fernandez    43        NA
1064 Fernandez    43        NA
1065 Fernandez    43        NA
1066 Fernandez    43        NA
1067 Fernandez    43        NA
1068 Fernandez    43        NA
1069 Fernandez    43        NA
1070 Fernandez    43        NA
1071 Fernandez    43        NA
1072 Fernandez    43        NA
1073 Fernandez    43        NA
1074 Fernandez    43        NA
1075 Fernandez    43        NA
1076 Fernandez    43        NA
1077 Fernandez    43        NA
1078 Fernandez    43        NA
1079 Fernandez    43        NA
1080 Fernandez    43        NA
1081 Fernandez    43        NA
1082 Fernandez    43        NA
1083 Fernandez    43        NA
1084 Fernandez    43        NA
1085 Fernandez    43        NA
1086 Fernandez    43        NA
1087 Fernandez    43        NA
1088 Fernandez    43        NA
1089 Fernandez    43        NA
1090 Fernandez    44 1757.6206
1091 Fernandez    44        NA
1092 Fernandez    44 1756.4938
1093 Fernandez    44 1821.5125
1094 Fernandez    44 1619.6389
1095 Fernandez    44 1785.1706
1096 Fernandez    44 1664.3693
1097 Fernandez    44 1720.6274
1098 Fernandez    44 1798.8305
1099 Fernandez    44 1845.4812
1100 Fernandez    44 1510.5874
1101 Fernandez    44        NA
1102 Fernandez    44 1811.9502
1103 Fernandez    44 1704.6766
1104 Fernandez    44 1692.3147
1105 Fernandez    44 1565.0278
1106 Fernandez    44 1834.3917
1107 Fernandez    44 1694.9944
1108 Fernandez    44 1625.5460
1109 Fernandez    44 1591.4004
1110 Fernandez    44 1784.0417
1111 Fernandez    44        NA
1112 Fernandez    44        NA
1113 Fernandez    44        NA
1114 Fernandez    44        NA
1115 Fernandez    44        NA
1116 Fernandez    44        NA
1117 Fernandez    44        NA
1118 Fernandez    44        NA
1119 Fernandez    44        NA
1120 Fernandez    44        NA
1121 Fernandez    44        NA
1122 Fernandez    44        NA
1123 Fernandez    44        NA
1124 Fernandez    44        NA
1125 Fernandez    44        NA
1126 Fernandez    44        NA
1127 Fernandez    44        NA
1128 Fernandez    44        NA
1129 Fernandez    44        NA
1130 Fernandez    44        NA
1131 Fernandez    44        NA
1132 Fernandez    45        NA
1133 Fernandez    45        NA
1134 Fernandez    45        NA
1135 Fernandez    45        NA
1136 Fernandez    45        NA
1137 Fernandez    45        NA
1138 Fernandez    45        NA
1139 Fernandez    45        NA
1140 Fernandez    45        NA
1141 Fernandez    45        NA
1142 Fernandez    45        NA
1143 Fernandez    45        NA
1144 Fernandez    45        NA
1145 Fernandez    45        NA
1146 Fernandez    45        NA
1147 Fernandez    45        NA
1148 Fernandez    45        NA
1149 Fernandez    45        NA
1150 Fernandez    45        NA
1151 Fernandez    45        NA
1152 Fernandez    45        NA
1153 Fernandez    46 1771.4173
1154 Fernandez    46        NA
1155 Fernandez    46 1795.9265
1156 Fernandez    46 1847.2551
1157 Fernandez    46 1677.2476
1158 Fernandez    46 1798.4514
1159 Fernandez    46 1780.1687
1160 Fernandez    46 1793.9853
1161 Fernandez    46 1860.5756
1162 Fernandez    46 1937.4008
1163 Fernandez    46 1567.6630
1164 Fernandez    46        NA
1165 Fernandez    46 1885.0332
1166 Fernandez    46 1804.1306
1167 Fernandez    46 1774.8087
1168 Fernandez    46 1714.4248
1169 Fernandez    46 1808.6939
1170 Fernandez    46 1760.1364
1171 Fernandez    46 1736.3490
1172 Fernandez    46 1741.0893
1173 Fernandez    46 1923.0524
1174 Fernandez    46        NA
1175 Fernandez    46        NA
1176 Fernandez    46        NA
1177 Fernandez    46        NA
1178 Fernandez    46        NA
1179 Fernandez    46        NA
1180 Fernandez    46        NA
1181 Fernandez    46        NA
1182 Fernandez    46        NA
1183 Fernandez    46        NA
1184 Fernandez    46        NA
1185 Fernandez    46        NA
1186 Fernandez    46        NA
1187 Fernandez    46        NA
1188 Fernandez    46        NA
1189 Fernandez    46        NA
1190 Fernandez    46        NA
1191 Fernandez    46        NA
1192 Fernandez    46        NA
1193 Fernandez    46        NA
1194 Fernandez    46        NA
1195 Fernandez    47        NA
1196 Fernandez    47        NA
1197 Fernandez    47        NA
1198 Fernandez    47        NA
1199 Fernandez    47        NA
1200 Fernandez    47        NA
1201 Fernandez    47        NA
1202 Fernandez    47        NA
1203 Fernandez    47        NA
1204 Fernandez    47        NA
1205 Fernandez    47        NA
1206 Fernandez    47        NA
1207 Fernandez    47        NA
1208 Fernandez    47        NA
1209 Fernandez    47        NA
1210 Fernandez    47        NA
1211 Fernandez    47        NA
1212 Fernandez    47        NA
1213 Fernandez    47        NA
1214 Fernandez    47        NA
1215 Fernandez    47        NA
1216 Fernandez    47 1913.1156
1217 Fernandez    47 1619.5818
1218 Fernandez    47 1736.6375
1219 Fernandez    47 2025.0929
1220 Fernandez    47 2043.4347
1221 Fernandez    47        NA
1222 Fernandez    47        NA
1223 Fernandez    47        NA
1224 Fernandez    47        NA
1225 Fernandez    47        NA
1226 Fernandez    47        NA
1227 Fernandez    47        NA
1228 Fernandez    47        NA
1229 Fernandez    47        NA
1230 Fernandez    47        NA
1231 Fernandez    47        NA
1232 Fernandez    47        NA
1233 Fernandez    47        NA
1234 Fernandez    47        NA
1235 Fernandez    47        NA
1236 Fernandez    47        NA
1237 Fernandez    47        NA
1238 Fernandez    48 1839.3104
1239 Fernandez    48        NA
1240 Fernandez    48 1831.7474
1241 Fernandez    48 1989.4530
1242 Fernandez    48 1751.1383
1243 Fernandez    48 1811.0176
1244 Fernandez    48 1989.0537
1245 Fernandez    48 1815.9535
1246 Fernandez    48 2044.5083
1247 Fernandez    48 2070.6997
1248 Fernandez    48        NA
1249 Fernandez    48        NA
1250 Fernandez    48        NA
1251 Fernandez    48        NA
1252 Fernandez    48        NA
1253 Fernandez    48        NA
1254 Fernandez    48        NA
1255 Fernandez    48        NA
1256 Fernandez    48        NA
1257 Fernandez    48        NA
1258 Fernandez    48        NA
1259 Fernandez    48        NA
1260 Fernandez    48        NA
1261 Fernandez    48        NA
1262 Fernandez    48        NA
1263 Fernandez    48        NA
1264 Fernandez    48        NA
1265 Fernandez    48        NA
1266 Fernandez    48        NA
1267 Fernandez    48        NA
1268 Fernandez    48        NA
1269 Fernandez    48        NA
1270 Fernandez    48        NA
1271 Fernandez    48        NA
1272 Fernandez    48        NA
1273 Fernandez    48        NA
1274 Fernandez    48        NA
1275 Fernandez    48        NA
1276 Fernandez    48        NA
1277 Fernandez    48        NA
1278 Fernandez    48        NA
1279 Fernandez    48        NA
1280 Fernandez    48        NA
1281 Fernandez    48        NA
1282 Fernandez    48        NA
1283 Fernandez    49        NA
1284 Fernandez    49        NA
1285 Fernandez    49        NA
1286 Fernandez    49        NA
1287 Fernandez    49        NA
1288 Fernandez    49        NA
1289 Fernandez    49        NA
1290 Fernandez    49        NA
1291 Fernandez    49        NA
1292 Fernandez    49        NA
1293 Fernandez    49        NA
1294 Fernandez    49        NA
1295 Fernandez    49        NA
1296 Fernandez    49        NA
1297 Fernandez    49        NA
1298 Fernandez    49        NA
1299 Fernandez    49        NA
1300 Fernandez    49        NA
1301 Fernandez    49        NA
1302 Fernandez    49        NA
1303 Fernandez    49        NA
1304 Fernandez    49        NA
1305 Fernandez    49        NA
1306 Fernandez    49        NA
1307 Fernandez    49        NA
1308 Fernandez    49        NA
1309 Fernandez    49        NA
1310 Fernandez    49        NA
1311 Fernandez    49        NA
1312 Fernandez    49        NA
1313 Fernandez    49        NA
1314 Fernandez    49        NA
1315 Fernandez    49        NA
1316 Fernandez    49        NA
1317 Fernandez    50 1998.7409
1318 Fernandez    50        NA
1319 Fernandez    50 1921.3847
1320 Fernandez    50 2145.4347
1321 Fernandez    50 1897.7269
1322 Fernandez    50 1947.3684
1323 Fernandez    50 2132.6933
1324 Fernandez    50 1963.5813
1325 Fernandez    50 2151.3503
1326 Fernandez    50 2110.8221
1327 Fernandez    50        NA
1328 Fernandez    50 2093.8579
1329 Fernandez    50 1993.1343
1330 Fernandez    50 2004.6406
1331 Fernandez    50 1908.2759
1332 Fernandez    50 1984.2392
1333 Fernandez    50        NA
1334 Fernandez    50        NA
1335 Fernandez    50        NA
1336 Fernandez    50        NA
1337 Fernandez    50        NA
1338 Fernandez    50        NA
1339 Fernandez    50        NA
1340 Fernandez    50        NA
1341 Fernandez    50        NA
1342 Fernandez    50        NA
1343 Fernandez    50        NA
1344 Fernandez    50        NA
1345 Fernandez    50        NA
1346 Fernandez    50        NA
1347 Fernandez    50        NA
1348 Fernandez    50        NA
1349 Fernandez    50        NA
1350 Fernandez    50        NA
1351 Fernandez    51        NA
1352 Fernandez    51        NA
1353 Fernandez    51        NA
1354 Fernandez    51        NA
1355 Fernandez    51        NA
1356 Fernandez    51        NA
1357 Fernandez    51        NA
1358 Fernandez    51        NA
1359 Fernandez    51        NA
1360 Fernandez    51        NA
1361 Fernandez    51        NA
1362 Fernandez    51        NA
1363 Fernandez    51        NA
1364 Fernandez    51        NA
1365 Fernandez    51        NA
1366 Fernandez    51        NA
1367 Fernandez    51        NA
1368 Fernandez    51        NA
1369 Fernandez    51        NA
1370 Fernandez    51        NA
1371 Fernandez    51        NA
1372 Fernandez    51        NA
1373 Fernandez    51        NA
1374 Fernandez    51        NA
1375 Fernandez    51        NA
1376 Fernandez    51        NA
1377 Fernandez    51        NA
1378 Fernandez    51        NA
1379 Fernandez    51        NA
1380 Fernandez    51        NA
1381 Fernandez    51        NA
1382 Fernandez    51        NA
1383 Fernandez    51        NA
1384 Fernandez    51        NA
1385 Fernandez    52 2097.8056
1386 Fernandez    52        NA
1387 Fernandez    52 1995.4420
1388 Fernandez    52 2199.6302
1389 Fernandez    52 1991.1454
1390 Fernandez    52 2092.8857
1391 Fernandez    52 2200.9723
1392 Fernandez    52 2099.0427
1393 Fernandez    52 2200.6242
1394 Fernandez    52 2156.3386
1395 Fernandez    52        NA
1396 Fernandez    52 2179.2981
1397 Fernandez    52 2107.8898
1398 Fernandez    52 2108.6408
1399 Fernandez    52 2056.4771
1400 Fernandez    52 2074.7540
1401 Fernandez    52 2092.9876
1402 Fernandez    52        NA
1403 Fernandez    52        NA
1404 Fernandez    52        NA
1405 Fernandez    52        NA
1406 Fernandez    52        NA
1407 Fernandez    52        NA
1408 Fernandez    52        NA
1409 Fernandez    52        NA
1410 Fernandez    52        NA
1411 Fernandez    52        NA
1412 Fernandez    52        NA
1413 Fernandez    52        NA
1414 Fernandez    52        NA
1415 Fernandez    52        NA
1416 Fernandez    52        NA
1417 Fernandez    52        NA
1418 Fernandez    52        NA
1419 Fernandez    53        NA
1420 Fernandez    53        NA
1421 Fernandez    53        NA
1422 Fernandez    53        NA
1423 Fernandez    53        NA
1424 Fernandez    53        NA
1425 Fernandez    53        NA
1426 Fernandez    53        NA
1427 Fernandez    53        NA
1428 Fernandez    53        NA
1429 Fernandez    53        NA
1430 Fernandez    53        NA
1431 Fernandez    53        NA
1432 Fernandez    53        NA
1433 Fernandez    53        NA
1434 Fernandez    53        NA
1435 Fernandez    53        NA
1436 Fernandez    53 2443.3509
1437 Fernandez    53        NA
1438 Fernandez    53        NA
1439 Fernandez    53        NA
1440 Fernandez    53        NA
1441 Fernandez    54 2200.2398
1442 Fernandez    54 2221.5401
1443 Fernandez    54 2276.3868
1444 Fernandez    54        NA
1445 Fernandez    54        NA
1446 Fernandez    54        NA
1447 Fernandez    54        NA
1448 Fernandez    54        NA
1449 Fernandez    54        NA
1450 Fernandez    54        NA
1451 Fernandez    54        NA
1452 Fernandez    54        NA
1453 Fernandez    54        NA
1454 Fernandez    54        NA
1455 Fernandez    54        NA
1456 Fernandez    54        NA
1457 Fernandez    54        NA
1458 Fernandez    54 2517.9642
1459 Fernandez    54 2067.7279
1460 Fernandez    54 2402.4986
1461 Fernandez    54 2067.7275
1462 Fernandez    54 2124.4522
1463 Fernandez    54 2439.0791
1464 Fernandez    54 2117.7913
1465 Fernandez    54 2461.1760
1466 Fernandez    54 2173.1287
1467 Fernandez    54 2330.5744
1468 Fernandez    54 2103.8040
1469 Fernandez    54 2064.2947
1470 Fernandez    54 2053.8708
1471 Fernandez    54        NA
1472 Fernandez    54        NA
1473 Fernandez    54        NA
1474 Fernandez    54        NA
1475 Fernandez    54        NA
1476 Fernandez    54        NA
1477 Fernandez    54        NA
1478 Fernandez    54        NA
1479 Fernandez    54        NA
1480 Fernandez    54        NA
1481 Fernandez    54        NA
1482 Fernandez    54        NA
1483 Fernandez    54        NA
1484 Fernandez    54        NA
1485 Fernandez    55        NA
1486 Fernandez    55        NA
1487 Fernandez    55        NA
1488 Fernandez    55        NA
1489 Fernandez    55        NA
1490 Fernandez    55        NA
1491 Fernandez    55        NA
1492 Fernandez    55        NA
1493 Fernandez    55        NA
1494 Fernandez    55        NA
1495 Fernandez    55        NA
1496 Fernandez    55        NA
1497 Fernandez    55        NA
1498 Fernandez    55        NA
1499 Fernandez    55        NA
1500 Fernandez    55        NA
1501 Fernandez    55        NA
1502 Fernandez    55        NA
1503 Fernandez    55        NA
1504 Fernandez    55        NA
1505 Fernandez    55        NA
1506 Fernandez    55        NA
1507 Fernandez    55        NA
1508 Fernandez    55        NA
1509 Fernandez    55        NA
1510 Fernandez    55        NA
1511 Fernandez    55        NA
1512 Fernandez    56 2141.6336
1513 Fernandez    56 2492.7729
1514 Fernandez    56 2234.4454
1515 Fernandez    56 2208.0277
1516 Fernandez    56 2512.3423
1517 Fernandez    56 2213.2054
1518 Fernandez    56 2542.1045
1519 Fernandez    56 2212.1253
1520 Fernandez    56 2516.2248
1521 Fernandez    56 2146.6376
1522 Fernandez    56 2179.6464
1523 Fernandez    56 2182.1029
1524 Fernandez    57        NA
1525 Fernandez    57        NA
1526 Fernandez    57        NA
1527 Fernandez    57        NA
1528 Fernandez    57        NA
1529 Fernandez    57        NA
1530 Fernandez    57        NA
1531 Fernandez    57        NA
1532 Fernandez    57        NA
1533 Fernandez    57        NA
1534 Fernandez    57        NA
1535 Fernandez    57        NA
1536 Fernandez    57        NA
1537 Fernandez    57        NA
1538 Fernandez    57        NA
1539 Fernandez    57        NA
1540 Fernandez    57        NA
1541 Fernandez    57        NA
1542 Fernandez    57        NA
1543 Fernandez    57        NA
1544 Fernandez    57        NA
1545 Fernandez    57        NA
1546 Fernandez    57        NA
1547 Fernandez    57        NA
1548 Fernandez    57        NA
1549 Fernandez    57        NA
1550 Fernandez    58 2234.4869
1551 Fernandez    58 2545.8123
1552 Fernandez    58 2390.9379
1553 Fernandez    58 2330.3817
1554 Fernandez    58 2554.1340
1555 Fernandez    58 2323.3314
1556 Fernandez    58 2579.9855
1557 Fernandez    58 2288.1041
1558 Fernandez    58        NA
1559 Fernandez    58 2575.3622
1560 Fernandez    58 2234.1192
1561 Fernandez    58 2273.2777
1562 Fernandez    58 2246.6658
1563 Fernandez    58        NA
1564 Fernandez    58        NA
1565 Fernandez    58        NA
1566 Fernandez    58        NA
1567 Fernandez    58        NA
1568 Fernandez    58        NA
1569 Fernandez    58        NA
1570 Fernandez    58        NA
1571 Fernandez    58        NA
1572 Fernandez    58        NA
1573 Fernandez    58        NA
1574 Fernandez    58        NA
1575 Fernandez    58        NA
1576 Fernandez    59        NA
1577 Fernandez    59        NA
1578 Fernandez    59        NA
1579 Fernandez    59        NA
1580 Fernandez    59        NA
1581 Fernandez    59        NA
1582 Fernandez    59        NA
1583 Fernandez    59        NA
1584 Fernandez    59        NA
1585 Fernandez    59        NA
1586 Fernandez    59        NA
1587 Fernandez    59        NA
1588 Fernandez    59        NA
1589 Fernandez    59        NA
1590 Fernandez    59        NA
1591 Fernandez    59        NA
1592 Fernandez    59        NA
1593 Fernandez    59        NA
1594 Fernandez    59        NA
1595 Fernandez    59        NA
1596 Fernandez    59        NA
1597 Fernandez    59        NA
1598 Fernandez    59        NA
1599 Fernandez    59        NA
1600 Fernandez    59        NA
1601 Fernandez    59        NA
1602 Fernandez    60 2546.2312
1603 Fernandez    60 2580.5995
1604 Fernandez    60 2557.0872
1605 Fernandez    60 2523.5975
1606 Fernandez    60 2580.4746
1607 Fernandez    60 2527.1616
1608 Fernandez    60 2581.0372
1609 Fernandez    60 2555.6642
1610 Fernandez    60        NA
1611 Fernandez    60 2580.7874
1612 Fernandez    60 2469.2996
1613 Fernandez    60 2464.5622
1614 Fernandez    60 2396.4363
1615 Fernandez    60        NA
1616 Fernandez    60        NA
1617 Fernandez    60        NA
1618 Fernandez    60        NA
1619 Fernandez    60        NA
1620 Fernandez    60        NA
1621 Fernandez    60        NA
1622 Fernandez    60        NA
1623 Fernandez    60        NA
1624 Fernandez    60        NA
1625 Fernandez    60        NA
1626 Fernandez    60        NA
1627 Fernandez    60        NA
1628 Fernandez    61        NA
1629 Fernandez    61        NA
1630 Fernandez    61        NA
1631 Fernandez    61        NA
1632 Fernandez    61 2575.4971
1633 Fernandez    61 2581.2453
1634 Fernandez    61 2581.3079
1635 Fernandez    61 2581.1829
1636 Fernandez    61 2580.8921
1637 Fernandez    61        NA
1638 Fernandez    61        NA
1639 Fernandez    61        NA
1640 Fernandez    61        NA
1641 Fernandez    61        NA
1642 Fernandez    61        NA
1643 Fernandez    61        NA
1644 Fernandez    61        NA
1645 Fernandez    61        NA
1646 Fernandez    61        NA
1647 Fernandez    61        NA
1648 Fernandez    61        NA
1649 Fernandez    61        NA
1650 Fernandez    61        NA
1651 Fernandez    61        NA
1652 Fernandez    61        NA
1653 Fernandez    61        NA
1654 Fernandez    61        NA
1655 Fernandez    62 2577.9414
1656 Fernandez    62 2578.3784
1657 Fernandez    62 2578.8156
1658 Fernandez    62 2577.6919
1659 Fernandez    62 2577.3792
1660 Fernandez    62        NA
1661 Fernandez    62 2577.5668
1662 Fernandez    62 2572.1994
1663 Fernandez    66 2580.6212
1664 Fernandez    66 2580.6211
1665 Fernandez    66 2580.5589
1666 Fernandez    66 2579.9966
1667 Fernandez    66 2579.9342
1668 Fernandez    66        NA
1669 Fernandez    66 2579.6840
1670 Fernandez    66 2580.6838
1671 Fernandez    66 2580.1216
1672 Fernandez    66        NA
1673 Fernandez    66        NA
1674 Fernandez    66        NA
1675 Fernandez    66        NA
1676 Fernandez    66        NA
1677 Fernandez    66        NA
1678 Fernandez    66        NA
1679 Fernandez    66        NA
1680 Fernandez    66        NA
1681 Fernandez    67        NA
1682 Fernandez    67        NA
1683 Fernandez    67        NA
1684 Fernandez    67        NA
1685 Fernandez    67        NA
1686 Fernandez    67        NA
1687 Fernandez    67        NA
1688 Fernandez    67        NA
1689 Fernandez    67        NA
1690 Fernandez    67        NA
1691 Fernandez    67        NA
1692 Fernandez    67        NA
1693 Fernandez    67        NA
1694 Fernandez    68 2575.7423
1695 Fernandez    68 2575.5552
1696 Fernandez    68 2575.9299
1697 Fernandez    68 2576.3048
1698 Fernandez    68 2575.6456
1699 Fernandez    68 2577.8352
1700 Fernandez    68 2578.2097
1701 Fernandez    68        NA
1702 Fernandez    68 2577.8979
1703 Fernandez    68 2577.5858
1704 Fernandez    68        NA
1705 Fernandez    68        NA
1706 Fernandez    68        NA
1707 Fernandez    68        NA
1708 Fernandez    68        NA
1709 Fernandez    69        NA
1710 Fernandez    69        NA
1711 Fernandez    69        NA
1712 Fernandez    69        NA
1713 Fernandez    69        NA
1714 Fernandez    69        NA
1715 Fernandez    69        NA
1716 Fernandez    69        NA
1717 Fernandez    69        NA
1718 Fernandez    69        NA
1719 Fernandez    70 2580.2901
1720 Fernandez    70 2580.9155
1721 Fernandez    70        NA
1722 Fernandez    70 2580.9157
1723 Fernandez    70 2580.1024
1724 Fernandez    70        NA
1725 Fernandez    70        NA
1726 Fernandez    70        NA
1727 Fernandez    70        NA
1728 Fernandez    70        NA
1729 Fernandez    71        NA
1730 Fernandez    71        NA
1731 Fernandez    71        NA
1732 Fernandez    71        NA
1733 Fernandez    71        NA
1734 Fernandez    71        NA
1735 Fernandez    71        NA
1736 Fernandez    71        NA
1737 Fernandez    71        NA
1738 Fernandez    71        NA
1739 Fernandez    72 2579.4480
1740 Fernandez    72 2579.8855
1741 Fernandez    72        NA
1742 Fernandez    72 2580.1356
1743 Fernandez    72 2579.4484
1744 Fernandez    72        NA
1745 Fernandez    72        NA
1746 Fernandez    72        NA
1747 Fernandez    72        NA
1748 Fernandez    72        NA
1749 Fernandez    73        NA
1750 Fernandez    73        NA
1751 Fernandez    73        NA
1752 Fernandez    73        NA
1753 Fernandez    73        NA
1754 Fernandez    73        NA
1755 Fernandez    73        NA
1756 Fernandez    73        NA
1757 Fernandez    73        NA
1758 Fernandez    73        NA
1759 Fernandez    74 2581.2313
1760 Fernandez    74 2581.8561
1761 Fernandez    74        NA
1762 Fernandez    74 2581.6690
1763 Fernandez    74 2581.1693
1764 Fernandez    74        NA
1765 Fernandez    74        NA
1766 Fernandez    74        NA
1767 Fernandez    74        NA
1768 Fernandez    74        NA
1769 Fernandez    75 2584.2894
1770 Fernandez    75 2584.9151
1771 Fernandez    75        NA
1772 Fernandez    75 2584.9775
1773 Fernandez    75 2584.2269
1774 Fernandez    75 2578.1911
> overallResult <- reduceWholeOverallResultToOneValue(tempOverallResult, imagesIndex, overallList$debug, "boxplot")
[1] "DebugBreakPoint:  reduceWholeOverallResultToOneValue()"
> colnames(overallResult)
[1] "name"  "xAxis" "value"
> myPlot <- ggplot(overallResult, aes(factor(name), value, fill=name)) +
+ 					geom_boxplot() +
+ 					ylab(overallDesName[[imagesIndex]]) +
+ 					#coord_cartesian(ylim=c(0,max(overallList$overallResult$mean + overallList$overallResult$se + 10,na.rm=TRUE))) +
+ 					xlab(overallList$xAxisName) +
+ 					scale_fill_manual(values = overallColor[[imagesIndex]]) +
+ 					#stat_summary(fun.data = f, geom = "crossbar", height = 0.1,	colour = NA, fill = "skyblue", width = 0.8, alpha = 0.5) +
+ 					theme_bw() +
+ 					opts(legend.position="none",
+ 							plot.margin = unit(c(0.1, 0.1, 0, 0), "cm"),
+ 							axis.title.x = theme_text(face="bold", size=11),
+ 							axis.title.y = theme_text(face="bold", size=11, angle=90),
+ 							panel.grid.minor = theme_blank(),
+ 							panel.border = theme_rect(colour="Grey", size=0.1)
+ 					)
> 		
> 			if(length(overallColor[[imagesIndex]]) > 10) {
+ 				myPlot <- myPlot + opts(axis.text.x = theme_text(size=6, angle=90))
+ 			}	
> print(myPlot)
Warnmeldung:
Removed 1236 rows containing missing values (stat_boxplot). 
> imagesIndex <- "2"
> names(overallDescriptor)
 [1] "1"  "2"  "3"  "4"  "5"  "6"  "7"  "8"  "9"  "10" "11" "12"
> for(imagesIndex in names(overallDescriptor)) {
+ 		if(!is.na(overallDescriptor[[imagesIndex]])) {
+ 			overallResult <- reduceWholeOverallResultToOneValue(tempOverallResult, imagesIndex, overallList$debug, "boxplot")
+ 			
+ 			
+ 			#myPlot <- ggplot(overallList$overallResult, aes(factor(name), value, fill=name, colour=name)) + 
+ 			myPlot <- ggplot(overallResult, aes(factor(name), value, fill=name)) +
+ 					geom_boxplot() +
+ 					ylab(overallDesName[[imagesIndex]]) +
+ 					#coord_cartesian(ylim=c(0,max(overallList$overallResult$mean + overallList$overallResult$se + 10,na.rm=TRUE))) +
+ 					xlab(overallList$xAxisName) +
+ 					scale_fill_manual(values = overallColor[[imagesIndex]]) +
+ 					#stat_summary(fun.data = f, geom = "crossbar", height = 0.1,	colour = NA, fill = "skyblue", width = 0.8, alpha = 0.5) +
+ 					theme_bw() +
+ 					opts(legend.position="none",
+ 							plot.margin = unit(c(0.1, 0.1, 0, 0), "cm"),
+ 							axis.title.x = theme_text(face="bold", size=11),
+ 							axis.title.y = theme_text(face="bold", size=11, angle=90),
+ 							panel.grid.minor = theme_blank(),
+ 							panel.border = theme_rect(colour="Grey", size=0.1)
+ 					)
+ 		
+ 			if(length(overallColor[[imagesIndex]]) > 10) {
+ 				myPlot <- myPlot + opts(axis.text.x = theme_text(size=6, angle=90))
+ 			}	
+ 			
+ 			print(myPlot)
+ 		}
+ 	}
[1] "DebugBreakPoint:  reduceWholeOverallResultToOneValue()"
[1] "DebugBreakPoint:  reduceWholeOverallResultToOneValue()"
[1] "DebugBreakPoint:  reduceWholeOverallResultToOneValue()"
[1] "DebugBreakPoint:  reduceWholeOverallResultToOneValue()"
[1] "DebugBreakPoint:  reduceWholeOverallResultToOneValue()"
[1] "DebugBreakPoint:  reduceWholeOverallResultToOneValue()"
[1] "DebugBreakPoint:  reduceWholeOverallResultToOneValue()"
[1] "DebugBreakPoint:  reduceWholeOverallResultToOneValue()"
[1] "DebugBreakPoint:  reduceWholeOverallResultToOneValue()"
[1] "DebugBreakPoint:  reduceWholeOverallResultToOneValue()"
[1] "DebugBreakPoint:  reduceWholeOverallResultToOneValue()"
Es gab 11 Warnungen (Anzeige mit warnings())
> overallList <- list(iniDataSet=iniDataSet, saveFormat=saveFormat, dpi=dpi, isGray=isGray, 
+ 						nBoxDes = nBoxDes, boxDes = boxDes, boxStackDes = boxStackDes,
+ 						saveName_nBoxDes = nBoxDes, saveName_boxDes = boxDes, saveName_boxStackDes = boxStackDes,
+ 						nBoxDesName = nBoxDesName, boxDesName = boxDesName, boxStackDesName = boxStackDesName,
+ 						nBoxOptions= nBoxOptions, boxOptions= boxOptions, stackedBarOptions = stackedBarOptions, 
+ 						treatment=treatment, filterTreatment=filterTreatment,
+ 						secondTreatment=secondTreatment, filterSecondTreatment=filterSecondTreatment, filterXaxis=filterXaxis, xAxis=xAxis,
+ 						showResultInR=showResultInR, xAxisName=xAxisName, debug=debug, 
+ 						appendix=appendix, stoppTheCalculation=stoppTheCalculation,
+ 						overallResult_nBoxDes=data.frame(), overallResult_boxDes=data.frame(), overallResult_boxStackDes=data.frame(),
+ 						color_nBox = list(), color_box=list(), color_boxStack=list())	
> 				
> 	#install.packages(c("Cairo"), repos="http://cran.r-project.org", dependencies = TRUE)
> 	library("Cairo")
> 	#install.packages(c("RColorBrewer"), repos="http://cran.r-project.org", dependencies = TRUE)
> 	library("RColorBrewer")
> 	#install.packages(c("data.table"), repos="http://cran.r-project.org", dependencies = TRUE)
> 	library(data.table)
> 	#install.packages(c("ggplot2"), repos="http://cran.r-project.org", dependencies = TRUE)
> 	library(ggplot2)
> 	#install.packages(c("Hmisc"), repos="http://cran.r-project.org", dependencies = TRUE)
> 	#library("Hmisc")
> 	
> 	overallList$debug %debug% "Start"
[1] "DebugBreakPoint:  Start"
> 	
> 	overallList <- overallChangeName(overallList)
[1] "DebugBreakPoint:  overallChangeSaveName()"
[1] "... nBoxplot"
[1] "... Boxplot"
[1] "... stackedBoxplot"
> 	overallList <- overallPreprocessingOfDescriptor(overallList)
[1] "DebugBreakPoint:  overallPreprocessingOfDescriptor()"
[1] "... nBoxplot"
[1] "No plotting, because the descriptor(s) (top.area.norm..mm.2.) don't exists!"
[1] "No plotting, because the descriptor(s) (side.nir.wetness.av) don't exists!"
[1] "No plotting, because the descriptor(s) (top.nir.wetness.av) don't exists!"
[1] "... Boxplot"
[1] "No plotting, because the descriptor(s) (top.area.norm..mm.2.) don't exists!"
[1] "... stackedBoxplot"
[1] "No plotting, because the descriptor(s) (side.nir.histogram.ratio.nir.2.25_51) don't exists!"
[1] "No plotting, because the descriptor(s) (side.vis.hue.histogram.ratio.nir.2.25_51) don't exists!"
[1] "No plotting, because the descriptor(s) (top.vis.hue.histogram.ratio.nir.2.25_51) don't exists!"
> 	
> 	
> ###############################	
> 	overallList <- preprocessingOfxAxisValue(overallList)
[1] "DebugBreakPoint:  preprocessingOfxAxisValue()"
> 	overallList <- preprocessingOfTreatment(overallList)
[1] "DebugBreakPoint:  preprocessingOfTheTreatment()"
> 	overallList <- preprocessingOfSecondTreatment(overallList)
[1] "DebugBreakPoint:  preprocessingOfTheSecondTreatment()"
[1] "... set 'filterSecondTreatment' and 'secondTreatment' to 'none'!"
> 	overallList <- overallCheckIfDescriptorIsNaOrAllZero(overallList)
[1] "DebugBreakPoint:  overallCheckIfDescriptorIsNaOrAllZero()"
[1] "... nBoxplot"
[1] "Dummy plotting for this descriptor(s) ((side.bloom.count..tassel.), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((side.nir.wetness.plant_weight_drought_loss), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((top.nir.wetness.plant_weight_drought_loss), because all zero or not numeric!"
[1] "... Boxplot"
[1] "... stackedBoxplot"
[1] "Dummy plotting for this descriptor(s) ((side.nir.normalized.histogram.bin.1.0_25), because all zero or not numeric!"    
[2] "Dummy plotting for this descriptor(s) ((side.nir.normalized.histogram.bin.2.25_51), because all zero or not numeric!"   
[3] "Dummy plotting for this descriptor(s) ((side.nir.normalized.histogram.bin.8.178_204), because all zero or not numeric!" 
[4] "Dummy plotting for this descriptor(s) ((side.nir.normalized.histogram.bin.9.204_229), because all zero or not numeric!" 
[5] "Dummy plotting for this descriptor(s) ((side.nir.normalized.histogram.bin.10.229_255), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((side.fluo.histogram.bin.9.204_229), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((top.nir.histogram.bin.1.0_25), because all zero or not numeric!"    
[2] "Dummy plotting for this descriptor(s) ((top.nir.histogram.bin.10.229_255), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((side.fluo.histogram.phenol.bin.8.178_204), because all zero or not numeric!"
[2] "Dummy plotting for this descriptor(s) ((side.fluo.histogram.phenol.bin.9.204_229), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((side.fluo.histogram.ratio.bin.2.25_51), because all zero or not numeric!"  
[2] "Dummy plotting for this descriptor(s) ((side.fluo.histogram.ratio.bin.3.51_76), because all zero or not numeric!"  
[3] "Dummy plotting for this descriptor(s) ((side.fluo.histogram.ratio.bin.9.204_229), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((side.nir.normalized.histogram.bin.1.0_25), because all zero or not numeric!"    
[2] "Dummy plotting for this descriptor(s) ((side.nir.normalized.histogram.bin.2.25_51), because all zero or not numeric!"   
[3] "Dummy plotting for this descriptor(s) ((side.nir.normalized.histogram.bin.8.178_204), because all zero or not numeric!" 
[4] "Dummy plotting for this descriptor(s) ((side.nir.normalized.histogram.bin.9.204_229), because all zero or not numeric!" 
[5] "Dummy plotting for this descriptor(s) ((side.nir.normalized.histogram.bin.10.229_255), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((side.fluo.normalized.histogram.bin.9.204_229), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((side.fluo.normalized.histogram.phenol.bin.8.178_204), because all zero or not numeric!"
[2] "Dummy plotting for this descriptor(s) ((side.fluo.normalized.histogram.phenol.bin.9.204_229), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((side.fluo.normalized.histogram.ratio.bin.2.25_51), because all zero or not numeric!"  
[2] "Dummy plotting for this descriptor(s) ((side.fluo.normalized.histogram.ratio.bin.3.51_76), because all zero or not numeric!"  
[3] "Dummy plotting for this descriptor(s) ((side.fluo.normalized.histogram.ratio.bin.9.204_229), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((side.nir.histogram.phenol.bin.1.0_25), because all zero or not numeric!"    
[2] "Dummy plotting for this descriptor(s) ((side.nir.histogram.phenol.bin.2.25_51), because all zero or not numeric!"   
[3] "Dummy plotting for this descriptor(s) ((side.nir.histogram.phenol.bin.8.178_204), because all zero or not numeric!" 
[4] "Dummy plotting for this descriptor(s) ((side.nir.histogram.phenol.bin.9.204_229), because all zero or not numeric!" 
[5] "Dummy plotting for this descriptor(s) ((side.nir.histogram.phenol.bin.10.229_255), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((side.nir.histogram.ratio.bin.1.0_25), because all zero or not numeric!"    
[2] "Dummy plotting for this descriptor(s) ((side.nir.histogram.ratio.bin.3.51_76), because all zero or not numeric!"   
[3] "Dummy plotting for this descriptor(s) ((side.nir.histogram.ratio.bin.4.76_102), because all zero or not numeric!"  
[4] "Dummy plotting for this descriptor(s) ((side.nir.histogram.ratio.bin.6.127_153), because all zero or not numeric!" 
[5] "Dummy plotting for this descriptor(s) ((side.nir.histogram.ratio.bin.7.153_178), because all zero or not numeric!" 
[6] "Dummy plotting for this descriptor(s) ((side.nir.histogram.ratio.bin.8.178_204), because all zero or not numeric!" 
[7] "Dummy plotting for this descriptor(s) ((side.nir.histogram.ratio.bin.9.204_229), because all zero or not numeric!" 
[8] "Dummy plotting for this descriptor(s) ((side.nir.histogram.ratio.bin.10.229_255), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((side.vis.hue.histogram.ratio.bin.1.0_25), because all zero or not numeric!"    
[2] "Dummy plotting for this descriptor(s) ((side.vis.hue.histogram.ratio.bin.3.51_76), because all zero or not numeric!"   
[3] "Dummy plotting for this descriptor(s) ((side.vis.hue.histogram.ratio.bin.4.76_102), because all zero or not numeric!"  
[4] "Dummy plotting for this descriptor(s) ((side.vis.hue.histogram.ratio.bin.5.102_127), because all zero or not numeric!" 
[5] "Dummy plotting for this descriptor(s) ((side.vis.hue.histogram.ratio.bin.6.127_153), because all zero or not numeric!" 
[6] "Dummy plotting for this descriptor(s) ((side.vis.hue.histogram.ratio.bin.7.153_178), because all zero or not numeric!" 
[7] "Dummy plotting for this descriptor(s) ((side.vis.hue.histogram.ratio.bin.8.178_204), because all zero or not numeric!" 
[8] "Dummy plotting for this descriptor(s) ((side.vis.hue.histogram.ratio.bin.9.204_229), because all zero or not numeric!" 
[9] "Dummy plotting for this descriptor(s) ((side.vis.hue.histogram.ratio.bin.10.229_255), because all zero or not numeric!"
 [1] "Dummy plotting for this descriptor(s) ((side.vis.normalized.histogram.ratio.bin.1.0_25), because all zero or not numeric!"    
 [2] "Dummy plotting for this descriptor(s) ((side.vis.normalized.histogram.ratio.bin.2.25_51), because all zero or not numeric!"   
 [3] "Dummy plotting for this descriptor(s) ((side.vis.normalized.histogram.ratio.bin.3.51_76), because all zero or not numeric!"   
 [4] "Dummy plotting for this descriptor(s) ((side.vis.normalized.histogram.ratio.bin.4.76_102), because all zero or not numeric!"  
 [5] "Dummy plotting for this descriptor(s) ((side.vis.normalized.histogram.ratio.bin.5.102_127), because all zero or not numeric!" 
 [6] "Dummy plotting for this descriptor(s) ((side.vis.normalized.histogram.ratio.bin.6.127_153), because all zero or not numeric!" 
 [7] "Dummy plotting for this descriptor(s) ((side.vis.normalized.histogram.ratio.bin.7.153_178), because all zero or not numeric!" 
 [8] "Dummy plotting for this descriptor(s) ((side.vis.normalized.histogram.ratio.bin.8.178_204), because all zero or not numeric!" 
 [9] "Dummy plotting for this descriptor(s) ((side.vis.normalized.histogram.ratio.bin.9.204_229), because all zero or not numeric!" 
[10] "Dummy plotting for this descriptor(s) ((side.vis.normalized.histogram.ratio.bin.10.229_255), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((top.fluo.histogram.bin.9.204_229), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((top.fluo.histogram.phenol.bin.8.178_204), because all zero or not numeric!"
[2] "Dummy plotting for this descriptor(s) ((top.fluo.histogram.phenol.bin.9.204_229), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((top.fluo.histogram.ratio.bin.2.25_51), because all zero or not numeric!"  
[2] "Dummy plotting for this descriptor(s) ((top.fluo.histogram.ratio.bin.3.51_76), because all zero or not numeric!"  
[3] "Dummy plotting for this descriptor(s) ((top.fluo.histogram.ratio.bin.9.204_229), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((top.nir.histogram.bin.1.0_25), because all zero or not numeric!"    
[2] "Dummy plotting for this descriptor(s) ((top.nir.histogram.bin.10.229_255), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((top.nir.histogram.phenol.bin.1.0_25), because all zero or not numeric!"    
[2] "Dummy plotting for this descriptor(s) ((top.nir.histogram.phenol.bin.10.229_255), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((top.nir.histogram.ratio.bin.1.0_25), because all zero or not numeric!"    
[2] "Dummy plotting for this descriptor(s) ((top.nir.histogram.ratio.bin.2.25_51), because all zero or not numeric!"   
[3] "Dummy plotting for this descriptor(s) ((top.nir.histogram.ratio.bin.3.51_76), because all zero or not numeric!"   
[4] "Dummy plotting for this descriptor(s) ((top.nir.histogram.ratio.bin.4.76_102), because all zero or not numeric!"  
[5] "Dummy plotting for this descriptor(s) ((top.nir.histogram.ratio.bin.6.127_153), because all zero or not numeric!" 
[6] "Dummy plotting for this descriptor(s) ((top.nir.histogram.ratio.bin.7.153_178), because all zero or not numeric!" 
[7] "Dummy plotting for this descriptor(s) ((top.nir.histogram.ratio.bin.8.178_204), because all zero or not numeric!" 
[8] "Dummy plotting for this descriptor(s) ((top.nir.histogram.ratio.bin.9.204_229), because all zero or not numeric!" 
[9] "Dummy plotting for this descriptor(s) ((top.nir.histogram.ratio.bin.10.229_255), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((top.vis.hue.histogram.ratio.bin.1.0_25), because all zero or not numeric!"    
[2] "Dummy plotting for this descriptor(s) ((top.vis.hue.histogram.ratio.bin.3.51_76), because all zero or not numeric!"   
[3] "Dummy plotting for this descriptor(s) ((top.vis.hue.histogram.ratio.bin.4.76_102), because all zero or not numeric!"  
[4] "Dummy plotting for this descriptor(s) ((top.vis.hue.histogram.ratio.bin.5.102_127), because all zero or not numeric!" 
[5] "Dummy plotting for this descriptor(s) ((top.vis.hue.histogram.ratio.bin.6.127_153), because all zero or not numeric!" 
[6] "Dummy plotting for this descriptor(s) ((top.vis.hue.histogram.ratio.bin.7.153_178), because all zero or not numeric!" 
[7] "Dummy plotting for this descriptor(s) ((top.vis.hue.histogram.ratio.bin.8.178_204), because all zero or not numeric!" 
[8] "Dummy plotting for this descriptor(s) ((top.vis.hue.histogram.ratio.bin.9.204_229), because all zero or not numeric!" 
[9] "Dummy plotting for this descriptor(s) ((top.vis.hue.histogram.ratio.bin.10.229_255), because all zero or not numeric!"
Es gab 20 Warnungen (Anzeige mit warnings())
> 	overallList <- reduceWorkingDataSize(overallList)
[1] "DebugBreakPoint:  reduceWorkingDataSize()"
> 	overallList <- setDefaultAxisNames(overallList)	
[1] "DebugBreakPoint:  setDefaultAxisNames()"
> 	overallList <- overallGetResultDataFrame(overallList)
[1] "DebugBreakPoint:  overallGetResultDataFrame()"
[1] "DebugBreakPoint:  buildList()"
[1] "... nBoxplot"
[1] "DebugBreakPoint:  getResultDataFrame()"
[1] "... Boxplot"
[1] "DebugBreakPoint:  getResultDataFrame()"
[1] "... stackedBoxplot"
[1] "DebugBreakPoint:  getResultDataFrame()"
Es gab 13 Warnungen (Anzeige mit warnings())
> 	overallList <- setColor(overallList) 
[1] "DebugBreakPoint:  setColor()"
[1] "... all values are 'NA'"
[1] "... all values are 'NA'"
[1] "... all values are 'NA'"
[1] "... all values are 'NA'"
[1] "... all values are 'NA'"
[1] "... all values are 'NA'"
[1] "... all values are 'NA'"
[1] "... all values are 'NA'"
[1] "... all values are 'NA'"
[1] "... all values are 'NA'"
Es gab 15 Warnungen (Anzeige mit warnings())
> 	h=h
> 	overallResult=overallList$overallResult_boxStackDes
> 	overallDescriptor=overallList$boxStackDes
> 	overallColor=overallList$color_boxStack
> 	overallDesName=overallList$boxStackDesName
> 	overallList=overallList
> 	overallSaveName = overallList$saveName_nBoxDes
> overallList$debug %debug% "makeBoxplotStackedDiagram()"
[1] "DebugBreakPoint:  makeBoxplotStackedDiagram()"
> 	overallResult[is.na(overallResult)] <- 0
Warnmeldung:
In `[<-.factor`(`*tmp*`, thisvar, value = c(1L, 1L, 1L, 1L, 1L,  :
  invalid factor level, NAs generated
> 	tempOverallResult <- overallResult
> 	h=h
> 	overallResult=overallList$overallResult_boxStackDes
> 	overallDescriptor=overallList$boxStackDes
> 	overallColor=overallList$color_boxStack
> 	overallDesName=overallList$boxStackDesName
> 	overallList=overallList
> 	overallSaveName = overallList$saveName_nBoxDes
> head(overallResult)
    hist values xAxis      name plot
1 51..76    NaN    12 Fernandez    1
2 51..76      0    13 Fernandez    1
3 51..76      0    15 Fernandez    1
4 51..76    NaN    16 Fernandez    1
5 51..76      0    17 Fernandez    1
6 51..76    NaN    18 Fernandez    1
> tail(overallResult)
         hist   values xAxis      name plot
6436 102..127 19893.08    70 Fernandez   19
6437 102..127      NaN    71 Fernandez   19
6438 102..127 14379.58    72 Fernandez   19
6439 102..127      NaN    73 Fernandez   19
6440 102..127 13694.83    74 Fernandez   19
6441 102..127 19171.53    75 Fernandez   19
> is.na(overallResult)
      hist values xAxis  name  plot
1    FALSE   TRUE FALSE FALSE FALSE
2    FALSE  FALSE FALSE FALSE FALSE
3    FALSE  FALSE FALSE FALSE FALSE
4    FALSE   TRUE FALSE FALSE FALSE
5    FALSE  FALSE FALSE FALSE FALSE
6    FALSE   TRUE FALSE FALSE FALSE
7    FALSE  FALSE FALSE FALSE FALSE
8    FALSE   TRUE FALSE FALSE FALSE
9    FALSE  FALSE FALSE FALSE FALSE
10   FALSE   TRUE FALSE FALSE FALSE
11   FALSE  FALSE FALSE FALSE FALSE
12   FALSE  FALSE FALSE FALSE FALSE
13   FALSE   TRUE FALSE FALSE FALSE
14   FALSE  FALSE FALSE FALSE FALSE
15   FALSE  FALSE FALSE FALSE FALSE
16   FALSE   TRUE FALSE FALSE FALSE
17   FALSE   TRUE FALSE FALSE FALSE
18   FALSE  FALSE FALSE FALSE FALSE
19   FALSE  FALSE FALSE FALSE FALSE
20   FALSE   TRUE FALSE FALSE FALSE
21   FALSE  FALSE FALSE FALSE FALSE
22   FALSE   TRUE FALSE FALSE FALSE
23   FALSE   TRUE FALSE FALSE FALSE
24   FALSE   TRUE FALSE FALSE FALSE
25   FALSE  FALSE FALSE FALSE FALSE
26   FALSE  FALSE FALSE FALSE FALSE
27   FALSE  FALSE FALSE FALSE FALSE
28   FALSE   TRUE FALSE FALSE FALSE
29   FALSE  FALSE FALSE FALSE FALSE
30   FALSE   TRUE FALSE FALSE FALSE
31   FALSE  FALSE FALSE FALSE FALSE
32   FALSE  FALSE FALSE FALSE FALSE
33   FALSE   TRUE FALSE FALSE FALSE
34   FALSE   TRUE FALSE FALSE FALSE
35   FALSE  FALSE FALSE FALSE FALSE
36   FALSE   TRUE FALSE FALSE FALSE
37   FALSE  FALSE FALSE FALSE FALSE
38   FALSE  FALSE FALSE FALSE FALSE
39   FALSE  FALSE FALSE FALSE FALSE
40   FALSE   TRUE FALSE FALSE FALSE
41   FALSE   TRUE FALSE FALSE FALSE
42   FALSE   TRUE FALSE FALSE FALSE
43   FALSE  FALSE FALSE FALSE FALSE
44   FALSE   TRUE FALSE FALSE FALSE
45   FALSE   TRUE FALSE FALSE FALSE
46   FALSE  FALSE FALSE FALSE FALSE
47   FALSE  FALSE FALSE FALSE FALSE
48   FALSE  FALSE FALSE FALSE FALSE
49   FALSE   TRUE FALSE FALSE FALSE
50   FALSE  FALSE FALSE FALSE FALSE
51   FALSE   TRUE FALSE FALSE FALSE
52   FALSE  FALSE FALSE FALSE FALSE
53   FALSE   TRUE FALSE FALSE FALSE
54   FALSE  FALSE FALSE FALSE FALSE
55   FALSE   TRUE FALSE FALSE FALSE
56   FALSE  FALSE FALSE FALSE FALSE
57   FALSE  FALSE FALSE FALSE FALSE
58   FALSE   TRUE FALSE FALSE FALSE
59   FALSE  FALSE FALSE FALSE FALSE
60   FALSE  FALSE FALSE FALSE FALSE
61   FALSE   TRUE FALSE FALSE FALSE
62   FALSE  FALSE FALSE FALSE FALSE
63   FALSE   TRUE FALSE FALSE FALSE
64   FALSE  FALSE FALSE FALSE FALSE
65   FALSE   TRUE FALSE FALSE FALSE
66   FALSE  FALSE FALSE FALSE FALSE
67   FALSE   TRUE FALSE FALSE FALSE
68   FALSE  FALSE FALSE FALSE FALSE
69   FALSE  FALSE FALSE FALSE FALSE
70   FALSE   TRUE FALSE FALSE FALSE
71   FALSE  FALSE FALSE FALSE FALSE
72   FALSE  FALSE FALSE FALSE FALSE
73   FALSE   TRUE FALSE FALSE FALSE
74   FALSE   TRUE FALSE FALSE FALSE
75   FALSE  FALSE FALSE FALSE FALSE
76   FALSE  FALSE FALSE FALSE FALSE
77   FALSE   TRUE FALSE FALSE FALSE
78   FALSE  FALSE FALSE FALSE FALSE
79   FALSE   TRUE FALSE FALSE FALSE
80   FALSE   TRUE FALSE FALSE FALSE
81   FALSE   TRUE FALSE FALSE FALSE
82   FALSE  FALSE FALSE FALSE FALSE
83   FALSE  FALSE FALSE FALSE FALSE
84   FALSE  FALSE FALSE FALSE FALSE
85   FALSE   TRUE FALSE FALSE FALSE
86   FALSE  FALSE FALSE FALSE FALSE
87   FALSE   TRUE FALSE FALSE FALSE
88   FALSE  FALSE FALSE FALSE FALSE
89   FALSE  FALSE FALSE FALSE FALSE
90   FALSE   TRUE FALSE FALSE FALSE
91   FALSE   TRUE FALSE FALSE FALSE
92   FALSE  FALSE FALSE FALSE FALSE
93   FALSE   TRUE FALSE FALSE FALSE
94   FALSE  FALSE FALSE FALSE FALSE
95   FALSE  FALSE FALSE FALSE FALSE
96   FALSE  FALSE FALSE FALSE FALSE
97   FALSE   TRUE FALSE FALSE FALSE
98   FALSE   TRUE FALSE FALSE FALSE
99   FALSE   TRUE FALSE FALSE FALSE
100  FALSE  FALSE FALSE FALSE FALSE
101  FALSE   TRUE FALSE FALSE FALSE
102  FALSE   TRUE FALSE FALSE FALSE
103  FALSE  FALSE FALSE FALSE FALSE
104  FALSE  FALSE FALSE FALSE FALSE
105  FALSE  FALSE FALSE FALSE FALSE
106  FALSE   TRUE FALSE FALSE FALSE
107  FALSE  FALSE FALSE FALSE FALSE
108  FALSE   TRUE FALSE FALSE FALSE
109  FALSE  FALSE FALSE FALSE FALSE
110  FALSE   TRUE FALSE FALSE FALSE
111  FALSE  FALSE FALSE FALSE FALSE
112  FALSE   TRUE FALSE FALSE FALSE
113  FALSE  FALSE FALSE FALSE FALSE
114  FALSE  FALSE FALSE FALSE FALSE
115  FALSE   TRUE FALSE FALSE FALSE
116  FALSE  FALSE FALSE FALSE FALSE
117  FALSE  FALSE FALSE FALSE FALSE
118  FALSE   TRUE FALSE FALSE FALSE
119  FALSE  FALSE FALSE FALSE FALSE
120  FALSE   TRUE FALSE FALSE FALSE
121  FALSE  FALSE FALSE FALSE FALSE
122  FALSE   TRUE FALSE FALSE FALSE
123  FALSE  FALSE FALSE FALSE FALSE
124  FALSE   TRUE FALSE FALSE FALSE
125  FALSE  FALSE FALSE FALSE FALSE
126  FALSE  FALSE FALSE FALSE FALSE
127  FALSE   TRUE FALSE FALSE FALSE
128  FALSE  FALSE FALSE FALSE FALSE
129  FALSE  FALSE FALSE FALSE FALSE
130  FALSE   TRUE FALSE FALSE FALSE
131  FALSE   TRUE FALSE FALSE FALSE
132  FALSE  FALSE FALSE FALSE FALSE
133  FALSE  FALSE FALSE FALSE FALSE
134  FALSE   TRUE FALSE FALSE FALSE
135  FALSE  FALSE FALSE FALSE FALSE
136  FALSE   TRUE FALSE FALSE FALSE
137  FALSE   TRUE FALSE FALSE FALSE
138  FALSE   TRUE FALSE FALSE FALSE
139  FALSE  FALSE FALSE FALSE FALSE
140  FALSE  FALSE FALSE FALSE FALSE
141  FALSE  FALSE FALSE FALSE FALSE
142  FALSE   TRUE FALSE FALSE FALSE
143  FALSE  FALSE FALSE FALSE FALSE
144  FALSE   TRUE FALSE FALSE FALSE
145  FALSE  FALSE FALSE FALSE FALSE
146  FALSE  FALSE FALSE FALSE FALSE
147  FALSE   TRUE FALSE FALSE FALSE
148  FALSE   TRUE FALSE FALSE FALSE
149  FALSE  FALSE FALSE FALSE FALSE
150  FALSE   TRUE FALSE FALSE FALSE
151  FALSE  FALSE FALSE FALSE FALSE
152  FALSE  FALSE FALSE FALSE FALSE
153  FALSE  FALSE FALSE FALSE FALSE
154  FALSE   TRUE FALSE FALSE FALSE
155  FALSE   TRUE FALSE FALSE FALSE
156  FALSE   TRUE FALSE FALSE FALSE
157  FALSE  FALSE FALSE FALSE FALSE
158  FALSE   TRUE FALSE FALSE FALSE
159  FALSE   TRUE FALSE FALSE FALSE
160  FALSE  FALSE FALSE FALSE FALSE
161  FALSE  FALSE FALSE FALSE FALSE
162  FALSE  FALSE FALSE FALSE FALSE
163  FALSE   TRUE FALSE FALSE FALSE
164  FALSE  FALSE FALSE FALSE FALSE
165  FALSE   TRUE FALSE FALSE FALSE
166  FALSE  FALSE FALSE FALSE FALSE
167  FALSE   TRUE FALSE FALSE FALSE
168  FALSE  FALSE FALSE FALSE FALSE
169  FALSE   TRUE FALSE FALSE FALSE
170  FALSE  FALSE FALSE FALSE FALSE
171  FALSE  FALSE FALSE FALSE FALSE
172  FALSE   TRUE FALSE FALSE FALSE
173  FALSE  FALSE FALSE FALSE FALSE
174  FALSE  FALSE FALSE FALSE FALSE
175  FALSE   TRUE FALSE FALSE FALSE
176  FALSE  FALSE FALSE FALSE FALSE
177  FALSE   TRUE FALSE FALSE FALSE
178  FALSE  FALSE FALSE FALSE FALSE
179  FALSE   TRUE FALSE FALSE FALSE
180  FALSE  FALSE FALSE FALSE FALSE
181  FALSE   TRUE FALSE FALSE FALSE
182  FALSE  FALSE FALSE FALSE FALSE
183  FALSE  FALSE FALSE FALSE FALSE
184  FALSE   TRUE FALSE FALSE FALSE
185  FALSE  FALSE FALSE FALSE FALSE
186  FALSE  FALSE FALSE FALSE FALSE
187  FALSE   TRUE FALSE FALSE FALSE
188  FALSE   TRUE FALSE FALSE FALSE
189  FALSE  FALSE FALSE FALSE FALSE
190  FALSE  FALSE FALSE FALSE FALSE
191  FALSE   TRUE FALSE FALSE FALSE
192  FALSE  FALSE FALSE FALSE FALSE
193  FALSE   TRUE FALSE FALSE FALSE
194  FALSE   TRUE FALSE FALSE FALSE
195  FALSE   TRUE FALSE FALSE FALSE
196  FALSE  FALSE FALSE FALSE FALSE
197  FALSE  FALSE FALSE FALSE FALSE
198  FALSE  FALSE FALSE FALSE FALSE
199  FALSE   TRUE FALSE FALSE FALSE
200  FALSE  FALSE FALSE FALSE FALSE
201  FALSE   TRUE FALSE FALSE FALSE
202  FALSE  FALSE FALSE FALSE FALSE
203  FALSE  FALSE FALSE FALSE FALSE
204  FALSE   TRUE FALSE FALSE FALSE
205  FALSE   TRUE FALSE FALSE FALSE
206  FALSE  FALSE FALSE FALSE FALSE
207  FALSE   TRUE FALSE FALSE FALSE
208  FALSE  FALSE FALSE FALSE FALSE
209  FALSE  FALSE FALSE FALSE FALSE
210  FALSE  FALSE FALSE FALSE FALSE
211  FALSE   TRUE FALSE FALSE FALSE
212  FALSE   TRUE FALSE FALSE FALSE
213  FALSE   TRUE FALSE FALSE FALSE
214  FALSE  FALSE FALSE FALSE FALSE
215  FALSE   TRUE FALSE FALSE FALSE
216  FALSE   TRUE FALSE FALSE FALSE
217  FALSE  FALSE FALSE FALSE FALSE
218  FALSE  FALSE FALSE FALSE FALSE
219  FALSE  FALSE FALSE FALSE FALSE
220  FALSE   TRUE FALSE FALSE FALSE
221  FALSE  FALSE FALSE FALSE FALSE
222  FALSE   TRUE FALSE FALSE FALSE
223  FALSE  FALSE FALSE FALSE FALSE
224  FALSE   TRUE FALSE FALSE FALSE
225  FALSE  FALSE FALSE FALSE FALSE
226  FALSE   TRUE FALSE FALSE FALSE
227  FALSE  FALSE FALSE FALSE FALSE
228  FALSE  FALSE FALSE FALSE FALSE
229  FALSE   TRUE FALSE FALSE FALSE
230  FALSE  FALSE FALSE FALSE FALSE
231  FALSE  FALSE FALSE FALSE FALSE
232  FALSE   TRUE FALSE FALSE FALSE
233  FALSE  FALSE FALSE FALSE FALSE
234  FALSE   TRUE FALSE FALSE FALSE
235  FALSE  FALSE FALSE FALSE FALSE
236  FALSE   TRUE FALSE FALSE FALSE
237  FALSE  FALSE FALSE FALSE FALSE
238  FALSE   TRUE FALSE FALSE FALSE
239  FALSE  FALSE FALSE FALSE FALSE
240  FALSE  FALSE FALSE FALSE FALSE
241  FALSE   TRUE FALSE FALSE FALSE
242  FALSE  FALSE FALSE FALSE FALSE
243  FALSE  FALSE FALSE FALSE FALSE
244  FALSE   TRUE FALSE FALSE FALSE
245  FALSE   TRUE FALSE FALSE FALSE
246  FALSE  FALSE FALSE FALSE FALSE
247  FALSE  FALSE FALSE FALSE FALSE
248  FALSE   TRUE FALSE FALSE FALSE
249  FALSE  FALSE FALSE FALSE FALSE
250  FALSE   TRUE FALSE FALSE FALSE
251  FALSE   TRUE FALSE FALSE FALSE
252  FALSE   TRUE FALSE FALSE FALSE
253  FALSE  FALSE FALSE FALSE FALSE
254  FALSE  FALSE FALSE FALSE FALSE
255  FALSE  FALSE FALSE FALSE FALSE
256  FALSE   TRUE FALSE FALSE FALSE
257  FALSE  FALSE FALSE FALSE FALSE
258  FALSE   TRUE FALSE FALSE FALSE
259  FALSE  FALSE FALSE FALSE FALSE
260  FALSE  FALSE FALSE FALSE FALSE
261  FALSE   TRUE FALSE FALSE FALSE
262  FALSE   TRUE FALSE FALSE FALSE
263  FALSE  FALSE FALSE FALSE FALSE
264  FALSE   TRUE FALSE FALSE FALSE
265  FALSE  FALSE FALSE FALSE FALSE
266  FALSE  FALSE FALSE FALSE FALSE
267  FALSE  FALSE FALSE FALSE FALSE
268  FALSE   TRUE FALSE FALSE FALSE
269  FALSE   TRUE FALSE FALSE FALSE
270  FALSE   TRUE FALSE FALSE FALSE
271  FALSE  FALSE FALSE FALSE FALSE
272  FALSE   TRUE FALSE FALSE FALSE
273  FALSE   TRUE FALSE FALSE FALSE
274  FALSE  FALSE FALSE FALSE FALSE
275  FALSE  FALSE FALSE FALSE FALSE
276  FALSE  FALSE FALSE FALSE FALSE
277  FALSE   TRUE FALSE FALSE FALSE
278  FALSE  FALSE FALSE FALSE FALSE
279  FALSE   TRUE FALSE FALSE FALSE
280  FALSE  FALSE FALSE FALSE FALSE
281  FALSE   TRUE FALSE FALSE FALSE
282  FALSE  FALSE FALSE FALSE FALSE
283  FALSE   TRUE FALSE FALSE FALSE
284  FALSE  FALSE FALSE FALSE FALSE
285  FALSE  FALSE FALSE FALSE FALSE
286  FALSE   TRUE FALSE FALSE FALSE
287  FALSE  FALSE FALSE FALSE FALSE
288  FALSE  FALSE FALSE FALSE FALSE
289  FALSE   TRUE FALSE FALSE FALSE
290  FALSE  FALSE FALSE FALSE FALSE
291  FALSE   TRUE FALSE FALSE FALSE
292  FALSE  FALSE FALSE FALSE FALSE
293  FALSE   TRUE FALSE FALSE FALSE
294  FALSE  FALSE FALSE FALSE FALSE
295  FALSE   TRUE FALSE FALSE FALSE
296  FALSE  FALSE FALSE FALSE FALSE
297  FALSE  FALSE FALSE FALSE FALSE
298  FALSE   TRUE FALSE FALSE FALSE
299  FALSE  FALSE FALSE FALSE FALSE
300  FALSE  FALSE FALSE FALSE FALSE
301  FALSE   TRUE FALSE FALSE FALSE
302  FALSE   TRUE FALSE FALSE FALSE
303  FALSE  FALSE FALSE FALSE FALSE
304  FALSE  FALSE FALSE FALSE FALSE
305  FALSE   TRUE FALSE FALSE FALSE
306  FALSE  FALSE FALSE FALSE FALSE
307  FALSE   TRUE FALSE FALSE FALSE
308  FALSE  FALSE FALSE FALSE FALSE
309  FALSE   TRUE FALSE FALSE FALSE
310  FALSE  FALSE FALSE FALSE FALSE
311  FALSE  FALSE FALSE FALSE FALSE
312  FALSE  FALSE FALSE FALSE FALSE
313  FALSE   TRUE FALSE FALSE FALSE
314  FALSE  FALSE FALSE FALSE FALSE
315  FALSE   TRUE FALSE FALSE FALSE
316  FALSE  FALSE FALSE FALSE FALSE
317  FALSE  FALSE FALSE FALSE FALSE
318  FALSE  FALSE FALSE FALSE FALSE
319  FALSE   TRUE FALSE FALSE FALSE
320  FALSE  FALSE FALSE FALSE FALSE
321  FALSE   TRUE FALSE FALSE FALSE
322  FALSE  FALSE FALSE FALSE FALSE
323  FALSE  FALSE FALSE FALSE FALSE
324  FALSE  FALSE FALSE FALSE FALSE
325  FALSE   TRUE FALSE FALSE FALSE
326  FALSE  FALSE FALSE FALSE FALSE
327  FALSE   TRUE FALSE FALSE FALSE
328  FALSE  FALSE FALSE FALSE FALSE
329  FALSE   TRUE FALSE FALSE FALSE
330  FALSE  FALSE FALSE FALSE FALSE
331  FALSE  FALSE FALSE FALSE FALSE
332  FALSE  FALSE FALSE FALSE FALSE
333  FALSE  FALSE FALSE FALSE FALSE
334  FALSE   TRUE FALSE FALSE FALSE
335  FALSE  FALSE FALSE FALSE FALSE
336  FALSE   TRUE FALSE FALSE FALSE
337  FALSE  FALSE FALSE FALSE FALSE
338  FALSE   TRUE FALSE FALSE FALSE
339  FALSE  FALSE FALSE FALSE FALSE
340  FALSE   TRUE FALSE FALSE FALSE
341  FALSE  FALSE FALSE FALSE FALSE
342  FALSE  FALSE FALSE FALSE FALSE
343  FALSE   TRUE FALSE FALSE FALSE
344  FALSE  FALSE FALSE FALSE FALSE
345  FALSE  FALSE FALSE FALSE FALSE
346  FALSE   TRUE FALSE FALSE FALSE
347  FALSE  FALSE FALSE FALSE FALSE
348  FALSE   TRUE FALSE FALSE FALSE
349  FALSE  FALSE FALSE FALSE FALSE
350  FALSE   TRUE FALSE FALSE FALSE
351  FALSE  FALSE FALSE FALSE FALSE
352  FALSE   TRUE FALSE FALSE FALSE
353  FALSE  FALSE FALSE FALSE FALSE
354  FALSE  FALSE FALSE FALSE FALSE
355  FALSE   TRUE FALSE FALSE FALSE
356  FALSE  FALSE FALSE FALSE FALSE
357  FALSE  FALSE FALSE FALSE FALSE
358  FALSE   TRUE FALSE FALSE FALSE
359  FALSE   TRUE FALSE FALSE FALSE
360  FALSE  FALSE FALSE FALSE FALSE
361  FALSE  FALSE FALSE FALSE FALSE
362  FALSE   TRUE FALSE FALSE FALSE
363  FALSE  FALSE FALSE FALSE FALSE
364  FALSE   TRUE FALSE FALSE FALSE
365  FALSE  FALSE FALSE FALSE FALSE
366  FALSE   TRUE FALSE FALSE FALSE
367  FALSE  FALSE FALSE FALSE FALSE
368  FALSE  FALSE FALSE FALSE FALSE
369  FALSE  FALSE FALSE FALSE FALSE
370  FALSE   TRUE FALSE FALSE FALSE
371  FALSE  FALSE FALSE FALSE FALSE
372  FALSE   TRUE FALSE FALSE FALSE
373  FALSE  FALSE FALSE FALSE FALSE
374  FALSE  FALSE FALSE FALSE FALSE
375  FALSE  FALSE FALSE FALSE FALSE
376  FALSE   TRUE FALSE FALSE FALSE
377  FALSE  FALSE FALSE FALSE FALSE
378  FALSE   TRUE FALSE FALSE FALSE
379  FALSE  FALSE FALSE FALSE FALSE
380  FALSE  FALSE FALSE FALSE FALSE
381  FALSE  FALSE FALSE FALSE FALSE
382  FALSE   TRUE FALSE FALSE FALSE
383  FALSE  FALSE FALSE FALSE FALSE
384  FALSE   TRUE FALSE FALSE FALSE
385  FALSE  FALSE FALSE FALSE FALSE
386  FALSE   TRUE FALSE FALSE FALSE
387  FALSE  FALSE FALSE FALSE FALSE
388  FALSE  FALSE FALSE FALSE FALSE
389  FALSE  FALSE FALSE FALSE FALSE
390  FALSE  FALSE FALSE FALSE FALSE
391  FALSE   TRUE FALSE FALSE FALSE
392  FALSE  FALSE FALSE FALSE FALSE
393  FALSE   TRUE FALSE FALSE FALSE
394  FALSE  FALSE FALSE FALSE FALSE
395  FALSE   TRUE FALSE FALSE FALSE
396  FALSE  FALSE FALSE FALSE FALSE
397  FALSE   TRUE FALSE FALSE FALSE
398  FALSE  FALSE FALSE FALSE FALSE
399  FALSE  FALSE FALSE FALSE FALSE
400  FALSE   TRUE FALSE FALSE FALSE
401  FALSE  FALSE FALSE FALSE FALSE
402  FALSE  FALSE FALSE FALSE FALSE
403  FALSE   TRUE FALSE FALSE FALSE
404  FALSE  FALSE FALSE FALSE FALSE
405  FALSE   TRUE FALSE FALSE FALSE
406  FALSE  FALSE FALSE FALSE FALSE
407  FALSE   TRUE FALSE FALSE FALSE
408  FALSE  FALSE FALSE FALSE FALSE
409  FALSE   TRUE FALSE FALSE FALSE
410  FALSE  FALSE FALSE FALSE FALSE
411  FALSE  FALSE FALSE FALSE FALSE
412  FALSE   TRUE FALSE FALSE FALSE
413  FALSE  FALSE FALSE FALSE FALSE
414  FALSE  FALSE FALSE FALSE FALSE
415  FALSE   TRUE FALSE FALSE FALSE
416  FALSE   TRUE FALSE FALSE FALSE
417  FALSE  FALSE FALSE FALSE FALSE
418  FALSE  FALSE FALSE FALSE FALSE
419  FALSE   TRUE FALSE FALSE FALSE
420  FALSE  FALSE FALSE FALSE FALSE
421  FALSE   TRUE FALSE FALSE FALSE
422  FALSE  FALSE FALSE FALSE FALSE
423  FALSE   TRUE FALSE FALSE FALSE
424  FALSE  FALSE FALSE FALSE FALSE
425  FALSE  FALSE FALSE FALSE FALSE
426  FALSE  FALSE FALSE FALSE FALSE
427  FALSE   TRUE FALSE FALSE FALSE
428  FALSE  FALSE FALSE FALSE FALSE
429  FALSE   TRUE FALSE FALSE FALSE
430  FALSE  FALSE FALSE FALSE FALSE
431  FALSE  FALSE FALSE FALSE FALSE
432  FALSE  FALSE FALSE FALSE FALSE
433  FALSE   TRUE FALSE FALSE FALSE
434  FALSE  FALSE FALSE FALSE FALSE
435  FALSE   TRUE FALSE FALSE FALSE
436  FALSE  FALSE FALSE FALSE FALSE
437  FALSE  FALSE FALSE FALSE FALSE
438  FALSE  FALSE FALSE FALSE FALSE
439  FALSE   TRUE FALSE FALSE FALSE
440  FALSE  FALSE FALSE FALSE FALSE
441  FALSE   TRUE FALSE FALSE FALSE
442  FALSE  FALSE FALSE FALSE FALSE
443  FALSE   TRUE FALSE FALSE FALSE
444  FALSE  FALSE FALSE FALSE FALSE
445  FALSE  FALSE FALSE FALSE FALSE
446  FALSE  FALSE FALSE FALSE FALSE
447  FALSE  FALSE FALSE FALSE FALSE
448  FALSE   TRUE FALSE FALSE FALSE
449  FALSE  FALSE FALSE FALSE FALSE
450  FALSE   TRUE FALSE FALSE FALSE
451  FALSE  FALSE FALSE FALSE FALSE
452  FALSE   TRUE FALSE FALSE FALSE
453  FALSE  FALSE FALSE FALSE FALSE
454  FALSE   TRUE FALSE FALSE FALSE
455  FALSE  FALSE FALSE FALSE FALSE
456  FALSE  FALSE FALSE FALSE FALSE
457  FALSE   TRUE FALSE FALSE FALSE
458  FALSE  FALSE FALSE FALSE FALSE
459  FALSE  FALSE FALSE FALSE FALSE
460  FALSE   TRUE FALSE FALSE FALSE
461  FALSE  FALSE FALSE FALSE FALSE
462  FALSE   TRUE FALSE FALSE FALSE
463  FALSE  FALSE FALSE FALSE FALSE
464  FALSE   TRUE FALSE FALSE FALSE
465  FALSE  FALSE FALSE FALSE FALSE
466  FALSE   TRUE FALSE FALSE FALSE
467  FALSE  FALSE FALSE FALSE FALSE
468  FALSE  FALSE FALSE FALSE FALSE
469  FALSE   TRUE FALSE FALSE FALSE
470  FALSE  FALSE FALSE FALSE FALSE
471  FALSE  FALSE FALSE FALSE FALSE
472  FALSE   TRUE FALSE FALSE FALSE
473  FALSE   TRUE FALSE FALSE FALSE
474  FALSE  FALSE FALSE FALSE FALSE
475  FALSE  FALSE FALSE FALSE FALSE
476  FALSE   TRUE FALSE FALSE FALSE
477  FALSE  FALSE FALSE FALSE FALSE
478  FALSE   TRUE FALSE FALSE FALSE
479  FALSE  FALSE FALSE FALSE FALSE
480  FALSE   TRUE FALSE FALSE FALSE
481  FALSE  FALSE FALSE FALSE FALSE
482  FALSE  FALSE FALSE FALSE FALSE
483  FALSE  FALSE FALSE FALSE FALSE
484  FALSE   TRUE FALSE FALSE FALSE
485  FALSE  FALSE FALSE FALSE FALSE
486  FALSE   TRUE FALSE FALSE FALSE
487  FALSE  FALSE FALSE FALSE FALSE
488  FALSE  FALSE FALSE FALSE FALSE
489  FALSE  FALSE FALSE FALSE FALSE
490  FALSE   TRUE FALSE FALSE FALSE
491  FALSE  FALSE FALSE FALSE FALSE
492  FALSE   TRUE FALSE FALSE FALSE
493  FALSE  FALSE FALSE FALSE FALSE
494  FALSE  FALSE FALSE FALSE FALSE
495  FALSE  FALSE FALSE FALSE FALSE
496  FALSE   TRUE FALSE FALSE FALSE
497  FALSE  FALSE FALSE FALSE FALSE
498  FALSE   TRUE FALSE FALSE FALSE
499  FALSE  FALSE FALSE FALSE FALSE
500  FALSE   TRUE FALSE FALSE FALSE
501  FALSE  FALSE FALSE FALSE FALSE
502  FALSE  FALSE FALSE FALSE FALSE
503  FALSE  FALSE FALSE FALSE FALSE
504  FALSE  FALSE FALSE FALSE FALSE
505  FALSE   TRUE FALSE FALSE FALSE
506  FALSE  FALSE FALSE FALSE FALSE
507  FALSE   TRUE FALSE FALSE FALSE
508  FALSE  FALSE FALSE FALSE FALSE
509  FALSE   TRUE FALSE FALSE FALSE
510  FALSE  FALSE FALSE FALSE FALSE
511  FALSE   TRUE FALSE FALSE FALSE
512  FALSE  FALSE FALSE FALSE FALSE
513  FALSE  FALSE FALSE FALSE FALSE
514  FALSE   TRUE FALSE FALSE FALSE
515  FALSE  FALSE FALSE FALSE FALSE
516  FALSE  FALSE FALSE FALSE FALSE
517  FALSE   TRUE FALSE FALSE FALSE
518  FALSE  FALSE FALSE FALSE FALSE
519  FALSE   TRUE FALSE FALSE FALSE
520  FALSE  FALSE FALSE FALSE FALSE
521  FALSE   TRUE FALSE FALSE FALSE
522  FALSE  FALSE FALSE FALSE FALSE
523  FALSE   TRUE FALSE FALSE FALSE
524  FALSE  FALSE FALSE FALSE FALSE
525  FALSE  FALSE FALSE FALSE FALSE
526  FALSE   TRUE FALSE FALSE FALSE
527  FALSE  FALSE FALSE FALSE FALSE
528  FALSE  FALSE FALSE FALSE FALSE
529  FALSE   TRUE FALSE FALSE FALSE
530  FALSE   TRUE FALSE FALSE FALSE
531  FALSE  FALSE FALSE FALSE FALSE
532  FALSE  FALSE FALSE FALSE FALSE
533  FALSE   TRUE FALSE FALSE FALSE
534  FALSE  FALSE FALSE FALSE FALSE
535  FALSE   TRUE FALSE FALSE FALSE
536  FALSE  FALSE FALSE FALSE FALSE
537  FALSE   TRUE FALSE FALSE FALSE
538  FALSE  FALSE FALSE FALSE FALSE
539  FALSE  FALSE FALSE FALSE FALSE
540  FALSE  FALSE FALSE FALSE FALSE
541  FALSE   TRUE FALSE FALSE FALSE
542  FALSE  FALSE FALSE FALSE FALSE
543  FALSE   TRUE FALSE FALSE FALSE
544  FALSE  FALSE FALSE FALSE FALSE
545  FALSE  FALSE FALSE FALSE FALSE
546  FALSE  FALSE FALSE FALSE FALSE
547  FALSE   TRUE FALSE FALSE FALSE
548  FALSE  FALSE FALSE FALSE FALSE
549  FALSE   TRUE FALSE FALSE FALSE
550  FALSE  FALSE FALSE FALSE FALSE
551  FALSE  FALSE FALSE FALSE FALSE
552  FALSE  FALSE FALSE FALSE FALSE
553  FALSE   TRUE FALSE FALSE FALSE
554  FALSE  FALSE FALSE FALSE FALSE
555  FALSE   TRUE FALSE FALSE FALSE
556  FALSE  FALSE FALSE FALSE FALSE
557  FALSE   TRUE FALSE FALSE FALSE
558  FALSE  FALSE FALSE FALSE FALSE
559  FALSE  FALSE FALSE FALSE FALSE
560  FALSE  FALSE FALSE FALSE FALSE
561  FALSE  FALSE FALSE FALSE FALSE
562  FALSE   TRUE FALSE FALSE FALSE
563  FALSE  FALSE FALSE FALSE FALSE
564  FALSE   TRUE FALSE FALSE FALSE
565  FALSE  FALSE FALSE FALSE FALSE
566  FALSE   TRUE FALSE FALSE FALSE
567  FALSE  FALSE FALSE FALSE FALSE
568  FALSE   TRUE FALSE FALSE FALSE
569  FALSE  FALSE FALSE FALSE FALSE
570  FALSE  FALSE FALSE FALSE FALSE
571  FALSE   TRUE FALSE FALSE FALSE
572  FALSE  FALSE FALSE FALSE FALSE
573  FALSE  FALSE FALSE FALSE FALSE
574  FALSE   TRUE FALSE FALSE FALSE
575  FALSE  FALSE FALSE FALSE FALSE
576  FALSE   TRUE FALSE FALSE FALSE
577  FALSE  FALSE FALSE FALSE FALSE
578  FALSE   TRUE FALSE FALSE FALSE
579  FALSE  FALSE FALSE FALSE FALSE
580  FALSE   TRUE FALSE FALSE FALSE
581  FALSE  FALSE FALSE FALSE FALSE
582  FALSE  FALSE FALSE FALSE FALSE
583  FALSE   TRUE FALSE FALSE FALSE
584  FALSE  FALSE FALSE FALSE FALSE
585  FALSE  FALSE FALSE FALSE FALSE
586  FALSE   TRUE FALSE FALSE FALSE
587  FALSE   TRUE FALSE FALSE FALSE
588  FALSE  FALSE FALSE FALSE FALSE
589  FALSE  FALSE FALSE FALSE FALSE
590  FALSE   TRUE FALSE FALSE FALSE
591  FALSE  FALSE FALSE FALSE FALSE
592  FALSE   TRUE FALSE FALSE FALSE
593  FALSE  FALSE FALSE FALSE FALSE
594  FALSE   TRUE FALSE FALSE FALSE
595  FALSE  FALSE FALSE FALSE FALSE
596  FALSE  FALSE FALSE FALSE FALSE
597  FALSE  FALSE FALSE FALSE FALSE
598  FALSE   TRUE FALSE FALSE FALSE
599  FALSE  FALSE FALSE FALSE FALSE
600  FALSE   TRUE FALSE FALSE FALSE
601  FALSE  FALSE FALSE FALSE FALSE
602  FALSE  FALSE FALSE FALSE FALSE
603  FALSE  FALSE FALSE FALSE FALSE
604  FALSE   TRUE FALSE FALSE FALSE
605  FALSE  FALSE FALSE FALSE FALSE
606  FALSE   TRUE FALSE FALSE FALSE
607  FALSE  FALSE FALSE FALSE FALSE
608  FALSE  FALSE FALSE FALSE FALSE
609  FALSE  FALSE FALSE FALSE FALSE
610  FALSE   TRUE FALSE FALSE FALSE
611  FALSE  FALSE FALSE FALSE FALSE
612  FALSE   TRUE FALSE FALSE FALSE
613  FALSE  FALSE FALSE FALSE FALSE
614  FALSE   TRUE FALSE FALSE FALSE
615  FALSE  FALSE FALSE FALSE FALSE
616  FALSE  FALSE FALSE FALSE FALSE
617  FALSE  FALSE FALSE FALSE FALSE
618  FALSE  FALSE FALSE FALSE FALSE
619  FALSE   TRUE FALSE FALSE FALSE
620  FALSE  FALSE FALSE FALSE FALSE
621  FALSE   TRUE FALSE FALSE FALSE
622  FALSE  FALSE FALSE FALSE FALSE
623  FALSE   TRUE FALSE FALSE FALSE
624  FALSE  FALSE FALSE FALSE FALSE
625  FALSE   TRUE FALSE FALSE FALSE
626  FALSE  FALSE FALSE FALSE FALSE
627  FALSE  FALSE FALSE FALSE FALSE
628  FALSE   TRUE FALSE FALSE FALSE
629  FALSE  FALSE FALSE FALSE FALSE
630  FALSE  FALSE FALSE FALSE FALSE
631  FALSE   TRUE FALSE FALSE FALSE
632  FALSE  FALSE FALSE FALSE FALSE
633  FALSE   TRUE FALSE FALSE FALSE
634  FALSE  FALSE FALSE FALSE FALSE
635  FALSE   TRUE FALSE FALSE FALSE
636  FALSE  FALSE FALSE FALSE FALSE
637  FALSE   TRUE FALSE FALSE FALSE
638  FALSE  FALSE FALSE FALSE FALSE
639  FALSE  FALSE FALSE FALSE FALSE
640  FALSE   TRUE FALSE FALSE FALSE
641  FALSE  FALSE FALSE FALSE FALSE
642  FALSE  FALSE FALSE FALSE FALSE
643  FALSE   TRUE FALSE FALSE FALSE
644  FALSE   TRUE FALSE FALSE FALSE
645  FALSE  FALSE FALSE FALSE FALSE
646  FALSE  FALSE FALSE FALSE FALSE
647  FALSE   TRUE FALSE FALSE FALSE
648  FALSE  FALSE FALSE FALSE FALSE
649  FALSE   TRUE FALSE FALSE FALSE
650  FALSE  FALSE FALSE FALSE FALSE
651  FALSE   TRUE FALSE FALSE FALSE
652  FALSE  FALSE FALSE FALSE FALSE
653  FALSE  FALSE FALSE FALSE FALSE
654  FALSE  FALSE FALSE FALSE FALSE
655  FALSE   TRUE FALSE FALSE FALSE
656  FALSE  FALSE FALSE FALSE FALSE
657  FALSE   TRUE FALSE FALSE FALSE
658  FALSE  FALSE FALSE FALSE FALSE
659  FALSE  FALSE FALSE FALSE FALSE
660  FALSE  FALSE FALSE FALSE FALSE
661  FALSE   TRUE FALSE FALSE FALSE
662  FALSE  FALSE FALSE FALSE FALSE
663  FALSE   TRUE FALSE FALSE FALSE
664  FALSE  FALSE FALSE FALSE FALSE
665  FALSE  FALSE FALSE FALSE FALSE
666  FALSE  FALSE FALSE FALSE FALSE
667  FALSE   TRUE FALSE FALSE FALSE
668  FALSE  FALSE FALSE FALSE FALSE
669  FALSE   TRUE FALSE FALSE FALSE
670  FALSE  FALSE FALSE FALSE FALSE
671  FALSE   TRUE FALSE FALSE FALSE
672  FALSE  FALSE FALSE FALSE FALSE
673  FALSE  FALSE FALSE FALSE FALSE
674  FALSE  FALSE FALSE FALSE FALSE
675  FALSE  FALSE FALSE FALSE FALSE
676  FALSE   TRUE FALSE FALSE FALSE
677  FALSE  FALSE FALSE FALSE FALSE
678  FALSE   TRUE FALSE FALSE FALSE
679  FALSE  FALSE FALSE FALSE FALSE
680  FALSE   TRUE FALSE FALSE FALSE
681  FALSE  FALSE FALSE FALSE FALSE
682  FALSE   TRUE FALSE FALSE FALSE
683  FALSE  FALSE FALSE FALSE FALSE
684  FALSE  FALSE FALSE FALSE FALSE
685  FALSE   TRUE FALSE FALSE FALSE
686  FALSE  FALSE FALSE FALSE FALSE
687  FALSE  FALSE FALSE FALSE FALSE
688  FALSE   TRUE FALSE FALSE FALSE
689  FALSE  FALSE FALSE FALSE FALSE
690  FALSE   TRUE FALSE FALSE FALSE
691  FALSE  FALSE FALSE FALSE FALSE
692  FALSE   TRUE FALSE FALSE FALSE
693  FALSE  FALSE FALSE FALSE FALSE
694  FALSE   TRUE FALSE FALSE FALSE
695  FALSE  FALSE FALSE FALSE FALSE
696  FALSE  FALSE FALSE FALSE FALSE
697  FALSE   TRUE FALSE FALSE FALSE
698  FALSE  FALSE FALSE FALSE FALSE
699  FALSE  FALSE FALSE FALSE FALSE
700  FALSE   TRUE FALSE FALSE FALSE
701  FALSE   TRUE FALSE FALSE FALSE
702  FALSE  FALSE FALSE FALSE FALSE
703  FALSE  FALSE FALSE FALSE FALSE
704  FALSE   TRUE FALSE FALSE FALSE
705  FALSE  FALSE FALSE FALSE FALSE
706  FALSE   TRUE FALSE FALSE FALSE
707  FALSE  FALSE FALSE FALSE FALSE
708  FALSE   TRUE FALSE FALSE FALSE
709  FALSE  FALSE FALSE FALSE FALSE
710  FALSE  FALSE FALSE FALSE FALSE
711  FALSE  FALSE FALSE FALSE FALSE
712  FALSE   TRUE FALSE FALSE FALSE
713  FALSE  FALSE FALSE FALSE FALSE
714  FALSE   TRUE FALSE FALSE FALSE
715  FALSE  FALSE FALSE FALSE FALSE
716  FALSE  FALSE FALSE FALSE FALSE
717  FALSE  FALSE FALSE FALSE FALSE
718  FALSE   TRUE FALSE FALSE FALSE
719  FALSE  FALSE FALSE FALSE FALSE
720  FALSE   TRUE FALSE FALSE FALSE
721  FALSE  FALSE FALSE FALSE FALSE
722  FALSE  FALSE FALSE FALSE FALSE
723  FALSE  FALSE FALSE FALSE FALSE
724  FALSE   TRUE FALSE FALSE FALSE
725  FALSE  FALSE FALSE FALSE FALSE
726  FALSE   TRUE FALSE FALSE FALSE
727  FALSE  FALSE FALSE FALSE FALSE
728  FALSE   TRUE FALSE FALSE FALSE
729  FALSE  FALSE FALSE FALSE FALSE
730  FALSE  FALSE FALSE FALSE FALSE
731  FALSE  FALSE FALSE FALSE FALSE
732  FALSE  FALSE FALSE FALSE FALSE
733  FALSE   TRUE FALSE FALSE FALSE
734  FALSE  FALSE FALSE FALSE FALSE
735  FALSE   TRUE FALSE FALSE FALSE
736  FALSE  FALSE FALSE FALSE FALSE
737  FALSE   TRUE FALSE FALSE FALSE
738  FALSE  FALSE FALSE FALSE FALSE
739  FALSE   TRUE FALSE FALSE FALSE
740  FALSE  FALSE FALSE FALSE FALSE
741  FALSE  FALSE FALSE FALSE FALSE
742  FALSE   TRUE FALSE FALSE FALSE
743  FALSE  FALSE FALSE FALSE FALSE
744  FALSE  FALSE FALSE FALSE FALSE
745  FALSE   TRUE FALSE FALSE FALSE
746  FALSE  FALSE FALSE FALSE FALSE
747  FALSE   TRUE FALSE FALSE FALSE
748  FALSE  FALSE FALSE FALSE FALSE
749  FALSE   TRUE FALSE FALSE FALSE
750  FALSE  FALSE FALSE FALSE FALSE
751  FALSE   TRUE FALSE FALSE FALSE
752  FALSE  FALSE FALSE FALSE FALSE
753  FALSE  FALSE FALSE FALSE FALSE
754  FALSE   TRUE FALSE FALSE FALSE
755  FALSE  FALSE FALSE FALSE FALSE
756  FALSE  FALSE FALSE FALSE FALSE
757  FALSE   TRUE FALSE FALSE FALSE
758  FALSE   TRUE FALSE FALSE FALSE
759  FALSE  FALSE FALSE FALSE FALSE
760  FALSE  FALSE FALSE FALSE FALSE
761  FALSE   TRUE FALSE FALSE FALSE
762  FALSE  FALSE FALSE FALSE FALSE
763  FALSE   TRUE FALSE FALSE FALSE
764  FALSE  FALSE FALSE FALSE FALSE
765  FALSE   TRUE FALSE FALSE FALSE
766  FALSE  FALSE FALSE FALSE FALSE
767  FALSE  FALSE FALSE FALSE FALSE
768  FALSE  FALSE FALSE FALSE FALSE
769  FALSE   TRUE FALSE FALSE FALSE
770  FALSE  FALSE FALSE FALSE FALSE
771  FALSE   TRUE FALSE FALSE FALSE
772  FALSE  FALSE FALSE FALSE FALSE
773  FALSE  FALSE FALSE FALSE FALSE
774  FALSE  FALSE FALSE FALSE FALSE
775  FALSE   TRUE FALSE FALSE FALSE
776  FALSE  FALSE FALSE FALSE FALSE
777  FALSE   TRUE FALSE FALSE FALSE
778  FALSE  FALSE FALSE FALSE FALSE
779  FALSE  FALSE FALSE FALSE FALSE
780  FALSE  FALSE FALSE FALSE FALSE
781  FALSE   TRUE FALSE FALSE FALSE
782  FALSE  FALSE FALSE FALSE FALSE
783  FALSE   TRUE FALSE FALSE FALSE
784  FALSE  FALSE FALSE FALSE FALSE
785  FALSE   TRUE FALSE FALSE FALSE
786  FALSE  FALSE FALSE FALSE FALSE
787  FALSE  FALSE FALSE FALSE FALSE
788  FALSE  FALSE FALSE FALSE FALSE
789  FALSE  FALSE FALSE FALSE FALSE
790  FALSE   TRUE FALSE FALSE FALSE
791  FALSE  FALSE FALSE FALSE FALSE
792  FALSE   TRUE FALSE FALSE FALSE
793  FALSE  FALSE FALSE FALSE FALSE
794  FALSE   TRUE FALSE FALSE FALSE
795  FALSE  FALSE FALSE FALSE FALSE
796  FALSE   TRUE FALSE FALSE FALSE
797  FALSE  FALSE FALSE FALSE FALSE
798  FALSE  FALSE FALSE FALSE FALSE
799  FALSE   TRUE FALSE FALSE FALSE
800  FALSE  FALSE FALSE FALSE FALSE
801  FALSE  FALSE FALSE FALSE FALSE
802  FALSE   TRUE FALSE FALSE FALSE
803  FALSE  FALSE FALSE FALSE FALSE
804  FALSE   TRUE FALSE FALSE FALSE
805  FALSE  FALSE FALSE FALSE FALSE
806  FALSE   TRUE FALSE FALSE FALSE
807  FALSE  FALSE FALSE FALSE FALSE
808  FALSE   TRUE FALSE FALSE FALSE
809  FALSE  FALSE FALSE FALSE FALSE
810  FALSE  FALSE FALSE FALSE FALSE
811  FALSE   TRUE FALSE FALSE FALSE
812  FALSE  FALSE FALSE FALSE FALSE
813  FALSE  FALSE FALSE FALSE FALSE
814  FALSE   TRUE FALSE FALSE FALSE
815  FALSE   TRUE FALSE FALSE FALSE
816  FALSE  FALSE FALSE FALSE FALSE
817  FALSE  FALSE FALSE FALSE FALSE
818  FALSE   TRUE FALSE FALSE FALSE
819  FALSE  FALSE FALSE FALSE FALSE
820  FALSE   TRUE FALSE FALSE FALSE
821  FALSE  FALSE FALSE FALSE FALSE
822  FALSE   TRUE FALSE FALSE FALSE
823  FALSE  FALSE FALSE FALSE FALSE
824  FALSE  FALSE FALSE FALSE FALSE
825  FALSE  FALSE FALSE FALSE FALSE
826  FALSE   TRUE FALSE FALSE FALSE
827  FALSE  FALSE FALSE FALSE FALSE
828  FALSE   TRUE FALSE FALSE FALSE
829  FALSE  FALSE FALSE FALSE FALSE
830  FALSE  FALSE FALSE FALSE FALSE
831  FALSE  FALSE FALSE FALSE FALSE
832  FALSE   TRUE FALSE FALSE FALSE
833  FALSE  FALSE FALSE FALSE FALSE
834  FALSE   TRUE FALSE FALSE FALSE
835  FALSE  FALSE FALSE FALSE FALSE
836  FALSE  FALSE FALSE FALSE FALSE
837  FALSE  FALSE FALSE FALSE FALSE
838  FALSE   TRUE FALSE FALSE FALSE
839  FALSE  FALSE FALSE FALSE FALSE
840  FALSE   TRUE FALSE FALSE FALSE
841  FALSE  FALSE FALSE FALSE FALSE
842  FALSE   TRUE FALSE FALSE FALSE
843  FALSE  FALSE FALSE FALSE FALSE
844  FALSE  FALSE FALSE FALSE FALSE
845  FALSE  FALSE FALSE FALSE FALSE
846  FALSE  FALSE FALSE FALSE FALSE
847  FALSE   TRUE FALSE FALSE FALSE
848  FALSE  FALSE FALSE FALSE FALSE
849  FALSE   TRUE FALSE FALSE FALSE
850  FALSE  FALSE FALSE FALSE FALSE
851  FALSE   TRUE FALSE FALSE FALSE
852  FALSE  FALSE FALSE FALSE FALSE
853  FALSE   TRUE FALSE FALSE FALSE
854  FALSE  FALSE FALSE FALSE FALSE
855  FALSE  FALSE FALSE FALSE FALSE
856  FALSE   TRUE FALSE FALSE FALSE
857  FALSE  FALSE FALSE FALSE FALSE
858  FALSE  FALSE FALSE FALSE FALSE
859  FALSE   TRUE FALSE FALSE FALSE
860  FALSE  FALSE FALSE FALSE FALSE
861  FALSE   TRUE FALSE FALSE FALSE
862  FALSE  FALSE FALSE FALSE FALSE
863  FALSE   TRUE FALSE FALSE FALSE
864  FALSE  FALSE FALSE FALSE FALSE
865  FALSE   TRUE FALSE FALSE FALSE
866  FALSE  FALSE FALSE FALSE FALSE
867  FALSE  FALSE FALSE FALSE FALSE
868  FALSE   TRUE FALSE FALSE FALSE
869  FALSE  FALSE FALSE FALSE FALSE
870  FALSE  FALSE FALSE FALSE FALSE
871  FALSE   TRUE FALSE FALSE FALSE
872  FALSE   TRUE FALSE FALSE FALSE
873  FALSE  FALSE FALSE FALSE FALSE
874  FALSE  FALSE FALSE FALSE FALSE
875  FALSE   TRUE FALSE FALSE FALSE
876  FALSE  FALSE FALSE FALSE FALSE
877  FALSE   TRUE FALSE FALSE FALSE
878  FALSE  FALSE FALSE FALSE FALSE
879  FALSE   TRUE FALSE FALSE FALSE
880  FALSE  FALSE FALSE FALSE FALSE
881  FALSE  FALSE FALSE FALSE FALSE
882  FALSE  FALSE FALSE FALSE FALSE
883  FALSE   TRUE FALSE FALSE FALSE
884  FALSE  FALSE FALSE FALSE FALSE
885  FALSE   TRUE FALSE FALSE FALSE
886  FALSE  FALSE FALSE FALSE FALSE
887  FALSE  FALSE FALSE FALSE FALSE
888  FALSE  FALSE FALSE FALSE FALSE
889  FALSE   TRUE FALSE FALSE FALSE
890  FALSE  FALSE FALSE FALSE FALSE
891  FALSE   TRUE FALSE FALSE FALSE
892  FALSE  FALSE FALSE FALSE FALSE
893  FALSE  FALSE FALSE FALSE FALSE
894  FALSE  FALSE FALSE FALSE FALSE
895  FALSE   TRUE FALSE FALSE FALSE
896  FALSE  FALSE FALSE FALSE FALSE
897  FALSE   TRUE FALSE FALSE FALSE
898  FALSE  FALSE FALSE FALSE FALSE
899  FALSE   TRUE FALSE FALSE FALSE
900  FALSE  FALSE FALSE FALSE FALSE
901  FALSE  FALSE FALSE FALSE FALSE
902  FALSE  FALSE FALSE FALSE FALSE
903  FALSE  FALSE FALSE FALSE FALSE
904  FALSE   TRUE FALSE FALSE FALSE
905  FALSE  FALSE FALSE FALSE FALSE
906  FALSE   TRUE FALSE FALSE FALSE
907  FALSE  FALSE FALSE FALSE FALSE
908  FALSE   TRUE FALSE FALSE FALSE
909  FALSE  FALSE FALSE FALSE FALSE
910  FALSE   TRUE FALSE FALSE FALSE
911  FALSE  FALSE FALSE FALSE FALSE
912  FALSE  FALSE FALSE FALSE FALSE
913  FALSE   TRUE FALSE FALSE FALSE
914  FALSE  FALSE FALSE FALSE FALSE
915  FALSE  FALSE FALSE FALSE FALSE
916  FALSE   TRUE FALSE FALSE FALSE
917  FALSE  FALSE FALSE FALSE FALSE
918  FALSE   TRUE FALSE FALSE FALSE
919  FALSE  FALSE FALSE FALSE FALSE
920  FALSE   TRUE FALSE FALSE FALSE
921  FALSE  FALSE FALSE FALSE FALSE
922  FALSE   TRUE FALSE FALSE FALSE
923  FALSE  FALSE FALSE FALSE FALSE
924  FALSE  FALSE FALSE FALSE FALSE
925  FALSE   TRUE FALSE FALSE FALSE
926  FALSE  FALSE FALSE FALSE FALSE
927  FALSE  FALSE FALSE FALSE FALSE
928  FALSE   TRUE FALSE FALSE FALSE
929  FALSE   TRUE FALSE FALSE FALSE
930  FALSE  FALSE FALSE FALSE FALSE
931  FALSE  FALSE FALSE FALSE FALSE
932  FALSE   TRUE FALSE FALSE FALSE
933  FALSE  FALSE FALSE FALSE FALSE
934  FALSE   TRUE FALSE FALSE FALSE
935  FALSE  FALSE FALSE FALSE FALSE
936  FALSE   TRUE FALSE FALSE FALSE
937  FALSE  FALSE FALSE FALSE FALSE
938  FALSE  FALSE FALSE FALSE FALSE
939  FALSE  FALSE FALSE FALSE FALSE
940  FALSE   TRUE FALSE FALSE FALSE
941  FALSE  FALSE FALSE FALSE FALSE
942  FALSE   TRUE FALSE FALSE FALSE
943  FALSE  FALSE FALSE FALSE FALSE
944  FALSE  FALSE FALSE FALSE FALSE
945  FALSE  FALSE FALSE FALSE FALSE
946  FALSE   TRUE FALSE FALSE FALSE
947  FALSE  FALSE FALSE FALSE FALSE
948  FALSE   TRUE FALSE FALSE FALSE
949  FALSE  FALSE FALSE FALSE FALSE
950  FALSE  FALSE FALSE FALSE FALSE
951  FALSE  FALSE FALSE FALSE FALSE
952  FALSE   TRUE FALSE FALSE FALSE
953  FALSE  FALSE FALSE FALSE FALSE
954  FALSE   TRUE FALSE FALSE FALSE
955  FALSE  FALSE FALSE FALSE FALSE
956  FALSE   TRUE FALSE FALSE FALSE
957  FALSE  FALSE FALSE FALSE FALSE
958  FALSE  FALSE FALSE FALSE FALSE
959  FALSE  FALSE FALSE FALSE FALSE
960  FALSE  FALSE FALSE FALSE FALSE
961  FALSE   TRUE FALSE FALSE FALSE
962  FALSE  FALSE FALSE FALSE FALSE
963  FALSE   TRUE FALSE FALSE FALSE
964  FALSE  FALSE FALSE FALSE FALSE
965  FALSE   TRUE FALSE FALSE FALSE
966  FALSE  FALSE FALSE FALSE FALSE
967  FALSE   TRUE FALSE FALSE FALSE
968  FALSE  FALSE FALSE FALSE FALSE
969  FALSE  FALSE FALSE FALSE FALSE
970  FALSE   TRUE FALSE FALSE FALSE
971  FALSE  FALSE FALSE FALSE FALSE
972  FALSE  FALSE FALSE FALSE FALSE
973  FALSE   TRUE FALSE FALSE FALSE
974  FALSE  FALSE FALSE FALSE FALSE
975  FALSE   TRUE FALSE FALSE FALSE
976  FALSE  FALSE FALSE FALSE FALSE
977  FALSE   TRUE FALSE FALSE FALSE
978  FALSE  FALSE FALSE FALSE FALSE
979  FALSE   TRUE FALSE FALSE FALSE
980  FALSE  FALSE FALSE FALSE FALSE
981  FALSE  FALSE FALSE FALSE FALSE
982  FALSE   TRUE FALSE FALSE FALSE
983  FALSE  FALSE FALSE FALSE FALSE
984  FALSE  FALSE FALSE FALSE FALSE
985  FALSE   TRUE FALSE FALSE FALSE
986  FALSE   TRUE FALSE FALSE FALSE
987  FALSE  FALSE FALSE FALSE FALSE
988  FALSE  FALSE FALSE FALSE FALSE
989  FALSE   TRUE FALSE FALSE FALSE
990  FALSE  FALSE FALSE FALSE FALSE
991  FALSE   TRUE FALSE FALSE FALSE
992  FALSE  FALSE FALSE FALSE FALSE
993  FALSE   TRUE FALSE FALSE FALSE
994  FALSE  FALSE FALSE FALSE FALSE
995  FALSE  FALSE FALSE FALSE FALSE
996  FALSE  FALSE FALSE FALSE FALSE
997  FALSE   TRUE FALSE FALSE FALSE
998  FALSE  FALSE FALSE FALSE FALSE
999  FALSE   TRUE FALSE FALSE FALSE
1000 FALSE  FALSE FALSE FALSE FALSE
1001 FALSE  FALSE FALSE FALSE FALSE
1002 FALSE  FALSE FALSE FALSE FALSE
1003 FALSE   TRUE FALSE FALSE FALSE
1004 FALSE  FALSE FALSE FALSE FALSE
1005 FALSE   TRUE FALSE FALSE FALSE
1006 FALSE  FALSE FALSE FALSE FALSE
1007 FALSE  FALSE FALSE FALSE FALSE
1008 FALSE  FALSE FALSE FALSE FALSE
1009 FALSE   TRUE FALSE FALSE FALSE
1010 FALSE  FALSE FALSE FALSE FALSE
1011 FALSE   TRUE FALSE FALSE FALSE
1012 FALSE  FALSE FALSE FALSE FALSE
1013 FALSE   TRUE FALSE FALSE FALSE
1014 FALSE  FALSE FALSE FALSE FALSE
1015 FALSE  FALSE FALSE FALSE FALSE
1016 FALSE  FALSE FALSE FALSE FALSE
1017 FALSE  FALSE FALSE FALSE FALSE
1018 FALSE   TRUE FALSE FALSE FALSE
1019 FALSE  FALSE FALSE FALSE FALSE
1020 FALSE   TRUE FALSE FALSE FALSE
1021 FALSE  FALSE FALSE FALSE FALSE
1022 FALSE   TRUE FALSE FALSE FALSE
1023 FALSE  FALSE FALSE FALSE FALSE
1024 FALSE   TRUE FALSE FALSE FALSE
1025 FALSE  FALSE FALSE FALSE FALSE
1026 FALSE  FALSE FALSE FALSE FALSE
1027 FALSE   TRUE FALSE FALSE FALSE
1028 FALSE  FALSE FALSE FALSE FALSE
1029 FALSE  FALSE FALSE FALSE FALSE
1030 FALSE   TRUE FALSE FALSE FALSE
1031 FALSE  FALSE FALSE FALSE FALSE
1032 FALSE   TRUE FALSE FALSE FALSE
1033 FALSE  FALSE FALSE FALSE FALSE
1034 FALSE   TRUE FALSE FALSE FALSE
1035 FALSE  FALSE FALSE FALSE FALSE
1036 FALSE   TRUE FALSE FALSE FALSE
1037 FALSE  FALSE FALSE FALSE FALSE
1038 FALSE  FALSE FALSE FALSE FALSE
1039 FALSE   TRUE FALSE FALSE FALSE
1040 FALSE  FALSE FALSE FALSE FALSE
1041 FALSE  FALSE FALSE FALSE FALSE
1042 FALSE   TRUE FALSE FALSE FALSE
1043 FALSE   TRUE FALSE FALSE FALSE
1044 FALSE  FALSE FALSE FALSE FALSE
1045 FALSE  FALSE FALSE FALSE FALSE
1046 FALSE   TRUE FALSE FALSE FALSE
1047 FALSE  FALSE FALSE FALSE FALSE
1048 FALSE   TRUE FALSE FALSE FALSE
1049 FALSE  FALSE FALSE FALSE FALSE
1050 FALSE   TRUE FALSE FALSE FALSE
1051 FALSE  FALSE FALSE FALSE FALSE
1052 FALSE  FALSE FALSE FALSE FALSE
1053 FALSE  FALSE FALSE FALSE FALSE
1054 FALSE   TRUE FALSE FALSE FALSE
1055 FALSE  FALSE FALSE FALSE FALSE
1056 FALSE   TRUE FALSE FALSE FALSE
1057 FALSE  FALSE FALSE FALSE FALSE
1058 FALSE  FALSE FALSE FALSE FALSE
1059 FALSE  FALSE FALSE FALSE FALSE
1060 FALSE   TRUE FALSE FALSE FALSE
1061 FALSE  FALSE FALSE FALSE FALSE
1062 FALSE   TRUE FALSE FALSE FALSE
1063 FALSE  FALSE FALSE FALSE FALSE
1064 FALSE  FALSE FALSE FALSE FALSE
1065 FALSE  FALSE FALSE FALSE FALSE
1066 FALSE   TRUE FALSE FALSE FALSE
1067 FALSE  FALSE FALSE FALSE FALSE
1068 FALSE   TRUE FALSE FALSE FALSE
1069 FALSE  FALSE FALSE FALSE FALSE
1070 FALSE   TRUE FALSE FALSE FALSE
1071 FALSE  FALSE FALSE FALSE FALSE
1072 FALSE  FALSE FALSE FALSE FALSE
1073 FALSE  FALSE FALSE FALSE FALSE
1074 FALSE  FALSE FALSE FALSE FALSE
1075 FALSE   TRUE FALSE FALSE FALSE
1076 FALSE  FALSE FALSE FALSE FALSE
1077 FALSE   TRUE FALSE FALSE FALSE
1078 FALSE  FALSE FALSE FALSE FALSE
1079 FALSE   TRUE FALSE FALSE FALSE
1080 FALSE  FALSE FALSE FALSE FALSE
1081 FALSE   TRUE FALSE FALSE FALSE
1082 FALSE  FALSE FALSE FALSE FALSE
1083 FALSE  FALSE FALSE FALSE FALSE
1084 FALSE   TRUE FALSE FALSE FALSE
1085 FALSE  FALSE FALSE FALSE FALSE
1086 FALSE  FALSE FALSE FALSE FALSE
1087 FALSE   TRUE FALSE FALSE FALSE
1088 FALSE  FALSE FALSE FALSE FALSE
1089 FALSE   TRUE FALSE FALSE FALSE
1090 FALSE  FALSE FALSE FALSE FALSE
1091 FALSE   TRUE FALSE FALSE FALSE
1092 FALSE  FALSE FALSE FALSE FALSE
1093 FALSE   TRUE FALSE FALSE FALSE
1094 FALSE  FALSE FALSE FALSE FALSE
1095 FALSE  FALSE FALSE FALSE FALSE
1096 FALSE   TRUE FALSE FALSE FALSE
1097 FALSE  FALSE FALSE FALSE FALSE
1098 FALSE  FALSE FALSE FALSE FALSE
1099 FALSE   TRUE FALSE FALSE FALSE
1100 FALSE   TRUE FALSE FALSE FALSE
1101 FALSE  FALSE FALSE FALSE FALSE
1102 FALSE  FALSE FALSE FALSE FALSE
1103 FALSE   TRUE FALSE FALSE FALSE
1104 FALSE  FALSE FALSE FALSE FALSE
1105 FALSE   TRUE FALSE FALSE FALSE
1106 FALSE  FALSE FALSE FALSE FALSE
1107 FALSE   TRUE FALSE FALSE FALSE
1108 FALSE  FALSE FALSE FALSE FALSE
1109 FALSE  FALSE FALSE FALSE FALSE
1110 FALSE  FALSE FALSE FALSE FALSE
1111 FALSE   TRUE FALSE FALSE FALSE
1112 FALSE  FALSE FALSE FALSE FALSE
1113 FALSE   TRUE FALSE FALSE FALSE
1114 FALSE  FALSE FALSE FALSE FALSE
1115 FALSE  FALSE FALSE FALSE FALSE
1116 FALSE  FALSE FALSE FALSE FALSE
1117 FALSE   TRUE FALSE FALSE FALSE
1118 FALSE  FALSE FALSE FALSE FALSE
1119 FALSE   TRUE FALSE FALSE FALSE
1120 FALSE  FALSE FALSE FALSE FALSE
1121 FALSE  FALSE FALSE FALSE FALSE
1122 FALSE  FALSE FALSE FALSE FALSE
1123 FALSE   TRUE FALSE FALSE FALSE
1124 FALSE  FALSE FALSE FALSE FALSE
1125 FALSE   TRUE FALSE FALSE FALSE
1126 FALSE  FALSE FALSE FALSE FALSE
1127 FALSE   TRUE FALSE FALSE FALSE
1128 FALSE  FALSE FALSE FALSE FALSE
1129 FALSE  FALSE FALSE FALSE FALSE
1130 FALSE  FALSE FALSE FALSE FALSE
1131 FALSE  FALSE FALSE FALSE FALSE
1132 FALSE   TRUE FALSE FALSE FALSE
1133 FALSE  FALSE FALSE FALSE FALSE
1134 FALSE   TRUE FALSE FALSE FALSE
1135 FALSE  FALSE FALSE FALSE FALSE
1136 FALSE   TRUE FALSE FALSE FALSE
1137 FALSE  FALSE FALSE FALSE FALSE
1138 FALSE   TRUE FALSE FALSE FALSE
1139 FALSE  FALSE FALSE FALSE FALSE
1140 FALSE  FALSE FALSE FALSE FALSE
1141 FALSE   TRUE FALSE FALSE FALSE
1142 FALSE  FALSE FALSE FALSE FALSE
1143 FALSE  FALSE FALSE FALSE FALSE
1144 FALSE   TRUE FALSE FALSE FALSE
1145 FALSE  FALSE FALSE FALSE FALSE
1146 FALSE   TRUE FALSE FALSE FALSE
1147 FALSE  FALSE FALSE FALSE FALSE
1148 FALSE   TRUE FALSE FALSE FALSE
1149 FALSE  FALSE FALSE FALSE FALSE
1150 FALSE   TRUE FALSE FALSE FALSE
1151 FALSE  FALSE FALSE FALSE FALSE
1152 FALSE  FALSE FALSE FALSE FALSE
1153 FALSE   TRUE FALSE FALSE FALSE
1154 FALSE  FALSE FALSE FALSE FALSE
1155 FALSE  FALSE FALSE FALSE FALSE
1156 FALSE   TRUE FALSE FALSE FALSE
1157 FALSE   TRUE FALSE FALSE FALSE
1158 FALSE  FALSE FALSE FALSE FALSE
1159 FALSE  FALSE FALSE FALSE FALSE
1160 FALSE   TRUE FALSE FALSE FALSE
1161 FALSE  FALSE FALSE FALSE FALSE
1162 FALSE   TRUE FALSE FALSE FALSE
1163 FALSE  FALSE FALSE FALSE FALSE
1164 FALSE   TRUE FALSE FALSE FALSE
1165 FALSE  FALSE FALSE FALSE FALSE
1166 FALSE  FALSE FALSE FALSE FALSE
1167 FALSE  FALSE FALSE FALSE FALSE
1168 FALSE   TRUE FALSE FALSE FALSE
1169 FALSE  FALSE FALSE FALSE FALSE
1170 FALSE   TRUE FALSE FALSE FALSE
1171 FALSE  FALSE FALSE FALSE FALSE
1172 FALSE  FALSE FALSE FALSE FALSE
1173 FALSE  FALSE FALSE FALSE FALSE
1174 FALSE   TRUE FALSE FALSE FALSE
1175 FALSE  FALSE FALSE FALSE FALSE
1176 FALSE   TRUE FALSE FALSE FALSE
1177 FALSE  FALSE FALSE FALSE FALSE
1178 FALSE  FALSE FALSE FALSE FALSE
1179 FALSE  FALSE FALSE FALSE FALSE
1180 FALSE   TRUE FALSE FALSE FALSE
1181 FALSE  FALSE FALSE FALSE FALSE
1182 FALSE   TRUE FALSE FALSE FALSE
1183 FALSE  FALSE FALSE FALSE FALSE
1184 FALSE   TRUE FALSE FALSE FALSE
1185 FALSE  FALSE FALSE FALSE FALSE
1186 FALSE  FALSE FALSE FALSE FALSE
1187 FALSE  FALSE FALSE FALSE FALSE
1188 FALSE  FALSE FALSE FALSE FALSE
1189 FALSE   TRUE FALSE FALSE FALSE
1190 FALSE  FALSE FALSE FALSE FALSE
1191 FALSE   TRUE FALSE FALSE FALSE
1192 FALSE  FALSE FALSE FALSE FALSE
1193 FALSE   TRUE FALSE FALSE FALSE
1194 FALSE  FALSE FALSE FALSE FALSE
1195 FALSE   TRUE FALSE FALSE FALSE
1196 FALSE  FALSE FALSE FALSE FALSE
1197 FALSE  FALSE FALSE FALSE FALSE
1198 FALSE   TRUE FALSE FALSE FALSE
1199 FALSE  FALSE FALSE FALSE FALSE
1200 FALSE  FALSE FALSE FALSE FALSE
1201 FALSE   TRUE FALSE FALSE FALSE
1202 FALSE  FALSE FALSE FALSE FALSE
1203 FALSE   TRUE FALSE FALSE FALSE
1204 FALSE  FALSE FALSE FALSE FALSE
1205 FALSE   TRUE FALSE FALSE FALSE
1206 FALSE  FALSE FALSE FALSE FALSE
1207 FALSE   TRUE FALSE FALSE FALSE
1208 FALSE  FALSE FALSE FALSE FALSE
1209 FALSE  FALSE FALSE FALSE FALSE
1210 FALSE   TRUE FALSE FALSE FALSE
1211 FALSE  FALSE FALSE FALSE FALSE
1212 FALSE  FALSE FALSE FALSE FALSE
1213 FALSE   TRUE FALSE FALSE FALSE
1214 FALSE   TRUE FALSE FALSE FALSE
1215 FALSE  FALSE FALSE FALSE FALSE
1216 FALSE  FALSE FALSE FALSE FALSE
1217 FALSE   TRUE FALSE FALSE FALSE
1218 FALSE  FALSE FALSE FALSE FALSE
1219 FALSE   TRUE FALSE FALSE FALSE
1220 FALSE  FALSE FALSE FALSE FALSE
1221 FALSE   TRUE FALSE FALSE FALSE
1222 FALSE  FALSE FALSE FALSE FALSE
1223 FALSE  FALSE FALSE FALSE FALSE
1224 FALSE  FALSE FALSE FALSE FALSE
1225 FALSE   TRUE FALSE FALSE FALSE
1226 FALSE  FALSE FALSE FALSE FALSE
1227 FALSE   TRUE FALSE FALSE FALSE
1228 FALSE  FALSE FALSE FALSE FALSE
1229 FALSE  FALSE FALSE FALSE FALSE
1230 FALSE  FALSE FALSE FALSE FALSE
1231 FALSE   TRUE FALSE FALSE FALSE
1232 FALSE  FALSE FALSE FALSE FALSE
1233 FALSE   TRUE FALSE FALSE FALSE
1234 FALSE  FALSE FALSE FALSE FALSE
1235 FALSE  FALSE FALSE FALSE FALSE
1236 FALSE  FALSE FALSE FALSE FALSE
1237 FALSE   TRUE FALSE FALSE FALSE
1238 FALSE  FALSE FALSE FALSE FALSE
1239 FALSE   TRUE FALSE FALSE FALSE
1240 FALSE  FALSE FALSE FALSE FALSE
1241 FALSE   TRUE FALSE FALSE FALSE
1242 FALSE  FALSE FALSE FALSE FALSE
1243 FALSE  FALSE FALSE FALSE FALSE
1244 FALSE  FALSE FALSE FALSE FALSE
1245 FALSE  FALSE FALSE FALSE FALSE
1246 FALSE   TRUE FALSE FALSE FALSE
1247 FALSE  FALSE FALSE FALSE FALSE
1248 FALSE   TRUE FALSE FALSE FALSE
1249 FALSE  FALSE FALSE FALSE FALSE
1250 FALSE   TRUE FALSE FALSE FALSE
1251 FALSE  FALSE FALSE FALSE FALSE
1252 FALSE   TRUE FALSE FALSE FALSE
1253 FALSE  FALSE FALSE FALSE FALSE
1254 FALSE  FALSE FALSE FALSE FALSE
1255 FALSE   TRUE FALSE FALSE FALSE
1256 FALSE  FALSE FALSE FALSE FALSE
1257 FALSE  FALSE FALSE FALSE FALSE
1258 FALSE   TRUE FALSE FALSE FALSE
1259 FALSE  FALSE FALSE FALSE FALSE
1260 FALSE   TRUE FALSE FALSE FALSE
1261 FALSE  FALSE FALSE FALSE FALSE
1262 FALSE   TRUE FALSE FALSE FALSE
1263 FALSE  FALSE FALSE FALSE FALSE
1264 FALSE   TRUE FALSE FALSE FALSE
1265 FALSE  FALSE FALSE FALSE FALSE
1266 FALSE  FALSE FALSE FALSE FALSE
1267 FALSE   TRUE FALSE FALSE FALSE
1268 FALSE  FALSE FALSE FALSE FALSE
1269 FALSE  FALSE FALSE FALSE FALSE
1270 FALSE   TRUE FALSE FALSE FALSE
1271 FALSE   TRUE FALSE FALSE FALSE
1272 FALSE  FALSE FALSE FALSE FALSE
1273 FALSE  FALSE FALSE FALSE FALSE
1274 FALSE   TRUE FALSE FALSE FALSE
1275 FALSE  FALSE FALSE FALSE FALSE
1276 FALSE   TRUE FALSE FALSE FALSE
1277 FALSE  FALSE FALSE FALSE FALSE
1278 FALSE   TRUE FALSE FALSE FALSE
1279 FALSE  FALSE FALSE FALSE FALSE
1280 FALSE  FALSE FALSE FALSE FALSE
1281 FALSE  FALSE FALSE FALSE FALSE
1282 FALSE   TRUE FALSE FALSE FALSE
1283 FALSE  FALSE FALSE FALSE FALSE
1284 FALSE   TRUE FALSE FALSE FALSE
1285 FALSE  FALSE FALSE FALSE FALSE
1286 FALSE  FALSE FALSE FALSE FALSE
1287 FALSE  FALSE FALSE FALSE FALSE
1288 FALSE   TRUE FALSE FALSE FALSE
1289 FALSE  FALSE FALSE FALSE FALSE
1290 FALSE   TRUE FALSE FALSE FALSE
1291 FALSE  FALSE FALSE FALSE FALSE
1292 FALSE  FALSE FALSE FALSE FALSE
1293 FALSE  FALSE FALSE FALSE FALSE
1294 FALSE   TRUE FALSE FALSE FALSE
1295 FALSE  FALSE FALSE FALSE FALSE
1296 FALSE   TRUE FALSE FALSE FALSE
1297 FALSE  FALSE FALSE FALSE FALSE
1298 FALSE   TRUE FALSE FALSE FALSE
1299 FALSE  FALSE FALSE FALSE FALSE
1300 FALSE  FALSE FALSE FALSE FALSE
1301 FALSE  FALSE FALSE FALSE FALSE
1302 FALSE  FALSE FALSE FALSE FALSE
1303 FALSE   TRUE FALSE FALSE FALSE
1304 FALSE  FALSE FALSE FALSE FALSE
1305 FALSE   TRUE FALSE FALSE FALSE
1306 FALSE  FALSE FALSE FALSE FALSE
1307 FALSE   TRUE FALSE FALSE FALSE
1308 FALSE  FALSE FALSE FALSE FALSE
1309 FALSE   TRUE FALSE FALSE FALSE
1310 FALSE  FALSE FALSE FALSE FALSE
1311 FALSE  FALSE FALSE FALSE FALSE
1312 FALSE   TRUE FALSE FALSE FALSE
1313 FALSE  FALSE FALSE FALSE FALSE
1314 FALSE  FALSE FALSE FALSE FALSE
1315 FALSE   TRUE FALSE FALSE FALSE
1316 FALSE  FALSE FALSE FALSE FALSE
1317 FALSE   TRUE FALSE FALSE FALSE
1318 FALSE  FALSE FALSE FALSE FALSE
1319 FALSE   TRUE FALSE FALSE FALSE
1320 FALSE  FALSE FALSE FALSE FALSE
1321 FALSE   TRUE FALSE FALSE FALSE
1322 FALSE  FALSE FALSE FALSE FALSE
1323 FALSE  FALSE FALSE FALSE FALSE
1324 FALSE   TRUE FALSE FALSE FALSE
1325 FALSE  FALSE FALSE FALSE FALSE
1326 FALSE  FALSE FALSE FALSE FALSE
1327 FALSE   TRUE FALSE FALSE FALSE
1328 FALSE   TRUE FALSE FALSE FALSE
1329 FALSE  FALSE FALSE FALSE FALSE
1330 FALSE  FALSE FALSE FALSE FALSE
1331 FALSE   TRUE FALSE FALSE FALSE
1332 FALSE  FALSE FALSE FALSE FALSE
1333 FALSE   TRUE FALSE FALSE FALSE
1334 FALSE  FALSE FALSE FALSE FALSE
1335 FALSE   TRUE FALSE FALSE FALSE
1336 FALSE  FALSE FALSE FALSE FALSE
1337 FALSE  FALSE FALSE FALSE FALSE
1338 FALSE  FALSE FALSE FALSE FALSE
1339 FALSE   TRUE FALSE FALSE FALSE
1340 FALSE  FALSE FALSE FALSE FALSE
1341 FALSE   TRUE FALSE FALSE FALSE
1342 FALSE  FALSE FALSE FALSE FALSE
1343 FALSE  FALSE FALSE FALSE FALSE
1344 FALSE  FALSE FALSE FALSE FALSE
1345 FALSE   TRUE FALSE FALSE FALSE
1346 FALSE  FALSE FALSE FALSE FALSE
1347 FALSE   TRUE FALSE FALSE FALSE
1348 FALSE  FALSE FALSE FALSE FALSE
1349 FALSE  FALSE FALSE FALSE FALSE
1350 FALSE  FALSE FALSE FALSE FALSE
1351 FALSE   TRUE FALSE FALSE FALSE
1352 FALSE  FALSE FALSE FALSE FALSE
1353 FALSE   TRUE FALSE FALSE FALSE
1354 FALSE  FALSE FALSE FALSE FALSE
1355 FALSE   TRUE FALSE FALSE FALSE
1356 FALSE  FALSE FALSE FALSE FALSE
1357 FALSE  FALSE FALSE FALSE FALSE
1358 FALSE  FALSE FALSE FALSE FALSE
1359 FALSE  FALSE FALSE FALSE FALSE
1360 FALSE   TRUE FALSE FALSE FALSE
1361 FALSE  FALSE FALSE FALSE FALSE
1362 FALSE   TRUE FALSE FALSE FALSE
1363 FALSE  FALSE FALSE FALSE FALSE
1364 FALSE   TRUE FALSE FALSE FALSE
1365 FALSE  FALSE FALSE FALSE FALSE
1366 FALSE   TRUE FALSE FALSE FALSE
1367 FALSE  FALSE FALSE FALSE FALSE
1368 FALSE  FALSE FALSE FALSE FALSE
1369 FALSE   TRUE FALSE FALSE FALSE
1370 FALSE  FALSE FALSE FALSE FALSE
1371 FALSE  FALSE FALSE FALSE FALSE
1372 FALSE   TRUE FALSE FALSE FALSE
1373 FALSE  FALSE FALSE FALSE FALSE
1374 FALSE   TRUE FALSE FALSE FALSE
1375 FALSE  FALSE FALSE FALSE FALSE
1376 FALSE   TRUE FALSE FALSE FALSE
1377 FALSE  FALSE FALSE FALSE FALSE
1378 FALSE   TRUE FALSE FALSE FALSE
1379 FALSE  FALSE FALSE FALSE FALSE
1380 FALSE  FALSE FALSE FALSE FALSE
1381 FALSE   TRUE FALSE FALSE FALSE
1382 FALSE  FALSE FALSE FALSE FALSE
1383 FALSE  FALSE FALSE FALSE FALSE
1384 FALSE   TRUE FALSE FALSE FALSE
1385 FALSE   TRUE FALSE FALSE FALSE
1386 FALSE  FALSE FALSE FALSE FALSE
1387 FALSE  FALSE FALSE FALSE FALSE
1388 FALSE   TRUE FALSE FALSE FALSE
1389 FALSE  FALSE FALSE FALSE FALSE
1390 FALSE   TRUE FALSE FALSE FALSE
1391 FALSE  FALSE FALSE FALSE FALSE
1392 FALSE   TRUE FALSE FALSE FALSE
1393 FALSE  FALSE FALSE FALSE FALSE
1394 FALSE  FALSE FALSE FALSE FALSE
1395 FALSE  FALSE FALSE FALSE FALSE
1396 FALSE   TRUE FALSE FALSE FALSE
1397 FALSE  FALSE FALSE FALSE FALSE
1398 FALSE   TRUE FALSE FALSE FALSE
1399 FALSE  FALSE FALSE FALSE FALSE
1400 FALSE  FALSE FALSE FALSE FALSE
1401 FALSE  FALSE FALSE FALSE FALSE
1402 FALSE   TRUE FALSE FALSE FALSE
1403 FALSE  FALSE FALSE FALSE FALSE
1404 FALSE   TRUE FALSE FALSE FALSE
1405 FALSE  FALSE FALSE FALSE FALSE
1406 FALSE  FALSE FALSE FALSE FALSE
1407 FALSE  FALSE FALSE FALSE FALSE
1408 FALSE   TRUE FALSE FALSE FALSE
1409 FALSE  FALSE FALSE FALSE FALSE
1410 FALSE   TRUE FALSE FALSE FALSE
1411 FALSE  FALSE FALSE FALSE FALSE
1412 FALSE   TRUE FALSE FALSE FALSE
1413 FALSE  FALSE FALSE FALSE FALSE
1414 FALSE  FALSE FALSE FALSE FALSE
1415 FALSE  FALSE FALSE FALSE FALSE
1416 FALSE  FALSE FALSE FALSE FALSE
1417 FALSE   TRUE FALSE FALSE FALSE
1418 FALSE  FALSE FALSE FALSE FALSE
1419 FALSE   TRUE FALSE FALSE FALSE
1420 FALSE  FALSE FALSE FALSE FALSE
1421 FALSE   TRUE FALSE FALSE FALSE
1422 FALSE  FALSE FALSE FALSE FALSE
1423 FALSE   TRUE FALSE FALSE FALSE
1424 FALSE  FALSE FALSE FALSE FALSE
1425 FALSE  FALSE FALSE FALSE FALSE
1426 FALSE   TRUE FALSE FALSE FALSE
1427 FALSE  FALSE FALSE FALSE FALSE
1428 FALSE  FALSE FALSE FALSE FALSE
1429 FALSE   TRUE FALSE FALSE FALSE
1430 FALSE  FALSE FALSE FALSE FALSE
1431 FALSE   TRUE FALSE FALSE FALSE
1432 FALSE  FALSE FALSE FALSE FALSE
1433 FALSE   TRUE FALSE FALSE FALSE
1434 FALSE  FALSE FALSE FALSE FALSE
1435 FALSE   TRUE FALSE FALSE FALSE
1436 FALSE  FALSE FALSE FALSE FALSE
1437 FALSE  FALSE FALSE FALSE FALSE
1438 FALSE   TRUE FALSE FALSE FALSE
1439 FALSE  FALSE FALSE FALSE FALSE
1440 FALSE  FALSE FALSE FALSE FALSE
1441 FALSE   TRUE FALSE FALSE FALSE
1442 FALSE   TRUE FALSE FALSE FALSE
1443 FALSE  FALSE FALSE FALSE FALSE
1444 FALSE  FALSE FALSE FALSE FALSE
1445 FALSE   TRUE FALSE FALSE FALSE
1446 FALSE  FALSE FALSE FALSE FALSE
1447 FALSE   TRUE FALSE FALSE FALSE
1448 FALSE  FALSE FALSE FALSE FALSE
1449 FALSE   TRUE FALSE FALSE FALSE
1450 FALSE  FALSE FALSE FALSE FALSE
1451 FALSE  FALSE FALSE FALSE FALSE
1452 FALSE  FALSE FALSE FALSE FALSE
1453 FALSE   TRUE FALSE FALSE FALSE
1454 FALSE  FALSE FALSE FALSE FALSE
1455 FALSE   TRUE FALSE FALSE FALSE
1456 FALSE  FALSE FALSE FALSE FALSE
1457 FALSE  FALSE FALSE FALSE FALSE
1458 FALSE  FALSE FALSE FALSE FALSE
1459 FALSE   TRUE FALSE FALSE FALSE
1460 FALSE  FALSE FALSE FALSE FALSE
1461 FALSE   TRUE FALSE FALSE FALSE
1462 FALSE  FALSE FALSE FALSE FALSE
1463 FALSE  FALSE FALSE FALSE FALSE
1464 FALSE  FALSE FALSE FALSE FALSE
1465 FALSE   TRUE FALSE FALSE FALSE
1466 FALSE  FALSE FALSE FALSE FALSE
1467 FALSE   TRUE FALSE FALSE FALSE
1468 FALSE  FALSE FALSE FALSE FALSE
1469 FALSE   TRUE FALSE FALSE FALSE
1470 FALSE  FALSE FALSE FALSE FALSE
1471 FALSE  FALSE FALSE FALSE FALSE
1472 FALSE  FALSE FALSE FALSE FALSE
1473 FALSE  FALSE FALSE FALSE FALSE
1474 FALSE   TRUE FALSE FALSE FALSE
1475 FALSE  FALSE FALSE FALSE FALSE
1476 FALSE   TRUE FALSE FALSE FALSE
1477 FALSE  FALSE FALSE FALSE FALSE
1478 FALSE   TRUE FALSE FALSE FALSE
1479 FALSE  FALSE FALSE FALSE FALSE
1480 FALSE   TRUE FALSE FALSE FALSE
1481 FALSE  FALSE FALSE FALSE FALSE
1482 FALSE  FALSE FALSE FALSE FALSE
1483 FALSE   TRUE FALSE FALSE FALSE
1484 FALSE  FALSE FALSE FALSE FALSE
1485 FALSE  FALSE FALSE FALSE FALSE
1486 FALSE   TRUE FALSE FALSE FALSE
1487 FALSE  FALSE FALSE FALSE FALSE
1488 FALSE   TRUE FALSE FALSE FALSE
1489 FALSE  FALSE FALSE FALSE FALSE
1490 FALSE   TRUE FALSE FALSE FALSE
1491 FALSE  FALSE FALSE FALSE FALSE
1492 FALSE   TRUE FALSE FALSE FALSE
1493 FALSE  FALSE FALSE FALSE FALSE
1494 FALSE  FALSE FALSE FALSE FALSE
1495 FALSE   TRUE FALSE FALSE FALSE
1496 FALSE  FALSE FALSE FALSE FALSE
1497 FALSE  FALSE FALSE FALSE FALSE
1498 FALSE   TRUE FALSE FALSE FALSE
1499 FALSE   TRUE FALSE FALSE FALSE
1500 FALSE  FALSE FALSE FALSE FALSE
1501 FALSE  FALSE FALSE FALSE FALSE
1502 FALSE   TRUE FALSE FALSE FALSE
1503 FALSE  FALSE FALSE FALSE FALSE
1504 FALSE   TRUE FALSE FALSE FALSE
1505 FALSE  FALSE FALSE FALSE FALSE
1506 FALSE   TRUE FALSE FALSE FALSE
1507 FALSE  FALSE FALSE FALSE FALSE
1508 FALSE  FALSE FALSE FALSE FALSE
1509 FALSE  FALSE FALSE FALSE FALSE
1510 FALSE   TRUE FALSE FALSE FALSE
1511 FALSE  FALSE FALSE FALSE FALSE
1512 FALSE   TRUE FALSE FALSE FALSE
1513 FALSE  FALSE FALSE FALSE FALSE
1514 FALSE  FALSE FALSE FALSE FALSE
1515 FALSE  FALSE FALSE FALSE FALSE
1516 FALSE   TRUE FALSE FALSE FALSE
1517 FALSE  FALSE FALSE FALSE FALSE
1518 FALSE   TRUE FALSE FALSE FALSE
1519 FALSE  FALSE FALSE FALSE FALSE
1520 FALSE  FALSE FALSE FALSE FALSE
1521 FALSE  FALSE FALSE FALSE FALSE
1522 FALSE   TRUE FALSE FALSE FALSE
1523 FALSE  FALSE FALSE FALSE FALSE
1524 FALSE   TRUE FALSE FALSE FALSE
1525 FALSE  FALSE FALSE FALSE FALSE
1526 FALSE   TRUE FALSE FALSE FALSE
1527 FALSE  FALSE FALSE FALSE FALSE
1528 FALSE  FALSE FALSE FALSE FALSE
1529 FALSE  FALSE FALSE FALSE FALSE
1530 FALSE  FALSE FALSE FALSE FALSE
1531 FALSE   TRUE FALSE FALSE FALSE
1532 FALSE  FALSE FALSE FALSE FALSE
1533 FALSE   TRUE FALSE FALSE FALSE
1534 FALSE  FALSE FALSE FALSE FALSE
1535 FALSE   TRUE FALSE FALSE FALSE
1536 FALSE  FALSE FALSE FALSE FALSE
1537 FALSE   TRUE FALSE FALSE FALSE
1538 FALSE  FALSE FALSE FALSE FALSE
1539 FALSE  FALSE FALSE FALSE FALSE
1540 FALSE   TRUE FALSE FALSE FALSE
1541 FALSE  FALSE FALSE FALSE FALSE
1542 FALSE  FALSE FALSE FALSE FALSE
1543 FALSE   TRUE FALSE FALSE FALSE
1544 FALSE  FALSE FALSE FALSE FALSE
1545 FALSE   TRUE FALSE FALSE FALSE
1546 FALSE  FALSE FALSE FALSE FALSE
1547 FALSE   TRUE FALSE FALSE FALSE
1548 FALSE  FALSE FALSE FALSE FALSE
1549 FALSE   TRUE FALSE FALSE FALSE
1550 FALSE  FALSE FALSE FALSE FALSE
1551 FALSE  FALSE FALSE FALSE FALSE
1552 FALSE   TRUE FALSE FALSE FALSE
1553 FALSE  FALSE FALSE FALSE FALSE
1554 FALSE  FALSE FALSE FALSE FALSE
1555 FALSE   TRUE FALSE FALSE FALSE
1556 FALSE   TRUE FALSE FALSE FALSE
1557 FALSE  FALSE FALSE FALSE FALSE
1558 FALSE  FALSE FALSE FALSE FALSE
1559 FALSE   TRUE FALSE FALSE FALSE
1560 FALSE  FALSE FALSE FALSE FALSE
1561 FALSE   TRUE FALSE FALSE FALSE
1562 FALSE  FALSE FALSE FALSE FALSE
1563 FALSE   TRUE FALSE FALSE FALSE
1564 FALSE  FALSE FALSE FALSE FALSE
1565 FALSE  FALSE FALSE FALSE FALSE
1566 FALSE  FALSE FALSE FALSE FALSE
1567 FALSE   TRUE FALSE FALSE FALSE
1568 FALSE  FALSE FALSE FALSE FALSE
1569 FALSE   TRUE FALSE FALSE FALSE
1570 FALSE  FALSE FALSE FALSE FALSE
1571 FALSE  FALSE FALSE FALSE FALSE
1572 FALSE  FALSE FALSE FALSE FALSE
1573 FALSE   TRUE FALSE FALSE FALSE
1574 FALSE  FALSE FALSE FALSE FALSE
1575 FALSE   TRUE FALSE FALSE FALSE
1576 FALSE  FALSE FALSE FALSE FALSE
1577 FALSE  FALSE FALSE FALSE FALSE
1578 FALSE  FALSE FALSE FALSE FALSE
1579 FALSE   TRUE FALSE FALSE FALSE
1580 FALSE  FALSE FALSE FALSE FALSE
1581 FALSE   TRUE FALSE FALSE FALSE
1582 FALSE  FALSE FALSE FALSE FALSE
1583 FALSE   TRUE FALSE FALSE FALSE
1584 FALSE  FALSE FALSE FALSE FALSE
1585 FALSE  FALSE FALSE FALSE FALSE
1586 FALSE  FALSE FALSE FALSE FALSE
1587 FALSE  FALSE FALSE FALSE FALSE
1588 FALSE   TRUE FALSE FALSE FALSE
1589 FALSE  FALSE FALSE FALSE FALSE
1590 FALSE   TRUE FALSE FALSE FALSE
1591 FALSE  FALSE FALSE FALSE FALSE
1592 FALSE   TRUE FALSE FALSE FALSE
1593 FALSE  FALSE FALSE FALSE FALSE
1594 FALSE   TRUE FALSE FALSE FALSE
1595 FALSE  FALSE FALSE FALSE FALSE
1596 FALSE  FALSE FALSE FALSE FALSE
1597 FALSE   TRUE FALSE FALSE FALSE
1598 FALSE  FALSE FALSE FALSE FALSE
1599 FALSE  FALSE FALSE FALSE FALSE
1600 FALSE   TRUE FALSE FALSE FALSE
1601 FALSE  FALSE FALSE FALSE FALSE
1602 FALSE   TRUE FALSE FALSE FALSE
1603 FALSE  FALSE FALSE FALSE FALSE
1604 FALSE   TRUE FALSE FALSE FALSE
1605 FALSE  FALSE FALSE FALSE FALSE
1606 FALSE   TRUE FALSE FALSE FALSE
1607 FALSE  FALSE FALSE FALSE FALSE
1608 FALSE  FALSE FALSE FALSE FALSE
1609 FALSE   TRUE FALSE FALSE FALSE
1610 FALSE  FALSE FALSE FALSE FALSE
1611 FALSE  FALSE FALSE FALSE FALSE
1612 FALSE   TRUE FALSE FALSE FALSE
1613 FALSE   TRUE FALSE FALSE FALSE
1614 FALSE  FALSE FALSE FALSE FALSE
1615 FALSE  FALSE FALSE FALSE FALSE
1616 FALSE   TRUE FALSE FALSE FALSE
1617 FALSE  FALSE FALSE FALSE FALSE
1618 FALSE   TRUE FALSE FALSE FALSE
1619 FALSE  FALSE FALSE FALSE FALSE
1620 FALSE   TRUE FALSE FALSE FALSE
1621 FALSE  FALSE FALSE FALSE FALSE
1622 FALSE  FALSE FALSE FALSE FALSE
1623 FALSE  FALSE FALSE FALSE FALSE
1624 FALSE   TRUE FALSE FALSE FALSE
1625 FALSE  FALSE FALSE FALSE FALSE
1626 FALSE   TRUE FALSE FALSE FALSE
1627 FALSE  FALSE FALSE FALSE FALSE
1628 FALSE  FALSE FALSE FALSE FALSE
1629 FALSE  FALSE FALSE FALSE FALSE
1630 FALSE   TRUE FALSE FALSE FALSE
1631 FALSE  FALSE FALSE FALSE FALSE
1632 FALSE   TRUE FALSE FALSE FALSE
1633 FALSE  FALSE FALSE FALSE FALSE
1634 FALSE  FALSE FALSE FALSE FALSE
1635 FALSE  FALSE FALSE FALSE FALSE
1636 FALSE   TRUE FALSE FALSE FALSE
1637 FALSE  FALSE FALSE FALSE FALSE
1638 FALSE   TRUE FALSE FALSE FALSE
1639 FALSE  FALSE FALSE FALSE FALSE
1640 FALSE   TRUE FALSE FALSE FALSE
1641 FALSE  FALSE FALSE FALSE FALSE
1642 FALSE  FALSE FALSE FALSE FALSE
1643 FALSE  FALSE FALSE FALSE FALSE
1644 FALSE  FALSE FALSE FALSE FALSE
1645 FALSE   TRUE FALSE FALSE FALSE
1646 FALSE  FALSE FALSE FALSE FALSE
1647 FALSE   TRUE FALSE FALSE FALSE
1648 FALSE  FALSE FALSE FALSE FALSE
1649 FALSE   TRUE FALSE FALSE FALSE
1650 FALSE  FALSE FALSE FALSE FALSE
1651 FALSE   TRUE FALSE FALSE FALSE
1652 FALSE  FALSE FALSE FALSE FALSE
1653 FALSE  FALSE FALSE FALSE FALSE
1654 FALSE   TRUE FALSE FALSE FALSE
1655 FALSE  FALSE FALSE FALSE FALSE
1656 FALSE  FALSE FALSE FALSE FALSE
1657 FALSE   TRUE FALSE FALSE FALSE
1658 FALSE  FALSE FALSE FALSE FALSE
1659 FALSE   TRUE FALSE FALSE FALSE
1660 FALSE  FALSE FALSE FALSE FALSE
1661 FALSE   TRUE FALSE FALSE FALSE
1662 FALSE  FALSE FALSE FALSE FALSE
1663 FALSE   TRUE FALSE FALSE FALSE
1664 FALSE  FALSE FALSE FALSE FALSE
1665 FALSE  FALSE FALSE FALSE FALSE
1666 FALSE   TRUE FALSE FALSE FALSE
1667 FALSE  FALSE FALSE FALSE FALSE
1668 FALSE  FALSE FALSE FALSE FALSE
1669 FALSE   TRUE FALSE FALSE FALSE
1670 FALSE   TRUE FALSE FALSE FALSE
1671 FALSE  FALSE FALSE FALSE FALSE
1672 FALSE  FALSE FALSE FALSE FALSE
1673 FALSE   TRUE FALSE FALSE FALSE
1674 FALSE  FALSE FALSE FALSE FALSE
1675 FALSE   TRUE FALSE FALSE FALSE
1676 FALSE  FALSE FALSE FALSE FALSE
1677 FALSE   TRUE FALSE FALSE FALSE
1678 FALSE  FALSE FALSE FALSE FALSE
1679 FALSE  FALSE FALSE FALSE FALSE
1680 FALSE  FALSE FALSE FALSE FALSE
1681 FALSE   TRUE FALSE FALSE FALSE
1682 FALSE  FALSE FALSE FALSE FALSE
1683 FALSE   TRUE FALSE FALSE FALSE
1684 FALSE  FALSE FALSE FALSE FALSE
1685 FALSE  FALSE FALSE FALSE FALSE
1686 FALSE  FALSE FALSE FALSE FALSE
1687 FALSE   TRUE FALSE FALSE FALSE
1688 FALSE  FALSE FALSE FALSE FALSE
1689 FALSE   TRUE FALSE FALSE FALSE
1690 FALSE  FALSE FALSE FALSE FALSE
1691 FALSE  FALSE FALSE FALSE FALSE
1692 FALSE  FALSE FALSE FALSE FALSE
1693 FALSE   TRUE FALSE FALSE FALSE
1694 FALSE  FALSE FALSE FALSE FALSE
1695 FALSE   TRUE FALSE FALSE FALSE
1696 FALSE  FALSE FALSE FALSE FALSE
1697 FALSE   TRUE FALSE FALSE FALSE
1698 FALSE  FALSE FALSE FALSE FALSE
1699 FALSE  FALSE FALSE FALSE FALSE
1700 FALSE  FALSE FALSE FALSE FALSE
1701 FALSE  FALSE FALSE FALSE FALSE
1702 FALSE   TRUE FALSE FALSE FALSE
1703 FALSE  FALSE FALSE FALSE FALSE
1704 FALSE   TRUE FALSE FALSE FALSE
1705 FALSE  FALSE FALSE FALSE FALSE
1706 FALSE   TRUE FALSE FALSE FALSE
1707 FALSE  FALSE FALSE FALSE FALSE
1708 FALSE   TRUE FALSE FALSE FALSE
1709 FALSE  FALSE FALSE FALSE FALSE
1710 FALSE  FALSE FALSE FALSE FALSE
1711 FALSE   TRUE FALSE FALSE FALSE
1712 FALSE  FALSE FALSE FALSE FALSE
1713 FALSE  FALSE FALSE FALSE FALSE
1714 FALSE   TRUE FALSE FALSE FALSE
1715 FALSE  FALSE FALSE FALSE FALSE
1716 FALSE   TRUE FALSE FALSE FALSE
1717 FALSE  FALSE FALSE FALSE FALSE
1718 FALSE   TRUE FALSE FALSE FALSE
1719 FALSE  FALSE FALSE FALSE FALSE
1720 FALSE   TRUE FALSE FALSE FALSE
1721 FALSE  FALSE FALSE FALSE FALSE
1722 FALSE  FALSE FALSE FALSE FALSE
1723 FALSE   TRUE FALSE FALSE FALSE
1724 FALSE  FALSE FALSE FALSE FALSE
1725 FALSE  FALSE FALSE FALSE FALSE
1726 FALSE   TRUE FALSE FALSE FALSE
1727 FALSE   TRUE FALSE FALSE FALSE
1728 FALSE  FALSE FALSE FALSE FALSE
1729 FALSE  FALSE FALSE FALSE FALSE
1730 FALSE   TRUE FALSE FALSE FALSE
1731 FALSE  FALSE FALSE FALSE FALSE
1732 FALSE   TRUE FALSE FALSE FALSE
1733 FALSE  FALSE FALSE FALSE FALSE
1734 FALSE   TRUE FALSE FALSE FALSE
1735 FALSE  FALSE FALSE FALSE FALSE
1736 FALSE  FALSE FALSE FALSE FALSE
1737 FALSE  FALSE FALSE FALSE FALSE
1738 FALSE   TRUE FALSE FALSE FALSE
1739 FALSE  FALSE FALSE FALSE FALSE
1740 FALSE   TRUE FALSE FALSE FALSE
1741 FALSE  FALSE FALSE FALSE FALSE
1742 FALSE  FALSE FALSE FALSE FALSE
1743 FALSE  FALSE FALSE FALSE FALSE
1744 FALSE   TRUE FALSE FALSE FALSE
1745 FALSE  FALSE FALSE FALSE FALSE
1746 FALSE   TRUE FALSE FALSE FALSE
1747 FALSE  FALSE FALSE FALSE FALSE
1748 FALSE  FALSE FALSE FALSE FALSE
1749 FALSE  FALSE FALSE FALSE FALSE
1750 FALSE   TRUE FALSE FALSE FALSE
1751 FALSE  FALSE FALSE FALSE FALSE
1752 FALSE   TRUE FALSE FALSE FALSE
1753 FALSE  FALSE FALSE FALSE FALSE
1754 FALSE   TRUE FALSE FALSE FALSE
1755 FALSE  FALSE FALSE FALSE FALSE
1756 FALSE  FALSE FALSE FALSE FALSE
1757 FALSE  FALSE FALSE FALSE FALSE
1758 FALSE  FALSE FALSE FALSE FALSE
1759 FALSE   TRUE FALSE FALSE FALSE
1760 FALSE  FALSE FALSE FALSE FALSE
1761 FALSE   TRUE FALSE FALSE FALSE
1762 FALSE  FALSE FALSE FALSE FALSE
1763 FALSE   TRUE FALSE FALSE FALSE
1764 FALSE  FALSE FALSE FALSE FALSE
1765 FALSE   TRUE FALSE FALSE FALSE
1766 FALSE  FALSE FALSE FALSE FALSE
1767 FALSE  FALSE FALSE FALSE FALSE
1768 FALSE   TRUE FALSE FALSE FALSE
1769 FALSE  FALSE FALSE FALSE FALSE
1770 FALSE  FALSE FALSE FALSE FALSE
1771 FALSE   TRUE FALSE FALSE FALSE
1772 FALSE  FALSE FALSE FALSE FALSE
1773 FALSE   TRUE FALSE FALSE FALSE
1774 FALSE  FALSE FALSE FALSE FALSE
1775 FALSE   TRUE FALSE FALSE FALSE
1776 FALSE  FALSE FALSE FALSE FALSE
1777 FALSE   TRUE FALSE FALSE FALSE
1778 FALSE  FALSE FALSE FALSE FALSE
1779 FALSE  FALSE FALSE FALSE FALSE
1780 FALSE   TRUE FALSE FALSE FALSE
1781 FALSE  FALSE FALSE FALSE FALSE
1782 FALSE  FALSE FALSE FALSE FALSE
1783 FALSE   TRUE FALSE FALSE FALSE
1784 FALSE   TRUE FALSE FALSE FALSE
1785 FALSE  FALSE FALSE FALSE FALSE
1786 FALSE  FALSE FALSE FALSE FALSE
1787 FALSE   TRUE FALSE FALSE FALSE
1788 FALSE  FALSE FALSE FALSE FALSE
1789 FALSE   TRUE FALSE FALSE FALSE
1790 FALSE  FALSE FALSE FALSE FALSE
1791 FALSE   TRUE FALSE FALSE FALSE
1792 FALSE  FALSE FALSE FALSE FALSE
1793 FALSE  FALSE FALSE FALSE FALSE
1794 FALSE  FALSE FALSE FALSE FALSE
1795 FALSE   TRUE FALSE FALSE FALSE
1796 FALSE  FALSE FALSE FALSE FALSE
1797 FALSE   TRUE FALSE FALSE FALSE
1798 FALSE  FALSE FALSE FALSE FALSE
1799 FALSE  FALSE FALSE FALSE FALSE
1800 FALSE  FALSE FALSE FALSE FALSE
1801 FALSE   TRUE FALSE FALSE FALSE
1802 FALSE  FALSE FALSE FALSE FALSE
1803 FALSE   TRUE FALSE FALSE FALSE
1804 FALSE  FALSE FALSE FALSE FALSE
1805 FALSE  FALSE FALSE FALSE FALSE
1806 FALSE  FALSE FALSE FALSE FALSE
1807 FALSE   TRUE FALSE FALSE FALSE
1808 FALSE  FALSE FALSE FALSE FALSE
1809 FALSE   TRUE FALSE FALSE FALSE
1810 FALSE  FALSE FALSE FALSE FALSE
1811 FALSE   TRUE FALSE FALSE FALSE
1812 FALSE  FALSE FALSE FALSE FALSE
1813 FALSE  FALSE FALSE FALSE FALSE
1814 FALSE  FALSE FALSE FALSE FALSE
1815 FALSE  FALSE FALSE FALSE FALSE
1816 FALSE   TRUE FALSE FALSE FALSE
1817 FALSE  FALSE FALSE FALSE FALSE
1818 FALSE   TRUE FALSE FALSE FALSE
1819 FALSE  FALSE FALSE FALSE FALSE
1820 FALSE   TRUE FALSE FALSE FALSE
1821 FALSE  FALSE FALSE FALSE FALSE
1822 FALSE   TRUE FALSE FALSE FALSE
1823 FALSE  FALSE FALSE FALSE FALSE
1824 FALSE  FALSE FALSE FALSE FALSE
1825 FALSE   TRUE FALSE FALSE FALSE
1826 FALSE  FALSE FALSE FALSE FALSE
1827 FALSE  FALSE FALSE FALSE FALSE
1828 FALSE   TRUE FALSE FALSE FALSE
1829 FALSE  FALSE FALSE FALSE FALSE
1830 FALSE   TRUE FALSE FALSE FALSE
1831 FALSE  FALSE FALSE FALSE FALSE
1832 FALSE   TRUE FALSE FALSE FALSE
1833 FALSE  FALSE FALSE FALSE FALSE
1834 FALSE   TRUE FALSE FALSE FALSE
1835 FALSE  FALSE FALSE FALSE FALSE
1836 FALSE  FALSE FALSE FALSE FALSE
1837 FALSE   TRUE FALSE FALSE FALSE
1838 FALSE  FALSE FALSE FALSE FALSE
1839 FALSE  FALSE FALSE FALSE FALSE
1840 FALSE   TRUE FALSE FALSE FALSE
1841 FALSE   TRUE FALSE FALSE FALSE
1842 FALSE  FALSE FALSE FALSE FALSE
1843 FALSE  FALSE FALSE FALSE FALSE
1844 FALSE   TRUE FALSE FALSE FALSE
1845 FALSE  FALSE FALSE FALSE FALSE
1846 FALSE   TRUE FALSE FALSE FALSE
1847 FALSE  FALSE FALSE FALSE FALSE
1848 FALSE   TRUE FALSE FALSE FALSE
1849 FALSE  FALSE FALSE FALSE FALSE
1850 FALSE  FALSE FALSE FALSE FALSE
1851 FALSE  FALSE FALSE FALSE FALSE
1852 FALSE   TRUE FALSE FALSE FALSE
1853 FALSE  FALSE FALSE FALSE FALSE
1854 FALSE   TRUE FALSE FALSE FALSE
1855 FALSE  FALSE FALSE FALSE FALSE
1856 FALSE  FALSE FALSE FALSE FALSE
1857 FALSE  FALSE FALSE FALSE FALSE
1858 FALSE   TRUE FALSE FALSE FALSE
1859 FALSE  FALSE FALSE FALSE FALSE
1860 FALSE   TRUE FALSE FALSE FALSE
1861 FALSE  FALSE FALSE FALSE FALSE
1862 FALSE  FALSE FALSE FALSE FALSE
1863 FALSE  FALSE FALSE FALSE FALSE
1864 FALSE   TRUE FALSE FALSE FALSE
1865 FALSE  FALSE FALSE FALSE FALSE
1866 FALSE   TRUE FALSE FALSE FALSE
1867 FALSE  FALSE FALSE FALSE FALSE
1868 FALSE   TRUE FALSE FALSE FALSE
1869 FALSE  FALSE FALSE FALSE FALSE
1870 FALSE  FALSE FALSE FALSE FALSE
1871 FALSE  FALSE FALSE FALSE FALSE
1872 FALSE  FALSE FALSE FALSE FALSE
1873 FALSE   TRUE FALSE FALSE FALSE
1874 FALSE  FALSE FALSE FALSE FALSE
1875 FALSE   TRUE FALSE FALSE FALSE
1876 FALSE  FALSE FALSE FALSE FALSE
1877 FALSE   TRUE FALSE FALSE FALSE
1878 FALSE  FALSE FALSE FALSE FALSE
1879 FALSE   TRUE FALSE FALSE FALSE
1880 FALSE  FALSE FALSE FALSE FALSE
1881 FALSE  FALSE FALSE FALSE FALSE
1882 FALSE   TRUE FALSE FALSE FALSE
1883 FALSE  FALSE FALSE FALSE FALSE
1884 FALSE  FALSE FALSE FALSE FALSE
1885 FALSE   TRUE FALSE FALSE FALSE
1886 FALSE  FALSE FALSE FALSE FALSE
1887 FALSE   TRUE FALSE FALSE FALSE
1888 FALSE  FALSE FALSE FALSE FALSE
1889 FALSE   TRUE FALSE FALSE FALSE
1890 FALSE  FALSE FALSE FALSE FALSE
1891 FALSE   TRUE FALSE FALSE FALSE
1892 FALSE  FALSE FALSE FALSE FALSE
1893 FALSE  FALSE FALSE FALSE FALSE
1894 FALSE   TRUE FALSE FALSE FALSE
1895 FALSE  FALSE FALSE FALSE FALSE
1896 FALSE  FALSE FALSE FALSE FALSE
1897 FALSE   TRUE FALSE FALSE FALSE
1898 FALSE   TRUE FALSE FALSE FALSE
1899 FALSE  FALSE FALSE FALSE FALSE
1900 FALSE  FALSE FALSE FALSE FALSE
1901 FALSE   TRUE FALSE FALSE FALSE
1902 FALSE  FALSE FALSE FALSE FALSE
1903 FALSE   TRUE FALSE FALSE FALSE
1904 FALSE  FALSE FALSE FALSE FALSE
1905 FALSE   TRUE FALSE FALSE FALSE
1906 FALSE  FALSE FALSE FALSE FALSE
1907 FALSE  FALSE FALSE FALSE FALSE
1908 FALSE  FALSE FALSE FALSE FALSE
1909 FALSE   TRUE FALSE FALSE FALSE
1910 FALSE  FALSE FALSE FALSE FALSE
1911 FALSE   TRUE FALSE FALSE FALSE
1912 FALSE  FALSE FALSE FALSE FALSE
1913 FALSE  FALSE FALSE FALSE FALSE
1914 FALSE  FALSE FALSE FALSE FALSE
1915 FALSE   TRUE FALSE FALSE FALSE
1916 FALSE  FALSE FALSE FALSE FALSE
1917 FALSE   TRUE FALSE FALSE FALSE
1918 FALSE  FALSE FALSE FALSE FALSE
1919 FALSE  FALSE FALSE FALSE FALSE
1920 FALSE  FALSE FALSE FALSE FALSE
1921 FALSE   TRUE FALSE FALSE FALSE
1922 FALSE  FALSE FALSE FALSE FALSE
1923 FALSE   TRUE FALSE FALSE FALSE
1924 FALSE  FALSE FALSE FALSE FALSE
1925 FALSE   TRUE FALSE FALSE FALSE
1926 FALSE  FALSE FALSE FALSE FALSE
1927 FALSE  FALSE FALSE FALSE FALSE
1928 FALSE  FALSE FALSE FALSE FALSE
1929 FALSE  FALSE FALSE FALSE FALSE
1930 FALSE   TRUE FALSE FALSE FALSE
1931 FALSE  FALSE FALSE FALSE FALSE
1932 FALSE   TRUE FALSE FALSE FALSE
1933 FALSE  FALSE FALSE FALSE FALSE
1934 FALSE   TRUE FALSE FALSE FALSE
1935 FALSE  FALSE FALSE FALSE FALSE
1936 FALSE   TRUE FALSE FALSE FALSE
1937 FALSE  FALSE FALSE FALSE FALSE
1938 FALSE  FALSE FALSE FALSE FALSE
1939 FALSE   TRUE FALSE FALSE FALSE
1940 FALSE  FALSE FALSE FALSE FALSE
1941 FALSE  FALSE FALSE FALSE FALSE
1942 FALSE   TRUE FALSE FALSE FALSE
1943 FALSE  FALSE FALSE FALSE FALSE
1944 FALSE   TRUE FALSE FALSE FALSE
1945 FALSE  FALSE FALSE FALSE FALSE
1946 FALSE   TRUE FALSE FALSE FALSE
1947 FALSE  FALSE FALSE FALSE FALSE
1948 FALSE   TRUE FALSE FALSE FALSE
1949 FALSE  FALSE FALSE FALSE FALSE
1950 FALSE  FALSE FALSE FALSE FALSE
1951 FALSE   TRUE FALSE FALSE FALSE
1952 FALSE  FALSE FALSE FALSE FALSE
1953 FALSE  FALSE FALSE FALSE FALSE
1954 FALSE   TRUE FALSE FALSE FALSE
1955 FALSE   TRUE FALSE FALSE FALSE
1956 FALSE  FALSE FALSE FALSE FALSE
1957 FALSE  FALSE FALSE FALSE FALSE
1958 FALSE   TRUE FALSE FALSE FALSE
1959 FALSE  FALSE FALSE FALSE FALSE
1960 FALSE   TRUE FALSE FALSE FALSE
1961 FALSE  FALSE FALSE FALSE FALSE
1962 FALSE   TRUE FALSE FALSE FALSE
1963 FALSE  FALSE FALSE FALSE FALSE
1964 FALSE  FALSE FALSE FALSE FALSE
1965 FALSE  FALSE FALSE FALSE FALSE
1966 FALSE   TRUE FALSE FALSE FALSE
1967 FALSE  FALSE FALSE FALSE FALSE
1968 FALSE   TRUE FALSE FALSE FALSE
1969 FALSE  FALSE FALSE FALSE FALSE
1970 FALSE  FALSE FALSE FALSE FALSE
1971 FALSE  FALSE FALSE FALSE FALSE
1972 FALSE   TRUE FALSE FALSE FALSE
1973 FALSE  FALSE FALSE FALSE FALSE
1974 FALSE   TRUE FALSE FALSE FALSE
1975 FALSE  FALSE FALSE FALSE FALSE
1976 FALSE  FALSE FALSE FALSE FALSE
1977 FALSE  FALSE FALSE FALSE FALSE
1978 FALSE   TRUE FALSE FALSE FALSE
1979 FALSE  FALSE FALSE FALSE FALSE
1980 FALSE   TRUE FALSE FALSE FALSE
1981 FALSE  FALSE FALSE FALSE FALSE
1982 FALSE   TRUE FALSE FALSE FALSE
1983 FALSE  FALSE FALSE FALSE FALSE
1984 FALSE  FALSE FALSE FALSE FALSE
1985 FALSE  FALSE FALSE FALSE FALSE
1986 FALSE  FALSE FALSE FALSE FALSE
1987 FALSE   TRUE FALSE FALSE FALSE
1988 FALSE  FALSE FALSE FALSE FALSE
1989 FALSE   TRUE FALSE FALSE FALSE
1990 FALSE  FALSE FALSE FALSE FALSE
1991 FALSE   TRUE FALSE FALSE FALSE
1992 FALSE  FALSE FALSE FALSE FALSE
1993 FALSE   TRUE FALSE FALSE FALSE
1994 FALSE  FALSE FALSE FALSE FALSE
1995 FALSE  FALSE FALSE FALSE FALSE
1996 FALSE   TRUE FALSE FALSE FALSE
1997 FALSE  FALSE FALSE FALSE FALSE
1998 FALSE  FALSE FALSE FALSE FALSE
1999 FALSE   TRUE FALSE FALSE FALSE
2000 FALSE  FALSE FALSE FALSE FALSE
2001 FALSE   TRUE FALSE FALSE FALSE
2002 FALSE  FALSE FALSE FALSE FALSE
2003 FALSE   TRUE FALSE FALSE FALSE
2004 FALSE  FALSE FALSE FALSE FALSE
2005 FALSE   TRUE FALSE FALSE FALSE
2006 FALSE  FALSE FALSE FALSE FALSE
2007 FALSE  FALSE FALSE FALSE FALSE
2008 FALSE   TRUE FALSE FALSE FALSE
2009 FALSE  FALSE FALSE FALSE FALSE
2010 FALSE  FALSE FALSE FALSE FALSE
2011 FALSE   TRUE FALSE FALSE FALSE
2012 FALSE   TRUE FALSE FALSE FALSE
2013 FALSE  FALSE FALSE FALSE FALSE
2014 FALSE  FALSE FALSE FALSE FALSE
2015 FALSE   TRUE FALSE FALSE FALSE
2016 FALSE  FALSE FALSE FALSE FALSE
2017 FALSE   TRUE FALSE FALSE FALSE
2018 FALSE  FALSE FALSE FALSE FALSE
2019 FALSE   TRUE FALSE FALSE FALSE
2020 FALSE  FALSE FALSE FALSE FALSE
2021 FALSE  FALSE FALSE FALSE FALSE
2022 FALSE  FALSE FALSE FALSE FALSE
2023 FALSE   TRUE FALSE FALSE FALSE
2024 FALSE  FALSE FALSE FALSE FALSE
2025 FALSE   TRUE FALSE FALSE FALSE
2026 FALSE  FALSE FALSE FALSE FALSE
2027 FALSE  FALSE FALSE FALSE FALSE
2028 FALSE  FALSE FALSE FALSE FALSE
2029 FALSE   TRUE FALSE FALSE FALSE
2030 FALSE  FALSE FALSE FALSE FALSE
2031 FALSE   TRUE FALSE FALSE FALSE
2032 FALSE  FALSE FALSE FALSE FALSE
2033 FALSE  FALSE FALSE FALSE FALSE
2034 FALSE  FALSE FALSE FALSE FALSE
2035 FALSE   TRUE FALSE FALSE FALSE
2036 FALSE  FALSE FALSE FALSE FALSE
2037 FALSE   TRUE FALSE FALSE FALSE
2038 FALSE  FALSE FALSE FALSE FALSE
2039 FALSE   TRUE FALSE FALSE FALSE
2040 FALSE  FALSE FALSE FALSE FALSE
2041 FALSE  FALSE FALSE FALSE FALSE
2042 FALSE  FALSE FALSE FALSE FALSE
2043 FALSE  FALSE FALSE FALSE FALSE
2044 FALSE   TRUE FALSE FALSE FALSE
2045 FALSE  FALSE FALSE FALSE FALSE
2046 FALSE   TRUE FALSE FALSE FALSE
2047 FALSE  FALSE FALSE FALSE FALSE
2048 FALSE   TRUE FALSE FALSE FALSE
2049 FALSE  FALSE FALSE FALSE FALSE
2050 FALSE   TRUE FALSE FALSE FALSE
2051 FALSE  FALSE FALSE FALSE FALSE
2052 FALSE  FALSE FALSE FALSE FALSE
2053 FALSE   TRUE FALSE FALSE FALSE
2054 FALSE  FALSE FALSE FALSE FALSE
2055 FALSE  FALSE FALSE FALSE FALSE
2056 FALSE   TRUE FALSE FALSE FALSE
2057 FALSE  FALSE FALSE FALSE FALSE
2058 FALSE   TRUE FALSE FALSE FALSE
2059 FALSE  FALSE FALSE FALSE FALSE
2060 FALSE   TRUE FALSE FALSE FALSE
2061 FALSE  FALSE FALSE FALSE FALSE
2062 FALSE   TRUE FALSE FALSE FALSE
2063 FALSE  FALSE FALSE FALSE FALSE
2064 FALSE  FALSE FALSE FALSE FALSE
2065 FALSE   TRUE FALSE FALSE FALSE
2066 FALSE  FALSE FALSE FALSE FALSE
2067 FALSE  FALSE FALSE FALSE FALSE
2068 FALSE   TRUE FALSE FALSE FALSE
2069 FALSE   TRUE FALSE FALSE FALSE
2070 FALSE  FALSE FALSE FALSE FALSE
2071 FALSE  FALSE FALSE FALSE FALSE
2072 FALSE   TRUE FALSE FALSE FALSE
2073 FALSE  FALSE FALSE FALSE FALSE
2074 FALSE   TRUE FALSE FALSE FALSE
2075 FALSE  FALSE FALSE FALSE FALSE
2076 FALSE   TRUE FALSE FALSE FALSE
2077 FALSE  FALSE FALSE FALSE FALSE
2078 FALSE  FALSE FALSE FALSE FALSE
2079 FALSE  FALSE FALSE FALSE FALSE
2080 FALSE   TRUE FALSE FALSE FALSE
2081 FALSE  FALSE FALSE FALSE FALSE
2082 FALSE   TRUE FALSE FALSE FALSE
2083 FALSE  FALSE FALSE FALSE FALSE
2084 FALSE  FALSE FALSE FALSE FALSE
2085 FALSE  FALSE FALSE FALSE FALSE
2086 FALSE   TRUE FALSE FALSE FALSE
2087 FALSE  FALSE FALSE FALSE FALSE
2088 FALSE   TRUE FALSE FALSE FALSE
2089 FALSE  FALSE FALSE FALSE FALSE
2090 FALSE  FALSE FALSE FALSE FALSE
2091 FALSE  FALSE FALSE FALSE FALSE
2092 FALSE   TRUE FALSE FALSE FALSE
2093 FALSE  FALSE FALSE FALSE FALSE
2094 FALSE   TRUE FALSE FALSE FALSE
2095 FALSE  FALSE FALSE FALSE FALSE
2096 FALSE   TRUE FALSE FALSE FALSE
2097 FALSE  FALSE FALSE FALSE FALSE
2098 FALSE  FALSE FALSE FALSE FALSE
2099 FALSE  FALSE FALSE FALSE FALSE
2100 FALSE  FALSE FALSE FALSE FALSE
2101 FALSE   TRUE FALSE FALSE FALSE
2102 FALSE  FALSE FALSE FALSE FALSE
2103 FALSE   TRUE FALSE FALSE FALSE
2104 FALSE  FALSE FALSE FALSE FALSE
2105 FALSE   TRUE FALSE FALSE FALSE
2106 FALSE  FALSE FALSE FALSE FALSE
2107 FALSE   TRUE FALSE FALSE FALSE
2108 FALSE  FALSE FALSE FALSE FALSE
2109 FALSE  FALSE FALSE FALSE FALSE
2110 FALSE   TRUE FALSE FALSE  TRUE
2111 FALSE  FALSE FALSE FALSE  TRUE
2112 FALSE  FALSE FALSE FALSE  TRUE
2113 FALSE   TRUE FALSE FALSE  TRUE
2114 FALSE  FALSE FALSE FALSE  TRUE
2115 FALSE   TRUE FALSE FALSE  TRUE
2116 FALSE  FALSE FALSE FALSE  TRUE
2117 FALSE   TRUE FALSE FALSE  TRUE
2118 FALSE  FALSE FALSE FALSE  TRUE
2119 FALSE   TRUE FALSE FALSE  TRUE
2120 FALSE  FALSE FALSE FALSE  TRUE
2121 FALSE  FALSE FALSE FALSE  TRUE
2122 FALSE   TRUE FALSE FALSE  TRUE
2123 FALSE  FALSE FALSE FALSE  TRUE
2124 FALSE  FALSE FALSE FALSE  TRUE
2125 FALSE   TRUE FALSE FALSE  TRUE
2126 FALSE   TRUE FALSE FALSE  TRUE
2127 FALSE  FALSE FALSE FALSE  TRUE
2128 FALSE  FALSE FALSE FALSE  TRUE
2129 FALSE   TRUE FALSE FALSE  TRUE
2130 FALSE  FALSE FALSE FALSE  TRUE
2131 FALSE   TRUE FALSE FALSE  TRUE
2132 FALSE   TRUE FALSE FALSE  TRUE
2133 FALSE   TRUE FALSE FALSE  TRUE
2134 FALSE  FALSE FALSE FALSE  TRUE
2135 FALSE  FALSE FALSE FALSE  TRUE
2136 FALSE  FALSE FALSE FALSE  TRUE
2137 FALSE   TRUE FALSE FALSE  TRUE
2138 FALSE  FALSE FALSE FALSE  TRUE
2139 FALSE   TRUE FALSE FALSE  TRUE
2140 FALSE  FALSE FALSE FALSE  TRUE
2141 FALSE  FALSE FALSE FALSE  TRUE
2142 FALSE   TRUE FALSE FALSE  TRUE
2143 FALSE   TRUE FALSE FALSE  TRUE
2144 FALSE  FALSE FALSE FALSE  TRUE
2145 FALSE   TRUE FALSE FALSE  TRUE
2146 FALSE  FALSE FALSE FALSE  TRUE
2147 FALSE  FALSE FALSE FALSE  TRUE
2148 FALSE  FALSE FALSE FALSE  TRUE
2149 FALSE   TRUE FALSE FALSE  TRUE
2150 FALSE   TRUE FALSE FALSE  TRUE
2151 FALSE   TRUE FALSE FALSE  TRUE
2152 FALSE  FALSE FALSE FALSE  TRUE
2153 FALSE   TRUE FALSE FALSE  TRUE
2154 FALSE   TRUE FALSE FALSE  TRUE
2155 FALSE  FALSE FALSE FALSE  TRUE
2156 FALSE  FALSE FALSE FALSE  TRUE
2157 FALSE  FALSE FALSE FALSE  TRUE
2158 FALSE   TRUE FALSE FALSE  TRUE
2159 FALSE  FALSE FALSE FALSE  TRUE
2160 FALSE   TRUE FALSE FALSE  TRUE
2161 FALSE  FALSE FALSE FALSE  TRUE
2162 FALSE   TRUE FALSE FALSE  TRUE
2163 FALSE  FALSE FALSE FALSE  TRUE
2164 FALSE   TRUE FALSE FALSE  TRUE
2165 FALSE  FALSE FALSE FALSE  TRUE
2166 FALSE  FALSE FALSE FALSE  TRUE
2167 FALSE   TRUE FALSE FALSE  TRUE
2168 FALSE  FALSE FALSE FALSE  TRUE
2169 FALSE  FALSE FALSE FALSE  TRUE
2170 FALSE   TRUE FALSE FALSE  TRUE
2171 FALSE  FALSE FALSE FALSE  TRUE
2172 FALSE   TRUE FALSE FALSE  TRUE
2173 FALSE  FALSE FALSE FALSE  TRUE
2174 FALSE   TRUE FALSE FALSE  TRUE
2175 FALSE  FALSE FALSE FALSE  TRUE
2176 FALSE   TRUE FALSE FALSE  TRUE
2177 FALSE  FALSE FALSE FALSE  TRUE
2178 FALSE  FALSE FALSE FALSE  TRUE
2179 FALSE   TRUE FALSE FALSE  TRUE
2180 FALSE  FALSE FALSE FALSE  TRUE
2181 FALSE  FALSE FALSE FALSE  TRUE
2182 FALSE   TRUE FALSE FALSE  TRUE
2183 FALSE   TRUE FALSE FALSE  TRUE
2184 FALSE  FALSE FALSE FALSE  TRUE
2185 FALSE  FALSE FALSE FALSE  TRUE
2186 FALSE   TRUE FALSE FALSE  TRUE
2187 FALSE  FALSE FALSE FALSE  TRUE
2188 FALSE   TRUE FALSE FALSE  TRUE
2189 FALSE   TRUE FALSE FALSE  TRUE
2190 FALSE   TRUE FALSE FALSE  TRUE
2191 FALSE  FALSE FALSE FALSE  TRUE
2192 FALSE  FALSE FALSE FALSE  TRUE
2193 FALSE  FALSE FALSE FALSE  TRUE
2194 FALSE   TRUE FALSE FALSE  TRUE
2195 FALSE  FALSE FALSE FALSE  TRUE
2196 FALSE   TRUE FALSE FALSE  TRUE
2197 FALSE  FALSE FALSE FALSE  TRUE
2198 FALSE  FALSE FALSE FALSE  TRUE
2199 FALSE   TRUE FALSE FALSE  TRUE
2200 FALSE   TRUE FALSE FALSE  TRUE
2201 FALSE  FALSE FALSE FALSE  TRUE
2202 FALSE   TRUE FALSE FALSE  TRUE
2203 FALSE  FALSE FALSE FALSE  TRUE
2204 FALSE  FALSE FALSE FALSE  TRUE
2205 FALSE  FALSE FALSE FALSE  TRUE
2206 FALSE   TRUE FALSE FALSE  TRUE
2207 FALSE   TRUE FALSE FALSE  TRUE
2208 FALSE   TRUE FALSE FALSE  TRUE
2209 FALSE  FALSE FALSE FALSE  TRUE
2210 FALSE   TRUE FALSE FALSE  TRUE
2211 FALSE   TRUE FALSE FALSE  TRUE
2212 FALSE  FALSE FALSE FALSE  TRUE
2213 FALSE  FALSE FALSE FALSE  TRUE
2214 FALSE  FALSE FALSE FALSE  TRUE
2215 FALSE   TRUE FALSE FALSE  TRUE
2216 FALSE  FALSE FALSE FALSE  TRUE
2217 FALSE   TRUE FALSE FALSE  TRUE
2218 FALSE  FALSE FALSE FALSE  TRUE
2219 FALSE   TRUE FALSE FALSE  TRUE
2220 FALSE  FALSE FALSE FALSE  TRUE
2221 FALSE   TRUE FALSE FALSE  TRUE
2222 FALSE  FALSE FALSE FALSE  TRUE
2223 FALSE  FALSE FALSE FALSE  TRUE
2224 FALSE   TRUE FALSE FALSE  TRUE
2225 FALSE  FALSE FALSE FALSE  TRUE
2226 FALSE  FALSE FALSE FALSE  TRUE
2227 FALSE   TRUE FALSE FALSE  TRUE
2228 FALSE  FALSE FALSE FALSE  TRUE
2229 FALSE   TRUE FALSE FALSE  TRUE
2230 FALSE  FALSE FALSE FALSE  TRUE
2231 FALSE   TRUE FALSE FALSE  TRUE
2232 FALSE  FALSE FALSE FALSE  TRUE
2233 FALSE   TRUE FALSE FALSE  TRUE
2234 FALSE  FALSE FALSE FALSE  TRUE
2235 FALSE  FALSE FALSE FALSE  TRUE
2236 FALSE   TRUE FALSE FALSE  TRUE
2237 FALSE  FALSE FALSE FALSE  TRUE
2238 FALSE  FALSE FALSE FALSE  TRUE
2239 FALSE   TRUE FALSE FALSE  TRUE
2240 FALSE   TRUE FALSE FALSE  TRUE
2241 FALSE  FALSE FALSE FALSE  TRUE
2242 FALSE  FALSE FALSE FALSE  TRUE
2243 FALSE   TRUE FALSE FALSE  TRUE
2244 FALSE  FALSE FALSE FALSE  TRUE
2245 FALSE   TRUE FALSE FALSE  TRUE
2246 FALSE   TRUE FALSE FALSE  TRUE
2247 FALSE   TRUE FALSE FALSE  TRUE
2248 FALSE  FALSE FALSE FALSE  TRUE
2249 FALSE  FALSE FALSE FALSE  TRUE
2250 FALSE  FALSE FALSE FALSE  TRUE
2251 FALSE   TRUE FALSE FALSE  TRUE
2252 FALSE  FALSE FALSE FALSE  TRUE
2253 FALSE   TRUE FALSE FALSE  TRUE
2254 FALSE  FALSE FALSE FALSE  TRUE
2255 FALSE  FALSE FALSE FALSE  TRUE
2256 FALSE   TRUE FALSE FALSE  TRUE
2257 FALSE   TRUE FALSE FALSE  TRUE
2258 FALSE  FALSE FALSE FALSE  TRUE
2259 FALSE   TRUE FALSE FALSE  TRUE
2260 FALSE  FALSE FALSE FALSE  TRUE
2261 FALSE  FALSE FALSE FALSE  TRUE
2262 FALSE  FALSE FALSE FALSE  TRUE
2263 FALSE   TRUE FALSE FALSE  TRUE
2264 FALSE   TRUE FALSE FALSE  TRUE
2265 FALSE   TRUE FALSE FALSE  TRUE
2266 FALSE  FALSE FALSE FALSE  TRUE
2267 FALSE   TRUE FALSE FALSE  TRUE
2268 FALSE   TRUE FALSE FALSE  TRUE
2269 FALSE  FALSE FALSE FALSE  TRUE
2270 FALSE  FALSE FALSE FALSE  TRUE
2271 FALSE  FALSE FALSE FALSE  TRUE
2272 FALSE   TRUE FALSE FALSE  TRUE
2273 FALSE  FALSE FALSE FALSE  TRUE
2274 FALSE   TRUE FALSE FALSE  TRUE
2275 FALSE  FALSE FALSE FALSE  TRUE
2276 FALSE   TRUE FALSE FALSE  TRUE
2277 FALSE  FALSE FALSE FALSE  TRUE
2278 FALSE   TRUE FALSE FALSE  TRUE
2279 FALSE  FALSE FALSE FALSE  TRUE
2280 FALSE  FALSE FALSE FALSE  TRUE
2281 FALSE   TRUE FALSE FALSE  TRUE
2282 FALSE  FALSE FALSE FALSE  TRUE
2283 FALSE  FALSE FALSE FALSE  TRUE
2284 FALSE   TRUE FALSE FALSE  TRUE
2285 FALSE  FALSE FALSE FALSE  TRUE
2286 FALSE   TRUE FALSE FALSE  TRUE
2287 FALSE  FALSE FALSE FALSE  TRUE
2288 FALSE   TRUE FALSE FALSE  TRUE
2289 FALSE  FALSE FALSE FALSE  TRUE
2290 FALSE   TRUE FALSE FALSE  TRUE
2291 FALSE  FALSE FALSE FALSE  TRUE
2292 FALSE  FALSE FALSE FALSE  TRUE
2293 FALSE   TRUE FALSE FALSE  TRUE
2294 FALSE  FALSE FALSE FALSE  TRUE
2295 FALSE  FALSE FALSE FALSE  TRUE
2296 FALSE   TRUE FALSE FALSE  TRUE
2297 FALSE   TRUE FALSE FALSE  TRUE
2298 FALSE  FALSE FALSE FALSE  TRUE
2299 FALSE  FALSE FALSE FALSE  TRUE
2300 FALSE   TRUE FALSE FALSE  TRUE
2301 FALSE  FALSE FALSE FALSE  TRUE
2302 FALSE   TRUE FALSE FALSE  TRUE
2303 FALSE   TRUE FALSE FALSE  TRUE
2304 FALSE   TRUE FALSE FALSE  TRUE
2305 FALSE  FALSE FALSE FALSE  TRUE
2306 FALSE  FALSE FALSE FALSE  TRUE
2307 FALSE  FALSE FALSE FALSE  TRUE
2308 FALSE   TRUE FALSE FALSE  TRUE
2309 FALSE  FALSE FALSE FALSE  TRUE
2310 FALSE   TRUE FALSE FALSE  TRUE
2311 FALSE  FALSE FALSE FALSE  TRUE
2312 FALSE  FALSE FALSE FALSE  TRUE
2313 FALSE   TRUE FALSE FALSE  TRUE
2314 FALSE   TRUE FALSE FALSE  TRUE
2315 FALSE  FALSE FALSE FALSE  TRUE
2316 FALSE   TRUE FALSE FALSE  TRUE
2317 FALSE  FALSE FALSE FALSE  TRUE
2318 FALSE  FALSE FALSE FALSE  TRUE
2319 FALSE  FALSE FALSE FALSE  TRUE
2320 FALSE   TRUE FALSE FALSE  TRUE
2321 FALSE   TRUE FALSE FALSE  TRUE
2322 FALSE   TRUE FALSE FALSE  TRUE
2323 FALSE  FALSE FALSE FALSE  TRUE
2324 FALSE   TRUE FALSE FALSE  TRUE
2325 FALSE   TRUE FALSE FALSE  TRUE
2326 FALSE  FALSE FALSE FALSE  TRUE
2327 FALSE  FALSE FALSE FALSE  TRUE
2328 FALSE  FALSE FALSE FALSE  TRUE
2329 FALSE   TRUE FALSE FALSE  TRUE
2330 FALSE  FALSE FALSE FALSE  TRUE
2331 FALSE   TRUE FALSE FALSE  TRUE
2332 FALSE  FALSE FALSE FALSE  TRUE
2333 FALSE   TRUE FALSE FALSE  TRUE
2334 FALSE  FALSE FALSE FALSE  TRUE
2335 FALSE   TRUE FALSE FALSE  TRUE
2336 FALSE  FALSE FALSE FALSE  TRUE
2337 FALSE  FALSE FALSE FALSE  TRUE
2338 FALSE   TRUE FALSE FALSE  TRUE
2339 FALSE  FALSE FALSE FALSE  TRUE
2340 FALSE  FALSE FALSE FALSE  TRUE
2341 FALSE   TRUE FALSE FALSE  TRUE
2342 FALSE  FALSE FALSE FALSE  TRUE
2343 FALSE   TRUE FALSE FALSE  TRUE
2344 FALSE  FALSE FALSE FALSE  TRUE
2345 FALSE   TRUE FALSE FALSE  TRUE
2346 FALSE  FALSE FALSE FALSE  TRUE
2347 FALSE   TRUE FALSE FALSE  TRUE
2348 FALSE  FALSE FALSE FALSE  TRUE
2349 FALSE  FALSE FALSE FALSE  TRUE
2350 FALSE   TRUE FALSE FALSE  TRUE
2351 FALSE  FALSE FALSE FALSE  TRUE
2352 FALSE  FALSE FALSE FALSE  TRUE
2353 FALSE   TRUE FALSE FALSE  TRUE
2354 FALSE   TRUE FALSE FALSE  TRUE
2355 FALSE  FALSE FALSE FALSE  TRUE
2356 FALSE  FALSE FALSE FALSE  TRUE
2357 FALSE   TRUE FALSE FALSE  TRUE
2358 FALSE  FALSE FALSE FALSE  TRUE
2359 FALSE   TRUE FALSE FALSE  TRUE
2360 FALSE   TRUE FALSE FALSE  TRUE
2361 FALSE   TRUE FALSE FALSE  TRUE
2362 FALSE  FALSE FALSE FALSE  TRUE
2363 FALSE  FALSE FALSE FALSE  TRUE
2364 FALSE  FALSE FALSE FALSE  TRUE
2365 FALSE   TRUE FALSE FALSE  TRUE
2366 FALSE  FALSE FALSE FALSE  TRUE
2367 FALSE   TRUE FALSE FALSE  TRUE
2368 FALSE  FALSE FALSE FALSE  TRUE
2369 FALSE  FALSE FALSE FALSE  TRUE
2370 FALSE   TRUE FALSE FALSE  TRUE
2371 FALSE   TRUE FALSE FALSE  TRUE
2372 FALSE  FALSE FALSE FALSE  TRUE
2373 FALSE   TRUE FALSE FALSE  TRUE
2374 FALSE  FALSE FALSE FALSE  TRUE
2375 FALSE  FALSE FALSE FALSE  TRUE
2376 FALSE  FALSE FALSE FALSE  TRUE
2377 FALSE   TRUE FALSE FALSE  TRUE
2378 FALSE   TRUE FALSE FALSE  TRUE
2379 FALSE   TRUE FALSE FALSE  TRUE
2380 FALSE  FALSE FALSE FALSE  TRUE
2381 FALSE   TRUE FALSE FALSE  TRUE
2382 FALSE   TRUE FALSE FALSE  TRUE
2383 FALSE  FALSE FALSE FALSE  TRUE
2384 FALSE  FALSE FALSE FALSE  TRUE
2385 FALSE  FALSE FALSE FALSE  TRUE
2386 FALSE   TRUE FALSE FALSE  TRUE
2387 FALSE  FALSE FALSE FALSE  TRUE
2388 FALSE   TRUE FALSE FALSE  TRUE
2389 FALSE  FALSE FALSE FALSE  TRUE
2390 FALSE   TRUE FALSE FALSE  TRUE
2391 FALSE  FALSE FALSE FALSE  TRUE
2392 FALSE   TRUE FALSE FALSE  TRUE
2393 FALSE  FALSE FALSE FALSE  TRUE
2394 FALSE  FALSE FALSE FALSE  TRUE
2395 FALSE   TRUE FALSE FALSE FALSE
2396 FALSE  FALSE FALSE FALSE FALSE
2397 FALSE  FALSE FALSE FALSE FALSE
2398 FALSE   TRUE FALSE FALSE FALSE
2399 FALSE  FALSE FALSE FALSE FALSE
2400 FALSE   TRUE FALSE FALSE FALSE
2401 FALSE  FALSE FALSE FALSE FALSE
2402 FALSE   TRUE FALSE FALSE FALSE
2403 FALSE  FALSE FALSE FALSE FALSE
2404 FALSE   TRUE FALSE FALSE FALSE
2405 FALSE  FALSE FALSE FALSE FALSE
2406 FALSE  FALSE FALSE FALSE FALSE
2407 FALSE   TRUE FALSE FALSE FALSE
2408 FALSE  FALSE FALSE FALSE FALSE
2409 FALSE  FALSE FALSE FALSE FALSE
2410 FALSE   TRUE FALSE FALSE FALSE
2411 FALSE   TRUE FALSE FALSE FALSE
2412 FALSE  FALSE FALSE FALSE FALSE
2413 FALSE  FALSE FALSE FALSE FALSE
2414 FALSE   TRUE FALSE FALSE FALSE
2415 FALSE  FALSE FALSE FALSE FALSE
2416 FALSE   TRUE FALSE FALSE FALSE
2417 FALSE  FALSE FALSE FALSE FALSE
2418 FALSE   TRUE FALSE FALSE FALSE
2419 FALSE  FALSE FALSE FALSE FALSE
2420 FALSE  FALSE FALSE FALSE FALSE
2421 FALSE  FALSE FALSE FALSE FALSE
2422 FALSE   TRUE FALSE FALSE FALSE
2423 FALSE  FALSE FALSE FALSE FALSE
2424 FALSE   TRUE FALSE FALSE FALSE
2425 FALSE  FALSE FALSE FALSE FALSE
2426 FALSE  FALSE FALSE FALSE FALSE
2427 FALSE  FALSE FALSE FALSE FALSE
2428 FALSE   TRUE FALSE FALSE FALSE
2429 FALSE  FALSE FALSE FALSE FALSE
2430 FALSE   TRUE FALSE FALSE FALSE
2431 FALSE  FALSE FALSE FALSE FALSE
2432 FALSE  FALSE FALSE FALSE FALSE
2433 FALSE  FALSE FALSE FALSE FALSE
2434 FALSE   TRUE FALSE FALSE FALSE
2435 FALSE  FALSE FALSE FALSE FALSE
2436 FALSE   TRUE FALSE FALSE FALSE
2437 FALSE  FALSE FALSE FALSE FALSE
2438 FALSE   TRUE FALSE FALSE FALSE
2439 FALSE  FALSE FALSE FALSE FALSE
2440 FALSE  FALSE FALSE FALSE FALSE
2441 FALSE  FALSE FALSE FALSE FALSE
2442 FALSE  FALSE FALSE FALSE FALSE
2443 FALSE   TRUE FALSE FALSE FALSE
2444 FALSE  FALSE FALSE FALSE FALSE
2445 FALSE   TRUE FALSE FALSE FALSE
2446 FALSE  FALSE FALSE FALSE FALSE
2447 FALSE   TRUE FALSE FALSE FALSE
2448 FALSE  FALSE FALSE FALSE FALSE
2449 FALSE   TRUE FALSE FALSE FALSE
2450 FALSE  FALSE FALSE FALSE FALSE
2451 FALSE  FALSE FALSE FALSE FALSE
2452 FALSE   TRUE FALSE FALSE FALSE
2453 FALSE  FALSE FALSE FALSE FALSE
2454 FALSE  FALSE FALSE FALSE FALSE
2455 FALSE   TRUE FALSE FALSE FALSE
2456 FALSE  FALSE FALSE FALSE FALSE
2457 FALSE   TRUE FALSE FALSE FALSE
2458 FALSE  FALSE FALSE FALSE FALSE
2459 FALSE   TRUE FALSE FALSE FALSE
2460 FALSE  FALSE FALSE FALSE FALSE
2461 FALSE   TRUE FALSE FALSE FALSE
2462 FALSE  FALSE FALSE FALSE FALSE
2463 FALSE  FALSE FALSE FALSE FALSE
2464 FALSE   TRUE FALSE FALSE FALSE
2465 FALSE  FALSE FALSE FALSE FALSE
2466 FALSE  FALSE FALSE FALSE FALSE
2467 FALSE   TRUE FALSE FALSE FALSE
2468 FALSE   TRUE FALSE FALSE FALSE
2469 FALSE  FALSE FALSE FALSE FALSE
2470 FALSE  FALSE FALSE FALSE FALSE
2471 FALSE   TRUE FALSE FALSE FALSE
2472 FALSE  FALSE FALSE FALSE FALSE
2473 FALSE   TRUE FALSE FALSE FALSE
2474 FALSE  FALSE FALSE FALSE FALSE
2475 FALSE   TRUE FALSE FALSE FALSE
2476 FALSE  FALSE FALSE FALSE FALSE
2477 FALSE  FALSE FALSE FALSE FALSE
2478 FALSE  FALSE FALSE FALSE FALSE
2479 FALSE   TRUE FALSE FALSE FALSE
2480 FALSE  FALSE FALSE FALSE FALSE
2481 FALSE   TRUE FALSE FALSE FALSE
2482 FALSE  FALSE FALSE FALSE FALSE
2483 FALSE  FALSE FALSE FALSE FALSE
2484 FALSE  FALSE FALSE FALSE FALSE
2485 FALSE   TRUE FALSE FALSE FALSE
2486 FALSE  FALSE FALSE FALSE FALSE
2487 FALSE   TRUE FALSE FALSE FALSE
2488 FALSE  FALSE FALSE FALSE FALSE
2489 FALSE  FALSE FALSE FALSE FALSE
2490 FALSE  FALSE FALSE FALSE FALSE
2491 FALSE   TRUE FALSE FALSE FALSE
2492 FALSE  FALSE FALSE FALSE FALSE
2493 FALSE   TRUE FALSE FALSE FALSE
2494 FALSE  FALSE FALSE FALSE FALSE
2495 FALSE   TRUE FALSE FALSE FALSE
2496 FALSE  FALSE FALSE FALSE FALSE
2497 FALSE  FALSE FALSE FALSE FALSE
2498 FALSE  FALSE FALSE FALSE FALSE
2499 FALSE  FALSE FALSE FALSE FALSE
2500 FALSE   TRUE FALSE FALSE FALSE
2501 FALSE  FALSE FALSE FALSE FALSE
2502 FALSE   TRUE FALSE FALSE FALSE
2503 FALSE  FALSE FALSE FALSE FALSE
2504 FALSE   TRUE FALSE FALSE FALSE
2505 FALSE  FALSE FALSE FALSE FALSE
2506 FALSE   TRUE FALSE FALSE FALSE
2507 FALSE  FALSE FALSE FALSE FALSE
2508 FALSE  FALSE FALSE FALSE FALSE
2509 FALSE   TRUE FALSE FALSE FALSE
2510 FALSE  FALSE FALSE FALSE FALSE
2511 FALSE  FALSE FALSE FALSE FALSE
2512 FALSE   TRUE FALSE FALSE FALSE
2513 FALSE  FALSE FALSE FALSE FALSE
2514 FALSE   TRUE FALSE FALSE FALSE
2515 FALSE  FALSE FALSE FALSE FALSE
2516 FALSE   TRUE FALSE FALSE FALSE
2517 FALSE  FALSE FALSE FALSE FALSE
2518 FALSE   TRUE FALSE FALSE FALSE
2519 FALSE  FALSE FALSE FALSE FALSE
2520 FALSE  FALSE FALSE FALSE FALSE
2521 FALSE   TRUE FALSE FALSE FALSE
2522 FALSE  FALSE FALSE FALSE FALSE
2523 FALSE  FALSE FALSE FALSE FALSE
2524 FALSE   TRUE FALSE FALSE FALSE
2525 FALSE   TRUE FALSE FALSE FALSE
2526 FALSE  FALSE FALSE FALSE FALSE
2527 FALSE  FALSE FALSE FALSE FALSE
2528 FALSE   TRUE FALSE FALSE FALSE
2529 FALSE  FALSE FALSE FALSE FALSE
2530 FALSE   TRUE FALSE FALSE FALSE
2531 FALSE  FALSE FALSE FALSE FALSE
2532 FALSE   TRUE FALSE FALSE FALSE
2533 FALSE  FALSE FALSE FALSE FALSE
2534 FALSE  FALSE FALSE FALSE FALSE
2535 FALSE  FALSE FALSE FALSE FALSE
2536 FALSE   TRUE FALSE FALSE FALSE
2537 FALSE  FALSE FALSE FALSE FALSE
2538 FALSE   TRUE FALSE FALSE FALSE
2539 FALSE  FALSE FALSE FALSE FALSE
2540 FALSE  FALSE FALSE FALSE FALSE
2541 FALSE  FALSE FALSE FALSE FALSE
2542 FALSE   TRUE FALSE FALSE FALSE
2543 FALSE  FALSE FALSE FALSE FALSE
2544 FALSE   TRUE FALSE FALSE FALSE
2545 FALSE  FALSE FALSE FALSE FALSE
2546 FALSE  FALSE FALSE FALSE FALSE
2547 FALSE  FALSE FALSE FALSE FALSE
2548 FALSE   TRUE FALSE FALSE FALSE
2549 FALSE  FALSE FALSE FALSE FALSE
2550 FALSE   TRUE FALSE FALSE FALSE
2551 FALSE  FALSE FALSE FALSE FALSE
2552 FALSE   TRUE FALSE FALSE FALSE
2553 FALSE  FALSE FALSE FALSE FALSE
2554 FALSE  FALSE FALSE FALSE FALSE
2555 FALSE  FALSE FALSE FALSE FALSE
2556 FALSE  FALSE FALSE FALSE FALSE
2557 FALSE   TRUE FALSE FALSE FALSE
2558 FALSE  FALSE FALSE FALSE FALSE
2559 FALSE   TRUE FALSE FALSE FALSE
2560 FALSE  FALSE FALSE FALSE FALSE
2561 FALSE   TRUE FALSE FALSE FALSE
2562 FALSE  FALSE FALSE FALSE FALSE
2563 FALSE   TRUE FALSE FALSE FALSE
2564 FALSE  FALSE FALSE FALSE FALSE
2565 FALSE  FALSE FALSE FALSE FALSE
2566 FALSE   TRUE FALSE FALSE FALSE
2567 FALSE  FALSE FALSE FALSE FALSE
2568 FALSE  FALSE FALSE FALSE FALSE
2569 FALSE   TRUE FALSE FALSE FALSE
2570 FALSE  FALSE FALSE FALSE FALSE
2571 FALSE   TRUE FALSE FALSE FALSE
2572 FALSE  FALSE FALSE FALSE FALSE
2573 FALSE   TRUE FALSE FALSE FALSE
2574 FALSE  FALSE FALSE FALSE FALSE
2575 FALSE   TRUE FALSE FALSE FALSE
2576 FALSE  FALSE FALSE FALSE FALSE
2577 FALSE  FALSE FALSE FALSE FALSE
2578 FALSE   TRUE FALSE FALSE FALSE
2579 FALSE  FALSE FALSE FALSE FALSE
2580 FALSE  FALSE FALSE FALSE FALSE
2581 FALSE   TRUE FALSE FALSE FALSE
2582 FALSE   TRUE FALSE FALSE FALSE
2583 FALSE  FALSE FALSE FALSE FALSE
2584 FALSE  FALSE FALSE FALSE FALSE
2585 FALSE   TRUE FALSE FALSE FALSE
2586 FALSE  FALSE FALSE FALSE FALSE
2587 FALSE   TRUE FALSE FALSE FALSE
2588 FALSE  FALSE FALSE FALSE FALSE
2589 FALSE   TRUE FALSE FALSE FALSE
2590 FALSE  FALSE FALSE FALSE FALSE
2591 FALSE  FALSE FALSE FALSE FALSE
2592 FALSE  FALSE FALSE FALSE FALSE
2593 FALSE   TRUE FALSE FALSE FALSE
2594 FALSE  FALSE FALSE FALSE FALSE
2595 FALSE   TRUE FALSE FALSE FALSE
2596 FALSE  FALSE FALSE FALSE FALSE
2597 FALSE  FALSE FALSE FALSE FALSE
2598 FALSE  FALSE FALSE FALSE FALSE
2599 FALSE   TRUE FALSE FALSE FALSE
2600 FALSE  FALSE FALSE FALSE FALSE
2601 FALSE   TRUE FALSE FALSE FALSE
2602 FALSE  FALSE FALSE FALSE FALSE
2603 FALSE  FALSE FALSE FALSE FALSE
2604 FALSE  FALSE FALSE FALSE FALSE
2605 FALSE   TRUE FALSE FALSE FALSE
2606 FALSE  FALSE FALSE FALSE FALSE
2607 FALSE   TRUE FALSE FALSE FALSE
2608 FALSE  FALSE FALSE FALSE FALSE
2609 FALSE   TRUE FALSE FALSE FALSE
2610 FALSE  FALSE FALSE FALSE FALSE
2611 FALSE  FALSE FALSE FALSE FALSE
2612 FALSE  FALSE FALSE FALSE FALSE
2613 FALSE  FALSE FALSE FALSE FALSE
2614 FALSE   TRUE FALSE FALSE FALSE
2615 FALSE  FALSE FALSE FALSE FALSE
2616 FALSE   TRUE FALSE FALSE FALSE
2617 FALSE  FALSE FALSE FALSE FALSE
2618 FALSE   TRUE FALSE FALSE FALSE
2619 FALSE  FALSE FALSE FALSE FALSE
2620 FALSE   TRUE FALSE FALSE FALSE
2621 FALSE  FALSE FALSE FALSE FALSE
2622 FALSE  FALSE FALSE FALSE FALSE
2623 FALSE   TRUE FALSE FALSE FALSE
2624 FALSE  FALSE FALSE FALSE FALSE
2625 FALSE  FALSE FALSE FALSE FALSE
2626 FALSE   TRUE FALSE FALSE FALSE
2627 FALSE  FALSE FALSE FALSE FALSE
2628 FALSE   TRUE FALSE FALSE FALSE
2629 FALSE  FALSE FALSE FALSE FALSE
2630 FALSE   TRUE FALSE FALSE FALSE
2631 FALSE  FALSE FALSE FALSE FALSE
2632 FALSE   TRUE FALSE FALSE FALSE
2633 FALSE  FALSE FALSE FALSE FALSE
2634 FALSE  FALSE FALSE FALSE FALSE
2635 FALSE   TRUE FALSE FALSE FALSE
2636 FALSE  FALSE FALSE FALSE FALSE
2637 FALSE  FALSE FALSE FALSE FALSE
2638 FALSE   TRUE FALSE FALSE FALSE
2639 FALSE   TRUE FALSE FALSE FALSE
2640 FALSE  FALSE FALSE FALSE FALSE
2641 FALSE  FALSE FALSE FALSE FALSE
2642 FALSE   TRUE FALSE FALSE FALSE
2643 FALSE  FALSE FALSE FALSE FALSE
2644 FALSE   TRUE FALSE FALSE FALSE
2645 FALSE  FALSE FALSE FALSE FALSE
2646 FALSE   TRUE FALSE FALSE FALSE
2647 FALSE  FALSE FALSE FALSE FALSE
2648 FALSE  FALSE FALSE FALSE FALSE
2649 FALSE  FALSE FALSE FALSE FALSE
2650 FALSE   TRUE FALSE FALSE FALSE
2651 FALSE  FALSE FALSE FALSE FALSE
2652 FALSE   TRUE FALSE FALSE FALSE
2653 FALSE  FALSE FALSE FALSE FALSE
2654 FALSE  FALSE FALSE FALSE FALSE
2655 FALSE  FALSE FALSE FALSE FALSE
2656 FALSE   TRUE FALSE FALSE FALSE
2657 FALSE  FALSE FALSE FALSE FALSE
2658 FALSE   TRUE FALSE FALSE FALSE
2659 FALSE  FALSE FALSE FALSE FALSE
2660 FALSE  FALSE FALSE FALSE FALSE
2661 FALSE  FALSE FALSE FALSE FALSE
2662 FALSE   TRUE FALSE FALSE FALSE
2663 FALSE  FALSE FALSE FALSE FALSE
2664 FALSE   TRUE FALSE FALSE FALSE
2665 FALSE  FALSE FALSE FALSE FALSE
2666 FALSE   TRUE FALSE FALSE FALSE
2667 FALSE  FALSE FALSE FALSE FALSE
2668 FALSE  FALSE FALSE FALSE FALSE
2669 FALSE  FALSE FALSE FALSE FALSE
2670 FALSE  FALSE FALSE FALSE FALSE
2671 FALSE   TRUE FALSE FALSE FALSE
2672 FALSE  FALSE FALSE FALSE FALSE
2673 FALSE   TRUE FALSE FALSE FALSE
2674 FALSE  FALSE FALSE FALSE FALSE
2675 FALSE   TRUE FALSE FALSE FALSE
2676 FALSE  FALSE FALSE FALSE FALSE
2677 FALSE   TRUE FALSE FALSE FALSE
2678 FALSE  FALSE FALSE FALSE FALSE
2679 FALSE  FALSE FALSE FALSE FALSE
2680 FALSE   TRUE FALSE FALSE FALSE
2681 FALSE  FALSE FALSE FALSE FALSE
2682 FALSE  FALSE FALSE FALSE FALSE
2683 FALSE   TRUE FALSE FALSE FALSE
2684 FALSE  FALSE FALSE FALSE FALSE
2685 FALSE   TRUE FALSE FALSE FALSE
2686 FALSE  FALSE FALSE FALSE FALSE
2687 FALSE   TRUE FALSE FALSE FALSE
2688 FALSE  FALSE FALSE FALSE FALSE
2689 FALSE   TRUE FALSE FALSE FALSE
2690 FALSE  FALSE FALSE FALSE FALSE
2691 FALSE  FALSE FALSE FALSE FALSE
2692 FALSE   TRUE FALSE FALSE FALSE
2693 FALSE  FALSE FALSE FALSE FALSE
2694 FALSE  FALSE FALSE FALSE FALSE
2695 FALSE   TRUE FALSE FALSE FALSE
2696 FALSE   TRUE FALSE FALSE FALSE
2697 FALSE  FALSE FALSE FALSE FALSE
2698 FALSE  FALSE FALSE FALSE FALSE
2699 FALSE   TRUE FALSE FALSE FALSE
2700 FALSE  FALSE FALSE FALSE FALSE
2701 FALSE   TRUE FALSE FALSE FALSE
2702 FALSE  FALSE FALSE FALSE FALSE
2703 FALSE   TRUE FALSE FALSE FALSE
2704 FALSE  FALSE FALSE FALSE FALSE
2705 FALSE  FALSE FALSE FALSE FALSE
2706 FALSE  FALSE FALSE FALSE FALSE
2707 FALSE   TRUE FALSE FALSE FALSE
2708 FALSE  FALSE FALSE FALSE FALSE
2709 FALSE   TRUE FALSE FALSE FALSE
2710 FALSE  FALSE FALSE FALSE FALSE
2711 FALSE  FALSE FALSE FALSE FALSE
2712 FALSE  FALSE FALSE FALSE FALSE
2713 FALSE   TRUE FALSE FALSE FALSE
2714 FALSE  FALSE FALSE FALSE FALSE
2715 FALSE   TRUE FALSE FALSE FALSE
2716 FALSE  FALSE FALSE FALSE FALSE
2717 FALSE  FALSE FALSE FALSE FALSE
2718 FALSE  FALSE FALSE FALSE FALSE
2719 FALSE   TRUE FALSE FALSE FALSE
2720 FALSE  FALSE FALSE FALSE FALSE
2721 FALSE   TRUE FALSE FALSE FALSE
2722 FALSE  FALSE FALSE FALSE FALSE
2723 FALSE   TRUE FALSE FALSE FALSE
2724 FALSE  FALSE FALSE FALSE FALSE
2725 FALSE  FALSE FALSE FALSE FALSE
2726 FALSE  FALSE FALSE FALSE FALSE
2727 FALSE  FALSE FALSE FALSE FALSE
2728 FALSE   TRUE FALSE FALSE FALSE
2729 FALSE  FALSE FALSE FALSE FALSE
2730 FALSE   TRUE FALSE FALSE FALSE
2731 FALSE  FALSE FALSE FALSE FALSE
2732 FALSE   TRUE FALSE FALSE FALSE
2733 FALSE  FALSE FALSE FALSE FALSE
2734 FALSE   TRUE FALSE FALSE FALSE
2735 FALSE  FALSE FALSE FALSE FALSE
2736 FALSE  FALSE FALSE FALSE FALSE
2737 FALSE   TRUE FALSE FALSE FALSE
2738 FALSE  FALSE FALSE FALSE FALSE
2739 FALSE  FALSE FALSE FALSE FALSE
2740 FALSE   TRUE FALSE FALSE FALSE
2741 FALSE  FALSE FALSE FALSE FALSE
2742 FALSE   TRUE FALSE FALSE FALSE
2743 FALSE  FALSE FALSE FALSE FALSE
2744 FALSE   TRUE FALSE FALSE FALSE
2745 FALSE  FALSE FALSE FALSE FALSE
2746 FALSE   TRUE FALSE FALSE FALSE
2747 FALSE  FALSE FALSE FALSE FALSE
2748 FALSE  FALSE FALSE FALSE FALSE
2749 FALSE   TRUE FALSE FALSE FALSE
2750 FALSE  FALSE FALSE FALSE FALSE
2751 FALSE  FALSE FALSE FALSE FALSE
2752 FALSE   TRUE FALSE FALSE FALSE
2753 FALSE   TRUE FALSE FALSE FALSE
2754 FALSE  FALSE FALSE FALSE FALSE
2755 FALSE  FALSE FALSE FALSE FALSE
2756 FALSE   TRUE FALSE FALSE FALSE
2757 FALSE  FALSE FALSE FALSE FALSE
2758 FALSE   TRUE FALSE FALSE FALSE
2759 FALSE  FALSE FALSE FALSE FALSE
2760 FALSE   TRUE FALSE FALSE FALSE
2761 FALSE  FALSE FALSE FALSE FALSE
2762 FALSE  FALSE FALSE FALSE FALSE
2763 FALSE  FALSE FALSE FALSE FALSE
2764 FALSE   TRUE FALSE FALSE FALSE
2765 FALSE  FALSE FALSE FALSE FALSE
2766 FALSE   TRUE FALSE FALSE FALSE
2767 FALSE  FALSE FALSE FALSE FALSE
2768 FALSE  FALSE FALSE FALSE FALSE
2769 FALSE  FALSE FALSE FALSE FALSE
2770 FALSE   TRUE FALSE FALSE FALSE
2771 FALSE  FALSE FALSE FALSE FALSE
2772 FALSE   TRUE FALSE FALSE FALSE
2773 FALSE  FALSE FALSE FALSE FALSE
2774 FALSE  FALSE FALSE FALSE FALSE
2775 FALSE  FALSE FALSE FALSE FALSE
2776 FALSE   TRUE FALSE FALSE FALSE
2777 FALSE  FALSE FALSE FALSE FALSE
2778 FALSE   TRUE FALSE FALSE FALSE
2779 FALSE  FALSE FALSE FALSE FALSE
2780 FALSE   TRUE FALSE FALSE FALSE
2781 FALSE  FALSE FALSE FALSE FALSE
2782 FALSE  FALSE FALSE FALSE FALSE
2783 FALSE  FALSE FALSE FALSE FALSE
2784 FALSE  FALSE FALSE FALSE FALSE
2785 FALSE   TRUE FALSE FALSE FALSE
2786 FALSE  FALSE FALSE FALSE FALSE
2787 FALSE   TRUE FALSE FALSE FALSE
2788 FALSE  FALSE FALSE FALSE FALSE
2789 FALSE   TRUE FALSE FALSE FALSE
2790 FALSE  FALSE FALSE FALSE FALSE
2791 FALSE   TRUE FALSE FALSE FALSE
2792 FALSE  FALSE FALSE FALSE FALSE
2793 FALSE  FALSE FALSE FALSE FALSE
2794 FALSE   TRUE FALSE FALSE FALSE
2795 FALSE  FALSE FALSE FALSE FALSE
2796 FALSE  FALSE FALSE FALSE FALSE
2797 FALSE   TRUE FALSE FALSE FALSE
2798 FALSE  FALSE FALSE FALSE FALSE
2799 FALSE   TRUE FALSE FALSE FALSE
2800 FALSE  FALSE FALSE FALSE FALSE
2801 FALSE   TRUE FALSE FALSE FALSE
2802 FALSE  FALSE FALSE FALSE FALSE
2803 FALSE   TRUE FALSE FALSE FALSE
2804 FALSE  FALSE FALSE FALSE FALSE
2805 FALSE  FALSE FALSE FALSE FALSE
2806 FALSE   TRUE FALSE FALSE FALSE
2807 FALSE  FALSE FALSE FALSE FALSE
2808 FALSE  FALSE FALSE FALSE FALSE
2809 FALSE   TRUE FALSE FALSE FALSE
2810 FALSE   TRUE FALSE FALSE FALSE
2811 FALSE  FALSE FALSE FALSE FALSE
2812 FALSE  FALSE FALSE FALSE FALSE
2813 FALSE   TRUE FALSE FALSE FALSE
2814 FALSE  FALSE FALSE FALSE FALSE
2815 FALSE   TRUE FALSE FALSE FALSE
2816 FALSE  FALSE FALSE FALSE FALSE
2817 FALSE   TRUE FALSE FALSE FALSE
2818 FALSE  FALSE FALSE FALSE FALSE
2819 FALSE  FALSE FALSE FALSE FALSE
2820 FALSE  FALSE FALSE FALSE FALSE
2821 FALSE   TRUE FALSE FALSE FALSE
2822 FALSE  FALSE FALSE FALSE FALSE
2823 FALSE   TRUE FALSE FALSE FALSE
2824 FALSE  FALSE FALSE FALSE FALSE
2825 FALSE  FALSE FALSE FALSE FALSE
2826 FALSE  FALSE FALSE FALSE FALSE
2827 FALSE   TRUE FALSE FALSE FALSE
2828 FALSE  FALSE FALSE FALSE FALSE
2829 FALSE   TRUE FALSE FALSE FALSE
2830 FALSE  FALSE FALSE FALSE FALSE
2831 FALSE  FALSE FALSE FALSE FALSE
2832 FALSE  FALSE FALSE FALSE FALSE
2833 FALSE   TRUE FALSE FALSE FALSE
2834 FALSE  FALSE FALSE FALSE FALSE
2835 FALSE   TRUE FALSE FALSE FALSE
2836 FALSE  FALSE FALSE FALSE FALSE
2837 FALSE   TRUE FALSE FALSE FALSE
2838 FALSE  FALSE FALSE FALSE FALSE
2839 FALSE  FALSE FALSE FALSE FALSE
2840 FALSE  FALSE FALSE FALSE FALSE
2841 FALSE  FALSE FALSE FALSE FALSE
2842 FALSE   TRUE FALSE FALSE FALSE
2843 FALSE  FALSE FALSE FALSE FALSE
2844 FALSE   TRUE FALSE FALSE FALSE
2845 FALSE  FALSE FALSE FALSE FALSE
2846 FALSE   TRUE FALSE FALSE FALSE
2847 FALSE  FALSE FALSE FALSE FALSE
2848 FALSE   TRUE FALSE FALSE FALSE
2849 FALSE  FALSE FALSE FALSE FALSE
2850 FALSE  FALSE FALSE FALSE FALSE
2851 FALSE   TRUE FALSE FALSE FALSE
2852 FALSE  FALSE FALSE FALSE FALSE
2853 FALSE  FALSE FALSE FALSE FALSE
2854 FALSE   TRUE FALSE FALSE FALSE
2855 FALSE  FALSE FALSE FALSE FALSE
2856 FALSE   TRUE FALSE FALSE FALSE
2857 FALSE  FALSE FALSE FALSE FALSE
2858 FALSE   TRUE FALSE FALSE FALSE
2859 FALSE  FALSE FALSE FALSE FALSE
2860 FALSE   TRUE FALSE FALSE FALSE
2861 FALSE  FALSE FALSE FALSE FALSE
2862 FALSE  FALSE FALSE FALSE FALSE
2863 FALSE   TRUE FALSE FALSE FALSE
2864 FALSE  FALSE FALSE FALSE FALSE
2865 FALSE  FALSE FALSE FALSE FALSE
2866 FALSE   TRUE FALSE FALSE FALSE
2867 FALSE   TRUE FALSE FALSE FALSE
2868 FALSE  FALSE FALSE FALSE FALSE
2869 FALSE  FALSE FALSE FALSE FALSE
2870 FALSE   TRUE FALSE FALSE FALSE
2871 FALSE  FALSE FALSE FALSE FALSE
2872 FALSE   TRUE FALSE FALSE FALSE
2873 FALSE  FALSE FALSE FALSE FALSE
2874 FALSE   TRUE FALSE FALSE FALSE
2875 FALSE  FALSE FALSE FALSE FALSE
2876 FALSE  FALSE FALSE FALSE FALSE
2877 FALSE  FALSE FALSE FALSE FALSE
2878 FALSE   TRUE FALSE FALSE FALSE
2879 FALSE  FALSE FALSE FALSE FALSE
2880 FALSE   TRUE FALSE FALSE FALSE
2881 FALSE  FALSE FALSE FALSE FALSE
2882 FALSE  FALSE FALSE FALSE FALSE
2883 FALSE  FALSE FALSE FALSE FALSE
2884 FALSE   TRUE FALSE FALSE FALSE
2885 FALSE  FALSE FALSE FALSE FALSE
2886 FALSE   TRUE FALSE FALSE FALSE
2887 FALSE  FALSE FALSE FALSE FALSE
2888 FALSE  FALSE FALSE FALSE FALSE
2889 FALSE  FALSE FALSE FALSE FALSE
2890 FALSE   TRUE FALSE FALSE FALSE
2891 FALSE  FALSE FALSE FALSE FALSE
2892 FALSE   TRUE FALSE FALSE FALSE
2893 FALSE  FALSE FALSE FALSE FALSE
2894 FALSE   TRUE FALSE FALSE FALSE
2895 FALSE  FALSE FALSE FALSE FALSE
2896 FALSE  FALSE FALSE FALSE FALSE
2897 FALSE  FALSE FALSE FALSE FALSE
2898 FALSE  FALSE FALSE FALSE FALSE
2899 FALSE   TRUE FALSE FALSE FALSE
2900 FALSE  FALSE FALSE FALSE FALSE
2901 FALSE   TRUE FALSE FALSE FALSE
2902 FALSE  FALSE FALSE FALSE FALSE
2903 FALSE   TRUE FALSE FALSE FALSE
2904 FALSE  FALSE FALSE FALSE FALSE
2905 FALSE   TRUE FALSE FALSE FALSE
2906 FALSE  FALSE FALSE FALSE FALSE
2907 FALSE  FALSE FALSE FALSE FALSE
2908 FALSE   TRUE FALSE FALSE FALSE
2909 FALSE  FALSE FALSE FALSE FALSE
2910 FALSE  FALSE FALSE FALSE FALSE
2911 FALSE   TRUE FALSE FALSE FALSE
2912 FALSE  FALSE FALSE FALSE FALSE
2913 FALSE   TRUE FALSE FALSE FALSE
2914 FALSE  FALSE FALSE FALSE FALSE
2915 FALSE   TRUE FALSE FALSE FALSE
2916 FALSE  FALSE FALSE FALSE FALSE
2917 FALSE   TRUE FALSE FALSE FALSE
2918 FALSE  FALSE FALSE FALSE FALSE
2919 FALSE  FALSE FALSE FALSE FALSE
2920 FALSE   TRUE FALSE FALSE FALSE
2921 FALSE  FALSE FALSE FALSE FALSE
2922 FALSE  FALSE FALSE FALSE FALSE
2923 FALSE   TRUE FALSE FALSE FALSE
2924 FALSE   TRUE FALSE FALSE FALSE
2925 FALSE  FALSE FALSE FALSE FALSE
2926 FALSE  FALSE FALSE FALSE FALSE
2927 FALSE   TRUE FALSE FALSE FALSE
2928 FALSE  FALSE FALSE FALSE FALSE
2929 FALSE   TRUE FALSE FALSE FALSE
2930 FALSE  FALSE FALSE FALSE FALSE
2931 FALSE   TRUE FALSE FALSE FALSE
2932 FALSE  FALSE FALSE FALSE FALSE
2933 FALSE  FALSE FALSE FALSE FALSE
2934 FALSE  FALSE FALSE FALSE FALSE
2935 FALSE   TRUE FALSE FALSE FALSE
2936 FALSE  FALSE FALSE FALSE FALSE
2937 FALSE   TRUE FALSE FALSE FALSE
2938 FALSE  FALSE FALSE FALSE FALSE
2939 FALSE  FALSE FALSE FALSE FALSE
2940 FALSE  FALSE FALSE FALSE FALSE
2941 FALSE   TRUE FALSE FALSE FALSE
2942 FALSE  FALSE FALSE FALSE FALSE
2943 FALSE   TRUE FALSE FALSE FALSE
2944 FALSE  FALSE FALSE FALSE FALSE
2945 FALSE  FALSE FALSE FALSE FALSE
2946 FALSE  FALSE FALSE FALSE FALSE
2947 FALSE   TRUE FALSE FALSE FALSE
2948 FALSE  FALSE FALSE FALSE FALSE
2949 FALSE   TRUE FALSE FALSE FALSE
2950 FALSE  FALSE FALSE FALSE FALSE
2951 FALSE   TRUE FALSE FALSE FALSE
2952 FALSE  FALSE FALSE FALSE FALSE
2953 FALSE  FALSE FALSE FALSE FALSE
2954 FALSE  FALSE FALSE FALSE FALSE
2955 FALSE  FALSE FALSE FALSE FALSE
2956 FALSE   TRUE FALSE FALSE FALSE
2957 FALSE  FALSE FALSE FALSE FALSE
2958 FALSE   TRUE FALSE FALSE FALSE
2959 FALSE  FALSE FALSE FALSE FALSE
2960 FALSE   TRUE FALSE FALSE FALSE
2961 FALSE  FALSE FALSE FALSE FALSE
2962 FALSE   TRUE FALSE FALSE FALSE
2963 FALSE  FALSE FALSE FALSE FALSE
2964 FALSE  FALSE FALSE FALSE FALSE
2965 FALSE   TRUE FALSE FALSE FALSE
2966 FALSE  FALSE FALSE FALSE FALSE
2967 FALSE  FALSE FALSE FALSE FALSE
2968 FALSE   TRUE FALSE FALSE FALSE
2969 FALSE  FALSE FALSE FALSE FALSE
2970 FALSE   TRUE FALSE FALSE FALSE
2971 FALSE  FALSE FALSE FALSE FALSE
2972 FALSE   TRUE FALSE FALSE FALSE
2973 FALSE  FALSE FALSE FALSE FALSE
2974 FALSE   TRUE FALSE FALSE FALSE
2975 FALSE  FALSE FALSE FALSE FALSE
2976 FALSE  FALSE FALSE FALSE FALSE
2977 FALSE   TRUE FALSE FALSE FALSE
2978 FALSE  FALSE FALSE FALSE FALSE
2979 FALSE  FALSE FALSE FALSE FALSE
2980 FALSE   TRUE FALSE FALSE FALSE
2981 FALSE   TRUE FALSE FALSE FALSE
2982 FALSE  FALSE FALSE FALSE FALSE
2983 FALSE  FALSE FALSE FALSE FALSE
2984 FALSE   TRUE FALSE FALSE FALSE
2985 FALSE  FALSE FALSE FALSE FALSE
2986 FALSE   TRUE FALSE FALSE FALSE
2987 FALSE  FALSE FALSE FALSE FALSE
2988 FALSE   TRUE FALSE FALSE FALSE
2989 FALSE  FALSE FALSE FALSE FALSE
2990 FALSE  FALSE FALSE FALSE FALSE
2991 FALSE  FALSE FALSE FALSE FALSE
2992 FALSE   TRUE FALSE FALSE FALSE
2993 FALSE  FALSE FALSE FALSE FALSE
2994 FALSE   TRUE FALSE FALSE FALSE
2995 FALSE  FALSE FALSE FALSE FALSE
2996 FALSE  FALSE FALSE FALSE FALSE
2997 FALSE  FALSE FALSE FALSE FALSE
2998 FALSE   TRUE FALSE FALSE FALSE
2999 FALSE  FALSE FALSE FALSE FALSE
3000 FALSE   TRUE FALSE FALSE FALSE
3001 FALSE  FALSE FALSE FALSE FALSE
3002 FALSE  FALSE FALSE FALSE FALSE
3003 FALSE  FALSE FALSE FALSE FALSE
3004 FALSE   TRUE FALSE FALSE FALSE
3005 FALSE  FALSE FALSE FALSE FALSE
3006 FALSE   TRUE FALSE FALSE FALSE
3007 FALSE  FALSE FALSE FALSE FALSE
3008 FALSE   TRUE FALSE FALSE FALSE
3009 FALSE  FALSE FALSE FALSE FALSE
3010 FALSE  FALSE FALSE FALSE FALSE
3011 FALSE  FALSE FALSE FALSE FALSE
3012 FALSE  FALSE FALSE FALSE FALSE
3013 FALSE   TRUE FALSE FALSE FALSE
3014 FALSE  FALSE FALSE FALSE FALSE
3015 FALSE   TRUE FALSE FALSE FALSE
3016 FALSE  FALSE FALSE FALSE FALSE
3017 FALSE   TRUE FALSE FALSE FALSE
3018 FALSE  FALSE FALSE FALSE FALSE
3019 FALSE   TRUE FALSE FALSE FALSE
3020 FALSE  FALSE FALSE FALSE FALSE
3021 FALSE  FALSE FALSE FALSE FALSE
3022 FALSE   TRUE FALSE FALSE FALSE
3023 FALSE  FALSE FALSE FALSE FALSE
3024 FALSE  FALSE FALSE FALSE FALSE
3025 FALSE   TRUE FALSE FALSE FALSE
3026 FALSE  FALSE FALSE FALSE FALSE
3027 FALSE   TRUE FALSE FALSE FALSE
3028 FALSE  FALSE FALSE FALSE FALSE
3029 FALSE   TRUE FALSE FALSE FALSE
3030 FALSE  FALSE FALSE FALSE FALSE
3031 FALSE   TRUE FALSE FALSE FALSE
3032 FALSE  FALSE FALSE FALSE FALSE
3033 FALSE  FALSE FALSE FALSE FALSE
3034 FALSE   TRUE FALSE FALSE FALSE
3035 FALSE  FALSE FALSE FALSE FALSE
3036 FALSE  FALSE FALSE FALSE FALSE
3037 FALSE   TRUE FALSE FALSE FALSE
3038 FALSE   TRUE FALSE FALSE FALSE
3039 FALSE  FALSE FALSE FALSE FALSE
3040 FALSE  FALSE FALSE FALSE FALSE
3041 FALSE   TRUE FALSE FALSE FALSE
3042 FALSE  FALSE FALSE FALSE FALSE
3043 FALSE   TRUE FALSE FALSE FALSE
3044 FALSE  FALSE FALSE FALSE FALSE
3045 FALSE   TRUE FALSE FALSE FALSE
3046 FALSE  FALSE FALSE FALSE FALSE
3047 FALSE  FALSE FALSE FALSE FALSE
3048 FALSE  FALSE FALSE FALSE FALSE
3049 FALSE   TRUE FALSE FALSE FALSE
3050 FALSE  FALSE FALSE FALSE FALSE
3051 FALSE   TRUE FALSE FALSE FALSE
3052 FALSE  FALSE FALSE FALSE FALSE
3053 FALSE  FALSE FALSE FALSE FALSE
3054 FALSE  FALSE FALSE FALSE FALSE
3055 FALSE   TRUE FALSE FALSE FALSE
3056 FALSE  FALSE FALSE FALSE FALSE
3057 FALSE   TRUE FALSE FALSE FALSE
3058 FALSE  FALSE FALSE FALSE FALSE
3059 FALSE  FALSE FALSE FALSE FALSE
3060 FALSE  FALSE FALSE FALSE FALSE
3061 FALSE   TRUE FALSE FALSE FALSE
3062 FALSE  FALSE FALSE FALSE FALSE
3063 FALSE   TRUE FALSE FALSE FALSE
3064 FALSE  FALSE FALSE FALSE FALSE
3065 FALSE   TRUE FALSE FALSE FALSE
3066 FALSE  FALSE FALSE FALSE FALSE
3067 FALSE  FALSE FALSE FALSE FALSE
3068 FALSE  FALSE FALSE FALSE FALSE
3069 FALSE  FALSE FALSE FALSE FALSE
3070 FALSE   TRUE FALSE FALSE FALSE
3071 FALSE  FALSE FALSE FALSE FALSE
3072 FALSE   TRUE FALSE FALSE FALSE
3073 FALSE  FALSE FALSE FALSE FALSE
3074 FALSE   TRUE FALSE FALSE FALSE
3075 FALSE  FALSE FALSE FALSE FALSE
3076 FALSE   TRUE FALSE FALSE FALSE
3077 FALSE  FALSE FALSE FALSE FALSE
3078 FALSE  FALSE FALSE FALSE FALSE
3079 FALSE   TRUE FALSE FALSE FALSE
3080 FALSE  FALSE FALSE FALSE FALSE
3081 FALSE  FALSE FALSE FALSE FALSE
3082 FALSE   TRUE FALSE FALSE FALSE
3083 FALSE  FALSE FALSE FALSE FALSE
3084 FALSE   TRUE FALSE FALSE FALSE
3085 FALSE  FALSE FALSE FALSE FALSE
3086 FALSE   TRUE FALSE FALSE FALSE
3087 FALSE  FALSE FALSE FALSE FALSE
3088 FALSE   TRUE FALSE FALSE FALSE
3089 FALSE  FALSE FALSE FALSE FALSE
3090 FALSE  FALSE FALSE FALSE FALSE
3091 FALSE   TRUE FALSE FALSE FALSE
3092 FALSE  FALSE FALSE FALSE FALSE
3093 FALSE  FALSE FALSE FALSE FALSE
3094 FALSE   TRUE FALSE FALSE FALSE
3095 FALSE   TRUE FALSE FALSE FALSE
3096 FALSE  FALSE FALSE FALSE FALSE
3097 FALSE  FALSE FALSE FALSE FALSE
3098 FALSE   TRUE FALSE FALSE FALSE
3099 FALSE  FALSE FALSE FALSE FALSE
3100 FALSE   TRUE FALSE FALSE FALSE
3101 FALSE  FALSE FALSE FALSE FALSE
3102 FALSE   TRUE FALSE FALSE FALSE
3103 FALSE  FALSE FALSE FALSE FALSE
3104 FALSE  FALSE FALSE FALSE FALSE
3105 FALSE  FALSE FALSE FALSE FALSE
3106 FALSE   TRUE FALSE FALSE FALSE
3107 FALSE  FALSE FALSE FALSE FALSE
3108 FALSE   TRUE FALSE FALSE FALSE
3109 FALSE  FALSE FALSE FALSE FALSE
3110 FALSE  FALSE FALSE FALSE FALSE
3111 FALSE  FALSE FALSE FALSE FALSE
3112 FALSE   TRUE FALSE FALSE FALSE
3113 FALSE  FALSE FALSE FALSE FALSE
3114 FALSE   TRUE FALSE FALSE FALSE
3115 FALSE  FALSE FALSE FALSE FALSE
3116 FALSE  FALSE FALSE FALSE FALSE
3117 FALSE  FALSE FALSE FALSE FALSE
3118 FALSE   TRUE FALSE FALSE FALSE
3119 FALSE  FALSE FALSE FALSE FALSE
3120 FALSE   TRUE FALSE FALSE FALSE
3121 FALSE  FALSE FALSE FALSE FALSE
3122 FALSE   TRUE FALSE FALSE FALSE
3123 FALSE  FALSE FALSE FALSE FALSE
3124 FALSE  FALSE FALSE FALSE FALSE
3125 FALSE  FALSE FALSE FALSE FALSE
3126 FALSE  FALSE FALSE FALSE FALSE
3127 FALSE   TRUE FALSE FALSE FALSE
3128 FALSE  FALSE FALSE FALSE FALSE
3129 FALSE   TRUE FALSE FALSE FALSE
3130 FALSE  FALSE FALSE FALSE FALSE
3131 FALSE   TRUE FALSE FALSE FALSE
3132 FALSE  FALSE FALSE FALSE FALSE
3133 FALSE   TRUE FALSE FALSE FALSE
3134 FALSE  FALSE FALSE FALSE FALSE
3135 FALSE  FALSE FALSE FALSE FALSE
3136 FALSE   TRUE FALSE FALSE FALSE
3137 FALSE  FALSE FALSE FALSE FALSE
3138 FALSE  FALSE FALSE FALSE FALSE
3139 FALSE   TRUE FALSE FALSE FALSE
3140 FALSE  FALSE FALSE FALSE FALSE
3141 FALSE   TRUE FALSE FALSE FALSE
3142 FALSE  FALSE FALSE FALSE FALSE
3143 FALSE   TRUE FALSE FALSE FALSE
3144 FALSE  FALSE FALSE FALSE FALSE
3145 FALSE   TRUE FALSE FALSE FALSE
3146 FALSE  FALSE FALSE FALSE FALSE
3147 FALSE  FALSE FALSE FALSE FALSE
3148 FALSE   TRUE FALSE FALSE FALSE
3149 FALSE  FALSE FALSE FALSE FALSE
3150 FALSE  FALSE FALSE FALSE FALSE
3151 FALSE   TRUE FALSE FALSE FALSE
3152 FALSE   TRUE FALSE FALSE FALSE
3153 FALSE  FALSE FALSE FALSE FALSE
3154 FALSE  FALSE FALSE FALSE FALSE
3155 FALSE   TRUE FALSE FALSE FALSE
3156 FALSE  FALSE FALSE FALSE FALSE
3157 FALSE   TRUE FALSE FALSE FALSE
3158 FALSE  FALSE FALSE FALSE FALSE
3159 FALSE   TRUE FALSE FALSE FALSE
3160 FALSE  FALSE FALSE FALSE FALSE
3161 FALSE  FALSE FALSE FALSE FALSE
3162 FALSE  FALSE FALSE FALSE FALSE
3163 FALSE   TRUE FALSE FALSE FALSE
3164 FALSE  FALSE FALSE FALSE FALSE
3165 FALSE   TRUE FALSE FALSE FALSE
3166 FALSE  FALSE FALSE FALSE FALSE
3167 FALSE  FALSE FALSE FALSE FALSE
3168 FALSE  FALSE FALSE FALSE FALSE
3169 FALSE   TRUE FALSE FALSE FALSE
3170 FALSE  FALSE FALSE FALSE FALSE
3171 FALSE   TRUE FALSE FALSE FALSE
3172 FALSE  FALSE FALSE FALSE FALSE
3173 FALSE  FALSE FALSE FALSE FALSE
3174 FALSE  FALSE FALSE FALSE FALSE
3175 FALSE   TRUE FALSE FALSE FALSE
3176 FALSE  FALSE FALSE FALSE FALSE
3177 FALSE   TRUE FALSE FALSE FALSE
3178 FALSE  FALSE FALSE FALSE FALSE
3179 FALSE   TRUE FALSE FALSE FALSE
3180 FALSE  FALSE FALSE FALSE FALSE
3181 FALSE  FALSE FALSE FALSE FALSE
3182 FALSE  FALSE FALSE FALSE FALSE
3183 FALSE  FALSE FALSE FALSE FALSE
3184 FALSE   TRUE FALSE FALSE FALSE
3185 FALSE  FALSE FALSE FALSE FALSE
3186 FALSE   TRUE FALSE FALSE FALSE
3187 FALSE  FALSE FALSE FALSE FALSE
3188 FALSE   TRUE FALSE FALSE FALSE
3189 FALSE  FALSE FALSE FALSE FALSE
3190 FALSE   TRUE FALSE FALSE FALSE
3191 FALSE  FALSE FALSE FALSE FALSE
3192 FALSE  FALSE FALSE FALSE FALSE
3193 FALSE   TRUE FALSE FALSE FALSE
3194 FALSE  FALSE FALSE FALSE FALSE
3195 FALSE  FALSE FALSE FALSE FALSE
3196 FALSE   TRUE FALSE FALSE FALSE
3197 FALSE  FALSE FALSE FALSE FALSE
3198 FALSE   TRUE FALSE FALSE FALSE
3199 FALSE  FALSE FALSE FALSE FALSE
3200 FALSE   TRUE FALSE FALSE FALSE
3201 FALSE  FALSE FALSE FALSE FALSE
3202 FALSE   TRUE FALSE FALSE FALSE
3203 FALSE  FALSE FALSE FALSE FALSE
3204 FALSE  FALSE FALSE FALSE FALSE
3205 FALSE   TRUE FALSE FALSE FALSE
3206 FALSE  FALSE FALSE FALSE FALSE
3207 FALSE  FALSE FALSE FALSE FALSE
3208 FALSE   TRUE FALSE FALSE FALSE
3209 FALSE   TRUE FALSE FALSE FALSE
3210 FALSE  FALSE FALSE FALSE FALSE
3211 FALSE  FALSE FALSE FALSE FALSE
3212 FALSE   TRUE FALSE FALSE FALSE
3213 FALSE  FALSE FALSE FALSE FALSE
3214 FALSE   TRUE FALSE FALSE FALSE
3215 FALSE  FALSE FALSE FALSE FALSE
3216 FALSE   TRUE FALSE FALSE FALSE
3217 FALSE  FALSE FALSE FALSE FALSE
3218 FALSE  FALSE FALSE FALSE FALSE
3219 FALSE  FALSE FALSE FALSE FALSE
3220 FALSE   TRUE FALSE FALSE FALSE
3221 FALSE  FALSE FALSE FALSE FALSE
3222 FALSE   TRUE FALSE FALSE FALSE
3223 FALSE  FALSE FALSE FALSE FALSE
3224 FALSE  FALSE FALSE FALSE FALSE
3225 FALSE  FALSE FALSE FALSE FALSE
3226 FALSE   TRUE FALSE FALSE FALSE
3227 FALSE  FALSE FALSE FALSE FALSE
3228 FALSE   TRUE FALSE FALSE FALSE
3229 FALSE  FALSE FALSE FALSE FALSE
3230 FALSE  FALSE FALSE FALSE FALSE
3231 FALSE  FALSE FALSE FALSE FALSE
3232 FALSE   TRUE FALSE FALSE FALSE
3233 FALSE  FALSE FALSE FALSE FALSE
3234 FALSE   TRUE FALSE FALSE FALSE
3235 FALSE  FALSE FALSE FALSE FALSE
3236 FALSE   TRUE FALSE FALSE FALSE
3237 FALSE  FALSE FALSE FALSE FALSE
3238 FALSE  FALSE FALSE FALSE FALSE
3239 FALSE  FALSE FALSE FALSE FALSE
3240 FALSE  FALSE FALSE FALSE FALSE
3241 FALSE   TRUE FALSE FALSE FALSE
3242 FALSE  FALSE FALSE FALSE FALSE
3243 FALSE   TRUE FALSE FALSE FALSE
3244 FALSE  FALSE FALSE FALSE FALSE
3245 FALSE   TRUE FALSE FALSE FALSE
3246 FALSE  FALSE FALSE FALSE FALSE
3247 FALSE   TRUE FALSE FALSE FALSE
3248 FALSE  FALSE FALSE FALSE FALSE
3249 FALSE  FALSE FALSE FALSE FALSE
3250 FALSE   TRUE FALSE FALSE FALSE
3251 FALSE  FALSE FALSE FALSE FALSE
3252 FALSE  FALSE FALSE FALSE FALSE
3253 FALSE   TRUE FALSE FALSE FALSE
3254 FALSE  FALSE FALSE FALSE FALSE
3255 FALSE   TRUE FALSE FALSE FALSE
3256 FALSE  FALSE FALSE FALSE FALSE
3257 FALSE   TRUE FALSE FALSE FALSE
3258 FALSE  FALSE FALSE FALSE FALSE
3259 FALSE   TRUE FALSE FALSE FALSE
3260 FALSE  FALSE FALSE FALSE FALSE
3261 FALSE  FALSE FALSE FALSE FALSE
3262 FALSE   TRUE FALSE FALSE FALSE
3263 FALSE  FALSE FALSE FALSE FALSE
3264 FALSE  FALSE FALSE FALSE FALSE
3265 FALSE   TRUE FALSE FALSE FALSE
3266 FALSE   TRUE FALSE FALSE FALSE
3267 FALSE  FALSE FALSE FALSE FALSE
3268 FALSE  FALSE FALSE FALSE FALSE
3269 FALSE   TRUE FALSE FALSE FALSE
3270 FALSE  FALSE FALSE FALSE FALSE
3271 FALSE   TRUE FALSE FALSE FALSE
3272 FALSE  FALSE FALSE FALSE FALSE
3273 FALSE   TRUE FALSE FALSE FALSE
3274 FALSE  FALSE FALSE FALSE FALSE
3275 FALSE  FALSE FALSE FALSE FALSE
3276 FALSE  FALSE FALSE FALSE FALSE
3277 FALSE   TRUE FALSE FALSE FALSE
3278 FALSE  FALSE FALSE FALSE FALSE
3279 FALSE   TRUE FALSE FALSE FALSE
3280 FALSE  FALSE FALSE FALSE FALSE
3281 FALSE  FALSE FALSE FALSE FALSE
3282 FALSE  FALSE FALSE FALSE FALSE
3283 FALSE   TRUE FALSE FALSE FALSE
3284 FALSE  FALSE FALSE FALSE FALSE
3285 FALSE   TRUE FALSE FALSE FALSE
3286 FALSE  FALSE FALSE FALSE FALSE
3287 FALSE  FALSE FALSE FALSE FALSE
3288 FALSE  FALSE FALSE FALSE FALSE
3289 FALSE   TRUE FALSE FALSE FALSE
3290 FALSE  FALSE FALSE FALSE FALSE
3291 FALSE   TRUE FALSE FALSE FALSE
3292 FALSE  FALSE FALSE FALSE FALSE
3293 FALSE   TRUE FALSE FALSE FALSE
3294 FALSE  FALSE FALSE FALSE FALSE
3295 FALSE  FALSE FALSE FALSE FALSE
3296 FALSE  FALSE FALSE FALSE FALSE
3297 FALSE  FALSE FALSE FALSE FALSE
3298 FALSE   TRUE FALSE FALSE FALSE
3299 FALSE  FALSE FALSE FALSE FALSE
3300 FALSE   TRUE FALSE FALSE FALSE
3301 FALSE  FALSE FALSE FALSE FALSE
3302 FALSE   TRUE FALSE FALSE FALSE
3303 FALSE  FALSE FALSE FALSE FALSE
3304 FALSE   TRUE FALSE FALSE FALSE
3305 FALSE  FALSE FALSE FALSE FALSE
3306 FALSE  FALSE FALSE FALSE FALSE
3307 FALSE   TRUE FALSE FALSE FALSE
3308 FALSE  FALSE FALSE FALSE FALSE
3309 FALSE  FALSE FALSE FALSE FALSE
3310 FALSE   TRUE FALSE FALSE FALSE
3311 FALSE  FALSE FALSE FALSE FALSE
3312 FALSE   TRUE FALSE FALSE FALSE
3313 FALSE  FALSE FALSE FALSE FALSE
3314 FALSE   TRUE FALSE FALSE FALSE
3315 FALSE  FALSE FALSE FALSE FALSE
3316 FALSE   TRUE FALSE FALSE FALSE
3317 FALSE  FALSE FALSE FALSE FALSE
3318 FALSE  FALSE FALSE FALSE FALSE
3319 FALSE   TRUE FALSE FALSE FALSE
3320 FALSE  FALSE FALSE FALSE FALSE
3321 FALSE  FALSE FALSE FALSE FALSE
3322 FALSE   TRUE FALSE FALSE FALSE
3323 FALSE   TRUE FALSE FALSE FALSE
3324 FALSE  FALSE FALSE FALSE FALSE
3325 FALSE  FALSE FALSE FALSE FALSE
3326 FALSE   TRUE FALSE FALSE FALSE
3327 FALSE  FALSE FALSE FALSE FALSE
3328 FALSE   TRUE FALSE FALSE FALSE
3329 FALSE  FALSE FALSE FALSE FALSE
3330 FALSE   TRUE FALSE FALSE FALSE
3331 FALSE  FALSE FALSE FALSE FALSE
3332 FALSE  FALSE FALSE FALSE FALSE
3333 FALSE  FALSE FALSE FALSE FALSE
3334 FALSE   TRUE FALSE FALSE FALSE
3335 FALSE  FALSE FALSE FALSE FALSE
3336 FALSE   TRUE FALSE FALSE FALSE
3337 FALSE  FALSE FALSE FALSE FALSE
3338 FALSE  FALSE FALSE FALSE FALSE
3339 FALSE  FALSE FALSE FALSE FALSE
3340 FALSE   TRUE FALSE FALSE FALSE
3341 FALSE  FALSE FALSE FALSE FALSE
3342 FALSE   TRUE FALSE FALSE FALSE
3343 FALSE  FALSE FALSE FALSE FALSE
3344 FALSE  FALSE FALSE FALSE FALSE
3345 FALSE  FALSE FALSE FALSE FALSE
3346 FALSE   TRUE FALSE FALSE FALSE
3347 FALSE  FALSE FALSE FALSE FALSE
3348 FALSE   TRUE FALSE FALSE FALSE
3349 FALSE  FALSE FALSE FALSE FALSE
3350 FALSE   TRUE FALSE FALSE FALSE
3351 FALSE  FALSE FALSE FALSE FALSE
3352 FALSE  FALSE FALSE FALSE FALSE
3353 FALSE  FALSE FALSE FALSE FALSE
3354 FALSE  FALSE FALSE FALSE FALSE
3355 FALSE   TRUE FALSE FALSE FALSE
3356 FALSE  FALSE FALSE FALSE FALSE
3357 FALSE   TRUE FALSE FALSE FALSE
3358 FALSE  FALSE FALSE FALSE FALSE
3359 FALSE   TRUE FALSE FALSE FALSE
3360 FALSE  FALSE FALSE FALSE FALSE
3361 FALSE   TRUE FALSE FALSE FALSE
3362 FALSE  FALSE FALSE FALSE FALSE
3363 FALSE  FALSE FALSE FALSE FALSE
3364 FALSE   TRUE FALSE FALSE FALSE
3365 FALSE  FALSE FALSE FALSE FALSE
3366 FALSE  FALSE FALSE FALSE FALSE
3367 FALSE   TRUE FALSE FALSE FALSE
3368 FALSE  FALSE FALSE FALSE FALSE
3369 FALSE   TRUE FALSE FALSE FALSE
3370 FALSE  FALSE FALSE FALSE FALSE
3371 FALSE   TRUE FALSE FALSE FALSE
3372 FALSE  FALSE FALSE FALSE FALSE
3373 FALSE   TRUE FALSE FALSE FALSE
3374 FALSE  FALSE FALSE FALSE FALSE
3375 FALSE  FALSE FALSE FALSE FALSE
3376 FALSE   TRUE FALSE FALSE FALSE
3377 FALSE  FALSE FALSE FALSE FALSE
3378 FALSE  FALSE FALSE FALSE FALSE
3379 FALSE   TRUE FALSE FALSE FALSE
3380 FALSE   TRUE FALSE FALSE FALSE
3381 FALSE  FALSE FALSE FALSE FALSE
3382 FALSE  FALSE FALSE FALSE FALSE
3383 FALSE   TRUE FALSE FALSE FALSE
3384 FALSE  FALSE FALSE FALSE FALSE
3385 FALSE   TRUE FALSE FALSE FALSE
3386 FALSE  FALSE FALSE FALSE FALSE
3387 FALSE   TRUE FALSE FALSE FALSE
3388 FALSE  FALSE FALSE FALSE FALSE
3389 FALSE  FALSE FALSE FALSE FALSE
3390 FALSE  FALSE FALSE FALSE FALSE
3391 FALSE   TRUE FALSE FALSE FALSE
3392 FALSE  FALSE FALSE FALSE FALSE
3393 FALSE   TRUE FALSE FALSE FALSE
3394 FALSE  FALSE FALSE FALSE FALSE
3395 FALSE  FALSE FALSE FALSE FALSE
3396 FALSE  FALSE FALSE FALSE FALSE
3397 FALSE   TRUE FALSE FALSE FALSE
3398 FALSE  FALSE FALSE FALSE FALSE
3399 FALSE   TRUE FALSE FALSE FALSE
3400 FALSE  FALSE FALSE FALSE FALSE
3401 FALSE  FALSE FALSE FALSE FALSE
3402 FALSE  FALSE FALSE FALSE FALSE
3403 FALSE   TRUE FALSE FALSE FALSE
3404 FALSE  FALSE FALSE FALSE FALSE
3405 FALSE   TRUE FALSE FALSE FALSE
3406 FALSE  FALSE FALSE FALSE FALSE
3407 FALSE   TRUE FALSE FALSE FALSE
3408 FALSE  FALSE FALSE FALSE FALSE
3409 FALSE  FALSE FALSE FALSE FALSE
3410 FALSE  FALSE FALSE FALSE FALSE
3411 FALSE  FALSE FALSE FALSE FALSE
3412 FALSE   TRUE FALSE FALSE FALSE
3413 FALSE  FALSE FALSE FALSE FALSE
3414 FALSE   TRUE FALSE FALSE FALSE
3415 FALSE  FALSE FALSE FALSE FALSE
3416 FALSE   TRUE FALSE FALSE FALSE
3417 FALSE  FALSE FALSE FALSE FALSE
3418 FALSE   TRUE FALSE FALSE FALSE
3419 FALSE  FALSE FALSE FALSE FALSE
3420 FALSE  FALSE FALSE FALSE FALSE
3421 FALSE   TRUE FALSE FALSE FALSE
3422 FALSE  FALSE FALSE FALSE FALSE
3423 FALSE  FALSE FALSE FALSE FALSE
3424 FALSE   TRUE FALSE FALSE FALSE
3425 FALSE  FALSE FALSE FALSE FALSE
3426 FALSE   TRUE FALSE FALSE FALSE
3427 FALSE  FALSE FALSE FALSE FALSE
3428 FALSE   TRUE FALSE FALSE FALSE
3429 FALSE  FALSE FALSE FALSE FALSE
3430 FALSE   TRUE FALSE FALSE FALSE
3431 FALSE  FALSE FALSE FALSE FALSE
3432 FALSE  FALSE FALSE FALSE FALSE
3433 FALSE   TRUE FALSE FALSE FALSE
3434 FALSE  FALSE FALSE FALSE FALSE
3435 FALSE  FALSE FALSE FALSE FALSE
3436 FALSE   TRUE FALSE FALSE FALSE
3437 FALSE   TRUE FALSE FALSE FALSE
3438 FALSE  FALSE FALSE FALSE FALSE
3439 FALSE  FALSE FALSE FALSE FALSE
3440 FALSE   TRUE FALSE FALSE FALSE
3441 FALSE  FALSE FALSE FALSE FALSE
3442 FALSE   TRUE FALSE FALSE FALSE
3443 FALSE  FALSE FALSE FALSE FALSE
3444 FALSE   TRUE FALSE FALSE FALSE
3445 FALSE  FALSE FALSE FALSE FALSE
3446 FALSE  FALSE FALSE FALSE FALSE
3447 FALSE  FALSE FALSE FALSE FALSE
3448 FALSE   TRUE FALSE FALSE FALSE
3449 FALSE  FALSE FALSE FALSE FALSE
3450 FALSE   TRUE FALSE FALSE FALSE
3451 FALSE  FALSE FALSE FALSE FALSE
3452 FALSE  FALSE FALSE FALSE FALSE
3453 FALSE  FALSE FALSE FALSE FALSE
3454 FALSE   TRUE FALSE FALSE FALSE
3455 FALSE  FALSE FALSE FALSE FALSE
3456 FALSE   TRUE FALSE FALSE FALSE
3457 FALSE  FALSE FALSE FALSE FALSE
3458 FALSE  FALSE FALSE FALSE FALSE
3459 FALSE  FALSE FALSE FALSE FALSE
3460 FALSE   TRUE FALSE FALSE FALSE
3461 FALSE  FALSE FALSE FALSE FALSE
3462 FALSE   TRUE FALSE FALSE FALSE
3463 FALSE  FALSE FALSE FALSE FALSE
3464 FALSE   TRUE FALSE FALSE FALSE
3465 FALSE  FALSE FALSE FALSE FALSE
3466 FALSE  FALSE FALSE FALSE FALSE
3467 FALSE  FALSE FALSE FALSE FALSE
3468 FALSE  FALSE FALSE FALSE FALSE
3469 FALSE   TRUE FALSE FALSE FALSE
3470 FALSE  FALSE FALSE FALSE FALSE
3471 FALSE   TRUE FALSE FALSE FALSE
3472 FALSE  FALSE FALSE FALSE FALSE
3473 FALSE   TRUE FALSE FALSE FALSE
3474 FALSE  FALSE FALSE FALSE FALSE
3475 FALSE   TRUE FALSE FALSE FALSE
3476 FALSE  FALSE FALSE FALSE FALSE
3477 FALSE  FALSE FALSE FALSE FALSE
3478 FALSE   TRUE FALSE FALSE FALSE
3479 FALSE  FALSE FALSE FALSE FALSE
3480 FALSE  FALSE FALSE FALSE FALSE
3481 FALSE   TRUE FALSE FALSE FALSE
3482 FALSE  FALSE FALSE FALSE FALSE
3483 FALSE   TRUE FALSE FALSE FALSE
3484 FALSE  FALSE FALSE FALSE FALSE
3485 FALSE   TRUE FALSE FALSE FALSE
3486 FALSE  FALSE FALSE FALSE FALSE
3487 FALSE   TRUE FALSE FALSE FALSE
3488 FALSE  FALSE FALSE FALSE FALSE
3489 FALSE  FALSE FALSE FALSE FALSE
3490 FALSE   TRUE FALSE FALSE FALSE
3491 FALSE  FALSE FALSE FALSE FALSE
3492 FALSE  FALSE FALSE FALSE FALSE
3493 FALSE   TRUE FALSE FALSE FALSE
3494 FALSE   TRUE FALSE FALSE FALSE
3495 FALSE  FALSE FALSE FALSE FALSE
3496 FALSE  FALSE FALSE FALSE FALSE
3497 FALSE   TRUE FALSE FALSE FALSE
3498 FALSE  FALSE FALSE FALSE FALSE
3499 FALSE   TRUE FALSE FALSE FALSE
3500 FALSE  FALSE FALSE FALSE FALSE
3501 FALSE   TRUE FALSE FALSE FALSE
3502 FALSE  FALSE FALSE FALSE FALSE
3503 FALSE  FALSE FALSE FALSE FALSE
3504 FALSE  FALSE FALSE FALSE FALSE
3505 FALSE   TRUE FALSE FALSE FALSE
3506 FALSE  FALSE FALSE FALSE FALSE
3507 FALSE   TRUE FALSE FALSE FALSE
3508 FALSE  FALSE FALSE FALSE FALSE
3509 FALSE  FALSE FALSE FALSE FALSE
3510 FALSE  FALSE FALSE FALSE FALSE
3511 FALSE   TRUE FALSE FALSE FALSE
3512 FALSE  FALSE FALSE FALSE FALSE
3513 FALSE   TRUE FALSE FALSE FALSE
3514 FALSE  FALSE FALSE FALSE FALSE
3515 FALSE  FALSE FALSE FALSE FALSE
3516 FALSE  FALSE FALSE FALSE FALSE
3517 FALSE   TRUE FALSE FALSE FALSE
3518 FALSE  FALSE FALSE FALSE FALSE
3519 FALSE   TRUE FALSE FALSE FALSE
3520 FALSE  FALSE FALSE FALSE FALSE
3521 FALSE   TRUE FALSE FALSE FALSE
3522 FALSE  FALSE FALSE FALSE FALSE
3523 FALSE  FALSE FALSE FALSE FALSE
3524 FALSE  FALSE FALSE FALSE FALSE
3525 FALSE  FALSE FALSE FALSE FALSE
3526 FALSE   TRUE FALSE FALSE FALSE
3527 FALSE  FALSE FALSE FALSE FALSE
3528 FALSE   TRUE FALSE FALSE FALSE
3529 FALSE  FALSE FALSE FALSE FALSE
3530 FALSE   TRUE FALSE FALSE FALSE
3531 FALSE  FALSE FALSE FALSE FALSE
3532 FALSE   TRUE FALSE FALSE FALSE
3533 FALSE  FALSE FALSE FALSE FALSE
3534 FALSE  FALSE FALSE FALSE FALSE
3535 FALSE   TRUE FALSE FALSE FALSE
3536 FALSE  FALSE FALSE FALSE FALSE
3537 FALSE  FALSE FALSE FALSE FALSE
3538 FALSE   TRUE FALSE FALSE FALSE
3539 FALSE  FALSE FALSE FALSE FALSE
3540 FALSE   TRUE FALSE FALSE FALSE
3541 FALSE  FALSE FALSE FALSE FALSE
3542 FALSE   TRUE FALSE FALSE FALSE
3543 FALSE  FALSE FALSE FALSE FALSE
3544 FALSE   TRUE FALSE FALSE FALSE
3545 FALSE  FALSE FALSE FALSE FALSE
3546 FALSE  FALSE FALSE FALSE FALSE
3547 FALSE   TRUE FALSE FALSE FALSE
3548 FALSE  FALSE FALSE FALSE FALSE
3549 FALSE  FALSE FALSE FALSE FALSE
3550 FALSE   TRUE FALSE FALSE FALSE
3551 FALSE   TRUE FALSE FALSE FALSE
3552 FALSE  FALSE FALSE FALSE FALSE
3553 FALSE  FALSE FALSE FALSE FALSE
3554 FALSE   TRUE FALSE FALSE FALSE
3555 FALSE  FALSE FALSE FALSE FALSE
3556 FALSE   TRUE FALSE FALSE FALSE
3557 FALSE  FALSE FALSE FALSE FALSE
3558 FALSE   TRUE FALSE FALSE FALSE
3559 FALSE  FALSE FALSE FALSE FALSE
3560 FALSE  FALSE FALSE FALSE FALSE
3561 FALSE  FALSE FALSE FALSE FALSE
3562 FALSE   TRUE FALSE FALSE FALSE
3563 FALSE  FALSE FALSE FALSE FALSE
3564 FALSE   TRUE FALSE FALSE FALSE
3565 FALSE  FALSE FALSE FALSE FALSE
3566 FALSE  FALSE FALSE FALSE FALSE
3567 FALSE  FALSE FALSE FALSE FALSE
3568 FALSE   TRUE FALSE FALSE FALSE
3569 FALSE  FALSE FALSE FALSE FALSE
3570 FALSE   TRUE FALSE FALSE FALSE
3571 FALSE  FALSE FALSE FALSE FALSE
3572 FALSE  FALSE FALSE FALSE FALSE
3573 FALSE  FALSE FALSE FALSE FALSE
3574 FALSE   TRUE FALSE FALSE FALSE
3575 FALSE  FALSE FALSE FALSE FALSE
3576 FALSE   TRUE FALSE FALSE FALSE
3577 FALSE  FALSE FALSE FALSE FALSE
3578 FALSE   TRUE FALSE FALSE FALSE
3579 FALSE  FALSE FALSE FALSE FALSE
3580 FALSE  FALSE FALSE FALSE FALSE
3581 FALSE  FALSE FALSE FALSE FALSE
3582 FALSE  FALSE FALSE FALSE FALSE
3583 FALSE   TRUE FALSE FALSE FALSE
3584 FALSE  FALSE FALSE FALSE FALSE
3585 FALSE   TRUE FALSE FALSE FALSE
3586 FALSE  FALSE FALSE FALSE FALSE
3587 FALSE   TRUE FALSE FALSE FALSE
3588 FALSE  FALSE FALSE FALSE FALSE
3589 FALSE   TRUE FALSE FALSE FALSE
3590 FALSE  FALSE FALSE FALSE FALSE
3591 FALSE  FALSE FALSE FALSE FALSE
3592 FALSE   TRUE FALSE FALSE FALSE
3593 FALSE  FALSE FALSE FALSE FALSE
3594 FALSE  FALSE FALSE FALSE FALSE
3595 FALSE   TRUE FALSE FALSE FALSE
3596 FALSE  FALSE FALSE FALSE FALSE
3597 FALSE   TRUE FALSE FALSE FALSE
3598 FALSE  FALSE FALSE FALSE FALSE
3599 FALSE   TRUE FALSE FALSE FALSE
3600 FALSE  FALSE FALSE FALSE FALSE
3601 FALSE   TRUE FALSE FALSE FALSE
3602 FALSE  FALSE FALSE FALSE FALSE
3603 FALSE  FALSE FALSE FALSE FALSE
3604 FALSE   TRUE FALSE FALSE FALSE
3605 FALSE  FALSE FALSE FALSE FALSE
3606 FALSE  FALSE FALSE FALSE FALSE
3607 FALSE   TRUE FALSE FALSE FALSE
3608 FALSE   TRUE FALSE FALSE FALSE
3609 FALSE  FALSE FALSE FALSE FALSE
3610 FALSE  FALSE FALSE FALSE FALSE
3611 FALSE   TRUE FALSE FALSE FALSE
3612 FALSE  FALSE FALSE FALSE FALSE
3613 FALSE   TRUE FALSE FALSE FALSE
3614 FALSE  FALSE FALSE FALSE FALSE
3615 FALSE   TRUE FALSE FALSE FALSE
3616 FALSE  FALSE FALSE FALSE FALSE
3617 FALSE  FALSE FALSE FALSE FALSE
3618 FALSE  FALSE FALSE FALSE FALSE
3619 FALSE   TRUE FALSE FALSE FALSE
3620 FALSE  FALSE FALSE FALSE FALSE
3621 FALSE   TRUE FALSE FALSE FALSE
3622 FALSE  FALSE FALSE FALSE FALSE
3623 FALSE  FALSE FALSE FALSE FALSE
3624 FALSE  FALSE FALSE FALSE FALSE
3625 FALSE   TRUE FALSE FALSE FALSE
3626 FALSE  FALSE FALSE FALSE FALSE
3627 FALSE   TRUE FALSE FALSE FALSE
3628 FALSE  FALSE FALSE FALSE FALSE
3629 FALSE  FALSE FALSE FALSE FALSE
3630 FALSE  FALSE FALSE FALSE FALSE
3631 FALSE   TRUE FALSE FALSE FALSE
3632 FALSE  FALSE FALSE FALSE FALSE
3633 FALSE   TRUE FALSE FALSE FALSE
3634 FALSE  FALSE FALSE FALSE FALSE
3635 FALSE   TRUE FALSE FALSE FALSE
3636 FALSE  FALSE FALSE FALSE FALSE
3637 FALSE  FALSE FALSE FALSE FALSE
3638 FALSE  FALSE FALSE FALSE FALSE
3639 FALSE  FALSE FALSE FALSE FALSE
3640 FALSE   TRUE FALSE FALSE FALSE
3641 FALSE  FALSE FALSE FALSE FALSE
3642 FALSE   TRUE FALSE FALSE FALSE
3643 FALSE  FALSE FALSE FALSE FALSE
3644 FALSE   TRUE FALSE FALSE FALSE
3645 FALSE  FALSE FALSE FALSE FALSE
3646 FALSE   TRUE FALSE FALSE FALSE
3647 FALSE  FALSE FALSE FALSE FALSE
3648 FALSE  FALSE FALSE FALSE FALSE
3649 FALSE   TRUE FALSE FALSE FALSE
3650 FALSE  FALSE FALSE FALSE FALSE
3651 FALSE  FALSE FALSE FALSE FALSE
3652 FALSE   TRUE FALSE FALSE FALSE
3653 FALSE  FALSE FALSE FALSE FALSE
3654 FALSE   TRUE FALSE FALSE FALSE
3655 FALSE  FALSE FALSE FALSE FALSE
3656 FALSE   TRUE FALSE FALSE FALSE
3657 FALSE  FALSE FALSE FALSE FALSE
3658 FALSE   TRUE FALSE FALSE FALSE
3659 FALSE  FALSE FALSE FALSE FALSE
3660 FALSE  FALSE FALSE FALSE FALSE
3661 FALSE   TRUE FALSE FALSE FALSE
3662 FALSE  FALSE FALSE FALSE FALSE
3663 FALSE  FALSE FALSE FALSE FALSE
3664 FALSE   TRUE FALSE FALSE FALSE
3665 FALSE   TRUE FALSE FALSE FALSE
3666 FALSE  FALSE FALSE FALSE FALSE
3667 FALSE  FALSE FALSE FALSE FALSE
3668 FALSE   TRUE FALSE FALSE FALSE
3669 FALSE  FALSE FALSE FALSE FALSE
3670 FALSE   TRUE FALSE FALSE FALSE
3671 FALSE  FALSE FALSE FALSE FALSE
3672 FALSE   TRUE FALSE FALSE FALSE
3673 FALSE  FALSE FALSE FALSE FALSE
3674 FALSE  FALSE FALSE FALSE FALSE
3675 FALSE  FALSE FALSE FALSE FALSE
3676 FALSE   TRUE FALSE FALSE FALSE
3677 FALSE  FALSE FALSE FALSE FALSE
3678 FALSE   TRUE FALSE FALSE FALSE
3679 FALSE  FALSE FALSE FALSE FALSE
3680 FALSE  FALSE FALSE FALSE FALSE
3681 FALSE  FALSE FALSE FALSE FALSE
3682 FALSE   TRUE FALSE FALSE FALSE
3683 FALSE  FALSE FALSE FALSE FALSE
3684 FALSE   TRUE FALSE FALSE FALSE
3685 FALSE  FALSE FALSE FALSE FALSE
3686 FALSE  FALSE FALSE FALSE FALSE
3687 FALSE  FALSE FALSE FALSE FALSE
3688 FALSE   TRUE FALSE FALSE FALSE
3689 FALSE  FALSE FALSE FALSE FALSE
3690 FALSE   TRUE FALSE FALSE FALSE
3691 FALSE  FALSE FALSE FALSE FALSE
3692 FALSE   TRUE FALSE FALSE FALSE
3693 FALSE  FALSE FALSE FALSE FALSE
3694 FALSE  FALSE FALSE FALSE FALSE
3695 FALSE  FALSE FALSE FALSE FALSE
3696 FALSE  FALSE FALSE FALSE FALSE
3697 FALSE   TRUE FALSE FALSE FALSE
3698 FALSE  FALSE FALSE FALSE FALSE
3699 FALSE   TRUE FALSE FALSE FALSE
3700 FALSE  FALSE FALSE FALSE FALSE
3701 FALSE   TRUE FALSE FALSE FALSE
3702 FALSE  FALSE FALSE FALSE FALSE
3703 FALSE   TRUE FALSE FALSE FALSE
3704 FALSE  FALSE FALSE FALSE FALSE
3705 FALSE  FALSE FALSE FALSE FALSE
3706 FALSE   TRUE FALSE FALSE FALSE
3707 FALSE  FALSE FALSE FALSE FALSE
3708 FALSE  FALSE FALSE FALSE FALSE
3709 FALSE   TRUE FALSE FALSE FALSE
3710 FALSE  FALSE FALSE FALSE FALSE
3711 FALSE   TRUE FALSE FALSE FALSE
3712 FALSE  FALSE FALSE FALSE FALSE
3713 FALSE   TRUE FALSE FALSE FALSE
3714 FALSE  FALSE FALSE FALSE FALSE
3715 FALSE   TRUE FALSE FALSE FALSE
3716 FALSE  FALSE FALSE FALSE FALSE
3717 FALSE  FALSE FALSE FALSE FALSE
3718 FALSE   TRUE FALSE FALSE FALSE
3719 FALSE  FALSE FALSE FALSE FALSE
3720 FALSE  FALSE FALSE FALSE FALSE
3721 FALSE   TRUE FALSE FALSE FALSE
3722 FALSE   TRUE FALSE FALSE FALSE
3723 FALSE  FALSE FALSE FALSE FALSE
3724 FALSE  FALSE FALSE FALSE FALSE
3725 FALSE   TRUE FALSE FALSE FALSE
3726 FALSE  FALSE FALSE FALSE FALSE
3727 FALSE   TRUE FALSE FALSE FALSE
3728 FALSE  FALSE FALSE FALSE FALSE
3729 FALSE   TRUE FALSE FALSE FALSE
3730 FALSE  FALSE FALSE FALSE FALSE
3731 FALSE  FALSE FALSE FALSE FALSE
3732 FALSE  FALSE FALSE FALSE FALSE
3733 FALSE   TRUE FALSE FALSE FALSE
3734 FALSE  FALSE FALSE FALSE FALSE
3735 FALSE   TRUE FALSE FALSE FALSE
3736 FALSE  FALSE FALSE FALSE FALSE
3737 FALSE  FALSE FALSE FALSE FALSE
3738 FALSE  FALSE FALSE FALSE FALSE
3739 FALSE   TRUE FALSE FALSE FALSE
3740 FALSE  FALSE FALSE FALSE FALSE
3741 FALSE   TRUE FALSE FALSE FALSE
3742 FALSE  FALSE FALSE FALSE FALSE
3743 FALSE  FALSE FALSE FALSE FALSE
3744 FALSE  FALSE FALSE FALSE FALSE
3745 FALSE   TRUE FALSE FALSE FALSE
3746 FALSE  FALSE FALSE FALSE FALSE
3747 FALSE   TRUE FALSE FALSE FALSE
3748 FALSE  FALSE FALSE FALSE FALSE
3749 FALSE   TRUE FALSE FALSE FALSE
3750 FALSE  FALSE FALSE FALSE FALSE
3751 FALSE  FALSE FALSE FALSE FALSE
3752 FALSE  FALSE FALSE FALSE FALSE
3753 FALSE  FALSE FALSE FALSE FALSE
3754 FALSE   TRUE FALSE FALSE FALSE
3755 FALSE  FALSE FALSE FALSE FALSE
3756 FALSE   TRUE FALSE FALSE FALSE
3757 FALSE  FALSE FALSE FALSE FALSE
3758 FALSE   TRUE FALSE FALSE FALSE
3759 FALSE  FALSE FALSE FALSE FALSE
3760 FALSE   TRUE FALSE FALSE FALSE
3761 FALSE  FALSE FALSE FALSE FALSE
3762 FALSE  FALSE FALSE FALSE FALSE
3763 FALSE   TRUE FALSE FALSE FALSE
3764 FALSE  FALSE FALSE FALSE FALSE
3765 FALSE  FALSE FALSE FALSE FALSE
3766 FALSE   TRUE FALSE FALSE FALSE
3767 FALSE  FALSE FALSE FALSE FALSE
3768 FALSE   TRUE FALSE FALSE FALSE
3769 FALSE  FALSE FALSE FALSE FALSE
3770 FALSE   TRUE FALSE FALSE FALSE
3771 FALSE  FALSE FALSE FALSE FALSE
3772 FALSE   TRUE FALSE FALSE FALSE
3773 FALSE  FALSE FALSE FALSE FALSE
3774 FALSE  FALSE FALSE FALSE FALSE
3775 FALSE   TRUE FALSE FALSE FALSE
3776 FALSE  FALSE FALSE FALSE FALSE
3777 FALSE  FALSE FALSE FALSE FALSE
3778 FALSE   TRUE FALSE FALSE FALSE
3779 FALSE   TRUE FALSE FALSE FALSE
3780 FALSE  FALSE FALSE FALSE FALSE
3781 FALSE  FALSE FALSE FALSE FALSE
3782 FALSE   TRUE FALSE FALSE FALSE
3783 FALSE  FALSE FALSE FALSE FALSE
3784 FALSE   TRUE FALSE FALSE FALSE
3785 FALSE   TRUE FALSE FALSE FALSE
3786 FALSE   TRUE FALSE FALSE FALSE
3787 FALSE  FALSE FALSE FALSE FALSE
3788 FALSE  FALSE FALSE FALSE FALSE
3789 FALSE  FALSE FALSE FALSE FALSE
3790 FALSE   TRUE FALSE FALSE FALSE
3791 FALSE  FALSE FALSE FALSE FALSE
3792 FALSE   TRUE FALSE FALSE FALSE
3793 FALSE  FALSE FALSE FALSE FALSE
3794 FALSE  FALSE FALSE FALSE FALSE
3795 FALSE   TRUE FALSE FALSE FALSE
3796 FALSE   TRUE FALSE FALSE FALSE
3797 FALSE  FALSE FALSE FALSE FALSE
3798 FALSE   TRUE FALSE FALSE FALSE
3799 FALSE  FALSE FALSE FALSE FALSE
3800 FALSE  FALSE FALSE FALSE FALSE
3801 FALSE  FALSE FALSE FALSE FALSE
3802 FALSE   TRUE FALSE FALSE FALSE
3803 FALSE   TRUE FALSE FALSE FALSE
3804 FALSE   TRUE FALSE FALSE FALSE
3805 FALSE  FALSE FALSE FALSE FALSE
3806 FALSE   TRUE FALSE FALSE FALSE
3807 FALSE   TRUE FALSE FALSE FALSE
3808 FALSE  FALSE FALSE FALSE FALSE
3809 FALSE  FALSE FALSE FALSE FALSE
3810 FALSE  FALSE FALSE FALSE FALSE
3811 FALSE   TRUE FALSE FALSE FALSE
3812 FALSE  FALSE FALSE FALSE FALSE
3813 FALSE   TRUE FALSE FALSE FALSE
3814 FALSE  FALSE FALSE FALSE FALSE
3815 FALSE   TRUE FALSE FALSE FALSE
3816 FALSE  FALSE FALSE FALSE FALSE
3817 FALSE   TRUE FALSE FALSE FALSE
3818 FALSE  FALSE FALSE FALSE FALSE
3819 FALSE  FALSE FALSE FALSE FALSE
3820 FALSE   TRUE FALSE FALSE FALSE
3821 FALSE  FALSE FALSE FALSE FALSE
3822 FALSE  FALSE FALSE FALSE FALSE
3823 FALSE   TRUE FALSE FALSE FALSE
3824 FALSE  FALSE FALSE FALSE FALSE
3825 FALSE   TRUE FALSE FALSE FALSE
3826 FALSE  FALSE FALSE FALSE FALSE
3827 FALSE   TRUE FALSE FALSE FALSE
3828 FALSE  FALSE FALSE FALSE FALSE
3829 FALSE   TRUE FALSE FALSE FALSE
3830 FALSE  FALSE FALSE FALSE FALSE
3831 FALSE  FALSE FALSE FALSE FALSE
3832 FALSE   TRUE FALSE FALSE FALSE
3833 FALSE  FALSE FALSE FALSE FALSE
3834 FALSE  FALSE FALSE FALSE FALSE
3835 FALSE   TRUE FALSE FALSE FALSE
3836 FALSE   TRUE FALSE FALSE FALSE
3837 FALSE  FALSE FALSE FALSE FALSE
3838 FALSE  FALSE FALSE FALSE FALSE
3839 FALSE   TRUE FALSE FALSE FALSE
3840 FALSE  FALSE FALSE FALSE FALSE
3841 FALSE   TRUE FALSE FALSE FALSE
3842 FALSE   TRUE FALSE FALSE FALSE
3843 FALSE   TRUE FALSE FALSE FALSE
3844 FALSE  FALSE FALSE FALSE FALSE
3845 FALSE  FALSE FALSE FALSE FALSE
3846 FALSE  FALSE FALSE FALSE FALSE
3847 FALSE   TRUE FALSE FALSE FALSE
3848 FALSE  FALSE FALSE FALSE FALSE
3849 FALSE   TRUE FALSE FALSE FALSE
3850 FALSE  FALSE FALSE FALSE FALSE
3851 FALSE  FALSE FALSE FALSE FALSE
3852 FALSE   TRUE FALSE FALSE FALSE
3853 FALSE   TRUE FALSE FALSE FALSE
3854 FALSE  FALSE FALSE FALSE FALSE
3855 FALSE   TRUE FALSE FALSE FALSE
3856 FALSE  FALSE FALSE FALSE FALSE
3857 FALSE  FALSE FALSE FALSE FALSE
3858 FALSE  FALSE FALSE FALSE FALSE
3859 FALSE   TRUE FALSE FALSE FALSE
3860 FALSE   TRUE FALSE FALSE FALSE
3861 FALSE   TRUE FALSE FALSE FALSE
3862 FALSE  FALSE FALSE FALSE FALSE
3863 FALSE   TRUE FALSE FALSE FALSE
3864 FALSE   TRUE FALSE FALSE FALSE
3865 FALSE  FALSE FALSE FALSE FALSE
3866 FALSE  FALSE FALSE FALSE FALSE
3867 FALSE  FALSE FALSE FALSE FALSE
3868 FALSE   TRUE FALSE FALSE FALSE
3869 FALSE  FALSE FALSE FALSE FALSE
3870 FALSE   TRUE FALSE FALSE FALSE
3871 FALSE  FALSE FALSE FALSE FALSE
3872 FALSE   TRUE FALSE FALSE FALSE
3873 FALSE  FALSE FALSE FALSE FALSE
3874 FALSE   TRUE FALSE FALSE FALSE
3875 FALSE  FALSE FALSE FALSE FALSE
3876 FALSE  FALSE FALSE FALSE FALSE
3877 FALSE   TRUE FALSE FALSE FALSE
3878 FALSE  FALSE FALSE FALSE FALSE
3879 FALSE  FALSE FALSE FALSE FALSE
3880 FALSE   TRUE FALSE FALSE FALSE
3881 FALSE  FALSE FALSE FALSE FALSE
3882 FALSE   TRUE FALSE FALSE FALSE
3883 FALSE  FALSE FALSE FALSE FALSE
3884 FALSE   TRUE FALSE FALSE FALSE
3885 FALSE  FALSE FALSE FALSE FALSE
3886 FALSE   TRUE FALSE FALSE FALSE
3887 FALSE  FALSE FALSE FALSE FALSE
3888 FALSE  FALSE FALSE FALSE FALSE
3889 FALSE   TRUE FALSE FALSE FALSE
3890 FALSE  FALSE FALSE FALSE FALSE
3891 FALSE  FALSE FALSE FALSE FALSE
3892 FALSE   TRUE FALSE FALSE FALSE
3893 FALSE   TRUE FALSE FALSE FALSE
3894 FALSE  FALSE FALSE FALSE FALSE
3895 FALSE  FALSE FALSE FALSE FALSE
3896 FALSE   TRUE FALSE FALSE FALSE
3897 FALSE  FALSE FALSE FALSE FALSE
3898 FALSE   TRUE FALSE FALSE FALSE
3899 FALSE   TRUE FALSE FALSE FALSE
3900 FALSE   TRUE FALSE FALSE FALSE
3901 FALSE  FALSE FALSE FALSE FALSE
3902 FALSE  FALSE FALSE FALSE FALSE
3903 FALSE  FALSE FALSE FALSE FALSE
3904 FALSE   TRUE FALSE FALSE FALSE
3905 FALSE  FALSE FALSE FALSE FALSE
3906 FALSE   TRUE FALSE FALSE FALSE
3907 FALSE  FALSE FALSE FALSE FALSE
3908 FALSE  FALSE FALSE FALSE FALSE
3909 FALSE   TRUE FALSE FALSE FALSE
3910 FALSE   TRUE FALSE FALSE FALSE
3911 FALSE  FALSE FALSE FALSE FALSE
3912 FALSE   TRUE FALSE FALSE FALSE
3913 FALSE  FALSE FALSE FALSE FALSE
3914 FALSE  FALSE FALSE FALSE FALSE
3915 FALSE  FALSE FALSE FALSE FALSE
3916 FALSE   TRUE FALSE FALSE FALSE
3917 FALSE   TRUE FALSE FALSE FALSE
3918 FALSE   TRUE FALSE FALSE FALSE
3919 FALSE  FALSE FALSE FALSE FALSE
3920 FALSE   TRUE FALSE FALSE FALSE
3921 FALSE   TRUE FALSE FALSE FALSE
3922 FALSE  FALSE FALSE FALSE FALSE
3923 FALSE  FALSE FALSE FALSE FALSE
3924 FALSE  FALSE FALSE FALSE FALSE
3925 FALSE   TRUE FALSE FALSE FALSE
3926 FALSE  FALSE FALSE FALSE FALSE
3927 FALSE   TRUE FALSE FALSE FALSE
3928 FALSE  FALSE FALSE FALSE FALSE
3929 FALSE   TRUE FALSE FALSE FALSE
3930 FALSE  FALSE FALSE FALSE FALSE
3931 FALSE   TRUE FALSE FALSE FALSE
3932 FALSE  FALSE FALSE FALSE FALSE
3933 FALSE  FALSE FALSE FALSE FALSE
3934 FALSE   TRUE FALSE FALSE FALSE
3935 FALSE  FALSE FALSE FALSE FALSE
3936 FALSE  FALSE FALSE FALSE FALSE
3937 FALSE   TRUE FALSE FALSE FALSE
3938 FALSE  FALSE FALSE FALSE FALSE
3939 FALSE   TRUE FALSE FALSE FALSE
3940 FALSE  FALSE FALSE FALSE FALSE
3941 FALSE   TRUE FALSE FALSE FALSE
3942 FALSE  FALSE FALSE FALSE FALSE
3943 FALSE   TRUE FALSE FALSE FALSE
3944 FALSE  FALSE FALSE FALSE FALSE
3945 FALSE  FALSE FALSE FALSE FALSE
3946 FALSE   TRUE FALSE FALSE FALSE
3947 FALSE  FALSE FALSE FALSE FALSE
3948 FALSE  FALSE FALSE FALSE FALSE
3949 FALSE   TRUE FALSE FALSE FALSE
3950 FALSE   TRUE FALSE FALSE FALSE
3951 FALSE  FALSE FALSE FALSE FALSE
3952 FALSE  FALSE FALSE FALSE FALSE
3953 FALSE   TRUE FALSE FALSE FALSE
3954 FALSE  FALSE FALSE FALSE FALSE
3955 FALSE   TRUE FALSE FALSE FALSE
3956 FALSE   TRUE FALSE FALSE FALSE
3957 FALSE   TRUE FALSE FALSE FALSE
3958 FALSE  FALSE FALSE FALSE FALSE
3959 FALSE  FALSE FALSE FALSE FALSE
3960 FALSE  FALSE FALSE FALSE FALSE
3961 FALSE   TRUE FALSE FALSE FALSE
3962 FALSE  FALSE FALSE FALSE FALSE
3963 FALSE   TRUE FALSE FALSE FALSE
3964 FALSE  FALSE FALSE FALSE FALSE
3965 FALSE  FALSE FALSE FALSE FALSE
3966 FALSE   TRUE FALSE FALSE FALSE
3967 FALSE   TRUE FALSE FALSE FALSE
3968 FALSE  FALSE FALSE FALSE FALSE
3969 FALSE   TRUE FALSE FALSE FALSE
3970 FALSE  FALSE FALSE FALSE FALSE
3971 FALSE  FALSE FALSE FALSE FALSE
3972 FALSE  FALSE FALSE FALSE FALSE
3973 FALSE   TRUE FALSE FALSE FALSE
3974 FALSE   TRUE FALSE FALSE FALSE
3975 FALSE   TRUE FALSE FALSE FALSE
3976 FALSE  FALSE FALSE FALSE FALSE
3977 FALSE   TRUE FALSE FALSE FALSE
3978 FALSE   TRUE FALSE FALSE FALSE
3979 FALSE  FALSE FALSE FALSE FALSE
3980 FALSE  FALSE FALSE FALSE FALSE
3981 FALSE  FALSE FALSE FALSE FALSE
3982 FALSE   TRUE FALSE FALSE FALSE
3983 FALSE  FALSE FALSE FALSE FALSE
3984 FALSE   TRUE FALSE FALSE FALSE
3985 FALSE  FALSE FALSE FALSE FALSE
3986 FALSE   TRUE FALSE FALSE FALSE
3987 FALSE  FALSE FALSE FALSE FALSE
3988 FALSE   TRUE FALSE FALSE FALSE
3989 FALSE  FALSE FALSE FALSE FALSE
3990 FALSE  FALSE FALSE FALSE FALSE
3991 FALSE   TRUE FALSE FALSE FALSE
3992 FALSE  FALSE FALSE FALSE FALSE
3993 FALSE  FALSE FALSE FALSE FALSE
3994 FALSE   TRUE FALSE FALSE FALSE
3995 FALSE  FALSE FALSE FALSE FALSE
3996 FALSE   TRUE FALSE FALSE FALSE
3997 FALSE  FALSE FALSE FALSE FALSE
3998 FALSE   TRUE FALSE FALSE FALSE
3999 FALSE  FALSE FALSE FALSE FALSE
4000 FALSE   TRUE FALSE FALSE FALSE
4001 FALSE  FALSE FALSE FALSE FALSE
4002 FALSE  FALSE FALSE FALSE FALSE
4003 FALSE   TRUE FALSE FALSE FALSE
4004 FALSE  FALSE FALSE FALSE FALSE
4005 FALSE  FALSE FALSE FALSE FALSE
4006 FALSE   TRUE FALSE FALSE FALSE
4007 FALSE   TRUE FALSE FALSE FALSE
4008 FALSE  FALSE FALSE FALSE FALSE
4009 FALSE  FALSE FALSE FALSE FALSE
4010 FALSE   TRUE FALSE FALSE FALSE
4011 FALSE  FALSE FALSE FALSE FALSE
4012 FALSE   TRUE FALSE FALSE FALSE
4013 FALSE   TRUE FALSE FALSE FALSE
4014 FALSE   TRUE FALSE FALSE FALSE
4015 FALSE  FALSE FALSE FALSE FALSE
4016 FALSE  FALSE FALSE FALSE FALSE
4017 FALSE  FALSE FALSE FALSE FALSE
4018 FALSE   TRUE FALSE FALSE FALSE
4019 FALSE  FALSE FALSE FALSE FALSE
4020 FALSE   TRUE FALSE FALSE FALSE
4021 FALSE  FALSE FALSE FALSE FALSE
4022 FALSE  FALSE FALSE FALSE FALSE
4023 FALSE   TRUE FALSE FALSE FALSE
4024 FALSE   TRUE FALSE FALSE FALSE
4025 FALSE  FALSE FALSE FALSE FALSE
4026 FALSE   TRUE FALSE FALSE FALSE
4027 FALSE  FALSE FALSE FALSE FALSE
4028 FALSE  FALSE FALSE FALSE FALSE
4029 FALSE  FALSE FALSE FALSE FALSE
4030 FALSE   TRUE FALSE FALSE FALSE
4031 FALSE   TRUE FALSE FALSE FALSE
4032 FALSE   TRUE FALSE FALSE FALSE
4033 FALSE  FALSE FALSE FALSE FALSE
4034 FALSE   TRUE FALSE FALSE FALSE
4035 FALSE   TRUE FALSE FALSE FALSE
4036 FALSE  FALSE FALSE FALSE FALSE
4037 FALSE  FALSE FALSE FALSE FALSE
4038 FALSE  FALSE FALSE FALSE FALSE
4039 FALSE   TRUE FALSE FALSE FALSE
4040 FALSE  FALSE FALSE FALSE FALSE
4041 FALSE   TRUE FALSE FALSE FALSE
4042 FALSE  FALSE FALSE FALSE FALSE
4043 FALSE   TRUE FALSE FALSE FALSE
4044 FALSE  FALSE FALSE FALSE FALSE
4045 FALSE   TRUE FALSE FALSE FALSE
4046 FALSE  FALSE FALSE FALSE FALSE
4047 FALSE  FALSE FALSE FALSE FALSE
4048 FALSE   TRUE FALSE FALSE FALSE
4049 FALSE  FALSE FALSE FALSE FALSE
4050 FALSE  FALSE FALSE FALSE FALSE
4051 FALSE   TRUE FALSE FALSE FALSE
4052 FALSE  FALSE FALSE FALSE FALSE
4053 FALSE   TRUE FALSE FALSE FALSE
4054 FALSE  FALSE FALSE FALSE FALSE
4055 FALSE   TRUE FALSE FALSE FALSE
4056 FALSE  FALSE FALSE FALSE FALSE
4057 FALSE   TRUE FALSE FALSE FALSE
4058 FALSE  FALSE FALSE FALSE FALSE
4059 FALSE  FALSE FALSE FALSE FALSE
4060 FALSE   TRUE FALSE FALSE FALSE
4061 FALSE  FALSE FALSE FALSE FALSE
4062 FALSE  FALSE FALSE FALSE FALSE
4063 FALSE   TRUE FALSE FALSE FALSE
4064 FALSE   TRUE FALSE FALSE FALSE
4065 FALSE  FALSE FALSE FALSE FALSE
4066 FALSE  FALSE FALSE FALSE FALSE
4067 FALSE   TRUE FALSE FALSE FALSE
4068 FALSE  FALSE FALSE FALSE FALSE
4069 FALSE   TRUE FALSE FALSE FALSE
4070 FALSE   TRUE FALSE FALSE FALSE
4071 FALSE   TRUE FALSE FALSE FALSE
4072 FALSE  FALSE FALSE FALSE FALSE
4073 FALSE  FALSE FALSE FALSE FALSE
4074 FALSE  FALSE FALSE FALSE FALSE
4075 FALSE   TRUE FALSE FALSE FALSE
4076 FALSE  FALSE FALSE FALSE FALSE
4077 FALSE   TRUE FALSE FALSE FALSE
4078 FALSE  FALSE FALSE FALSE FALSE
4079 FALSE  FALSE FALSE FALSE FALSE
4080 FALSE   TRUE FALSE FALSE FALSE
4081 FALSE   TRUE FALSE FALSE FALSE
4082 FALSE  FALSE FALSE FALSE FALSE
4083 FALSE   TRUE FALSE FALSE FALSE
4084 FALSE  FALSE FALSE FALSE FALSE
4085 FALSE  FALSE FALSE FALSE FALSE
4086 FALSE  FALSE FALSE FALSE FALSE
4087 FALSE   TRUE FALSE FALSE FALSE
4088 FALSE   TRUE FALSE FALSE FALSE
4089 FALSE   TRUE FALSE FALSE FALSE
4090 FALSE  FALSE FALSE FALSE FALSE
4091 FALSE   TRUE FALSE FALSE FALSE
4092 FALSE   TRUE FALSE FALSE FALSE
4093 FALSE  FALSE FALSE FALSE FALSE
4094 FALSE  FALSE FALSE FALSE FALSE
4095 FALSE  FALSE FALSE FALSE FALSE
4096 FALSE   TRUE FALSE FALSE FALSE
4097 FALSE  FALSE FALSE FALSE FALSE
4098 FALSE   TRUE FALSE FALSE FALSE
4099 FALSE  FALSE FALSE FALSE FALSE
4100 FALSE   TRUE FALSE FALSE FALSE
4101 FALSE  FALSE FALSE FALSE FALSE
4102 FALSE   TRUE FALSE FALSE FALSE
4103 FALSE  FALSE FALSE FALSE FALSE
4104 FALSE  FALSE FALSE FALSE FALSE
4105 FALSE   TRUE FALSE FALSE FALSE
4106 FALSE  FALSE FALSE FALSE FALSE
4107 FALSE  FALSE FALSE FALSE FALSE
4108 FALSE   TRUE FALSE FALSE FALSE
4109 FALSE  FALSE FALSE FALSE FALSE
4110 FALSE   TRUE FALSE FALSE FALSE
4111 FALSE  FALSE FALSE FALSE FALSE
4112 FALSE   TRUE FALSE FALSE FALSE
4113 FALSE  FALSE FALSE FALSE FALSE
4114 FALSE   TRUE FALSE FALSE FALSE
4115 FALSE  FALSE FALSE FALSE FALSE
4116 FALSE  FALSE FALSE FALSE FALSE
4117 FALSE   TRUE FALSE FALSE FALSE
4118 FALSE  FALSE FALSE FALSE FALSE
4119 FALSE  FALSE FALSE FALSE FALSE
4120 FALSE   TRUE FALSE FALSE FALSE
4121 FALSE   TRUE FALSE FALSE FALSE
4122 FALSE  FALSE FALSE FALSE FALSE
4123 FALSE  FALSE FALSE FALSE FALSE
4124 FALSE   TRUE FALSE FALSE FALSE
4125 FALSE  FALSE FALSE FALSE FALSE
4126 FALSE   TRUE FALSE FALSE FALSE
4127 FALSE  FALSE FALSE FALSE FALSE
4128 FALSE   TRUE FALSE FALSE FALSE
4129 FALSE  FALSE FALSE FALSE FALSE
4130 FALSE  FALSE FALSE FALSE FALSE
4131 FALSE  FALSE FALSE FALSE FALSE
4132 FALSE   TRUE FALSE FALSE FALSE
4133 FALSE  FALSE FALSE FALSE FALSE
4134 FALSE   TRUE FALSE FALSE FALSE
4135 FALSE  FALSE FALSE FALSE FALSE
4136 FALSE  FALSE FALSE FALSE FALSE
4137 FALSE  FALSE FALSE FALSE FALSE
4138 FALSE   TRUE FALSE FALSE FALSE
4139 FALSE  FALSE FALSE FALSE FALSE
4140 FALSE   TRUE FALSE FALSE FALSE
4141 FALSE  FALSE FALSE FALSE FALSE
4142 FALSE  FALSE FALSE FALSE FALSE
4143 FALSE  FALSE FALSE FALSE FALSE
4144 FALSE   TRUE FALSE FALSE FALSE
4145 FALSE  FALSE FALSE FALSE FALSE
4146 FALSE   TRUE FALSE FALSE FALSE
4147 FALSE  FALSE FALSE FALSE FALSE
4148 FALSE   TRUE FALSE FALSE FALSE
4149 FALSE  FALSE FALSE FALSE FALSE
4150 FALSE  FALSE FALSE FALSE FALSE
4151 FALSE  FALSE FALSE FALSE FALSE
4152 FALSE  FALSE FALSE FALSE FALSE
4153 FALSE   TRUE FALSE FALSE FALSE
4154 FALSE  FALSE FALSE FALSE FALSE
4155 FALSE   TRUE FALSE FALSE FALSE
4156 FALSE  FALSE FALSE FALSE FALSE
4157 FALSE   TRUE FALSE FALSE FALSE
4158 FALSE  FALSE FALSE FALSE FALSE
4159 FALSE   TRUE FALSE FALSE FALSE
4160 FALSE  FALSE FALSE FALSE FALSE
4161 FALSE  FALSE FALSE FALSE FALSE
4162 FALSE   TRUE FALSE FALSE FALSE
4163 FALSE  FALSE FALSE FALSE FALSE
4164 FALSE  FALSE FALSE FALSE FALSE
4165 FALSE   TRUE FALSE FALSE FALSE
4166 FALSE  FALSE FALSE FALSE FALSE
4167 FALSE   TRUE FALSE FALSE FALSE
4168 FALSE  FALSE FALSE FALSE FALSE
4169 FALSE   TRUE FALSE FALSE FALSE
4170 FALSE  FALSE FALSE FALSE FALSE
4171 FALSE   TRUE FALSE FALSE FALSE
4172 FALSE  FALSE FALSE FALSE FALSE
4173 FALSE  FALSE FALSE FALSE FALSE
4174 FALSE   TRUE FALSE FALSE FALSE
4175 FALSE  FALSE FALSE FALSE FALSE
4176 FALSE  FALSE FALSE FALSE FALSE
4177 FALSE   TRUE FALSE FALSE FALSE
4178 FALSE   TRUE FALSE FALSE FALSE
4179 FALSE  FALSE FALSE FALSE FALSE
4180 FALSE  FALSE FALSE FALSE FALSE
4181 FALSE   TRUE FALSE FALSE FALSE
4182 FALSE  FALSE FALSE FALSE FALSE
4183 FALSE   TRUE FALSE FALSE FALSE
4184 FALSE  FALSE FALSE FALSE FALSE
4185 FALSE   TRUE FALSE FALSE FALSE
4186 FALSE  FALSE FALSE FALSE FALSE
4187 FALSE  FALSE FALSE FALSE FALSE
4188 FALSE  FALSE FALSE FALSE FALSE
4189 FALSE   TRUE FALSE FALSE FALSE
4190 FALSE  FALSE FALSE FALSE FALSE
4191 FALSE   TRUE FALSE FALSE FALSE
4192 FALSE  FALSE FALSE FALSE FALSE
4193 FALSE  FALSE FALSE FALSE FALSE
4194 FALSE  FALSE FALSE FALSE FALSE
4195 FALSE   TRUE FALSE FALSE FALSE
4196 FALSE  FALSE FALSE FALSE FALSE
4197 FALSE   TRUE FALSE FALSE FALSE
4198 FALSE  FALSE FALSE FALSE FALSE
4199 FALSE  FALSE FALSE FALSE FALSE
4200 FALSE  FALSE FALSE FALSE FALSE
4201 FALSE   TRUE FALSE FALSE FALSE
4202 FALSE  FALSE FALSE FALSE FALSE
4203 FALSE   TRUE FALSE FALSE FALSE
4204 FALSE  FALSE FALSE FALSE FALSE
4205 FALSE   TRUE FALSE FALSE FALSE
4206 FALSE  FALSE FALSE FALSE FALSE
4207 FALSE  FALSE FALSE FALSE FALSE
4208 FALSE  FALSE FALSE FALSE FALSE
4209 FALSE  FALSE FALSE FALSE FALSE
4210 FALSE   TRUE FALSE FALSE FALSE
4211 FALSE  FALSE FALSE FALSE FALSE
4212 FALSE   TRUE FALSE FALSE FALSE
4213 FALSE  FALSE FALSE FALSE FALSE
4214 FALSE   TRUE FALSE FALSE FALSE
4215 FALSE  FALSE FALSE FALSE FALSE
4216 FALSE   TRUE FALSE FALSE FALSE
4217 FALSE  FALSE FALSE FALSE FALSE
4218 FALSE  FALSE FALSE FALSE FALSE
4219 FALSE   TRUE FALSE FALSE FALSE
4220 FALSE  FALSE FALSE FALSE FALSE
4221 FALSE  FALSE FALSE FALSE FALSE
4222 FALSE   TRUE FALSE FALSE FALSE
4223 FALSE  FALSE FALSE FALSE FALSE
4224 FALSE   TRUE FALSE FALSE FALSE
4225 FALSE  FALSE FALSE FALSE FALSE
4226 FALSE   TRUE FALSE FALSE FALSE
4227 FALSE  FALSE FALSE FALSE FALSE
4228 FALSE   TRUE FALSE FALSE FALSE
4229 FALSE  FALSE FALSE FALSE FALSE
4230 FALSE  FALSE FALSE FALSE FALSE
4231 FALSE   TRUE FALSE FALSE FALSE
4232 FALSE  FALSE FALSE FALSE FALSE
4233 FALSE  FALSE FALSE FALSE FALSE
4234 FALSE   TRUE FALSE FALSE FALSE
4235 FALSE   TRUE FALSE FALSE FALSE
4236 FALSE  FALSE FALSE FALSE FALSE
4237 FALSE  FALSE FALSE FALSE FALSE
4238 FALSE   TRUE FALSE FALSE FALSE
4239 FALSE  FALSE FALSE FALSE FALSE
4240 FALSE   TRUE FALSE FALSE FALSE
4241 FALSE  FALSE FALSE FALSE FALSE
4242 FALSE   TRUE FALSE FALSE FALSE
4243 FALSE  FALSE FALSE FALSE FALSE
4244 FALSE  FALSE FALSE FALSE FALSE
4245 FALSE  FALSE FALSE FALSE FALSE
4246 FALSE   TRUE FALSE FALSE FALSE
4247 FALSE  FALSE FALSE FALSE FALSE
4248 FALSE   TRUE FALSE FALSE FALSE
4249 FALSE  FALSE FALSE FALSE FALSE
4250 FALSE  FALSE FALSE FALSE FALSE
4251 FALSE  FALSE FALSE FALSE FALSE
4252 FALSE   TRUE FALSE FALSE FALSE
4253 FALSE  FALSE FALSE FALSE FALSE
4254 FALSE   TRUE FALSE FALSE FALSE
4255 FALSE  FALSE FALSE FALSE FALSE
4256 FALSE  FALSE FALSE FALSE FALSE
4257 FALSE  FALSE FALSE FALSE FALSE
4258 FALSE   TRUE FALSE FALSE FALSE
4259 FALSE  FALSE FALSE FALSE FALSE
4260 FALSE   TRUE FALSE FALSE FALSE
4261 FALSE  FALSE FALSE FALSE FALSE
4262 FALSE   TRUE FALSE FALSE FALSE
4263 FALSE  FALSE FALSE FALSE FALSE
4264 FALSE  FALSE FALSE FALSE FALSE
4265 FALSE  FALSE FALSE FALSE FALSE
4266 FALSE  FALSE FALSE FALSE FALSE
4267 FALSE   TRUE FALSE FALSE FALSE
4268 FALSE  FALSE FALSE FALSE FALSE
4269 FALSE   TRUE FALSE FALSE FALSE
4270 FALSE  FALSE FALSE FALSE FALSE
4271 FALSE   TRUE FALSE FALSE FALSE
4272 FALSE  FALSE FALSE FALSE FALSE
4273 FALSE   TRUE FALSE FALSE FALSE
4274 FALSE  FALSE FALSE FALSE FALSE
4275 FALSE  FALSE FALSE FALSE FALSE
4276 FALSE   TRUE FALSE FALSE FALSE
4277 FALSE  FALSE FALSE FALSE FALSE
4278 FALSE  FALSE FALSE FALSE FALSE
4279 FALSE   TRUE FALSE FALSE FALSE
4280 FALSE  FALSE FALSE FALSE FALSE
4281 FALSE   TRUE FALSE FALSE FALSE
4282 FALSE  FALSE FALSE FALSE FALSE
4283 FALSE   TRUE FALSE FALSE FALSE
4284 FALSE  FALSE FALSE FALSE FALSE
4285 FALSE   TRUE FALSE FALSE FALSE
4286 FALSE  FALSE FALSE FALSE FALSE
4287 FALSE  FALSE FALSE FALSE FALSE
4288 FALSE   TRUE FALSE FALSE FALSE
4289 FALSE  FALSE FALSE FALSE FALSE
4290 FALSE  FALSE FALSE FALSE FALSE
4291 FALSE   TRUE FALSE FALSE FALSE
4292 FALSE   TRUE FALSE FALSE FALSE
4293 FALSE  FALSE FALSE FALSE FALSE
4294 FALSE  FALSE FALSE FALSE FALSE
4295 FALSE   TRUE FALSE FALSE FALSE
4296 FALSE  FALSE FALSE FALSE FALSE
4297 FALSE   TRUE FALSE FALSE FALSE
4298 FALSE  FALSE FALSE FALSE FALSE
4299 FALSE   TRUE FALSE FALSE FALSE
4300 FALSE  FALSE FALSE FALSE FALSE
4301 FALSE  FALSE FALSE FALSE FALSE
4302 FALSE  FALSE FALSE FALSE FALSE
4303 FALSE   TRUE FALSE FALSE FALSE
4304 FALSE  FALSE FALSE FALSE FALSE
4305 FALSE   TRUE FALSE FALSE FALSE
4306 FALSE  FALSE FALSE FALSE FALSE
4307 FALSE  FALSE FALSE FALSE FALSE
4308 FALSE  FALSE FALSE FALSE FALSE
4309 FALSE   TRUE FALSE FALSE FALSE
4310 FALSE  FALSE FALSE FALSE FALSE
4311 FALSE   TRUE FALSE FALSE FALSE
4312 FALSE  FALSE FALSE FALSE FALSE
4313 FALSE  FALSE FALSE FALSE FALSE
4314 FALSE  FALSE FALSE FALSE FALSE
4315 FALSE   TRUE FALSE FALSE FALSE
4316 FALSE  FALSE FALSE FALSE FALSE
4317 FALSE   TRUE FALSE FALSE FALSE
4318 FALSE  FALSE FALSE FALSE FALSE
4319 FALSE   TRUE FALSE FALSE FALSE
4320 FALSE  FALSE FALSE FALSE FALSE
4321 FALSE  FALSE FALSE FALSE FALSE
4322 FALSE  FALSE FALSE FALSE FALSE
4323 FALSE  FALSE FALSE FALSE FALSE
4324 FALSE   TRUE FALSE FALSE FALSE
4325 FALSE  FALSE FALSE FALSE FALSE
4326 FALSE   TRUE FALSE FALSE FALSE
4327 FALSE  FALSE FALSE FALSE FALSE
4328 FALSE   TRUE FALSE FALSE FALSE
4329 FALSE  FALSE FALSE FALSE FALSE
4330 FALSE   TRUE FALSE FALSE FALSE
4331 FALSE  FALSE FALSE FALSE FALSE
4332 FALSE  FALSE FALSE FALSE FALSE
4333 FALSE   TRUE FALSE FALSE FALSE
4334 FALSE  FALSE FALSE FALSE FALSE
4335 FALSE  FALSE FALSE FALSE FALSE
4336 FALSE   TRUE FALSE FALSE FALSE
4337 FALSE  FALSE FALSE FALSE FALSE
4338 FALSE   TRUE FALSE FALSE FALSE
4339 FALSE  FALSE FALSE FALSE FALSE
4340 FALSE   TRUE FALSE FALSE FALSE
4341 FALSE  FALSE FALSE FALSE FALSE
4342 FALSE   TRUE FALSE FALSE FALSE
4343 FALSE  FALSE FALSE FALSE FALSE
4344 FALSE  FALSE FALSE FALSE FALSE
4345 FALSE   TRUE FALSE FALSE FALSE
4346 FALSE  FALSE FALSE FALSE FALSE
4347 FALSE  FALSE FALSE FALSE FALSE
4348 FALSE   TRUE FALSE FALSE FALSE
4349 FALSE   TRUE FALSE FALSE FALSE
4350 FALSE  FALSE FALSE FALSE FALSE
4351 FALSE  FALSE FALSE FALSE FALSE
4352 FALSE   TRUE FALSE FALSE FALSE
4353 FALSE  FALSE FALSE FALSE FALSE
4354 FALSE   TRUE FALSE FALSE FALSE
4355 FALSE  FALSE FALSE FALSE FALSE
4356 FALSE   TRUE FALSE FALSE FALSE
4357 FALSE  FALSE FALSE FALSE FALSE
4358 FALSE  FALSE FALSE FALSE FALSE
4359 FALSE  FALSE FALSE FALSE FALSE
4360 FALSE   TRUE FALSE FALSE FALSE
4361 FALSE  FALSE FALSE FALSE FALSE
4362 FALSE   TRUE FALSE FALSE FALSE
4363 FALSE  FALSE FALSE FALSE FALSE
4364 FALSE  FALSE FALSE FALSE FALSE
4365 FALSE  FALSE FALSE FALSE FALSE
4366 FALSE   TRUE FALSE FALSE FALSE
4367 FALSE  FALSE FALSE FALSE FALSE
4368 FALSE   TRUE FALSE FALSE FALSE
4369 FALSE  FALSE FALSE FALSE FALSE
4370 FALSE  FALSE FALSE FALSE FALSE
4371 FALSE  FALSE FALSE FALSE FALSE
4372 FALSE   TRUE FALSE FALSE FALSE
4373 FALSE  FALSE FALSE FALSE FALSE
4374 FALSE   TRUE FALSE FALSE FALSE
4375 FALSE  FALSE FALSE FALSE FALSE
4376 FALSE   TRUE FALSE FALSE FALSE
4377 FALSE  FALSE FALSE FALSE FALSE
4378 FALSE  FALSE FALSE FALSE FALSE
4379 FALSE  FALSE FALSE FALSE FALSE
4380 FALSE  FALSE FALSE FALSE FALSE
4381 FALSE   TRUE FALSE FALSE FALSE
4382 FALSE  FALSE FALSE FALSE FALSE
4383 FALSE   TRUE FALSE FALSE FALSE
4384 FALSE  FALSE FALSE FALSE FALSE
4385 FALSE   TRUE FALSE FALSE FALSE
4386 FALSE  FALSE FALSE FALSE FALSE
4387 FALSE   TRUE FALSE FALSE FALSE
4388 FALSE  FALSE FALSE FALSE FALSE
4389 FALSE  FALSE FALSE FALSE FALSE
4390 FALSE   TRUE FALSE FALSE FALSE
4391 FALSE  FALSE FALSE FALSE FALSE
4392 FALSE  FALSE FALSE FALSE FALSE
4393 FALSE   TRUE FALSE FALSE FALSE
4394 FALSE  FALSE FALSE FALSE FALSE
4395 FALSE   TRUE FALSE FALSE FALSE
4396 FALSE  FALSE FALSE FALSE FALSE
4397 FALSE   TRUE FALSE FALSE FALSE
4398 FALSE  FALSE FALSE FALSE FALSE
4399 FALSE   TRUE FALSE FALSE FALSE
4400 FALSE  FALSE FALSE FALSE FALSE
4401 FALSE  FALSE FALSE FALSE FALSE
4402 FALSE   TRUE FALSE FALSE FALSE
4403 FALSE  FALSE FALSE FALSE FALSE
4404 FALSE  FALSE FALSE FALSE FALSE
4405 FALSE   TRUE FALSE FALSE FALSE
4406 FALSE   TRUE FALSE FALSE FALSE
4407 FALSE  FALSE FALSE FALSE FALSE
4408 FALSE  FALSE FALSE FALSE FALSE
4409 FALSE   TRUE FALSE FALSE FALSE
4410 FALSE  FALSE FALSE FALSE FALSE
4411 FALSE   TRUE FALSE FALSE FALSE
4412 FALSE  FALSE FALSE FALSE FALSE
4413 FALSE   TRUE FALSE FALSE FALSE
4414 FALSE  FALSE FALSE FALSE FALSE
4415 FALSE  FALSE FALSE FALSE FALSE
4416 FALSE  FALSE FALSE FALSE FALSE
4417 FALSE   TRUE FALSE FALSE FALSE
4418 FALSE  FALSE FALSE FALSE FALSE
4419 FALSE   TRUE FALSE FALSE FALSE
4420 FALSE  FALSE FALSE FALSE FALSE
4421 FALSE  FALSE FALSE FALSE FALSE
4422 FALSE  FALSE FALSE FALSE FALSE
4423 FALSE   TRUE FALSE FALSE FALSE
4424 FALSE  FALSE FALSE FALSE FALSE
4425 FALSE   TRUE FALSE FALSE FALSE
4426 FALSE  FALSE FALSE FALSE FALSE
4427 FALSE  FALSE FALSE FALSE FALSE
4428 FALSE  FALSE FALSE FALSE FALSE
4429 FALSE   TRUE FALSE FALSE FALSE
4430 FALSE  FALSE FALSE FALSE FALSE
4431 FALSE   TRUE FALSE FALSE FALSE
4432 FALSE  FALSE FALSE FALSE FALSE
4433 FALSE   TRUE FALSE FALSE FALSE
4434 FALSE  FALSE FALSE FALSE FALSE
4435 FALSE  FALSE FALSE FALSE FALSE
4436 FALSE  FALSE FALSE FALSE FALSE
4437 FALSE  FALSE FALSE FALSE FALSE
4438 FALSE   TRUE FALSE FALSE FALSE
4439 FALSE  FALSE FALSE FALSE FALSE
4440 FALSE   TRUE FALSE FALSE FALSE
4441 FALSE  FALSE FALSE FALSE FALSE
4442 FALSE   TRUE FALSE FALSE FALSE
4443 FALSE  FALSE FALSE FALSE FALSE
4444 FALSE   TRUE FALSE FALSE FALSE
4445 FALSE  FALSE FALSE FALSE FALSE
4446 FALSE  FALSE FALSE FALSE FALSE
4447 FALSE   TRUE FALSE FALSE FALSE
4448 FALSE  FALSE FALSE FALSE FALSE
4449 FALSE  FALSE FALSE FALSE FALSE
4450 FALSE   TRUE FALSE FALSE FALSE
4451 FALSE  FALSE FALSE FALSE FALSE
4452 FALSE   TRUE FALSE FALSE FALSE
4453 FALSE  FALSE FALSE FALSE FALSE
4454 FALSE   TRUE FALSE FALSE FALSE
4455 FALSE  FALSE FALSE FALSE FALSE
4456 FALSE   TRUE FALSE FALSE FALSE
4457 FALSE  FALSE FALSE FALSE FALSE
4458 FALSE  FALSE FALSE FALSE FALSE
4459 FALSE   TRUE FALSE FALSE FALSE
4460 FALSE  FALSE FALSE FALSE FALSE
4461 FALSE  FALSE FALSE FALSE FALSE
4462 FALSE   TRUE FALSE FALSE FALSE
4463 FALSE   TRUE FALSE FALSE FALSE
4464 FALSE  FALSE FALSE FALSE FALSE
4465 FALSE  FALSE FALSE FALSE FALSE
4466 FALSE   TRUE FALSE FALSE FALSE
4467 FALSE  FALSE FALSE FALSE FALSE
4468 FALSE   TRUE FALSE FALSE FALSE
4469 FALSE  FALSE FALSE FALSE FALSE
4470 FALSE   TRUE FALSE FALSE FALSE
4471 FALSE  FALSE FALSE FALSE FALSE
4472 FALSE  FALSE FALSE FALSE FALSE
4473 FALSE  FALSE FALSE FALSE FALSE
4474 FALSE   TRUE FALSE FALSE FALSE
4475 FALSE  FALSE FALSE FALSE FALSE
4476 FALSE   TRUE FALSE FALSE FALSE
4477 FALSE  FALSE FALSE FALSE FALSE
4478 FALSE  FALSE FALSE FALSE FALSE
4479 FALSE  FALSE FALSE FALSE FALSE
4480 FALSE   TRUE FALSE FALSE FALSE
4481 FALSE  FALSE FALSE FALSE FALSE
4482 FALSE   TRUE FALSE FALSE FALSE
4483 FALSE  FALSE FALSE FALSE FALSE
4484 FALSE  FALSE FALSE FALSE FALSE
4485 FALSE  FALSE FALSE FALSE FALSE
4486 FALSE   TRUE FALSE FALSE FALSE
4487 FALSE  FALSE FALSE FALSE FALSE
4488 FALSE   TRUE FALSE FALSE FALSE
4489 FALSE  FALSE FALSE FALSE FALSE
4490 FALSE   TRUE FALSE FALSE FALSE
4491 FALSE  FALSE FALSE FALSE FALSE
4492 FALSE  FALSE FALSE FALSE FALSE
4493 FALSE  FALSE FALSE FALSE FALSE
4494 FALSE  FALSE FALSE FALSE FALSE
4495 FALSE   TRUE FALSE FALSE FALSE
4496 FALSE  FALSE FALSE FALSE FALSE
4497 FALSE   TRUE FALSE FALSE FALSE
4498 FALSE  FALSE FALSE FALSE FALSE
4499 FALSE   TRUE FALSE FALSE FALSE
4500 FALSE  FALSE FALSE FALSE FALSE
4501 FALSE   TRUE FALSE FALSE FALSE
4502 FALSE  FALSE FALSE FALSE FALSE
4503 FALSE  FALSE FALSE FALSE FALSE
4504 FALSE   TRUE FALSE FALSE FALSE
4505 FALSE  FALSE FALSE FALSE FALSE
4506 FALSE  FALSE FALSE FALSE FALSE
4507 FALSE   TRUE FALSE FALSE FALSE
4508 FALSE  FALSE FALSE FALSE FALSE
4509 FALSE   TRUE FALSE FALSE FALSE
4510 FALSE  FALSE FALSE FALSE FALSE
4511 FALSE   TRUE FALSE FALSE FALSE
4512 FALSE  FALSE FALSE FALSE FALSE
4513 FALSE   TRUE FALSE FALSE FALSE
4514 FALSE  FALSE FALSE FALSE FALSE
4515 FALSE  FALSE FALSE FALSE FALSE
4516 FALSE   TRUE FALSE FALSE FALSE
4517 FALSE  FALSE FALSE FALSE FALSE
4518 FALSE  FALSE FALSE FALSE FALSE
4519 FALSE   TRUE FALSE FALSE FALSE
4520 FALSE   TRUE FALSE FALSE FALSE
4521 FALSE  FALSE FALSE FALSE FALSE
4522 FALSE  FALSE FALSE FALSE FALSE
4523 FALSE   TRUE FALSE FALSE FALSE
4524 FALSE  FALSE FALSE FALSE FALSE
4525 FALSE   TRUE FALSE FALSE FALSE
4526 FALSE  FALSE FALSE FALSE FALSE
4527 FALSE   TRUE FALSE FALSE FALSE
4528 FALSE  FALSE FALSE FALSE FALSE
4529 FALSE  FALSE FALSE FALSE FALSE
4530 FALSE  FALSE FALSE FALSE FALSE
4531 FALSE   TRUE FALSE FALSE FALSE
4532 FALSE  FALSE FALSE FALSE FALSE
4533 FALSE   TRUE FALSE FALSE FALSE
4534 FALSE  FALSE FALSE FALSE FALSE
4535 FALSE  FALSE FALSE FALSE FALSE
4536 FALSE  FALSE FALSE FALSE FALSE
4537 FALSE   TRUE FALSE FALSE FALSE
4538 FALSE  FALSE FALSE FALSE FALSE
4539 FALSE   TRUE FALSE FALSE FALSE
4540 FALSE  FALSE FALSE FALSE FALSE
4541 FALSE  FALSE FALSE FALSE FALSE
4542 FALSE  FALSE FALSE FALSE FALSE
4543 FALSE   TRUE FALSE FALSE FALSE
4544 FALSE  FALSE FALSE FALSE FALSE
4545 FALSE   TRUE FALSE FALSE FALSE
4546 FALSE  FALSE FALSE FALSE FALSE
4547 FALSE   TRUE FALSE FALSE FALSE
4548 FALSE  FALSE FALSE FALSE FALSE
4549 FALSE  FALSE FALSE FALSE FALSE
4550 FALSE  FALSE FALSE FALSE FALSE
4551 FALSE  FALSE FALSE FALSE FALSE
4552 FALSE   TRUE FALSE FALSE FALSE
4553 FALSE  FALSE FALSE FALSE FALSE
4554 FALSE   TRUE FALSE FALSE FALSE
4555 FALSE  FALSE FALSE FALSE FALSE
4556 FALSE   TRUE FALSE FALSE FALSE
4557 FALSE  FALSE FALSE FALSE FALSE
4558 FALSE   TRUE FALSE FALSE FALSE
4559 FALSE  FALSE FALSE FALSE FALSE
4560 FALSE  FALSE FALSE FALSE FALSE
4561 FALSE   TRUE FALSE FALSE FALSE
4562 FALSE  FALSE FALSE FALSE FALSE
4563 FALSE  FALSE FALSE FALSE FALSE
4564 FALSE   TRUE FALSE FALSE FALSE
4565 FALSE  FALSE FALSE FALSE FALSE
4566 FALSE   TRUE FALSE FALSE FALSE
4567 FALSE  FALSE FALSE FALSE FALSE
4568 FALSE   TRUE FALSE FALSE FALSE
4569 FALSE  FALSE FALSE FALSE FALSE
4570 FALSE   TRUE FALSE FALSE FALSE
4571 FALSE  FALSE FALSE FALSE FALSE
4572 FALSE  FALSE FALSE FALSE FALSE
4573 FALSE   TRUE FALSE FALSE FALSE
4574 FALSE  FALSE FALSE FALSE FALSE
4575 FALSE  FALSE FALSE FALSE FALSE
4576 FALSE   TRUE FALSE FALSE FALSE
4577 FALSE   TRUE FALSE FALSE FALSE
4578 FALSE  FALSE FALSE FALSE FALSE
4579 FALSE  FALSE FALSE FALSE FALSE
4580 FALSE   TRUE FALSE FALSE FALSE
4581 FALSE  FALSE FALSE FALSE FALSE
4582 FALSE   TRUE FALSE FALSE FALSE
4583 FALSE  FALSE FALSE FALSE FALSE
4584 FALSE   TRUE FALSE FALSE FALSE
4585 FALSE  FALSE FALSE FALSE FALSE
4586 FALSE  FALSE FALSE FALSE FALSE
4587 FALSE  FALSE FALSE FALSE FALSE
4588 FALSE   TRUE FALSE FALSE FALSE
4589 FALSE  FALSE FALSE FALSE FALSE
4590 FALSE   TRUE FALSE FALSE FALSE
4591 FALSE  FALSE FALSE FALSE FALSE
4592 FALSE  FALSE FALSE FALSE FALSE
4593 FALSE  FALSE FALSE FALSE FALSE
4594 FALSE   TRUE FALSE FALSE FALSE
4595 FALSE  FALSE FALSE FALSE FALSE
4596 FALSE   TRUE FALSE FALSE FALSE
4597 FALSE  FALSE FALSE FALSE FALSE
4598 FALSE  FALSE FALSE FALSE FALSE
4599 FALSE  FALSE FALSE FALSE FALSE
4600 FALSE   TRUE FALSE FALSE FALSE
4601 FALSE  FALSE FALSE FALSE FALSE
4602 FALSE   TRUE FALSE FALSE FALSE
4603 FALSE  FALSE FALSE FALSE FALSE
4604 FALSE   TRUE FALSE FALSE FALSE
4605 FALSE  FALSE FALSE FALSE FALSE
4606 FALSE  FALSE FALSE FALSE FALSE
4607 FALSE  FALSE FALSE FALSE FALSE
4608 FALSE  FALSE FALSE FALSE FALSE
4609 FALSE   TRUE FALSE FALSE FALSE
4610 FALSE  FALSE FALSE FALSE FALSE
4611 FALSE   TRUE FALSE FALSE FALSE
4612 FALSE  FALSE FALSE FALSE FALSE
4613 FALSE   TRUE FALSE FALSE FALSE
4614 FALSE  FALSE FALSE FALSE FALSE
4615 FALSE   TRUE FALSE FALSE FALSE
4616 FALSE  FALSE FALSE FALSE FALSE
4617 FALSE  FALSE FALSE FALSE FALSE
4618 FALSE   TRUE FALSE FALSE FALSE
4619 FALSE  FALSE FALSE FALSE FALSE
4620 FALSE  FALSE FALSE FALSE FALSE
4621 FALSE   TRUE FALSE FALSE FALSE
4622 FALSE  FALSE FALSE FALSE FALSE
4623 FALSE   TRUE FALSE FALSE FALSE
4624 FALSE  FALSE FALSE FALSE FALSE
4625 FALSE   TRUE FALSE FALSE FALSE
4626 FALSE  FALSE FALSE FALSE FALSE
4627 FALSE   TRUE FALSE FALSE FALSE
4628 FALSE  FALSE FALSE FALSE FALSE
4629 FALSE  FALSE FALSE FALSE FALSE
4630 FALSE   TRUE FALSE FALSE FALSE
4631 FALSE  FALSE FALSE FALSE FALSE
4632 FALSE  FALSE FALSE FALSE FALSE
4633 FALSE   TRUE FALSE FALSE FALSE
4634 FALSE   TRUE FALSE FALSE FALSE
4635 FALSE  FALSE FALSE FALSE FALSE
4636 FALSE  FALSE FALSE FALSE FALSE
4637 FALSE   TRUE FALSE FALSE FALSE
4638 FALSE  FALSE FALSE FALSE FALSE
4639 FALSE   TRUE FALSE FALSE FALSE
4640 FALSE  FALSE FALSE FALSE FALSE
4641 FALSE   TRUE FALSE FALSE FALSE
4642 FALSE  FALSE FALSE FALSE FALSE
4643 FALSE  FALSE FALSE FALSE FALSE
4644 FALSE  FALSE FALSE FALSE FALSE
4645 FALSE   TRUE FALSE FALSE FALSE
4646 FALSE  FALSE FALSE FALSE FALSE
4647 FALSE   TRUE FALSE FALSE FALSE
4648 FALSE  FALSE FALSE FALSE FALSE
4649 FALSE  FALSE FALSE FALSE FALSE
4650 FALSE  FALSE FALSE FALSE FALSE
4651 FALSE   TRUE FALSE FALSE FALSE
4652 FALSE  FALSE FALSE FALSE FALSE
4653 FALSE   TRUE FALSE FALSE FALSE
4654 FALSE  FALSE FALSE FALSE FALSE
4655 FALSE  FALSE FALSE FALSE FALSE
4656 FALSE  FALSE FALSE FALSE FALSE
4657 FALSE   TRUE FALSE FALSE FALSE
4658 FALSE  FALSE FALSE FALSE FALSE
4659 FALSE   TRUE FALSE FALSE FALSE
4660 FALSE  FALSE FALSE FALSE FALSE
4661 FALSE   TRUE FALSE FALSE FALSE
4662 FALSE  FALSE FALSE FALSE FALSE
4663 FALSE  FALSE FALSE FALSE FALSE
4664 FALSE  FALSE FALSE FALSE FALSE
4665 FALSE  FALSE FALSE FALSE FALSE
4666 FALSE   TRUE FALSE FALSE FALSE
4667 FALSE  FALSE FALSE FALSE FALSE
4668 FALSE   TRUE FALSE FALSE FALSE
4669 FALSE  FALSE FALSE FALSE FALSE
4670 FALSE   TRUE FALSE FALSE FALSE
4671 FALSE  FALSE FALSE FALSE FALSE
4672 FALSE   TRUE FALSE FALSE FALSE
4673 FALSE  FALSE FALSE FALSE FALSE
4674 FALSE  FALSE FALSE FALSE FALSE
4675 FALSE   TRUE FALSE FALSE FALSE
4676 FALSE  FALSE FALSE FALSE FALSE
4677 FALSE  FALSE FALSE FALSE FALSE
4678 FALSE   TRUE FALSE FALSE FALSE
4679 FALSE  FALSE FALSE FALSE FALSE
4680 FALSE   TRUE FALSE FALSE FALSE
4681 FALSE  FALSE FALSE FALSE FALSE
4682 FALSE   TRUE FALSE FALSE FALSE
4683 FALSE  FALSE FALSE FALSE FALSE
4684 FALSE   TRUE FALSE FALSE FALSE
4685 FALSE  FALSE FALSE FALSE FALSE
4686 FALSE  FALSE FALSE FALSE FALSE
4687 FALSE   TRUE FALSE FALSE FALSE
4688 FALSE  FALSE FALSE FALSE FALSE
4689 FALSE  FALSE FALSE FALSE FALSE
4690 FALSE   TRUE FALSE FALSE FALSE
4691 FALSE   TRUE FALSE FALSE FALSE
4692 FALSE  FALSE FALSE FALSE FALSE
4693 FALSE  FALSE FALSE FALSE FALSE
4694 FALSE   TRUE FALSE FALSE FALSE
4695 FALSE  FALSE FALSE FALSE FALSE
4696 FALSE   TRUE FALSE FALSE FALSE
4697 FALSE  FALSE FALSE FALSE FALSE
4698 FALSE   TRUE FALSE FALSE FALSE
4699 FALSE  FALSE FALSE FALSE FALSE
4700 FALSE  FALSE FALSE FALSE FALSE
4701 FALSE  FALSE FALSE FALSE FALSE
4702 FALSE   TRUE FALSE FALSE FALSE
4703 FALSE  FALSE FALSE FALSE FALSE
4704 FALSE   TRUE FALSE FALSE FALSE
4705 FALSE  FALSE FALSE FALSE FALSE
4706 FALSE  FALSE FALSE FALSE FALSE
4707 FALSE  FALSE FALSE FALSE FALSE
4708 FALSE   TRUE FALSE FALSE FALSE
4709 FALSE  FALSE FALSE FALSE FALSE
4710 FALSE   TRUE FALSE FALSE FALSE
4711 FALSE  FALSE FALSE FALSE FALSE
4712 FALSE  FALSE FALSE FALSE FALSE
4713 FALSE  FALSE FALSE FALSE FALSE
4714 FALSE   TRUE FALSE FALSE FALSE
4715 FALSE  FALSE FALSE FALSE FALSE
4716 FALSE   TRUE FALSE FALSE FALSE
4717 FALSE  FALSE FALSE FALSE FALSE
4718 FALSE   TRUE FALSE FALSE FALSE
4719 FALSE  FALSE FALSE FALSE FALSE
4720 FALSE  FALSE FALSE FALSE FALSE
4721 FALSE  FALSE FALSE FALSE FALSE
4722 FALSE  FALSE FALSE FALSE FALSE
4723 FALSE   TRUE FALSE FALSE FALSE
4724 FALSE  FALSE FALSE FALSE FALSE
4725 FALSE   TRUE FALSE FALSE FALSE
4726 FALSE  FALSE FALSE FALSE FALSE
4727 FALSE   TRUE FALSE FALSE FALSE
4728 FALSE  FALSE FALSE FALSE FALSE
4729 FALSE   TRUE FALSE FALSE FALSE
4730 FALSE  FALSE FALSE FALSE FALSE
4731 FALSE  FALSE FALSE FALSE FALSE
4732 FALSE   TRUE FALSE FALSE FALSE
4733 FALSE  FALSE FALSE FALSE FALSE
4734 FALSE  FALSE FALSE FALSE FALSE
4735 FALSE   TRUE FALSE FALSE FALSE
4736 FALSE  FALSE FALSE FALSE FALSE
4737 FALSE   TRUE FALSE FALSE FALSE
4738 FALSE  FALSE FALSE FALSE FALSE
4739 FALSE   TRUE FALSE FALSE FALSE
4740 FALSE  FALSE FALSE FALSE FALSE
4741 FALSE   TRUE FALSE FALSE FALSE
4742 FALSE  FALSE FALSE FALSE FALSE
4743 FALSE  FALSE FALSE FALSE FALSE
4744 FALSE   TRUE FALSE FALSE FALSE
4745 FALSE  FALSE FALSE FALSE FALSE
4746 FALSE  FALSE FALSE FALSE FALSE
4747 FALSE   TRUE FALSE FALSE FALSE
4748 FALSE   TRUE FALSE FALSE FALSE
4749 FALSE  FALSE FALSE FALSE FALSE
4750 FALSE  FALSE FALSE FALSE FALSE
4751 FALSE   TRUE FALSE FALSE FALSE
4752 FALSE  FALSE FALSE FALSE FALSE
4753 FALSE   TRUE FALSE FALSE FALSE
4754 FALSE  FALSE FALSE FALSE FALSE
4755 FALSE   TRUE FALSE FALSE FALSE
4756 FALSE  FALSE FALSE FALSE FALSE
4757 FALSE  FALSE FALSE FALSE FALSE
4758 FALSE  FALSE FALSE FALSE FALSE
4759 FALSE   TRUE FALSE FALSE FALSE
4760 FALSE  FALSE FALSE FALSE FALSE
4761 FALSE   TRUE FALSE FALSE FALSE
4762 FALSE  FALSE FALSE FALSE FALSE
4763 FALSE  FALSE FALSE FALSE FALSE
4764 FALSE  FALSE FALSE FALSE FALSE
4765 FALSE   TRUE FALSE FALSE FALSE
4766 FALSE  FALSE FALSE FALSE FALSE
4767 FALSE   TRUE FALSE FALSE FALSE
4768 FALSE  FALSE FALSE FALSE FALSE
4769 FALSE  FALSE FALSE FALSE FALSE
4770 FALSE  FALSE FALSE FALSE FALSE
4771 FALSE   TRUE FALSE FALSE FALSE
4772 FALSE  FALSE FALSE FALSE FALSE
4773 FALSE   TRUE FALSE FALSE FALSE
4774 FALSE  FALSE FALSE FALSE FALSE
4775 FALSE   TRUE FALSE FALSE FALSE
4776 FALSE  FALSE FALSE FALSE FALSE
4777 FALSE  FALSE FALSE FALSE FALSE
4778 FALSE  FALSE FALSE FALSE FALSE
4779 FALSE  FALSE FALSE FALSE FALSE
4780 FALSE   TRUE FALSE FALSE FALSE
4781 FALSE  FALSE FALSE FALSE FALSE
4782 FALSE   TRUE FALSE FALSE FALSE
4783 FALSE  FALSE FALSE FALSE FALSE
4784 FALSE   TRUE FALSE FALSE FALSE
4785 FALSE  FALSE FALSE FALSE FALSE
4786 FALSE   TRUE FALSE FALSE FALSE
4787 FALSE  FALSE FALSE FALSE FALSE
4788 FALSE  FALSE FALSE FALSE FALSE
4789 FALSE   TRUE FALSE FALSE FALSE
4790 FALSE  FALSE FALSE FALSE FALSE
4791 FALSE  FALSE FALSE FALSE FALSE
4792 FALSE   TRUE FALSE FALSE FALSE
4793 FALSE  FALSE FALSE FALSE FALSE
4794 FALSE   TRUE FALSE FALSE FALSE
4795 FALSE  FALSE FALSE FALSE FALSE
4796 FALSE   TRUE FALSE FALSE FALSE
4797 FALSE  FALSE FALSE FALSE FALSE
4798 FALSE   TRUE FALSE FALSE FALSE
4799 FALSE  FALSE FALSE FALSE FALSE
4800 FALSE  FALSE FALSE FALSE FALSE
4801 FALSE   TRUE FALSE FALSE FALSE
4802 FALSE  FALSE FALSE FALSE FALSE
4803 FALSE  FALSE FALSE FALSE FALSE
4804 FALSE   TRUE FALSE FALSE FALSE
4805 FALSE   TRUE FALSE FALSE FALSE
4806 FALSE  FALSE FALSE FALSE FALSE
4807 FALSE  FALSE FALSE FALSE FALSE
4808 FALSE   TRUE FALSE FALSE FALSE
4809 FALSE  FALSE FALSE FALSE FALSE
4810 FALSE   TRUE FALSE FALSE FALSE
4811 FALSE  FALSE FALSE FALSE FALSE
4812 FALSE   TRUE FALSE FALSE FALSE
4813 FALSE  FALSE FALSE FALSE FALSE
4814 FALSE  FALSE FALSE FALSE FALSE
4815 FALSE  FALSE FALSE FALSE FALSE
4816 FALSE   TRUE FALSE FALSE FALSE
4817 FALSE  FALSE FALSE FALSE FALSE
4818 FALSE   TRUE FALSE FALSE FALSE
4819 FALSE  FALSE FALSE FALSE FALSE
4820 FALSE  FALSE FALSE FALSE FALSE
4821 FALSE  FALSE FALSE FALSE FALSE
4822 FALSE   TRUE FALSE FALSE FALSE
4823 FALSE  FALSE FALSE FALSE FALSE
4824 FALSE   TRUE FALSE FALSE FALSE
4825 FALSE  FALSE FALSE FALSE FALSE
4826 FALSE  FALSE FALSE FALSE FALSE
4827 FALSE  FALSE FALSE FALSE FALSE
4828 FALSE   TRUE FALSE FALSE FALSE
4829 FALSE  FALSE FALSE FALSE FALSE
4830 FALSE   TRUE FALSE FALSE FALSE
4831 FALSE  FALSE FALSE FALSE FALSE
4832 FALSE   TRUE FALSE FALSE FALSE
4833 FALSE  FALSE FALSE FALSE FALSE
4834 FALSE  FALSE FALSE FALSE FALSE
4835 FALSE  FALSE FALSE FALSE FALSE
4836 FALSE  FALSE FALSE FALSE FALSE
4837 FALSE   TRUE FALSE FALSE FALSE
4838 FALSE  FALSE FALSE FALSE FALSE
4839 FALSE   TRUE FALSE FALSE FALSE
4840 FALSE  FALSE FALSE FALSE FALSE
4841 FALSE   TRUE FALSE FALSE FALSE
4842 FALSE  FALSE FALSE FALSE FALSE
4843 FALSE   TRUE FALSE FALSE FALSE
4844 FALSE  FALSE FALSE FALSE FALSE
4845 FALSE  FALSE FALSE FALSE FALSE
4846 FALSE   TRUE FALSE FALSE FALSE
4847 FALSE  FALSE FALSE FALSE FALSE
4848 FALSE  FALSE FALSE FALSE FALSE
4849 FALSE   TRUE FALSE FALSE FALSE
4850 FALSE  FALSE FALSE FALSE FALSE
4851 FALSE   TRUE FALSE FALSE FALSE
4852 FALSE  FALSE FALSE FALSE FALSE
4853 FALSE   TRUE FALSE FALSE FALSE
4854 FALSE  FALSE FALSE FALSE FALSE
4855 FALSE   TRUE FALSE FALSE FALSE
4856 FALSE  FALSE FALSE FALSE FALSE
4857 FALSE  FALSE FALSE FALSE FALSE
4858 FALSE   TRUE FALSE FALSE FALSE
4859 FALSE  FALSE FALSE FALSE FALSE
4860 FALSE  FALSE FALSE FALSE FALSE
4861 FALSE   TRUE FALSE FALSE FALSE
4862 FALSE   TRUE FALSE FALSE FALSE
4863 FALSE  FALSE FALSE FALSE FALSE
4864 FALSE  FALSE FALSE FALSE FALSE
4865 FALSE   TRUE FALSE FALSE FALSE
4866 FALSE  FALSE FALSE FALSE FALSE
4867 FALSE   TRUE FALSE FALSE FALSE
4868 FALSE  FALSE FALSE FALSE FALSE
4869 FALSE   TRUE FALSE FALSE FALSE
4870 FALSE  FALSE FALSE FALSE FALSE
4871 FALSE  FALSE FALSE FALSE FALSE
4872 FALSE  FALSE FALSE FALSE FALSE
4873 FALSE   TRUE FALSE FALSE FALSE
4874 FALSE  FALSE FALSE FALSE FALSE
4875 FALSE   TRUE FALSE FALSE FALSE
4876 FALSE  FALSE FALSE FALSE FALSE
4877 FALSE  FALSE FALSE FALSE FALSE
4878 FALSE  FALSE FALSE FALSE FALSE
4879 FALSE   TRUE FALSE FALSE FALSE
4880 FALSE  FALSE FALSE FALSE FALSE
4881 FALSE   TRUE FALSE FALSE FALSE
4882 FALSE  FALSE FALSE FALSE FALSE
4883 FALSE  FALSE FALSE FALSE FALSE
4884 FALSE  FALSE FALSE FALSE FALSE
4885 FALSE   TRUE FALSE FALSE FALSE
4886 FALSE  FALSE FALSE FALSE FALSE
4887 FALSE   TRUE FALSE FALSE FALSE
4888 FALSE  FALSE FALSE FALSE FALSE
4889 FALSE   TRUE FALSE FALSE FALSE
4890 FALSE  FALSE FALSE FALSE FALSE
4891 FALSE  FALSE FALSE FALSE FALSE
4892 FALSE  FALSE FALSE FALSE FALSE
4893 FALSE  FALSE FALSE FALSE FALSE
4894 FALSE   TRUE FALSE FALSE FALSE
4895 FALSE  FALSE FALSE FALSE FALSE
4896 FALSE   TRUE FALSE FALSE FALSE
4897 FALSE  FALSE FALSE FALSE FALSE
4898 FALSE   TRUE FALSE FALSE FALSE
4899 FALSE  FALSE FALSE FALSE FALSE
4900 FALSE   TRUE FALSE FALSE FALSE
4901 FALSE  FALSE FALSE FALSE FALSE
4902 FALSE  FALSE FALSE FALSE FALSE
4903 FALSE   TRUE FALSE FALSE FALSE
4904 FALSE  FALSE FALSE FALSE FALSE
4905 FALSE  FALSE FALSE FALSE FALSE
4906 FALSE   TRUE FALSE FALSE FALSE
4907 FALSE  FALSE FALSE FALSE FALSE
4908 FALSE   TRUE FALSE FALSE FALSE
4909 FALSE  FALSE FALSE FALSE FALSE
4910 FALSE   TRUE FALSE FALSE FALSE
4911 FALSE  FALSE FALSE FALSE FALSE
4912 FALSE   TRUE FALSE FALSE FALSE
4913 FALSE  FALSE FALSE FALSE FALSE
4914 FALSE  FALSE FALSE FALSE FALSE
4915 FALSE   TRUE FALSE FALSE FALSE
4916 FALSE  FALSE FALSE FALSE FALSE
4917 FALSE  FALSE FALSE FALSE FALSE
4918 FALSE   TRUE FALSE FALSE FALSE
4919 FALSE   TRUE FALSE FALSE FALSE
4920 FALSE  FALSE FALSE FALSE FALSE
4921 FALSE  FALSE FALSE FALSE FALSE
4922 FALSE   TRUE FALSE FALSE FALSE
4923 FALSE  FALSE FALSE FALSE FALSE
4924 FALSE   TRUE FALSE FALSE FALSE
4925 FALSE  FALSE FALSE FALSE FALSE
4926 FALSE   TRUE FALSE FALSE FALSE
4927 FALSE  FALSE FALSE FALSE FALSE
4928 FALSE  FALSE FALSE FALSE FALSE
4929 FALSE  FALSE FALSE FALSE FALSE
4930 FALSE   TRUE FALSE FALSE FALSE
4931 FALSE  FALSE FALSE FALSE FALSE
4932 FALSE   TRUE FALSE FALSE FALSE
4933 FALSE  FALSE FALSE FALSE FALSE
4934 FALSE  FALSE FALSE FALSE FALSE
4935 FALSE  FALSE FALSE FALSE FALSE
4936 FALSE   TRUE FALSE FALSE FALSE
4937 FALSE  FALSE FALSE FALSE FALSE
4938 FALSE   TRUE FALSE FALSE FALSE
4939 FALSE  FALSE FALSE FALSE FALSE
4940 FALSE  FALSE FALSE FALSE FALSE
4941 FALSE  FALSE FALSE FALSE FALSE
4942 FALSE   TRUE FALSE FALSE FALSE
4943 FALSE  FALSE FALSE FALSE FALSE
4944 FALSE   TRUE FALSE FALSE FALSE
4945 FALSE  FALSE FALSE FALSE FALSE
4946 FALSE   TRUE FALSE FALSE FALSE
4947 FALSE  FALSE FALSE FALSE FALSE
4948 FALSE  FALSE FALSE FALSE FALSE
4949 FALSE  FALSE FALSE FALSE FALSE
4950 FALSE  FALSE FALSE FALSE FALSE
4951 FALSE   TRUE FALSE FALSE FALSE
4952 FALSE  FALSE FALSE FALSE FALSE
4953 FALSE   TRUE FALSE FALSE FALSE
4954 FALSE  FALSE FALSE FALSE FALSE
4955 FALSE   TRUE FALSE FALSE FALSE
4956 FALSE  FALSE FALSE FALSE FALSE
4957 FALSE   TRUE FALSE FALSE FALSE
4958 FALSE  FALSE FALSE FALSE FALSE
4959 FALSE  FALSE FALSE FALSE FALSE
4960 FALSE   TRUE FALSE FALSE FALSE
4961 FALSE  FALSE FALSE FALSE FALSE
4962 FALSE  FALSE FALSE FALSE FALSE
4963 FALSE   TRUE FALSE FALSE FALSE
4964 FALSE  FALSE FALSE FALSE FALSE
4965 FALSE   TRUE FALSE FALSE FALSE
4966 FALSE  FALSE FALSE FALSE FALSE
4967 FALSE   TRUE FALSE FALSE FALSE
4968 FALSE  FALSE FALSE FALSE FALSE
4969 FALSE   TRUE FALSE FALSE FALSE
4970 FALSE  FALSE FALSE FALSE FALSE
4971 FALSE  FALSE FALSE FALSE FALSE
4972 FALSE   TRUE FALSE FALSE FALSE
4973 FALSE  FALSE FALSE FALSE FALSE
4974 FALSE  FALSE FALSE FALSE FALSE
4975 FALSE   TRUE FALSE FALSE FALSE
4976 FALSE   TRUE FALSE FALSE FALSE
4977 FALSE  FALSE FALSE FALSE FALSE
4978 FALSE  FALSE FALSE FALSE FALSE
4979 FALSE   TRUE FALSE FALSE FALSE
4980 FALSE  FALSE FALSE FALSE FALSE
4981 FALSE   TRUE FALSE FALSE FALSE
4982 FALSE  FALSE FALSE FALSE FALSE
4983 FALSE   TRUE FALSE FALSE FALSE
4984 FALSE  FALSE FALSE FALSE FALSE
4985 FALSE  FALSE FALSE FALSE FALSE
4986 FALSE  FALSE FALSE FALSE FALSE
4987 FALSE   TRUE FALSE FALSE FALSE
4988 FALSE  FALSE FALSE FALSE FALSE
4989 FALSE   TRUE FALSE FALSE FALSE
4990 FALSE  FALSE FALSE FALSE FALSE
4991 FALSE  FALSE FALSE FALSE FALSE
4992 FALSE  FALSE FALSE FALSE FALSE
4993 FALSE   TRUE FALSE FALSE FALSE
4994 FALSE  FALSE FALSE FALSE FALSE
4995 FALSE   TRUE FALSE FALSE FALSE
4996 FALSE  FALSE FALSE FALSE FALSE
4997 FALSE  FALSE FALSE FALSE FALSE
4998 FALSE  FALSE FALSE FALSE FALSE
4999 FALSE   TRUE FALSE FALSE FALSE
5000 FALSE  FALSE FALSE FALSE FALSE
5001 FALSE   TRUE FALSE FALSE FALSE
5002 FALSE  FALSE FALSE FALSE FALSE
5003 FALSE   TRUE FALSE FALSE FALSE
5004 FALSE  FALSE FALSE FALSE FALSE
5005 FALSE  FALSE FALSE FALSE FALSE
5006 FALSE  FALSE FALSE FALSE FALSE
5007 FALSE  FALSE FALSE FALSE FALSE
5008 FALSE   TRUE FALSE FALSE FALSE
5009 FALSE  FALSE FALSE FALSE FALSE
5010 FALSE   TRUE FALSE FALSE FALSE
5011 FALSE  FALSE FALSE FALSE FALSE
5012 FALSE   TRUE FALSE FALSE FALSE
5013 FALSE  FALSE FALSE FALSE FALSE
5014 FALSE   TRUE FALSE FALSE FALSE
5015 FALSE  FALSE FALSE FALSE FALSE
5016 FALSE  FALSE FALSE FALSE FALSE
5017 FALSE   TRUE FALSE FALSE FALSE
5018 FALSE  FALSE FALSE FALSE FALSE
5019 FALSE  FALSE FALSE FALSE FALSE
5020 FALSE   TRUE FALSE FALSE FALSE
5021 FALSE  FALSE FALSE FALSE FALSE
5022 FALSE   TRUE FALSE FALSE FALSE
5023 FALSE  FALSE FALSE FALSE FALSE
5024 FALSE   TRUE FALSE FALSE FALSE
5025 FALSE  FALSE FALSE FALSE FALSE
5026 FALSE   TRUE FALSE FALSE FALSE
5027 FALSE  FALSE FALSE FALSE FALSE
5028 FALSE  FALSE FALSE FALSE FALSE
5029 FALSE   TRUE FALSE FALSE FALSE
5030 FALSE  FALSE FALSE FALSE FALSE
5031 FALSE  FALSE FALSE FALSE FALSE
5032 FALSE   TRUE FALSE FALSE FALSE
5033 FALSE   TRUE FALSE FALSE FALSE
5034 FALSE  FALSE FALSE FALSE FALSE
5035 FALSE  FALSE FALSE FALSE FALSE
5036 FALSE   TRUE FALSE FALSE FALSE
5037 FALSE  FALSE FALSE FALSE FALSE
5038 FALSE   TRUE FALSE FALSE FALSE
5039 FALSE  FALSE FALSE FALSE FALSE
5040 FALSE   TRUE FALSE FALSE FALSE
5041 FALSE  FALSE FALSE FALSE FALSE
5042 FALSE  FALSE FALSE FALSE FALSE
5043 FALSE  FALSE FALSE FALSE FALSE
5044 FALSE   TRUE FALSE FALSE FALSE
5045 FALSE  FALSE FALSE FALSE FALSE
5046 FALSE   TRUE FALSE FALSE FALSE
5047 FALSE  FALSE FALSE FALSE FALSE
5048 FALSE  FALSE FALSE FALSE FALSE
5049 FALSE  FALSE FALSE FALSE FALSE
5050 FALSE   TRUE FALSE FALSE FALSE
5051 FALSE  FALSE FALSE FALSE FALSE
5052 FALSE   TRUE FALSE FALSE FALSE
5053 FALSE  FALSE FALSE FALSE FALSE
5054 FALSE  FALSE FALSE FALSE FALSE
5055 FALSE  FALSE FALSE FALSE FALSE
5056 FALSE   TRUE FALSE FALSE FALSE
5057 FALSE  FALSE FALSE FALSE FALSE
5058 FALSE   TRUE FALSE FALSE FALSE
5059 FALSE  FALSE FALSE FALSE FALSE
5060 FALSE   TRUE FALSE FALSE FALSE
5061 FALSE  FALSE FALSE FALSE FALSE
5062 FALSE  FALSE FALSE FALSE FALSE
5063 FALSE  FALSE FALSE FALSE FALSE
5064 FALSE  FALSE FALSE FALSE FALSE
5065 FALSE   TRUE FALSE FALSE FALSE
5066 FALSE  FALSE FALSE FALSE FALSE
5067 FALSE   TRUE FALSE FALSE FALSE
5068 FALSE  FALSE FALSE FALSE FALSE
5069 FALSE   TRUE FALSE FALSE FALSE
5070 FALSE  FALSE FALSE FALSE FALSE
5071 FALSE   TRUE FALSE FALSE FALSE
5072 FALSE  FALSE FALSE FALSE FALSE
5073 FALSE  FALSE FALSE FALSE FALSE
5074 FALSE   TRUE FALSE FALSE FALSE
5075 FALSE  FALSE FALSE FALSE FALSE
5076 FALSE  FALSE FALSE FALSE FALSE
5077 FALSE   TRUE FALSE FALSE FALSE
5078 FALSE  FALSE FALSE FALSE FALSE
5079 FALSE   TRUE FALSE FALSE FALSE
5080 FALSE  FALSE FALSE FALSE FALSE
5081 FALSE   TRUE FALSE FALSE FALSE
5082 FALSE  FALSE FALSE FALSE FALSE
5083 FALSE   TRUE FALSE FALSE FALSE
5084 FALSE  FALSE FALSE FALSE FALSE
5085 FALSE  FALSE FALSE FALSE FALSE
5086 FALSE   TRUE FALSE FALSE FALSE
5087 FALSE  FALSE FALSE FALSE FALSE
5088 FALSE  FALSE FALSE FALSE FALSE
5089 FALSE   TRUE FALSE FALSE FALSE
5090 FALSE   TRUE FALSE FALSE FALSE
5091 FALSE  FALSE FALSE FALSE FALSE
5092 FALSE  FALSE FALSE FALSE FALSE
5093 FALSE   TRUE FALSE FALSE FALSE
5094 FALSE  FALSE FALSE FALSE FALSE
5095 FALSE   TRUE FALSE FALSE FALSE
5096 FALSE  FALSE FALSE FALSE FALSE
5097 FALSE   TRUE FALSE FALSE FALSE
5098 FALSE  FALSE FALSE FALSE FALSE
5099 FALSE  FALSE FALSE FALSE FALSE
5100 FALSE  FALSE FALSE FALSE FALSE
5101 FALSE   TRUE FALSE FALSE FALSE
5102 FALSE  FALSE FALSE FALSE FALSE
5103 FALSE   TRUE FALSE FALSE FALSE
5104 FALSE  FALSE FALSE FALSE FALSE
5105 FALSE  FALSE FALSE FALSE FALSE
5106 FALSE  FALSE FALSE FALSE FALSE
5107 FALSE   TRUE FALSE FALSE FALSE
5108 FALSE  FALSE FALSE FALSE FALSE
5109 FALSE   TRUE FALSE FALSE FALSE
5110 FALSE  FALSE FALSE FALSE FALSE
5111 FALSE  FALSE FALSE FALSE FALSE
5112 FALSE  FALSE FALSE FALSE FALSE
5113 FALSE   TRUE FALSE FALSE FALSE
5114 FALSE  FALSE FALSE FALSE FALSE
5115 FALSE   TRUE FALSE FALSE FALSE
5116 FALSE  FALSE FALSE FALSE FALSE
5117 FALSE   TRUE FALSE FALSE FALSE
5118 FALSE  FALSE FALSE FALSE FALSE
5119 FALSE  FALSE FALSE FALSE FALSE
5120 FALSE  FALSE FALSE FALSE FALSE
5121 FALSE  FALSE FALSE FALSE FALSE
5122 FALSE   TRUE FALSE FALSE FALSE
5123 FALSE  FALSE FALSE FALSE FALSE
5124 FALSE   TRUE FALSE FALSE FALSE
5125 FALSE  FALSE FALSE FALSE FALSE
5126 FALSE   TRUE FALSE FALSE FALSE
5127 FALSE  FALSE FALSE FALSE FALSE
5128 FALSE   TRUE FALSE FALSE FALSE
5129 FALSE  FALSE FALSE FALSE FALSE
5130 FALSE  FALSE FALSE FALSE FALSE
5131 FALSE   TRUE FALSE FALSE FALSE
5132 FALSE  FALSE FALSE FALSE FALSE
5133 FALSE  FALSE FALSE FALSE FALSE
5134 FALSE   TRUE FALSE FALSE FALSE
5135 FALSE  FALSE FALSE FALSE FALSE
5136 FALSE   TRUE FALSE FALSE FALSE
5137 FALSE  FALSE FALSE FALSE FALSE
5138 FALSE   TRUE FALSE FALSE FALSE
5139 FALSE  FALSE FALSE FALSE FALSE
5140 FALSE   TRUE FALSE FALSE FALSE
5141 FALSE  FALSE FALSE FALSE FALSE
5142 FALSE  FALSE FALSE FALSE FALSE
5143 FALSE   TRUE FALSE FALSE FALSE
5144 FALSE  FALSE FALSE FALSE FALSE
5145 FALSE  FALSE FALSE FALSE FALSE
5146 FALSE   TRUE FALSE FALSE FALSE
5147 FALSE   TRUE FALSE FALSE FALSE
5148 FALSE  FALSE FALSE FALSE FALSE
5149 FALSE  FALSE FALSE FALSE FALSE
5150 FALSE   TRUE FALSE FALSE FALSE
5151 FALSE  FALSE FALSE FALSE FALSE
5152 FALSE   TRUE FALSE FALSE FALSE
5153 FALSE  FALSE FALSE FALSE FALSE
5154 FALSE   TRUE FALSE FALSE FALSE
5155 FALSE  FALSE FALSE FALSE FALSE
5156 FALSE  FALSE FALSE FALSE FALSE
5157 FALSE  FALSE FALSE FALSE FALSE
5158 FALSE   TRUE FALSE FALSE FALSE
5159 FALSE  FALSE FALSE FALSE FALSE
5160 FALSE   TRUE FALSE FALSE FALSE
5161 FALSE  FALSE FALSE FALSE FALSE
5162 FALSE  FALSE FALSE FALSE FALSE
5163 FALSE  FALSE FALSE FALSE FALSE
5164 FALSE   TRUE FALSE FALSE FALSE
5165 FALSE  FALSE FALSE FALSE FALSE
5166 FALSE   TRUE FALSE FALSE FALSE
5167 FALSE  FALSE FALSE FALSE FALSE
5168 FALSE  FALSE FALSE FALSE FALSE
5169 FALSE  FALSE FALSE FALSE FALSE
5170 FALSE   TRUE FALSE FALSE FALSE
5171 FALSE  FALSE FALSE FALSE FALSE
5172 FALSE   TRUE FALSE FALSE FALSE
5173 FALSE  FALSE FALSE FALSE FALSE
5174 FALSE   TRUE FALSE FALSE FALSE
5175 FALSE  FALSE FALSE FALSE FALSE
5176 FALSE  FALSE FALSE FALSE FALSE
5177 FALSE  FALSE FALSE FALSE FALSE
5178 FALSE  FALSE FALSE FALSE FALSE
5179 FALSE   TRUE FALSE FALSE FALSE
5180 FALSE  FALSE FALSE FALSE FALSE
5181 FALSE   TRUE FALSE FALSE FALSE
5182 FALSE  FALSE FALSE FALSE FALSE
5183 FALSE   TRUE FALSE FALSE FALSE
5184 FALSE  FALSE FALSE FALSE FALSE
5185 FALSE   TRUE FALSE FALSE FALSE
5186 FALSE  FALSE FALSE FALSE FALSE
5187 FALSE  FALSE FALSE FALSE FALSE
5188 FALSE   TRUE FALSE FALSE FALSE
5189 FALSE  FALSE FALSE FALSE FALSE
5190 FALSE  FALSE FALSE FALSE FALSE
5191 FALSE   TRUE FALSE FALSE FALSE
5192 FALSE  FALSE FALSE FALSE FALSE
5193 FALSE   TRUE FALSE FALSE FALSE
5194 FALSE  FALSE FALSE FALSE FALSE
5195 FALSE   TRUE FALSE FALSE FALSE
5196 FALSE  FALSE FALSE FALSE FALSE
5197 FALSE   TRUE FALSE FALSE FALSE
5198 FALSE  FALSE FALSE FALSE FALSE
5199 FALSE  FALSE FALSE FALSE FALSE
5200 FALSE   TRUE FALSE FALSE FALSE
5201 FALSE  FALSE FALSE FALSE FALSE
5202 FALSE  FALSE FALSE FALSE FALSE
5203 FALSE   TRUE FALSE FALSE FALSE
5204 FALSE   TRUE FALSE FALSE FALSE
5205 FALSE  FALSE FALSE FALSE FALSE
5206 FALSE  FALSE FALSE FALSE FALSE
5207 FALSE   TRUE FALSE FALSE FALSE
5208 FALSE  FALSE FALSE FALSE FALSE
5209 FALSE   TRUE FALSE FALSE FALSE
5210 FALSE  FALSE FALSE FALSE FALSE
5211 FALSE   TRUE FALSE FALSE FALSE
5212 FALSE  FALSE FALSE FALSE FALSE
5213 FALSE  FALSE FALSE FALSE FALSE
5214 FALSE  FALSE FALSE FALSE FALSE
5215 FALSE   TRUE FALSE FALSE FALSE
5216 FALSE  FALSE FALSE FALSE FALSE
5217 FALSE   TRUE FALSE FALSE FALSE
5218 FALSE  FALSE FALSE FALSE FALSE
5219 FALSE  FALSE FALSE FALSE FALSE
5220 FALSE  FALSE FALSE FALSE FALSE
5221 FALSE   TRUE FALSE FALSE FALSE
5222 FALSE  FALSE FALSE FALSE FALSE
5223 FALSE   TRUE FALSE FALSE FALSE
5224 FALSE  FALSE FALSE FALSE FALSE
5225 FALSE  FALSE FALSE FALSE FALSE
5226 FALSE  FALSE FALSE FALSE FALSE
5227 FALSE   TRUE FALSE FALSE FALSE
5228 FALSE  FALSE FALSE FALSE FALSE
5229 FALSE   TRUE FALSE FALSE FALSE
5230 FALSE  FALSE FALSE FALSE FALSE
5231 FALSE   TRUE FALSE FALSE FALSE
5232 FALSE  FALSE FALSE FALSE FALSE
5233 FALSE  FALSE FALSE FALSE FALSE
5234 FALSE  FALSE FALSE FALSE FALSE
5235 FALSE  FALSE FALSE FALSE FALSE
5236 FALSE   TRUE FALSE FALSE FALSE
5237 FALSE  FALSE FALSE FALSE FALSE
5238 FALSE   TRUE FALSE FALSE FALSE
5239 FALSE  FALSE FALSE FALSE FALSE
5240 FALSE   TRUE FALSE FALSE FALSE
5241 FALSE  FALSE FALSE FALSE FALSE
5242 FALSE   TRUE FALSE FALSE FALSE
5243 FALSE  FALSE FALSE FALSE FALSE
5244 FALSE  FALSE FALSE FALSE FALSE
5245 FALSE   TRUE FALSE FALSE FALSE
5246 FALSE  FALSE FALSE FALSE FALSE
5247 FALSE  FALSE FALSE FALSE FALSE
5248 FALSE   TRUE FALSE FALSE FALSE
5249 FALSE  FALSE FALSE FALSE FALSE
5250 FALSE   TRUE FALSE FALSE FALSE
5251 FALSE  FALSE FALSE FALSE FALSE
5252 FALSE   TRUE FALSE FALSE FALSE
5253 FALSE  FALSE FALSE FALSE FALSE
5254 FALSE   TRUE FALSE FALSE FALSE
5255 FALSE  FALSE FALSE FALSE FALSE
5256 FALSE  FALSE FALSE FALSE FALSE
5257 FALSE   TRUE FALSE FALSE FALSE
5258 FALSE  FALSE FALSE FALSE FALSE
5259 FALSE  FALSE FALSE FALSE FALSE
5260 FALSE   TRUE FALSE FALSE FALSE
5261 FALSE   TRUE FALSE FALSE FALSE
5262 FALSE  FALSE FALSE FALSE FALSE
5263 FALSE  FALSE FALSE FALSE FALSE
5264 FALSE   TRUE FALSE FALSE FALSE
5265 FALSE  FALSE FALSE FALSE FALSE
5266 FALSE   TRUE FALSE FALSE FALSE
5267 FALSE  FALSE FALSE FALSE FALSE
5268 FALSE   TRUE FALSE FALSE FALSE
5269 FALSE  FALSE FALSE FALSE FALSE
5270 FALSE  FALSE FALSE FALSE FALSE
5271 FALSE  FALSE FALSE FALSE FALSE
5272 FALSE   TRUE FALSE FALSE FALSE
5273 FALSE  FALSE FALSE FALSE FALSE
5274 FALSE   TRUE FALSE FALSE FALSE
5275 FALSE  FALSE FALSE FALSE FALSE
5276 FALSE  FALSE FALSE FALSE FALSE
5277 FALSE  FALSE FALSE FALSE FALSE
5278 FALSE   TRUE FALSE FALSE FALSE
5279 FALSE  FALSE FALSE FALSE FALSE
5280 FALSE   TRUE FALSE FALSE FALSE
5281 FALSE  FALSE FALSE FALSE FALSE
5282 FALSE  FALSE FALSE FALSE FALSE
5283 FALSE  FALSE FALSE FALSE FALSE
5284 FALSE   TRUE FALSE FALSE FALSE
5285 FALSE  FALSE FALSE FALSE FALSE
5286 FALSE   TRUE FALSE FALSE FALSE
5287 FALSE  FALSE FALSE FALSE FALSE
5288 FALSE   TRUE FALSE FALSE FALSE
5289 FALSE  FALSE FALSE FALSE FALSE
5290 FALSE  FALSE FALSE FALSE FALSE
5291 FALSE  FALSE FALSE FALSE FALSE
5292 FALSE  FALSE FALSE FALSE FALSE
5293 FALSE   TRUE FALSE FALSE FALSE
5294 FALSE  FALSE FALSE FALSE FALSE
5295 FALSE   TRUE FALSE FALSE FALSE
5296 FALSE  FALSE FALSE FALSE FALSE
5297 FALSE   TRUE FALSE FALSE FALSE
5298 FALSE  FALSE FALSE FALSE FALSE
5299 FALSE   TRUE FALSE FALSE FALSE
5300 FALSE  FALSE FALSE FALSE FALSE
5301 FALSE  FALSE FALSE FALSE FALSE
5302 FALSE   TRUE FALSE FALSE FALSE
5303 FALSE  FALSE FALSE FALSE FALSE
5304 FALSE  FALSE FALSE FALSE FALSE
5305 FALSE   TRUE FALSE FALSE FALSE
5306 FALSE  FALSE FALSE FALSE FALSE
5307 FALSE   TRUE FALSE FALSE FALSE
5308 FALSE  FALSE FALSE FALSE FALSE
5309 FALSE   TRUE FALSE FALSE FALSE
5310 FALSE  FALSE FALSE FALSE FALSE
5311 FALSE   TRUE FALSE FALSE FALSE
5312 FALSE  FALSE FALSE FALSE FALSE
5313 FALSE  FALSE FALSE FALSE FALSE
5314 FALSE   TRUE FALSE FALSE FALSE
5315 FALSE  FALSE FALSE FALSE FALSE
5316 FALSE  FALSE FALSE FALSE FALSE
5317 FALSE   TRUE FALSE FALSE FALSE
5318 FALSE   TRUE FALSE FALSE FALSE
5319 FALSE  FALSE FALSE FALSE FALSE
5320 FALSE  FALSE FALSE FALSE FALSE
5321 FALSE   TRUE FALSE FALSE FALSE
5322 FALSE  FALSE FALSE FALSE FALSE
5323 FALSE   TRUE FALSE FALSE FALSE
5324 FALSE  FALSE FALSE FALSE FALSE
5325 FALSE   TRUE FALSE FALSE FALSE
5326 FALSE  FALSE FALSE FALSE FALSE
5327 FALSE  FALSE FALSE FALSE FALSE
5328 FALSE  FALSE FALSE FALSE FALSE
5329 FALSE   TRUE FALSE FALSE FALSE
5330 FALSE  FALSE FALSE FALSE FALSE
5331 FALSE   TRUE FALSE FALSE FALSE
5332 FALSE  FALSE FALSE FALSE FALSE
5333 FALSE  FALSE FALSE FALSE FALSE
5334 FALSE  FALSE FALSE FALSE FALSE
5335 FALSE   TRUE FALSE FALSE FALSE
5336 FALSE  FALSE FALSE FALSE FALSE
5337 FALSE   TRUE FALSE FALSE FALSE
5338 FALSE  FALSE FALSE FALSE FALSE
5339 FALSE  FALSE FALSE FALSE FALSE
5340 FALSE  FALSE FALSE FALSE FALSE
5341 FALSE   TRUE FALSE FALSE FALSE
5342 FALSE  FALSE FALSE FALSE FALSE
5343 FALSE   TRUE FALSE FALSE FALSE
5344 FALSE  FALSE FALSE FALSE FALSE
5345 FALSE   TRUE FALSE FALSE FALSE
5346 FALSE  FALSE FALSE FALSE FALSE
5347 FALSE  FALSE FALSE FALSE FALSE
5348 FALSE  FALSE FALSE FALSE FALSE
5349 FALSE  FALSE FALSE FALSE FALSE
5350 FALSE   TRUE FALSE FALSE FALSE
5351 FALSE  FALSE FALSE FALSE FALSE
5352 FALSE   TRUE FALSE FALSE FALSE
5353 FALSE  FALSE FALSE FALSE FALSE
5354 FALSE   TRUE FALSE FALSE FALSE
5355 FALSE  FALSE FALSE FALSE FALSE
5356 FALSE   TRUE FALSE FALSE FALSE
5357 FALSE  FALSE FALSE FALSE FALSE
5358 FALSE  FALSE FALSE FALSE FALSE
5359 FALSE   TRUE FALSE FALSE FALSE
5360 FALSE  FALSE FALSE FALSE FALSE
5361 FALSE  FALSE FALSE FALSE FALSE
5362 FALSE   TRUE FALSE FALSE FALSE
5363 FALSE  FALSE FALSE FALSE FALSE
5364 FALSE   TRUE FALSE FALSE FALSE
5365 FALSE  FALSE FALSE FALSE FALSE
5366 FALSE   TRUE FALSE FALSE FALSE
5367 FALSE  FALSE FALSE FALSE FALSE
5368 FALSE   TRUE FALSE FALSE FALSE
5369 FALSE  FALSE FALSE FALSE FALSE
5370 FALSE  FALSE FALSE FALSE FALSE
5371 FALSE   TRUE FALSE FALSE FALSE
5372 FALSE  FALSE FALSE FALSE FALSE
5373 FALSE  FALSE FALSE FALSE FALSE
5374 FALSE   TRUE FALSE FALSE FALSE
5375 FALSE   TRUE FALSE FALSE FALSE
5376 FALSE  FALSE FALSE FALSE FALSE
5377 FALSE  FALSE FALSE FALSE FALSE
5378 FALSE   TRUE FALSE FALSE FALSE
5379 FALSE  FALSE FALSE FALSE FALSE
5380 FALSE   TRUE FALSE FALSE FALSE
5381 FALSE  FALSE FALSE FALSE FALSE
5382 FALSE   TRUE FALSE FALSE FALSE
5383 FALSE  FALSE FALSE FALSE FALSE
5384 FALSE  FALSE FALSE FALSE FALSE
5385 FALSE  FALSE FALSE FALSE FALSE
5386 FALSE   TRUE FALSE FALSE FALSE
5387 FALSE  FALSE FALSE FALSE FALSE
5388 FALSE   TRUE FALSE FALSE FALSE
5389 FALSE  FALSE FALSE FALSE FALSE
5390 FALSE  FALSE FALSE FALSE FALSE
5391 FALSE  FALSE FALSE FALSE FALSE
5392 FALSE   TRUE FALSE FALSE FALSE
5393 FALSE  FALSE FALSE FALSE FALSE
5394 FALSE   TRUE FALSE FALSE FALSE
5395 FALSE  FALSE FALSE FALSE FALSE
5396 FALSE  FALSE FALSE FALSE FALSE
5397 FALSE  FALSE FALSE FALSE FALSE
5398 FALSE   TRUE FALSE FALSE FALSE
5399 FALSE  FALSE FALSE FALSE FALSE
5400 FALSE   TRUE FALSE FALSE FALSE
5401 FALSE  FALSE FALSE FALSE FALSE
5402 FALSE   TRUE FALSE FALSE FALSE
5403 FALSE  FALSE FALSE FALSE FALSE
5404 FALSE  FALSE FALSE FALSE FALSE
5405 FALSE  FALSE FALSE FALSE FALSE
5406 FALSE  FALSE FALSE FALSE FALSE
5407 FALSE   TRUE FALSE FALSE FALSE
5408 FALSE  FALSE FALSE FALSE FALSE
5409 FALSE   TRUE FALSE FALSE FALSE
5410 FALSE  FALSE FALSE FALSE FALSE
5411 FALSE   TRUE FALSE FALSE FALSE
5412 FALSE  FALSE FALSE FALSE FALSE
5413 FALSE   TRUE FALSE FALSE FALSE
5414 FALSE  FALSE FALSE FALSE FALSE
5415 FALSE  FALSE FALSE FALSE FALSE
5416 FALSE   TRUE FALSE FALSE FALSE
5417 FALSE  FALSE FALSE FALSE FALSE
5418 FALSE  FALSE FALSE FALSE FALSE
5419 FALSE   TRUE FALSE FALSE FALSE
5420 FALSE  FALSE FALSE FALSE FALSE
5421 FALSE   TRUE FALSE FALSE FALSE
5422 FALSE  FALSE FALSE FALSE FALSE
5423 FALSE   TRUE FALSE FALSE FALSE
5424 FALSE  FALSE FALSE FALSE FALSE
5425 FALSE   TRUE FALSE FALSE FALSE
5426 FALSE  FALSE FALSE FALSE FALSE
5427 FALSE  FALSE FALSE FALSE FALSE
5428 FALSE   TRUE FALSE FALSE FALSE
5429 FALSE  FALSE FALSE FALSE FALSE
5430 FALSE  FALSE FALSE FALSE FALSE
5431 FALSE   TRUE FALSE FALSE FALSE
5432 FALSE   TRUE FALSE FALSE FALSE
5433 FALSE  FALSE FALSE FALSE FALSE
5434 FALSE  FALSE FALSE FALSE FALSE
5435 FALSE   TRUE FALSE FALSE FALSE
5436 FALSE  FALSE FALSE FALSE FALSE
5437 FALSE   TRUE FALSE FALSE FALSE
5438 FALSE  FALSE FALSE FALSE FALSE
5439 FALSE   TRUE FALSE FALSE FALSE
5440 FALSE  FALSE FALSE FALSE FALSE
5441 FALSE  FALSE FALSE FALSE FALSE
5442 FALSE  FALSE FALSE FALSE FALSE
5443 FALSE   TRUE FALSE FALSE FALSE
5444 FALSE  FALSE FALSE FALSE FALSE
5445 FALSE   TRUE FALSE FALSE FALSE
5446 FALSE  FALSE FALSE FALSE FALSE
5447 FALSE  FALSE FALSE FALSE FALSE
5448 FALSE  FALSE FALSE FALSE FALSE
5449 FALSE   TRUE FALSE FALSE FALSE
5450 FALSE  FALSE FALSE FALSE FALSE
5451 FALSE   TRUE FALSE FALSE FALSE
5452 FALSE  FALSE FALSE FALSE FALSE
5453 FALSE  FALSE FALSE FALSE FALSE
5454 FALSE  FALSE FALSE FALSE FALSE
5455 FALSE   TRUE FALSE FALSE FALSE
5456 FALSE  FALSE FALSE FALSE FALSE
5457 FALSE   TRUE FALSE FALSE FALSE
5458 FALSE  FALSE FALSE FALSE FALSE
5459 FALSE   TRUE FALSE FALSE FALSE
5460 FALSE  FALSE FALSE FALSE FALSE
5461 FALSE  FALSE FALSE FALSE FALSE
5462 FALSE  FALSE FALSE FALSE FALSE
5463 FALSE  FALSE FALSE FALSE FALSE
5464 FALSE   TRUE FALSE FALSE FALSE
5465 FALSE  FALSE FALSE FALSE FALSE
5466 FALSE   TRUE FALSE FALSE FALSE
5467 FALSE  FALSE FALSE FALSE FALSE
5468 FALSE   TRUE FALSE FALSE FALSE
5469 FALSE  FALSE FALSE FALSE FALSE
5470 FALSE   TRUE FALSE FALSE FALSE
5471 FALSE  FALSE FALSE FALSE FALSE
5472 FALSE  FALSE FALSE FALSE FALSE
5473 FALSE   TRUE FALSE FALSE  TRUE
5474 FALSE  FALSE FALSE FALSE  TRUE
5475 FALSE  FALSE FALSE FALSE  TRUE
5476 FALSE   TRUE FALSE FALSE  TRUE
5477 FALSE  FALSE FALSE FALSE  TRUE
5478 FALSE   TRUE FALSE FALSE  TRUE
5479 FALSE  FALSE FALSE FALSE  TRUE
5480 FALSE   TRUE FALSE FALSE  TRUE
5481 FALSE  FALSE FALSE FALSE  TRUE
5482 FALSE   TRUE FALSE FALSE  TRUE
5483 FALSE  FALSE FALSE FALSE  TRUE
5484 FALSE  FALSE FALSE FALSE  TRUE
5485 FALSE   TRUE FALSE FALSE  TRUE
5486 FALSE  FALSE FALSE FALSE  TRUE
5487 FALSE  FALSE FALSE FALSE  TRUE
5488 FALSE   TRUE FALSE FALSE  TRUE
5489 FALSE   TRUE FALSE FALSE  TRUE
5490 FALSE  FALSE FALSE FALSE  TRUE
5491 FALSE  FALSE FALSE FALSE  TRUE
5492 FALSE   TRUE FALSE FALSE  TRUE
5493 FALSE  FALSE FALSE FALSE  TRUE
5494 FALSE   TRUE FALSE FALSE  TRUE
5495 FALSE  FALSE FALSE FALSE  TRUE
5496 FALSE   TRUE FALSE FALSE  TRUE
5497 FALSE  FALSE FALSE FALSE  TRUE
5498 FALSE  FALSE FALSE FALSE  TRUE
5499 FALSE  FALSE FALSE FALSE  TRUE
5500 FALSE   TRUE FALSE FALSE  TRUE
5501 FALSE  FALSE FALSE FALSE  TRUE
5502 FALSE   TRUE FALSE FALSE  TRUE
5503 FALSE  FALSE FALSE FALSE  TRUE
5504 FALSE  FALSE FALSE FALSE  TRUE
5505 FALSE  FALSE FALSE FALSE  TRUE
5506 FALSE   TRUE FALSE FALSE  TRUE
5507 FALSE  FALSE FALSE FALSE  TRUE
5508 FALSE   TRUE FALSE FALSE  TRUE
5509 FALSE  FALSE FALSE FALSE  TRUE
5510 FALSE  FALSE FALSE FALSE  TRUE
5511 FALSE  FALSE FALSE FALSE  TRUE
5512 FALSE   TRUE FALSE FALSE  TRUE
5513 FALSE  FALSE FALSE FALSE  TRUE
5514 FALSE   TRUE FALSE FALSE  TRUE
5515 FALSE  FALSE FALSE FALSE  TRUE
5516 FALSE   TRUE FALSE FALSE  TRUE
5517 FALSE  FALSE FALSE FALSE  TRUE
5518 FALSE  FALSE FALSE FALSE  TRUE
5519 FALSE  FALSE FALSE FALSE  TRUE
5520 FALSE  FALSE FALSE FALSE  TRUE
5521 FALSE   TRUE FALSE FALSE  TRUE
5522 FALSE  FALSE FALSE FALSE  TRUE
5523 FALSE   TRUE FALSE FALSE  TRUE
5524 FALSE  FALSE FALSE FALSE  TRUE
5525 FALSE   TRUE FALSE FALSE  TRUE
5526 FALSE  FALSE FALSE FALSE  TRUE
5527 FALSE   TRUE FALSE FALSE  TRUE
5528 FALSE  FALSE FALSE FALSE  TRUE
5529 FALSE  FALSE FALSE FALSE  TRUE
5530 FALSE   TRUE FALSE FALSE  TRUE
5531 FALSE  FALSE FALSE FALSE  TRUE
5532 FALSE  FALSE FALSE FALSE  TRUE
5533 FALSE   TRUE FALSE FALSE  TRUE
5534 FALSE  FALSE FALSE FALSE  TRUE
5535 FALSE   TRUE FALSE FALSE  TRUE
5536 FALSE  FALSE FALSE FALSE  TRUE
5537 FALSE   TRUE FALSE FALSE  TRUE
5538 FALSE  FALSE FALSE FALSE  TRUE
5539 FALSE   TRUE FALSE FALSE  TRUE
5540 FALSE  FALSE FALSE FALSE  TRUE
5541 FALSE  FALSE FALSE FALSE  TRUE
5542 FALSE   TRUE FALSE FALSE  TRUE
5543 FALSE  FALSE FALSE FALSE  TRUE
5544 FALSE  FALSE FALSE FALSE  TRUE
5545 FALSE   TRUE FALSE FALSE  TRUE
5546 FALSE   TRUE FALSE FALSE  TRUE
5547 FALSE  FALSE FALSE FALSE  TRUE
5548 FALSE  FALSE FALSE FALSE  TRUE
5549 FALSE   TRUE FALSE FALSE  TRUE
5550 FALSE  FALSE FALSE FALSE  TRUE
5551 FALSE   TRUE FALSE FALSE  TRUE
5552 FALSE  FALSE FALSE FALSE  TRUE
5553 FALSE   TRUE FALSE FALSE  TRUE
5554 FALSE  FALSE FALSE FALSE  TRUE
5555 FALSE  FALSE FALSE FALSE  TRUE
5556 FALSE  FALSE FALSE FALSE  TRUE
5557 FALSE   TRUE FALSE FALSE  TRUE
5558 FALSE  FALSE FALSE FALSE  TRUE
5559 FALSE   TRUE FALSE FALSE  TRUE
5560 FALSE  FALSE FALSE FALSE  TRUE
5561 FALSE  FALSE FALSE FALSE  TRUE
5562 FALSE  FALSE FALSE FALSE  TRUE
5563 FALSE   TRUE FALSE FALSE  TRUE
5564 FALSE  FALSE FALSE FALSE  TRUE
5565 FALSE   TRUE FALSE FALSE  TRUE
5566 FALSE  FALSE FALSE FALSE  TRUE
5567 FALSE  FALSE FALSE FALSE  TRUE
5568 FALSE  FALSE FALSE FALSE  TRUE
5569 FALSE   TRUE FALSE FALSE  TRUE
5570 FALSE  FALSE FALSE FALSE  TRUE
5571 FALSE   TRUE FALSE FALSE  TRUE
5572 FALSE  FALSE FALSE FALSE  TRUE
5573 FALSE   TRUE FALSE FALSE  TRUE
5574 FALSE  FALSE FALSE FALSE  TRUE
5575 FALSE  FALSE FALSE FALSE  TRUE
5576 FALSE  FALSE FALSE FALSE  TRUE
5577 FALSE  FALSE FALSE FALSE  TRUE
5578 FALSE   TRUE FALSE FALSE  TRUE
5579 FALSE  FALSE FALSE FALSE  TRUE
5580 FALSE   TRUE FALSE FALSE  TRUE
5581 FALSE  FALSE FALSE FALSE  TRUE
5582 FALSE   TRUE FALSE FALSE  TRUE
5583 FALSE  FALSE FALSE FALSE  TRUE
5584 FALSE   TRUE FALSE FALSE  TRUE
5585 FALSE  FALSE FALSE FALSE  TRUE
5586 FALSE  FALSE FALSE FALSE  TRUE
5587 FALSE   TRUE FALSE FALSE  TRUE
5588 FALSE  FALSE FALSE FALSE  TRUE
5589 FALSE  FALSE FALSE FALSE  TRUE
5590 FALSE   TRUE FALSE FALSE  TRUE
5591 FALSE  FALSE FALSE FALSE  TRUE
5592 FALSE   TRUE FALSE FALSE  TRUE
5593 FALSE  FALSE FALSE FALSE  TRUE
5594 FALSE   TRUE FALSE FALSE  TRUE
5595 FALSE  FALSE FALSE FALSE  TRUE
5596 FALSE   TRUE FALSE FALSE  TRUE
5597 FALSE  FALSE FALSE FALSE  TRUE
5598 FALSE  FALSE FALSE FALSE  TRUE
5599 FALSE   TRUE FALSE FALSE  TRUE
5600 FALSE  FALSE FALSE FALSE  TRUE
5601 FALSE  FALSE FALSE FALSE  TRUE
5602 FALSE   TRUE FALSE FALSE  TRUE
5603 FALSE   TRUE FALSE FALSE  TRUE
5604 FALSE  FALSE FALSE FALSE  TRUE
5605 FALSE  FALSE FALSE FALSE  TRUE
5606 FALSE   TRUE FALSE FALSE  TRUE
5607 FALSE  FALSE FALSE FALSE  TRUE
5608 FALSE   TRUE FALSE FALSE  TRUE
5609 FALSE  FALSE FALSE FALSE  TRUE
5610 FALSE   TRUE FALSE FALSE  TRUE
5611 FALSE  FALSE FALSE FALSE  TRUE
5612 FALSE  FALSE FALSE FALSE  TRUE
5613 FALSE  FALSE FALSE FALSE  TRUE
5614 FALSE   TRUE FALSE FALSE  TRUE
5615 FALSE  FALSE FALSE FALSE  TRUE
5616 FALSE   TRUE FALSE FALSE  TRUE
5617 FALSE  FALSE FALSE FALSE  TRUE
5618 FALSE  FALSE FALSE FALSE  TRUE
5619 FALSE  FALSE FALSE FALSE  TRUE
5620 FALSE   TRUE FALSE FALSE  TRUE
5621 FALSE  FALSE FALSE FALSE  TRUE
5622 FALSE   TRUE FALSE FALSE  TRUE
5623 FALSE  FALSE FALSE FALSE  TRUE
5624 FALSE  FALSE FALSE FALSE  TRUE
5625 FALSE  FALSE FALSE FALSE  TRUE
5626 FALSE   TRUE FALSE FALSE  TRUE
5627 FALSE  FALSE FALSE FALSE  TRUE
5628 FALSE   TRUE FALSE FALSE  TRUE
5629 FALSE  FALSE FALSE FALSE  TRUE
5630 FALSE   TRUE FALSE FALSE  TRUE
5631 FALSE  FALSE FALSE FALSE  TRUE
5632 FALSE  FALSE FALSE FALSE  TRUE
5633 FALSE  FALSE FALSE FALSE  TRUE
5634 FALSE  FALSE FALSE FALSE  TRUE
5635 FALSE   TRUE FALSE FALSE  TRUE
5636 FALSE  FALSE FALSE FALSE  TRUE
5637 FALSE   TRUE FALSE FALSE  TRUE
5638 FALSE  FALSE FALSE FALSE  TRUE
5639 FALSE   TRUE FALSE FALSE  TRUE
5640 FALSE  FALSE FALSE FALSE  TRUE
5641 FALSE   TRUE FALSE FALSE  TRUE
5642 FALSE  FALSE FALSE FALSE  TRUE
5643 FALSE  FALSE FALSE FALSE  TRUE
5644 FALSE   TRUE FALSE FALSE  TRUE
5645 FALSE  FALSE FALSE FALSE  TRUE
5646 FALSE  FALSE FALSE FALSE  TRUE
5647 FALSE   TRUE FALSE FALSE  TRUE
5648 FALSE  FALSE FALSE FALSE  TRUE
5649 FALSE   TRUE FALSE FALSE  TRUE
5650 FALSE  FALSE FALSE FALSE  TRUE
5651 FALSE   TRUE FALSE FALSE  TRUE
5652 FALSE  FALSE FALSE FALSE  TRUE
5653 FALSE   TRUE FALSE FALSE  TRUE
5654 FALSE  FALSE FALSE FALSE  TRUE
5655 FALSE  FALSE FALSE FALSE  TRUE
5656 FALSE   TRUE FALSE FALSE  TRUE
5657 FALSE  FALSE FALSE FALSE  TRUE
5658 FALSE  FALSE FALSE FALSE  TRUE
5659 FALSE   TRUE FALSE FALSE  TRUE
5660 FALSE   TRUE FALSE FALSE  TRUE
5661 FALSE  FALSE FALSE FALSE  TRUE
5662 FALSE  FALSE FALSE FALSE  TRUE
5663 FALSE   TRUE FALSE FALSE  TRUE
5664 FALSE  FALSE FALSE FALSE  TRUE
5665 FALSE   TRUE FALSE FALSE  TRUE
5666 FALSE  FALSE FALSE FALSE  TRUE
5667 FALSE   TRUE FALSE FALSE  TRUE
5668 FALSE  FALSE FALSE FALSE  TRUE
5669 FALSE  FALSE FALSE FALSE  TRUE
5670 FALSE  FALSE FALSE FALSE  TRUE
5671 FALSE   TRUE FALSE FALSE  TRUE
5672 FALSE  FALSE FALSE FALSE  TRUE
5673 FALSE   TRUE FALSE FALSE  TRUE
5674 FALSE  FALSE FALSE FALSE  TRUE
5675 FALSE  FALSE FALSE FALSE  TRUE
5676 FALSE  FALSE FALSE FALSE  TRUE
5677 FALSE   TRUE FALSE FALSE  TRUE
5678 FALSE  FALSE FALSE FALSE  TRUE
5679 FALSE   TRUE FALSE FALSE  TRUE
5680 FALSE  FALSE FALSE FALSE  TRUE
5681 FALSE  FALSE FALSE FALSE  TRUE
5682 FALSE  FALSE FALSE FALSE  TRUE
5683 FALSE   TRUE FALSE FALSE  TRUE
5684 FALSE  FALSE FALSE FALSE  TRUE
5685 FALSE   TRUE FALSE FALSE  TRUE
5686 FALSE  FALSE FALSE FALSE  TRUE
5687 FALSE   TRUE FALSE FALSE  TRUE
5688 FALSE  FALSE FALSE FALSE  TRUE
5689 FALSE  FALSE FALSE FALSE  TRUE
5690 FALSE  FALSE FALSE FALSE  TRUE
5691 FALSE  FALSE FALSE FALSE  TRUE
5692 FALSE   TRUE FALSE FALSE  TRUE
5693 FALSE  FALSE FALSE FALSE  TRUE
5694 FALSE   TRUE FALSE FALSE  TRUE
5695 FALSE  FALSE FALSE FALSE  TRUE
5696 FALSE   TRUE FALSE FALSE  TRUE
5697 FALSE  FALSE FALSE FALSE  TRUE
5698 FALSE   TRUE FALSE FALSE  TRUE
5699 FALSE  FALSE FALSE FALSE  TRUE
5700 FALSE  FALSE FALSE FALSE  TRUE
5701 FALSE   TRUE FALSE FALSE  TRUE
5702 FALSE  FALSE FALSE FALSE  TRUE
5703 FALSE  FALSE FALSE FALSE  TRUE
5704 FALSE   TRUE FALSE FALSE  TRUE
5705 FALSE  FALSE FALSE FALSE  TRUE
5706 FALSE   TRUE FALSE FALSE  TRUE
5707 FALSE  FALSE FALSE FALSE  TRUE
5708 FALSE   TRUE FALSE FALSE  TRUE
5709 FALSE  FALSE FALSE FALSE  TRUE
5710 FALSE   TRUE FALSE FALSE  TRUE
5711 FALSE  FALSE FALSE FALSE  TRUE
5712 FALSE  FALSE FALSE FALSE  TRUE
5713 FALSE   TRUE FALSE FALSE  TRUE
5714 FALSE  FALSE FALSE FALSE  TRUE
5715 FALSE  FALSE FALSE FALSE  TRUE
5716 FALSE   TRUE FALSE FALSE  TRUE
5717 FALSE   TRUE FALSE FALSE  TRUE
5718 FALSE  FALSE FALSE FALSE  TRUE
5719 FALSE  FALSE FALSE FALSE  TRUE
5720 FALSE   TRUE FALSE FALSE  TRUE
5721 FALSE  FALSE FALSE FALSE  TRUE
5722 FALSE   TRUE FALSE FALSE  TRUE
5723 FALSE  FALSE FALSE FALSE  TRUE
5724 FALSE   TRUE FALSE FALSE  TRUE
5725 FALSE  FALSE FALSE FALSE  TRUE
5726 FALSE  FALSE FALSE FALSE  TRUE
5727 FALSE  FALSE FALSE FALSE  TRUE
5728 FALSE   TRUE FALSE FALSE  TRUE
5729 FALSE  FALSE FALSE FALSE  TRUE
5730 FALSE   TRUE FALSE FALSE  TRUE
5731 FALSE  FALSE FALSE FALSE  TRUE
5732 FALSE  FALSE FALSE FALSE  TRUE
5733 FALSE  FALSE FALSE FALSE  TRUE
5734 FALSE   TRUE FALSE FALSE  TRUE
5735 FALSE  FALSE FALSE FALSE  TRUE
5736 FALSE   TRUE FALSE FALSE  TRUE
5737 FALSE  FALSE FALSE FALSE  TRUE
5738 FALSE  FALSE FALSE FALSE  TRUE
5739 FALSE  FALSE FALSE FALSE  TRUE
5740 FALSE   TRUE FALSE FALSE  TRUE
5741 FALSE  FALSE FALSE FALSE  TRUE
5742 FALSE   TRUE FALSE FALSE  TRUE
5743 FALSE  FALSE FALSE FALSE  TRUE
5744 FALSE   TRUE FALSE FALSE  TRUE
5745 FALSE  FALSE FALSE FALSE  TRUE
5746 FALSE  FALSE FALSE FALSE  TRUE
5747 FALSE  FALSE FALSE FALSE  TRUE
5748 FALSE  FALSE FALSE FALSE  TRUE
5749 FALSE   TRUE FALSE FALSE  TRUE
5750 FALSE  FALSE FALSE FALSE  TRUE
5751 FALSE   TRUE FALSE FALSE  TRUE
5752 FALSE  FALSE FALSE FALSE  TRUE
5753 FALSE   TRUE FALSE FALSE  TRUE
5754 FALSE  FALSE FALSE FALSE  TRUE
5755 FALSE   TRUE FALSE FALSE  TRUE
5756 FALSE  FALSE FALSE FALSE  TRUE
5757 FALSE  FALSE FALSE FALSE  TRUE
5758 FALSE   TRUE FALSE FALSE  TRUE
5759 FALSE  FALSE FALSE FALSE  TRUE
5760 FALSE  FALSE FALSE FALSE  TRUE
5761 FALSE   TRUE FALSE FALSE  TRUE
5762 FALSE  FALSE FALSE FALSE  TRUE
5763 FALSE   TRUE FALSE FALSE  TRUE
5764 FALSE  FALSE FALSE FALSE  TRUE
5765 FALSE   TRUE FALSE FALSE  TRUE
5766 FALSE  FALSE FALSE FALSE  TRUE
5767 FALSE   TRUE FALSE FALSE  TRUE
5768 FALSE  FALSE FALSE FALSE  TRUE
5769 FALSE  FALSE FALSE FALSE  TRUE
5770 FALSE   TRUE FALSE FALSE  TRUE
5771 FALSE  FALSE FALSE FALSE  TRUE
5772 FALSE  FALSE FALSE FALSE  TRUE
5773 FALSE   TRUE FALSE FALSE  TRUE
5774 FALSE   TRUE FALSE FALSE  TRUE
5775 FALSE  FALSE FALSE FALSE  TRUE
5776 FALSE  FALSE FALSE FALSE  TRUE
5777 FALSE   TRUE FALSE FALSE  TRUE
5778 FALSE  FALSE FALSE FALSE  TRUE
5779 FALSE   TRUE FALSE FALSE  TRUE
5780 FALSE  FALSE FALSE FALSE  TRUE
5781 FALSE   TRUE FALSE FALSE  TRUE
5782 FALSE  FALSE FALSE FALSE  TRUE
5783 FALSE  FALSE FALSE FALSE  TRUE
5784 FALSE  FALSE FALSE FALSE  TRUE
5785 FALSE   TRUE FALSE FALSE  TRUE
5786 FALSE  FALSE FALSE FALSE  TRUE
5787 FALSE   TRUE FALSE FALSE  TRUE
5788 FALSE  FALSE FALSE FALSE  TRUE
5789 FALSE  FALSE FALSE FALSE  TRUE
5790 FALSE  FALSE FALSE FALSE  TRUE
5791 FALSE   TRUE FALSE FALSE  TRUE
5792 FALSE  FALSE FALSE FALSE  TRUE
5793 FALSE   TRUE FALSE FALSE  TRUE
5794 FALSE  FALSE FALSE FALSE  TRUE
5795 FALSE  FALSE FALSE FALSE  TRUE
5796 FALSE  FALSE FALSE FALSE  TRUE
5797 FALSE   TRUE FALSE FALSE  TRUE
5798 FALSE  FALSE FALSE FALSE  TRUE
5799 FALSE   TRUE FALSE FALSE  TRUE
5800 FALSE  FALSE FALSE FALSE  TRUE
5801 FALSE   TRUE FALSE FALSE  TRUE
5802 FALSE  FALSE FALSE FALSE  TRUE
5803 FALSE  FALSE FALSE FALSE  TRUE
5804 FALSE  FALSE FALSE FALSE  TRUE
5805 FALSE  FALSE FALSE FALSE  TRUE
5806 FALSE   TRUE FALSE FALSE  TRUE
5807 FALSE  FALSE FALSE FALSE  TRUE
5808 FALSE   TRUE FALSE FALSE  TRUE
5809 FALSE  FALSE FALSE FALSE  TRUE
5810 FALSE   TRUE FALSE FALSE  TRUE
5811 FALSE  FALSE FALSE FALSE  TRUE
5812 FALSE   TRUE FALSE FALSE  TRUE
5813 FALSE  FALSE FALSE FALSE  TRUE
5814 FALSE  FALSE FALSE FALSE  TRUE
5815 FALSE   TRUE FALSE FALSE  TRUE
5816 FALSE  FALSE FALSE FALSE  TRUE
5817 FALSE  FALSE FALSE FALSE  TRUE
5818 FALSE   TRUE FALSE FALSE  TRUE
5819 FALSE  FALSE FALSE FALSE  TRUE
5820 FALSE   TRUE FALSE FALSE  TRUE
5821 FALSE  FALSE FALSE FALSE  TRUE
5822 FALSE   TRUE FALSE FALSE  TRUE
5823 FALSE  FALSE FALSE FALSE  TRUE
5824 FALSE   TRUE FALSE FALSE  TRUE
5825 FALSE  FALSE FALSE FALSE  TRUE
5826 FALSE  FALSE FALSE FALSE  TRUE
5827 FALSE   TRUE FALSE FALSE  TRUE
5828 FALSE  FALSE FALSE FALSE  TRUE
5829 FALSE  FALSE FALSE FALSE  TRUE
5830 FALSE   TRUE FALSE FALSE  TRUE
5831 FALSE   TRUE FALSE FALSE  TRUE
5832 FALSE  FALSE FALSE FALSE  TRUE
5833 FALSE  FALSE FALSE FALSE  TRUE
5834 FALSE   TRUE FALSE FALSE  TRUE
5835 FALSE  FALSE FALSE FALSE  TRUE
5836 FALSE   TRUE FALSE FALSE  TRUE
5837 FALSE  FALSE FALSE FALSE  TRUE
5838 FALSE   TRUE FALSE FALSE  TRUE
5839 FALSE  FALSE FALSE FALSE  TRUE
5840 FALSE  FALSE FALSE FALSE  TRUE
5841 FALSE  FALSE FALSE FALSE  TRUE
5842 FALSE   TRUE FALSE FALSE  TRUE
5843 FALSE  FALSE FALSE FALSE  TRUE
5844 FALSE   TRUE FALSE FALSE  TRUE
5845 FALSE  FALSE FALSE FALSE  TRUE
5846 FALSE  FALSE FALSE FALSE  TRUE
5847 FALSE  FALSE FALSE FALSE  TRUE
5848 FALSE   TRUE FALSE FALSE  TRUE
5849 FALSE  FALSE FALSE FALSE  TRUE
5850 FALSE   TRUE FALSE FALSE  TRUE
5851 FALSE  FALSE FALSE FALSE  TRUE
5852 FALSE  FALSE FALSE FALSE  TRUE
5853 FALSE  FALSE FALSE FALSE  TRUE
5854 FALSE   TRUE FALSE FALSE  TRUE
5855 FALSE  FALSE FALSE FALSE  TRUE
5856 FALSE   TRUE FALSE FALSE  TRUE
5857 FALSE  FALSE FALSE FALSE  TRUE
5858 FALSE   TRUE FALSE FALSE  TRUE
5859 FALSE  FALSE FALSE FALSE  TRUE
5860 FALSE  FALSE FALSE FALSE  TRUE
5861 FALSE  FALSE FALSE FALSE  TRUE
5862 FALSE  FALSE FALSE FALSE  TRUE
5863 FALSE   TRUE FALSE FALSE  TRUE
5864 FALSE  FALSE FALSE FALSE  TRUE
5865 FALSE   TRUE FALSE FALSE  TRUE
5866 FALSE  FALSE FALSE FALSE  TRUE
5867 FALSE   TRUE FALSE FALSE  TRUE
5868 FALSE  FALSE FALSE FALSE  TRUE
5869 FALSE   TRUE FALSE FALSE  TRUE
5870 FALSE  FALSE FALSE FALSE  TRUE
5871 FALSE  FALSE FALSE FALSE  TRUE
5872 FALSE   TRUE FALSE FALSE  TRUE
5873 FALSE  FALSE FALSE FALSE  TRUE
5874 FALSE  FALSE FALSE FALSE  TRUE
5875 FALSE   TRUE FALSE FALSE  TRUE
5876 FALSE  FALSE FALSE FALSE  TRUE
5877 FALSE   TRUE FALSE FALSE  TRUE
5878 FALSE  FALSE FALSE FALSE  TRUE
5879 FALSE   TRUE FALSE FALSE  TRUE
5880 FALSE  FALSE FALSE FALSE  TRUE
5881 FALSE   TRUE FALSE FALSE  TRUE
5882 FALSE  FALSE FALSE FALSE  TRUE
5883 FALSE  FALSE FALSE FALSE  TRUE
5884 FALSE   TRUE FALSE FALSE  TRUE
5885 FALSE  FALSE FALSE FALSE  TRUE
5886 FALSE  FALSE FALSE FALSE  TRUE
5887 FALSE   TRUE FALSE FALSE  TRUE
5888 FALSE   TRUE FALSE FALSE  TRUE
5889 FALSE  FALSE FALSE FALSE  TRUE
5890 FALSE  FALSE FALSE FALSE  TRUE
5891 FALSE   TRUE FALSE FALSE  TRUE
5892 FALSE  FALSE FALSE FALSE  TRUE
5893 FALSE   TRUE FALSE FALSE  TRUE
5894 FALSE  FALSE FALSE FALSE  TRUE
5895 FALSE   TRUE FALSE FALSE  TRUE
5896 FALSE  FALSE FALSE FALSE  TRUE
5897 FALSE  FALSE FALSE FALSE  TRUE
5898 FALSE  FALSE FALSE FALSE  TRUE
5899 FALSE   TRUE FALSE FALSE  TRUE
5900 FALSE  FALSE FALSE FALSE  TRUE
5901 FALSE   TRUE FALSE FALSE  TRUE
5902 FALSE  FALSE FALSE FALSE  TRUE
5903 FALSE  FALSE FALSE FALSE  TRUE
5904 FALSE  FALSE FALSE FALSE  TRUE
5905 FALSE   TRUE FALSE FALSE  TRUE
5906 FALSE  FALSE FALSE FALSE  TRUE
5907 FALSE   TRUE FALSE FALSE  TRUE
5908 FALSE  FALSE FALSE FALSE  TRUE
5909 FALSE  FALSE FALSE FALSE  TRUE
5910 FALSE  FALSE FALSE FALSE  TRUE
5911 FALSE   TRUE FALSE FALSE  TRUE
5912 FALSE  FALSE FALSE FALSE  TRUE
5913 FALSE   TRUE FALSE FALSE  TRUE
5914 FALSE  FALSE FALSE FALSE  TRUE
5915 FALSE   TRUE FALSE FALSE  TRUE
5916 FALSE  FALSE FALSE FALSE  TRUE
5917 FALSE  FALSE FALSE FALSE  TRUE
5918 FALSE  FALSE FALSE FALSE  TRUE
5919 FALSE  FALSE FALSE FALSE  TRUE
5920 FALSE   TRUE FALSE FALSE  TRUE
5921 FALSE  FALSE FALSE FALSE  TRUE
5922 FALSE   TRUE FALSE FALSE  TRUE
5923 FALSE  FALSE FALSE FALSE  TRUE
5924 FALSE   TRUE FALSE FALSE  TRUE
5925 FALSE  FALSE FALSE FALSE  TRUE
5926 FALSE   TRUE FALSE FALSE  TRUE
5927 FALSE  FALSE FALSE FALSE  TRUE
5928 FALSE  FALSE FALSE FALSE  TRUE
5929 FALSE   TRUE FALSE FALSE FALSE
5930 FALSE  FALSE FALSE FALSE FALSE
5931 FALSE  FALSE FALSE FALSE FALSE
5932 FALSE   TRUE FALSE FALSE FALSE
5933 FALSE  FALSE FALSE FALSE FALSE
5934 FALSE   TRUE FALSE FALSE FALSE
5935 FALSE  FALSE FALSE FALSE FALSE
5936 FALSE   TRUE FALSE FALSE FALSE
5937 FALSE  FALSE FALSE FALSE FALSE
5938 FALSE   TRUE FALSE FALSE FALSE
5939 FALSE  FALSE FALSE FALSE FALSE
5940 FALSE  FALSE FALSE FALSE FALSE
5941 FALSE   TRUE FALSE FALSE FALSE
5942 FALSE  FALSE FALSE FALSE FALSE
5943 FALSE  FALSE FALSE FALSE FALSE
5944 FALSE   TRUE FALSE FALSE FALSE
5945 FALSE   TRUE FALSE FALSE FALSE
5946 FALSE  FALSE FALSE FALSE FALSE
5947 FALSE  FALSE FALSE FALSE FALSE
5948 FALSE   TRUE FALSE FALSE FALSE
5949 FALSE  FALSE FALSE FALSE FALSE
5950 FALSE   TRUE FALSE FALSE FALSE
5951 FALSE  FALSE FALSE FALSE FALSE
5952 FALSE   TRUE FALSE FALSE FALSE
5953 FALSE  FALSE FALSE FALSE FALSE
5954 FALSE  FALSE FALSE FALSE FALSE
5955 FALSE  FALSE FALSE FALSE FALSE
5956 FALSE   TRUE FALSE FALSE FALSE
5957 FALSE  FALSE FALSE FALSE FALSE
5958 FALSE   TRUE FALSE FALSE FALSE
5959 FALSE  FALSE FALSE FALSE FALSE
5960 FALSE  FALSE FALSE FALSE FALSE
5961 FALSE  FALSE FALSE FALSE FALSE
5962 FALSE   TRUE FALSE FALSE FALSE
5963 FALSE  FALSE FALSE FALSE FALSE
5964 FALSE   TRUE FALSE FALSE FALSE
5965 FALSE  FALSE FALSE FALSE FALSE
5966 FALSE  FALSE FALSE FALSE FALSE
5967 FALSE  FALSE FALSE FALSE FALSE
5968 FALSE   TRUE FALSE FALSE FALSE
5969 FALSE  FALSE FALSE FALSE FALSE
5970 FALSE   TRUE FALSE FALSE FALSE
5971 FALSE  FALSE FALSE FALSE FALSE
5972 FALSE   TRUE FALSE FALSE FALSE
5973 FALSE  FALSE FALSE FALSE FALSE
5974 FALSE  FALSE FALSE FALSE FALSE
5975 FALSE  FALSE FALSE FALSE FALSE
5976 FALSE  FALSE FALSE FALSE FALSE
5977 FALSE   TRUE FALSE FALSE FALSE
5978 FALSE  FALSE FALSE FALSE FALSE
5979 FALSE   TRUE FALSE FALSE FALSE
5980 FALSE  FALSE FALSE FALSE FALSE
5981 FALSE   TRUE FALSE FALSE FALSE
5982 FALSE  FALSE FALSE FALSE FALSE
5983 FALSE   TRUE FALSE FALSE FALSE
5984 FALSE  FALSE FALSE FALSE FALSE
5985 FALSE  FALSE FALSE FALSE FALSE
5986 FALSE   TRUE FALSE FALSE FALSE
5987 FALSE  FALSE FALSE FALSE FALSE
5988 FALSE  FALSE FALSE FALSE FALSE
5989 FALSE   TRUE FALSE FALSE FALSE
5990 FALSE  FALSE FALSE FALSE FALSE
5991 FALSE   TRUE FALSE FALSE FALSE
5992 FALSE  FALSE FALSE FALSE FALSE
5993 FALSE   TRUE FALSE FALSE FALSE
5994 FALSE  FALSE FALSE FALSE FALSE
5995 FALSE   TRUE FALSE FALSE FALSE
5996 FALSE  FALSE FALSE FALSE FALSE
5997 FALSE  FALSE FALSE FALSE FALSE
5998 FALSE   TRUE FALSE FALSE FALSE
5999 FALSE  FALSE FALSE FALSE FALSE
6000 FALSE  FALSE FALSE FALSE FALSE
6001 FALSE   TRUE FALSE FALSE FALSE
6002 FALSE   TRUE FALSE FALSE FALSE
6003 FALSE  FALSE FALSE FALSE FALSE
6004 FALSE  FALSE FALSE FALSE FALSE
6005 FALSE   TRUE FALSE FALSE FALSE
6006 FALSE  FALSE FALSE FALSE FALSE
6007 FALSE   TRUE FALSE FALSE FALSE
6008 FALSE  FALSE FALSE FALSE FALSE
6009 FALSE   TRUE FALSE FALSE FALSE
6010 FALSE  FALSE FALSE FALSE FALSE
6011 FALSE  FALSE FALSE FALSE FALSE
6012 FALSE  FALSE FALSE FALSE FALSE
6013 FALSE   TRUE FALSE FALSE FALSE
6014 FALSE  FALSE FALSE FALSE FALSE
6015 FALSE   TRUE FALSE FALSE FALSE
6016 FALSE  FALSE FALSE FALSE FALSE
6017 FALSE  FALSE FALSE FALSE FALSE
6018 FALSE  FALSE FALSE FALSE FALSE
6019 FALSE   TRUE FALSE FALSE FALSE
6020 FALSE  FALSE FALSE FALSE FALSE
6021 FALSE   TRUE FALSE FALSE FALSE
6022 FALSE  FALSE FALSE FALSE FALSE
6023 FALSE  FALSE FALSE FALSE FALSE
6024 FALSE  FALSE FALSE FALSE FALSE
6025 FALSE   TRUE FALSE FALSE FALSE
6026 FALSE  FALSE FALSE FALSE FALSE
6027 FALSE   TRUE FALSE FALSE FALSE
6028 FALSE  FALSE FALSE FALSE FALSE
6029 FALSE   TRUE FALSE FALSE FALSE
6030 FALSE  FALSE FALSE FALSE FALSE
6031 FALSE  FALSE FALSE FALSE FALSE
6032 FALSE  FALSE FALSE FALSE FALSE
6033 FALSE  FALSE FALSE FALSE FALSE
6034 FALSE   TRUE FALSE FALSE FALSE
6035 FALSE  FALSE FALSE FALSE FALSE
6036 FALSE   TRUE FALSE FALSE FALSE
6037 FALSE  FALSE FALSE FALSE FALSE
6038 FALSE   TRUE FALSE FALSE FALSE
6039 FALSE  FALSE FALSE FALSE FALSE
6040 FALSE   TRUE FALSE FALSE FALSE
6041 FALSE  FALSE FALSE FALSE FALSE
6042 FALSE  FALSE FALSE FALSE FALSE
6043 FALSE   TRUE FALSE FALSE FALSE
6044 FALSE  FALSE FALSE FALSE FALSE
6045 FALSE  FALSE FALSE FALSE FALSE
6046 FALSE   TRUE FALSE FALSE FALSE
6047 FALSE  FALSE FALSE FALSE FALSE
6048 FALSE   TRUE FALSE FALSE FALSE
6049 FALSE  FALSE FALSE FALSE FALSE
6050 FALSE   TRUE FALSE FALSE FALSE
6051 FALSE  FALSE FALSE FALSE FALSE
6052 FALSE   TRUE FALSE FALSE FALSE
6053 FALSE  FALSE FALSE FALSE FALSE
6054 FALSE  FALSE FALSE FALSE FALSE
6055 FALSE   TRUE FALSE FALSE FALSE
6056 FALSE  FALSE FALSE FALSE FALSE
6057 FALSE  FALSE FALSE FALSE FALSE
6058 FALSE   TRUE FALSE FALSE FALSE
6059 FALSE   TRUE FALSE FALSE FALSE
6060 FALSE  FALSE FALSE FALSE FALSE
6061 FALSE  FALSE FALSE FALSE FALSE
6062 FALSE   TRUE FALSE FALSE FALSE
6063 FALSE  FALSE FALSE FALSE FALSE
6064 FALSE   TRUE FALSE FALSE FALSE
6065 FALSE  FALSE FALSE FALSE FALSE
6066 FALSE   TRUE FALSE FALSE FALSE
6067 FALSE  FALSE FALSE FALSE FALSE
6068 FALSE  FALSE FALSE FALSE FALSE
6069 FALSE  FALSE FALSE FALSE FALSE
6070 FALSE   TRUE FALSE FALSE FALSE
6071 FALSE  FALSE FALSE FALSE FALSE
6072 FALSE   TRUE FALSE FALSE FALSE
6073 FALSE  FALSE FALSE FALSE FALSE
6074 FALSE  FALSE FALSE FALSE FALSE
6075 FALSE  FALSE FALSE FALSE FALSE
6076 FALSE   TRUE FALSE FALSE FALSE
6077 FALSE  FALSE FALSE FALSE FALSE
6078 FALSE   TRUE FALSE FALSE FALSE
6079 FALSE  FALSE FALSE FALSE FALSE
6080 FALSE  FALSE FALSE FALSE FALSE
6081 FALSE  FALSE FALSE FALSE FALSE
6082 FALSE   TRUE FALSE FALSE FALSE
6083 FALSE  FALSE FALSE FALSE FALSE
6084 FALSE   TRUE FALSE FALSE FALSE
6085 FALSE  FALSE FALSE FALSE FALSE
6086 FALSE   TRUE FALSE FALSE FALSE
6087 FALSE  FALSE FALSE FALSE FALSE
6088 FALSE  FALSE FALSE FALSE FALSE
6089 FALSE  FALSE FALSE FALSE FALSE
6090 FALSE  FALSE FALSE FALSE FALSE
6091 FALSE   TRUE FALSE FALSE FALSE
6092 FALSE  FALSE FALSE FALSE FALSE
6093 FALSE   TRUE FALSE FALSE FALSE
6094 FALSE  FALSE FALSE FALSE FALSE
6095 FALSE   TRUE FALSE FALSE FALSE
6096 FALSE  FALSE FALSE FALSE FALSE
6097 FALSE   TRUE FALSE FALSE FALSE
6098 FALSE  FALSE FALSE FALSE FALSE
6099 FALSE  FALSE FALSE FALSE FALSE
6100 FALSE   TRUE FALSE FALSE FALSE
6101 FALSE  FALSE FALSE FALSE FALSE
6102 FALSE  FALSE FALSE FALSE FALSE
6103 FALSE   TRUE FALSE FALSE FALSE
6104 FALSE  FALSE FALSE FALSE FALSE
6105 FALSE   TRUE FALSE FALSE FALSE
6106 FALSE  FALSE FALSE FALSE FALSE
6107 FALSE   TRUE FALSE FALSE FALSE
6108 FALSE  FALSE FALSE FALSE FALSE
6109 FALSE   TRUE FALSE FALSE FALSE
6110 FALSE  FALSE FALSE FALSE FALSE
6111 FALSE  FALSE FALSE FALSE FALSE
6112 FALSE   TRUE FALSE FALSE FALSE
6113 FALSE  FALSE FALSE FALSE FALSE
6114 FALSE  FALSE FALSE FALSE FALSE
6115 FALSE   TRUE FALSE FALSE FALSE
6116 FALSE   TRUE FALSE FALSE FALSE
6117 FALSE  FALSE FALSE FALSE FALSE
6118 FALSE  FALSE FALSE FALSE FALSE
6119 FALSE   TRUE FALSE FALSE FALSE
6120 FALSE  FALSE FALSE FALSE FALSE
6121 FALSE   TRUE FALSE FALSE FALSE
6122 FALSE  FALSE FALSE FALSE FALSE
6123 FALSE   TRUE FALSE FALSE FALSE
6124 FALSE  FALSE FALSE FALSE FALSE
6125 FALSE  FALSE FALSE FALSE FALSE
6126 FALSE  FALSE FALSE FALSE FALSE
6127 FALSE   TRUE FALSE FALSE FALSE
6128 FALSE  FALSE FALSE FALSE FALSE
6129 FALSE   TRUE FALSE FALSE FALSE
6130 FALSE  FALSE FALSE FALSE FALSE
6131 FALSE  FALSE FALSE FALSE FALSE
6132 FALSE  FALSE FALSE FALSE FALSE
6133 FALSE   TRUE FALSE FALSE FALSE
6134 FALSE  FALSE FALSE FALSE FALSE
6135 FALSE   TRUE FALSE FALSE FALSE
6136 FALSE  FALSE FALSE FALSE FALSE
6137 FALSE  FALSE FALSE FALSE FALSE
6138 FALSE  FALSE FALSE FALSE FALSE
6139 FALSE   TRUE FALSE FALSE FALSE
6140 FALSE  FALSE FALSE FALSE FALSE
6141 FALSE   TRUE FALSE FALSE FALSE
6142 FALSE  FALSE FALSE FALSE FALSE
6143 FALSE   TRUE FALSE FALSE FALSE
6144 FALSE  FALSE FALSE FALSE FALSE
6145 FALSE  FALSE FALSE FALSE FALSE
6146 FALSE  FALSE FALSE FALSE FALSE
6147 FALSE  FALSE FALSE FALSE FALSE
6148 FALSE   TRUE FALSE FALSE FALSE
6149 FALSE  FALSE FALSE FALSE FALSE
6150 FALSE   TRUE FALSE FALSE FALSE
6151 FALSE  FALSE FALSE FALSE FALSE
6152 FALSE   TRUE FALSE FALSE FALSE
6153 FALSE  FALSE FALSE FALSE FALSE
6154 FALSE   TRUE FALSE FALSE FALSE
6155 FALSE  FALSE FALSE FALSE FALSE
6156 FALSE  FALSE FALSE FALSE FALSE
6157 FALSE   TRUE FALSE FALSE FALSE
6158 FALSE  FALSE FALSE FALSE FALSE
6159 FALSE  FALSE FALSE FALSE FALSE
6160 FALSE   TRUE FALSE FALSE FALSE
6161 FALSE  FALSE FALSE FALSE FALSE
6162 FALSE   TRUE FALSE FALSE FALSE
6163 FALSE  FALSE FALSE FALSE FALSE
6164 FALSE   TRUE FALSE FALSE FALSE
6165 FALSE  FALSE FALSE FALSE FALSE
6166 FALSE   TRUE FALSE FALSE FALSE
6167 FALSE  FALSE FALSE FALSE FALSE
6168 FALSE  FALSE FALSE FALSE FALSE
6169 FALSE   TRUE FALSE FALSE FALSE
6170 FALSE  FALSE FALSE FALSE FALSE
6171 FALSE  FALSE FALSE FALSE FALSE
6172 FALSE   TRUE FALSE FALSE FALSE
6173 FALSE   TRUE FALSE FALSE FALSE
6174 FALSE  FALSE FALSE FALSE FALSE
6175 FALSE  FALSE FALSE FALSE FALSE
6176 FALSE   TRUE FALSE FALSE FALSE
6177 FALSE  FALSE FALSE FALSE FALSE
6178 FALSE   TRUE FALSE FALSE FALSE
6179 FALSE  FALSE FALSE FALSE FALSE
6180 FALSE   TRUE FALSE FALSE FALSE
6181 FALSE  FALSE FALSE FALSE FALSE
6182 FALSE  FALSE FALSE FALSE FALSE
6183 FALSE  FALSE FALSE FALSE FALSE
6184 FALSE   TRUE FALSE FALSE FALSE
6185 FALSE  FALSE FALSE FALSE FALSE
6186 FALSE   TRUE FALSE FALSE FALSE
6187 FALSE  FALSE FALSE FALSE FALSE
6188 FALSE  FALSE FALSE FALSE FALSE
6189 FALSE  FALSE FALSE FALSE FALSE
6190 FALSE   TRUE FALSE FALSE FALSE
6191 FALSE  FALSE FALSE FALSE FALSE
6192 FALSE   TRUE FALSE FALSE FALSE
6193 FALSE  FALSE FALSE FALSE FALSE
6194 FALSE  FALSE FALSE FALSE FALSE
6195 FALSE  FALSE FALSE FALSE FALSE
6196 FALSE   TRUE FALSE FALSE FALSE
6197 FALSE  FALSE FALSE FALSE FALSE
6198 FALSE   TRUE FALSE FALSE FALSE
6199 FALSE  FALSE FALSE FALSE FALSE
6200 FALSE   TRUE FALSE FALSE FALSE
6201 FALSE  FALSE FALSE FALSE FALSE
6202 FALSE  FALSE FALSE FALSE FALSE
6203 FALSE  FALSE FALSE FALSE FALSE
6204 FALSE  FALSE FALSE FALSE FALSE
6205 FALSE   TRUE FALSE FALSE FALSE
6206 FALSE  FALSE FALSE FALSE FALSE
6207 FALSE   TRUE FALSE FALSE FALSE
6208 FALSE  FALSE FALSE FALSE FALSE
6209 FALSE   TRUE FALSE FALSE FALSE
6210 FALSE  FALSE FALSE FALSE FALSE
6211 FALSE   TRUE FALSE FALSE FALSE
6212 FALSE  FALSE FALSE FALSE FALSE
6213 FALSE  FALSE FALSE FALSE FALSE
6214 FALSE   TRUE FALSE FALSE FALSE
6215 FALSE  FALSE FALSE FALSE FALSE
6216 FALSE  FALSE FALSE FALSE FALSE
6217 FALSE   TRUE FALSE FALSE FALSE
6218 FALSE  FALSE FALSE FALSE FALSE
6219 FALSE   TRUE FALSE FALSE FALSE
6220 FALSE  FALSE FALSE FALSE FALSE
6221 FALSE   TRUE FALSE FALSE FALSE
6222 FALSE  FALSE FALSE FALSE FALSE
6223 FALSE   TRUE FALSE FALSE FALSE
6224 FALSE  FALSE FALSE FALSE FALSE
6225 FALSE  FALSE FALSE FALSE FALSE
6226 FALSE   TRUE FALSE FALSE FALSE
6227 FALSE  FALSE FALSE FALSE FALSE
6228 FALSE  FALSE FALSE FALSE FALSE
6229 FALSE   TRUE FALSE FALSE FALSE
6230 FALSE   TRUE FALSE FALSE FALSE
6231 FALSE  FALSE FALSE FALSE FALSE
6232 FALSE  FALSE FALSE FALSE FALSE
6233 FALSE   TRUE FALSE FALSE FALSE
6234 FALSE  FALSE FALSE FALSE FALSE
6235 FALSE   TRUE FALSE FALSE FALSE
6236 FALSE  FALSE FALSE FALSE FALSE
6237 FALSE   TRUE FALSE FALSE FALSE
6238 FALSE  FALSE FALSE FALSE FALSE
6239 FALSE  FALSE FALSE FALSE FALSE
6240 FALSE  FALSE FALSE FALSE FALSE
6241 FALSE   TRUE FALSE FALSE FALSE
6242 FALSE  FALSE FALSE FALSE FALSE
6243 FALSE   TRUE FALSE FALSE FALSE
6244 FALSE  FALSE FALSE FALSE FALSE
6245 FALSE  FALSE FALSE FALSE FALSE
6246 FALSE  FALSE FALSE FALSE FALSE
6247 FALSE   TRUE FALSE FALSE FALSE
6248 FALSE  FALSE FALSE FALSE FALSE
6249 FALSE   TRUE FALSE FALSE FALSE
6250 FALSE  FALSE FALSE FALSE FALSE
6251 FALSE  FALSE FALSE FALSE FALSE
6252 FALSE  FALSE FALSE FALSE FALSE
6253 FALSE   TRUE FALSE FALSE FALSE
6254 FALSE  FALSE FALSE FALSE FALSE
6255 FALSE   TRUE FALSE FALSE FALSE
6256 FALSE  FALSE FALSE FALSE FALSE
6257 FALSE   TRUE FALSE FALSE FALSE
6258 FALSE  FALSE FALSE FALSE FALSE
6259 FALSE  FALSE FALSE FALSE FALSE
6260 FALSE  FALSE FALSE FALSE FALSE
6261 FALSE  FALSE FALSE FALSE FALSE
6262 FALSE   TRUE FALSE FALSE FALSE
6263 FALSE  FALSE FALSE FALSE FALSE
6264 FALSE   TRUE FALSE FALSE FALSE
6265 FALSE  FALSE FALSE FALSE FALSE
6266 FALSE   TRUE FALSE FALSE FALSE
6267 FALSE  FALSE FALSE FALSE FALSE
6268 FALSE   TRUE FALSE FALSE FALSE
6269 FALSE  FALSE FALSE FALSE FALSE
6270 FALSE  FALSE FALSE FALSE FALSE
6271 FALSE   TRUE FALSE FALSE FALSE
6272 FALSE  FALSE FALSE FALSE FALSE
6273 FALSE  FALSE FALSE FALSE FALSE
6274 FALSE   TRUE FALSE FALSE FALSE
6275 FALSE  FALSE FALSE FALSE FALSE
6276 FALSE   TRUE FALSE FALSE FALSE
6277 FALSE  FALSE FALSE FALSE FALSE
6278 FALSE   TRUE FALSE FALSE FALSE
6279 FALSE  FALSE FALSE FALSE FALSE
6280 FALSE   TRUE FALSE FALSE FALSE
6281 FALSE  FALSE FALSE FALSE FALSE
6282 FALSE  FALSE FALSE FALSE FALSE
6283 FALSE   TRUE FALSE FALSE FALSE
6284 FALSE  FALSE FALSE FALSE FALSE
6285 FALSE  FALSE FALSE FALSE FALSE
6286 FALSE   TRUE FALSE FALSE FALSE
6287 FALSE   TRUE FALSE FALSE FALSE
6288 FALSE  FALSE FALSE FALSE FALSE
6289 FALSE  FALSE FALSE FALSE FALSE
6290 FALSE   TRUE FALSE FALSE FALSE
6291 FALSE  FALSE FALSE FALSE FALSE
6292 FALSE   TRUE FALSE FALSE FALSE
6293 FALSE  FALSE FALSE FALSE FALSE
6294 FALSE   TRUE FALSE FALSE FALSE
6295 FALSE  FALSE FALSE FALSE FALSE
6296 FALSE  FALSE FALSE FALSE FALSE
6297 FALSE  FALSE FALSE FALSE FALSE
6298 FALSE   TRUE FALSE FALSE FALSE
6299 FALSE  FALSE FALSE FALSE FALSE
6300 FALSE   TRUE FALSE FALSE FALSE
6301 FALSE  FALSE FALSE FALSE FALSE
6302 FALSE  FALSE FALSE FALSE FALSE
6303 FALSE  FALSE FALSE FALSE FALSE
6304 FALSE   TRUE FALSE FALSE FALSE
6305 FALSE  FALSE FALSE FALSE FALSE
6306 FALSE   TRUE FALSE FALSE FALSE
6307 FALSE  FALSE FALSE FALSE FALSE
6308 FALSE  FALSE FALSE FALSE FALSE
6309 FALSE  FALSE FALSE FALSE FALSE
6310 FALSE   TRUE FALSE FALSE FALSE
6311 FALSE  FALSE FALSE FALSE FALSE
6312 FALSE   TRUE FALSE FALSE FALSE
6313 FALSE  FALSE FALSE FALSE FALSE
6314 FALSE   TRUE FALSE FALSE FALSE
6315 FALSE  FALSE FALSE FALSE FALSE
6316 FALSE  FALSE FALSE FALSE FALSE
6317 FALSE  FALSE FALSE FALSE FALSE
6318 FALSE  FALSE FALSE FALSE FALSE
6319 FALSE   TRUE FALSE FALSE FALSE
6320 FALSE  FALSE FALSE FALSE FALSE
6321 FALSE   TRUE FALSE FALSE FALSE
6322 FALSE  FALSE FALSE FALSE FALSE
6323 FALSE   TRUE FALSE FALSE FALSE
6324 FALSE  FALSE FALSE FALSE FALSE
6325 FALSE   TRUE FALSE FALSE FALSE
6326 FALSE  FALSE FALSE FALSE FALSE
6327 FALSE  FALSE FALSE FALSE FALSE
6328 FALSE   TRUE FALSE FALSE FALSE
6329 FALSE  FALSE FALSE FALSE FALSE
6330 FALSE  FALSE FALSE FALSE FALSE
6331 FALSE   TRUE FALSE FALSE FALSE
6332 FALSE  FALSE FALSE FALSE FALSE
6333 FALSE   TRUE FALSE FALSE FALSE
6334 FALSE  FALSE FALSE FALSE FALSE
6335 FALSE   TRUE FALSE FALSE FALSE
6336 FALSE  FALSE FALSE FALSE FALSE
6337 FALSE   TRUE FALSE FALSE FALSE
6338 FALSE  FALSE FALSE FALSE FALSE
6339 FALSE  FALSE FALSE FALSE FALSE
6340 FALSE   TRUE FALSE FALSE FALSE
6341 FALSE  FALSE FALSE FALSE FALSE
6342 FALSE  FALSE FALSE FALSE FALSE
6343 FALSE   TRUE FALSE FALSE FALSE
6344 FALSE   TRUE FALSE FALSE FALSE
6345 FALSE  FALSE FALSE FALSE FALSE
6346 FALSE  FALSE FALSE FALSE FALSE
6347 FALSE   TRUE FALSE FALSE FALSE
6348 FALSE  FALSE FALSE FALSE FALSE
6349 FALSE   TRUE FALSE FALSE FALSE
6350 FALSE  FALSE FALSE FALSE FALSE
6351 FALSE   TRUE FALSE FALSE FALSE
6352 FALSE  FALSE FALSE FALSE FALSE
6353 FALSE  FALSE FALSE FALSE FALSE
6354 FALSE  FALSE FALSE FALSE FALSE
6355 FALSE   TRUE FALSE FALSE FALSE
6356 FALSE  FALSE FALSE FALSE FALSE
6357 FALSE   TRUE FALSE FALSE FALSE
6358 FALSE  FALSE FALSE FALSE FALSE
6359 FALSE  FALSE FALSE FALSE FALSE
6360 FALSE  FALSE FALSE FALSE FALSE
6361 FALSE   TRUE FALSE FALSE FALSE
6362 FALSE  FALSE FALSE FALSE FALSE
6363 FALSE   TRUE FALSE FALSE FALSE
6364 FALSE  FALSE FALSE FALSE FALSE
6365 FALSE  FALSE FALSE FALSE FALSE
6366 FALSE  FALSE FALSE FALSE FALSE
6367 FALSE   TRUE FALSE FALSE FALSE
6368 FALSE  FALSE FALSE FALSE FALSE
6369 FALSE   TRUE FALSE FALSE FALSE
6370 FALSE  FALSE FALSE FALSE FALSE
6371 FALSE   TRUE FALSE FALSE FALSE
6372 FALSE  FALSE FALSE FALSE FALSE
6373 FALSE  FALSE FALSE FALSE FALSE
6374 FALSE  FALSE FALSE FALSE FALSE
6375 FALSE  FALSE FALSE FALSE FALSE
6376 FALSE   TRUE FALSE FALSE FALSE
6377 FALSE  FALSE FALSE FALSE FALSE
6378 FALSE   TRUE FALSE FALSE FALSE
6379 FALSE  FALSE FALSE FALSE FALSE
6380 FALSE   TRUE FALSE FALSE FALSE
6381 FALSE  FALSE FALSE FALSE FALSE
6382 FALSE   TRUE FALSE FALSE FALSE
6383 FALSE  FALSE FALSE FALSE FALSE
6384 FALSE  FALSE FALSE FALSE FALSE
6385 FALSE   TRUE FALSE FALSE FALSE
6386 FALSE  FALSE FALSE FALSE FALSE
6387 FALSE  FALSE FALSE FALSE FALSE
6388 FALSE   TRUE FALSE FALSE FALSE
6389 FALSE  FALSE FALSE FALSE FALSE
6390 FALSE   TRUE FALSE FALSE FALSE
6391 FALSE  FALSE FALSE FALSE FALSE
6392 FALSE   TRUE FALSE FALSE FALSE
6393 FALSE  FALSE FALSE FALSE FALSE
6394 FALSE   TRUE FALSE FALSE FALSE
6395 FALSE  FALSE FALSE FALSE FALSE
6396 FALSE  FALSE FALSE FALSE FALSE
6397 FALSE   TRUE FALSE FALSE FALSE
6398 FALSE  FALSE FALSE FALSE FALSE
6399 FALSE  FALSE FALSE FALSE FALSE
6400 FALSE   TRUE FALSE FALSE FALSE
6401 FALSE   TRUE FALSE FALSE FALSE
6402 FALSE  FALSE FALSE FALSE FALSE
6403 FALSE  FALSE FALSE FALSE FALSE
6404 FALSE   TRUE FALSE FALSE FALSE
6405 FALSE  FALSE FALSE FALSE FALSE
6406 FALSE   TRUE FALSE FALSE FALSE
6407 FALSE  FALSE FALSE FALSE FALSE
6408 FALSE   TRUE FALSE FALSE FALSE
6409 FALSE  FALSE FALSE FALSE FALSE
6410 FALSE  FALSE FALSE FALSE FALSE
6411 FALSE  FALSE FALSE FALSE FALSE
6412 FALSE   TRUE FALSE FALSE FALSE
6413 FALSE  FALSE FALSE FALSE FALSE
6414 FALSE   TRUE FALSE FALSE FALSE
6415 FALSE  FALSE FALSE FALSE FALSE
6416 FALSE  FALSE FALSE FALSE FALSE
6417 FALSE  FALSE FALSE FALSE FALSE
6418 FALSE   TRUE FALSE FALSE FALSE
6419 FALSE  FALSE FALSE FALSE FALSE
6420 FALSE   TRUE FALSE FALSE FALSE
6421 FALSE  FALSE FALSE FALSE FALSE
6422 FALSE  FALSE FALSE FALSE FALSE
6423 FALSE  FALSE FALSE FALSE FALSE
6424 FALSE   TRUE FALSE FALSE FALSE
6425 FALSE  FALSE FALSE FALSE FALSE
6426 FALSE   TRUE FALSE FALSE FALSE
6427 FALSE  FALSE FALSE FALSE FALSE
6428 FALSE   TRUE FALSE FALSE FALSE
6429 FALSE  FALSE FALSE FALSE FALSE
6430 FALSE  FALSE FALSE FALSE FALSE
6431 FALSE  FALSE FALSE FALSE FALSE
6432 FALSE  FALSE FALSE FALSE FALSE
6433 FALSE   TRUE FALSE FALSE FALSE
6434 FALSE  FALSE FALSE FALSE FALSE
6435 FALSE   TRUE FALSE FALSE FALSE
6436 FALSE  FALSE FALSE FALSE FALSE
6437 FALSE   TRUE FALSE FALSE FALSE
6438 FALSE  FALSE FALSE FALSE FALSE
6439 FALSE   TRUE FALSE FALSE FALSE
6440 FALSE  FALSE FALSE FALSE FALSE
6441 FALSE  FALSE FALSE FALSE FALSE
> overallResult[2140:2150,]
     hist     values xAxis      name plot
2140    1 28.0007345    46 Fernandez <NA>
2141    1 71.9361576    47 Fernandez <NA>
2142    1        NaN    48 Fernandez <NA>
2143    1        NaN    49 Fernandez <NA>
2144    1 45.3315196    50 Fernandez <NA>
2145    1        NaN    51 Fernandez <NA>
2146    1 47.0458095    52 Fernandez <NA>
2147    1 22.7826611    53 Fernandez <NA>
2148    1  0.8893924    54 Fernandez <NA>
2149    1        NaN    55 Fernandez <NA>
2150    1        NaN    56 Fernandez <NA>
> 	overallList <- list(iniDataSet=iniDataSet, saveFormat=saveFormat, dpi=dpi, isGray=isGray, 
+ 						nBoxDes = nBoxDes, boxDes = boxDes, boxStackDes = boxStackDes,
+ 						saveName_nBoxDes = nBoxDes, saveName_boxDes = boxDes, saveName_boxStackDes = boxStackDes,
+ 						nBoxDesName = nBoxDesName, boxDesName = boxDesName, boxStackDesName = boxStackDesName,
+ 						nBoxOptions= nBoxOptions, boxOptions= boxOptions, stackedBarOptions = stackedBarOptions, 
+ 						treatment=treatment, filterTreatment=filterTreatment,
+ 						secondTreatment=secondTreatment, filterSecondTreatment=filterSecondTreatment, filterXaxis=filterXaxis, xAxis=xAxis,
+ 						showResultInR=showResultInR, xAxisName=xAxisName, debug=debug, 
+ 						appendix=appendix, stoppTheCalculation=stoppTheCalculation,
+ 						overallResult_nBoxDes=data.frame(), overallResult_boxDes=data.frame(), overallResult_boxStackDes=data.frame(),
+ 						color_nBox = list(), color_box=list(), color_boxStack=list())	
> 				
> 	#install.packages(c("Cairo"), repos="http://cran.r-project.org", dependencies = TRUE)
> 	library("Cairo")
> 	#install.packages(c("RColorBrewer"), repos="http://cran.r-project.org", dependencies = TRUE)
> 	library("RColorBrewer")
> 	#install.packages(c("data.table"), repos="http://cran.r-project.org", dependencies = TRUE)
> 	library(data.table)
> 	#install.packages(c("ggplot2"), repos="http://cran.r-project.org", dependencies = TRUE)
> 	library(ggplot2)
> 	#install.packages(c("Hmisc"), repos="http://cran.r-project.org", dependencies = TRUE)
> 	#library("Hmisc")
> 	
> 	overallList$debug %debug% "Start"
[1] "DebugBreakPoint:  Start"
> 	
> 	overallList <- overallChangeName(overallList)
[1] "DebugBreakPoint:  overallChangeSaveName()"
[1] "... nBoxplot"
[1] "... Boxplot"
[1] "... stackedBoxplot"
> 	overallList <- overallPreprocessingOfDescriptor(overallList)
[1] "DebugBreakPoint:  overallPreprocessingOfDescriptor()"
[1] "... nBoxplot"
[1] "No plotting, because the descriptor(s) (top.area.norm..mm.2.) don't exists!"
[1] "No plotting, because the descriptor(s) (side.nir.wetness.av) don't exists!"
[1] "No plotting, because the descriptor(s) (top.nir.wetness.av) don't exists!"
[1] "... Boxplot"
[1] "No plotting, because the descriptor(s) (top.area.norm..mm.2.) don't exists!"
[1] "... stackedBoxplot"
[1] "No plotting, because the descriptor(s) (side.nir.histogram.ratio.nir.2.25_51) don't exists!"
[1] "No plotting, because the descriptor(s) (side.vis.hue.histogram.ratio.nir.2.25_51) don't exists!"
[1] "No plotting, because the descriptor(s) (top.vis.hue.histogram.ratio.nir.2.25_51) don't exists!"
> 	
> 	
> ###############################	
> 	overallList <- preprocessingOfxAxisValue(overallList)
[1] "DebugBreakPoint:  preprocessingOfxAxisValue()"
> 	overallList <- preprocessingOfTreatment(overallList)
[1] "DebugBreakPoint:  preprocessingOfTheTreatment()"
> 	overallList <- preprocessingOfSecondTreatment(overallList)
[1] "DebugBreakPoint:  preprocessingOfTheSecondTreatment()"
[1] "... set 'filterSecondTreatment' and 'secondTreatment' to 'none'!"
> 	overallList <- overallCheckIfDescriptorIsNaOrAllZero(overallList)
[1] "DebugBreakPoint:  overallCheckIfDescriptorIsNaOrAllZero()"
[1] "... nBoxplot"
[1] "Dummy plotting for this descriptor(s) ((side.bloom.count..tassel.), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((side.nir.wetness.plant_weight_drought_loss), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((top.nir.wetness.plant_weight_drought_loss), because all zero or not numeric!"
[1] "... Boxplot"
[1] "... stackedBoxplot"
[1] "Dummy plotting for this descriptor(s) ((side.nir.normalized.histogram.bin.1.0_25), because all zero or not numeric!"    
[2] "Dummy plotting for this descriptor(s) ((side.nir.normalized.histogram.bin.2.25_51), because all zero or not numeric!"   
[3] "Dummy plotting for this descriptor(s) ((side.nir.normalized.histogram.bin.8.178_204), because all zero or not numeric!" 
[4] "Dummy plotting for this descriptor(s) ((side.nir.normalized.histogram.bin.9.204_229), because all zero or not numeric!" 
[5] "Dummy plotting for this descriptor(s) ((side.nir.normalized.histogram.bin.10.229_255), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((side.fluo.histogram.bin.9.204_229), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((top.nir.histogram.bin.1.0_25), because all zero or not numeric!"    
[2] "Dummy plotting for this descriptor(s) ((top.nir.histogram.bin.10.229_255), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((side.fluo.histogram.phenol.bin.8.178_204), because all zero or not numeric!"
[2] "Dummy plotting for this descriptor(s) ((side.fluo.histogram.phenol.bin.9.204_229), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((side.fluo.histogram.ratio.bin.2.25_51), because all zero or not numeric!"  
[2] "Dummy plotting for this descriptor(s) ((side.fluo.histogram.ratio.bin.3.51_76), because all zero or not numeric!"  
[3] "Dummy plotting for this descriptor(s) ((side.fluo.histogram.ratio.bin.9.204_229), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((side.nir.normalized.histogram.bin.1.0_25), because all zero or not numeric!"    
[2] "Dummy plotting for this descriptor(s) ((side.nir.normalized.histogram.bin.2.25_51), because all zero or not numeric!"   
[3] "Dummy plotting for this descriptor(s) ((side.nir.normalized.histogram.bin.8.178_204), because all zero or not numeric!" 
[4] "Dummy plotting for this descriptor(s) ((side.nir.normalized.histogram.bin.9.204_229), because all zero or not numeric!" 
[5] "Dummy plotting for this descriptor(s) ((side.nir.normalized.histogram.bin.10.229_255), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((side.fluo.normalized.histogram.bin.9.204_229), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((side.fluo.normalized.histogram.phenol.bin.8.178_204), because all zero or not numeric!"
[2] "Dummy plotting for this descriptor(s) ((side.fluo.normalized.histogram.phenol.bin.9.204_229), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((side.fluo.normalized.histogram.ratio.bin.2.25_51), because all zero or not numeric!"  
[2] "Dummy plotting for this descriptor(s) ((side.fluo.normalized.histogram.ratio.bin.3.51_76), because all zero or not numeric!"  
[3] "Dummy plotting for this descriptor(s) ((side.fluo.normalized.histogram.ratio.bin.9.204_229), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((side.nir.histogram.phenol.bin.1.0_25), because all zero or not numeric!"    
[2] "Dummy plotting for this descriptor(s) ((side.nir.histogram.phenol.bin.2.25_51), because all zero or not numeric!"   
[3] "Dummy plotting for this descriptor(s) ((side.nir.histogram.phenol.bin.8.178_204), because all zero or not numeric!" 
[4] "Dummy plotting for this descriptor(s) ((side.nir.histogram.phenol.bin.9.204_229), because all zero or not numeric!" 
[5] "Dummy plotting for this descriptor(s) ((side.nir.histogram.phenol.bin.10.229_255), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((side.nir.histogram.ratio.bin.1.0_25), because all zero or not numeric!"    
[2] "Dummy plotting for this descriptor(s) ((side.nir.histogram.ratio.bin.3.51_76), because all zero or not numeric!"   
[3] "Dummy plotting for this descriptor(s) ((side.nir.histogram.ratio.bin.4.76_102), because all zero or not numeric!"  
[4] "Dummy plotting for this descriptor(s) ((side.nir.histogram.ratio.bin.6.127_153), because all zero or not numeric!" 
[5] "Dummy plotting for this descriptor(s) ((side.nir.histogram.ratio.bin.7.153_178), because all zero or not numeric!" 
[6] "Dummy plotting for this descriptor(s) ((side.nir.histogram.ratio.bin.8.178_204), because all zero or not numeric!" 
[7] "Dummy plotting for this descriptor(s) ((side.nir.histogram.ratio.bin.9.204_229), because all zero or not numeric!" 
[8] "Dummy plotting for this descriptor(s) ((side.nir.histogram.ratio.bin.10.229_255), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((side.vis.hue.histogram.ratio.bin.1.0_25), because all zero or not numeric!"    
[2] "Dummy plotting for this descriptor(s) ((side.vis.hue.histogram.ratio.bin.3.51_76), because all zero or not numeric!"   
[3] "Dummy plotting for this descriptor(s) ((side.vis.hue.histogram.ratio.bin.4.76_102), because all zero or not numeric!"  
[4] "Dummy plotting for this descriptor(s) ((side.vis.hue.histogram.ratio.bin.5.102_127), because all zero or not numeric!" 
[5] "Dummy plotting for this descriptor(s) ((side.vis.hue.histogram.ratio.bin.6.127_153), because all zero or not numeric!" 
[6] "Dummy plotting for this descriptor(s) ((side.vis.hue.histogram.ratio.bin.7.153_178), because all zero or not numeric!" 
[7] "Dummy plotting for this descriptor(s) ((side.vis.hue.histogram.ratio.bin.8.178_204), because all zero or not numeric!" 
[8] "Dummy plotting for this descriptor(s) ((side.vis.hue.histogram.ratio.bin.9.204_229), because all zero or not numeric!" 
[9] "Dummy plotting for this descriptor(s) ((side.vis.hue.histogram.ratio.bin.10.229_255), because all zero or not numeric!"
 [1] "Dummy plotting for this descriptor(s) ((side.vis.normalized.histogram.ratio.bin.1.0_25), because all zero or not numeric!"    
 [2] "Dummy plotting for this descriptor(s) ((side.vis.normalized.histogram.ratio.bin.2.25_51), because all zero or not numeric!"   
 [3] "Dummy plotting for this descriptor(s) ((side.vis.normalized.histogram.ratio.bin.3.51_76), because all zero or not numeric!"   
 [4] "Dummy plotting for this descriptor(s) ((side.vis.normalized.histogram.ratio.bin.4.76_102), because all zero or not numeric!"  
 [5] "Dummy plotting for this descriptor(s) ((side.vis.normalized.histogram.ratio.bin.5.102_127), because all zero or not numeric!" 
 [6] "Dummy plotting for this descriptor(s) ((side.vis.normalized.histogram.ratio.bin.6.127_153), because all zero or not numeric!" 
 [7] "Dummy plotting for this descriptor(s) ((side.vis.normalized.histogram.ratio.bin.7.153_178), because all zero or not numeric!" 
 [8] "Dummy plotting for this descriptor(s) ((side.vis.normalized.histogram.ratio.bin.8.178_204), because all zero or not numeric!" 
 [9] "Dummy plotting for this descriptor(s) ((side.vis.normalized.histogram.ratio.bin.9.204_229), because all zero or not numeric!" 
[10] "Dummy plotting for this descriptor(s) ((side.vis.normalized.histogram.ratio.bin.10.229_255), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((top.fluo.histogram.bin.9.204_229), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((top.fluo.histogram.phenol.bin.8.178_204), because all zero or not numeric!"
[2] "Dummy plotting for this descriptor(s) ((top.fluo.histogram.phenol.bin.9.204_229), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((top.fluo.histogram.ratio.bin.2.25_51), because all zero or not numeric!"  
[2] "Dummy plotting for this descriptor(s) ((top.fluo.histogram.ratio.bin.3.51_76), because all zero or not numeric!"  
[3] "Dummy plotting for this descriptor(s) ((top.fluo.histogram.ratio.bin.9.204_229), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((top.nir.histogram.bin.1.0_25), because all zero or not numeric!"    
[2] "Dummy plotting for this descriptor(s) ((top.nir.histogram.bin.10.229_255), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((top.nir.histogram.phenol.bin.1.0_25), because all zero or not numeric!"    
[2] "Dummy plotting for this descriptor(s) ((top.nir.histogram.phenol.bin.10.229_255), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((top.nir.histogram.ratio.bin.1.0_25), because all zero or not numeric!"    
[2] "Dummy plotting for this descriptor(s) ((top.nir.histogram.ratio.bin.2.25_51), because all zero or not numeric!"   
[3] "Dummy plotting for this descriptor(s) ((top.nir.histogram.ratio.bin.3.51_76), because all zero or not numeric!"   
[4] "Dummy plotting for this descriptor(s) ((top.nir.histogram.ratio.bin.4.76_102), because all zero or not numeric!"  
[5] "Dummy plotting for this descriptor(s) ((top.nir.histogram.ratio.bin.6.127_153), because all zero or not numeric!" 
[6] "Dummy plotting for this descriptor(s) ((top.nir.histogram.ratio.bin.7.153_178), because all zero or not numeric!" 
[7] "Dummy plotting for this descriptor(s) ((top.nir.histogram.ratio.bin.8.178_204), because all zero or not numeric!" 
[8] "Dummy plotting for this descriptor(s) ((top.nir.histogram.ratio.bin.9.204_229), because all zero or not numeric!" 
[9] "Dummy plotting for this descriptor(s) ((top.nir.histogram.ratio.bin.10.229_255), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((top.vis.hue.histogram.ratio.bin.1.0_25), because all zero or not numeric!"    
[2] "Dummy plotting for this descriptor(s) ((top.vis.hue.histogram.ratio.bin.3.51_76), because all zero or not numeric!"   
[3] "Dummy plotting for this descriptor(s) ((top.vis.hue.histogram.ratio.bin.4.76_102), because all zero or not numeric!"  
[4] "Dummy plotting for this descriptor(s) ((top.vis.hue.histogram.ratio.bin.5.102_127), because all zero or not numeric!" 
[5] "Dummy plotting for this descriptor(s) ((top.vis.hue.histogram.ratio.bin.6.127_153), because all zero or not numeric!" 
[6] "Dummy plotting for this descriptor(s) ((top.vis.hue.histogram.ratio.bin.7.153_178), because all zero or not numeric!" 
[7] "Dummy plotting for this descriptor(s) ((top.vis.hue.histogram.ratio.bin.8.178_204), because all zero or not numeric!" 
[8] "Dummy plotting for this descriptor(s) ((top.vis.hue.histogram.ratio.bin.9.204_229), because all zero or not numeric!" 
[9] "Dummy plotting for this descriptor(s) ((top.vis.hue.histogram.ratio.bin.10.229_255), because all zero or not numeric!"
Es gab 20 Warnungen (Anzeige mit warnings())
> 	overallList <- reduceWorkingDataSize(overallList)
[1] "DebugBreakPoint:  reduceWorkingDataSize()"
> 	overallList <- setDefaultAxisNames(overallList)	
[1] "DebugBreakPoint:  setDefaultAxisNames()"
> groupBy <- groupByFunction(list(overallList$treatment, overallList$secondTreatment))
> 	colNames <- list(colOfXaxis="xAxis", colOfMean="mean", colOfSD="se", colName="name", xAxis=overallList$xAxis)
> 	booleanVectorList <- buildList(overallList, colNames$colOfXaxis)
[1] "DebugBreakPoint:  buildList()"
> 	columnsStandard <- c(check(overallList$xAxis), check(overallList$treatment), check(overallList$secondTreatment))
> colNames$colOfMean <- check(getVector(overallList$boxStackDes))
> 		colNames$colOfXaxis <- overallList$xAxis
> 		columns <- c(columnsStandard, check(getVector(overallList$boxStackDes)))
> columns
  [1] "Day..Int."                                           
  [2] "Genotype"                                            
  [3] "side.nir.normalized.histogram.bin.3.51_76"           
  [4] "side.nir.normalized.histogram.bin.4.76_102"          
  [5] "side.nir.normalized.histogram.bin.5.102_127"         
  [6] "side.nir.normalized.histogram.bin.6.127_153"         
  [7] "side.nir.normalized.histogram.bin.7.153_178"         
  [8] "side.fluo.histogram.bin.1.0_25"                      
  [9] "side.fluo.histogram.bin.2.25_51"                     
 [10] "side.fluo.histogram.bin.3.51_76"                     
 [11] "side.fluo.histogram.bin.4.76_102"                    
 [12] "side.fluo.histogram.bin.5.102_127"                   
 [13] "side.fluo.histogram.bin.6.127_153"                   
 [14] "side.fluo.histogram.bin.7.153_178"                   
 [15] "side.fluo.histogram.bin.8.178_204"                   
 [16] "side.fluo.histogram.bin.10.229_255"                  
 [17] "top.nir.histogram.bin.2.25_51"                       
 [18] "top.nir.histogram.bin.3.51_76"                       
 [19] "top.nir.histogram.bin.4.76_102"                      
 [20] "top.nir.histogram.bin.5.102_127"                     
 [21] "top.nir.histogram.bin.6.127_153"                     
 [22] "top.nir.histogram.bin.7.153_178"                     
 [23] "top.nir.histogram.bin.8.178_204"                     
 [24] "top.nir.histogram.bin.9.204_229"                     
 [25] "side.fluo.histogram.phenol.bin.1.0_25"               
 [26] "side.fluo.histogram.phenol.bin.2.25_51"              
 [27] "side.fluo.histogram.phenol.bin.3.51_76"              
 [28] "side.fluo.histogram.phenol.bin.4.76_102"             
 [29] "side.fluo.histogram.phenol.bin.5.102_127"            
 [30] "side.fluo.histogram.phenol.bin.6.127_153"            
 [31] "side.fluo.histogram.phenol.bin.7.153_178"            
 [32] "side.fluo.histogram.phenol.bin.10.229_255"           
 [33] "side.fluo.histogram.ratio.bin.1.0_25"                
 [34] "side.fluo.histogram.ratio.bin.4.76_102"              
 [35] "side.fluo.histogram.ratio.bin.5.102_127"             
 [36] "side.fluo.histogram.ratio.bin.6.127_153"             
 [37] "side.fluo.histogram.ratio.bin.7.153_178"             
 [38] "side.fluo.histogram.ratio.bin.8.178_204"             
 [39] "side.fluo.histogram.ratio.bin.10.229_255"            
 [40] "side.nir.normalized.histogram.bin.3.51_76"           
 [41] "side.nir.normalized.histogram.bin.4.76_102"          
 [42] "side.nir.normalized.histogram.bin.5.102_127"         
 [43] "side.nir.normalized.histogram.bin.6.127_153"         
 [44] "side.nir.normalized.histogram.bin.7.153_178"         
 [45] "side.fluo.normalized.histogram.bin.1.0_25"           
 [46] "side.fluo.normalized.histogram.bin.2.25_51"          
 [47] "side.fluo.normalized.histogram.bin.3.51_76"          
 [48] "side.fluo.normalized.histogram.bin.4.76_102"         
 [49] "side.fluo.normalized.histogram.bin.5.102_127"        
 [50] "side.fluo.normalized.histogram.bin.6.127_153"        
 [51] "side.fluo.normalized.histogram.bin.7.153_178"        
 [52] "side.fluo.normalized.histogram.bin.8.178_204"        
 [53] "side.fluo.normalized.histogram.bin.10.229_255"       
 [54] "side.fluo.normalized.histogram.phenol.bin.1.0_25"    
 [55] "side.fluo.normalized.histogram.phenol.bin.2.25_51"   
 [56] "side.fluo.normalized.histogram.phenol.bin.3.51_76"   
 [57] "side.fluo.normalized.histogram.phenol.bin.4.76_102"  
 [58] "side.fluo.normalized.histogram.phenol.bin.5.102_127" 
 [59] "side.fluo.normalized.histogram.phenol.bin.6.127_153" 
 [60] "side.fluo.normalized.histogram.phenol.bin.7.153_178" 
 [61] "side.fluo.normalized.histogram.phenol.bin.10.229_255"
 [62] "side.fluo.normalized.histogram.ratio.bin.1.0_25"     
 [63] "side.fluo.normalized.histogram.ratio.bin.4.76_102"   
 [64] "side.fluo.normalized.histogram.ratio.bin.5.102_127"  
 [65] "side.fluo.normalized.histogram.ratio.bin.6.127_153"  
 [66] "side.fluo.normalized.histogram.ratio.bin.7.153_178"  
 [67] "side.fluo.normalized.histogram.ratio.bin.8.178_204"  
 [68] "side.fluo.normalized.histogram.ratio.bin.10.229_255" 
 [69] "side.nir.histogram.phenol.bin.3.51_76"               
 [70] "side.nir.histogram.phenol.bin.4.76_102"              
 [71] "side.nir.histogram.phenol.bin.5.102_127"             
 [72] "side.nir.histogram.phenol.bin.6.127_153"             
 [73] "side.nir.histogram.phenol.bin.7.153_178"             
 [74] "side.nir.histogram.ratio.bin.5.102_127"              
 [75] "top.fluo.histogram.bin.1.0_25"                       
 [76] "top.fluo.histogram.bin.2.25_51"                      
 [77] "top.fluo.histogram.bin.3.51_76"                      
 [78] "top.fluo.histogram.bin.4.76_102"                     
 [79] "top.fluo.histogram.bin.5.102_127"                    
 [80] "top.fluo.histogram.bin.6.127_153"                    
 [81] "top.fluo.histogram.bin.7.153_178"                    
 [82] "top.fluo.histogram.bin.8.178_204"                    
 [83] "top.fluo.histogram.bin.10.229_255"                   
 [84] "top.fluo.histogram.phenol.bin.1.0_25"                
 [85] "top.fluo.histogram.phenol.bin.2.25_51"               
 [86] "top.fluo.histogram.phenol.bin.3.51_76"               
 [87] "top.fluo.histogram.phenol.bin.4.76_102"              
 [88] "top.fluo.histogram.phenol.bin.5.102_127"             
 [89] "top.fluo.histogram.phenol.bin.6.127_153"             
 [90] "top.fluo.histogram.phenol.bin.7.153_178"             
 [91] "top.fluo.histogram.phenol.bin.10.229_255"            
 [92] "top.fluo.histogram.ratio.bin.1.0_25"                 
 [93] "top.fluo.histogram.ratio.bin.4.76_102"               
 [94] "top.fluo.histogram.ratio.bin.5.102_127"              
 [95] "top.fluo.histogram.ratio.bin.6.127_153"              
 [96] "top.fluo.histogram.ratio.bin.7.153_178"              
 [97] "top.fluo.histogram.ratio.bin.8.178_204"              
 [98] "top.fluo.histogram.ratio.bin.10.229_255"             
 [99] "top.nir.histogram.bin.2.25_51"                       
[100] "top.nir.histogram.bin.3.51_76"                       
[101] "top.nir.histogram.bin.4.76_102"                      
[102] "top.nir.histogram.bin.5.102_127"                     
[103] "top.nir.histogram.bin.6.127_153"                     
[104] "top.nir.histogram.bin.7.153_178"                     
[105] "top.nir.histogram.bin.8.178_204"                     
[106] "top.nir.histogram.bin.9.204_229"                     
[107] "top.nir.histogram.phenol.bin.2.25_51"                
[108] "top.nir.histogram.phenol.bin.3.51_76"                
[109] "top.nir.histogram.phenol.bin.4.76_102"               
[110] "top.nir.histogram.phenol.bin.5.102_127"              
[111] "top.nir.histogram.phenol.bin.6.127_153"              
[112] "top.nir.histogram.phenol.bin.7.153_178"              
[113] "top.nir.histogram.phenol.bin.8.178_204"              
[114] "top.nir.histogram.phenol.bin.9.204_229"              
[115] "top.nir.histogram.ratio.bin.5.102_127"               
> colNames$colOfMean
  [1] "side.nir.normalized.histogram.bin.3.51_76"           
  [2] "side.nir.normalized.histogram.bin.4.76_102"          
  [3] "side.nir.normalized.histogram.bin.5.102_127"         
  [4] "side.nir.normalized.histogram.bin.6.127_153"         
  [5] "side.nir.normalized.histogram.bin.7.153_178"         
  [6] "side.fluo.histogram.bin.1.0_25"                      
  [7] "side.fluo.histogram.bin.2.25_51"                     
  [8] "side.fluo.histogram.bin.3.51_76"                     
  [9] "side.fluo.histogram.bin.4.76_102"                    
 [10] "side.fluo.histogram.bin.5.102_127"                   
 [11] "side.fluo.histogram.bin.6.127_153"                   
 [12] "side.fluo.histogram.bin.7.153_178"                   
 [13] "side.fluo.histogram.bin.8.178_204"                   
 [14] "side.fluo.histogram.bin.10.229_255"                  
 [15] "top.nir.histogram.bin.2.25_51"                       
 [16] "top.nir.histogram.bin.3.51_76"                       
 [17] "top.nir.histogram.bin.4.76_102"                      
 [18] "top.nir.histogram.bin.5.102_127"                     
 [19] "top.nir.histogram.bin.6.127_153"                     
 [20] "top.nir.histogram.bin.7.153_178"                     
 [21] "top.nir.histogram.bin.8.178_204"                     
 [22] "top.nir.histogram.bin.9.204_229"                     
 [23] "side.fluo.histogram.phenol.bin.1.0_25"               
 [24] "side.fluo.histogram.phenol.bin.2.25_51"              
 [25] "side.fluo.histogram.phenol.bin.3.51_76"              
 [26] "side.fluo.histogram.phenol.bin.4.76_102"             
 [27] "side.fluo.histogram.phenol.bin.5.102_127"            
 [28] "side.fluo.histogram.phenol.bin.6.127_153"            
 [29] "side.fluo.histogram.phenol.bin.7.153_178"            
 [30] "side.fluo.histogram.phenol.bin.10.229_255"           
 [31] "side.fluo.histogram.ratio.bin.1.0_25"                
 [32] "side.fluo.histogram.ratio.bin.4.76_102"              
 [33] "side.fluo.histogram.ratio.bin.5.102_127"             
 [34] "side.fluo.histogram.ratio.bin.6.127_153"             
 [35] "side.fluo.histogram.ratio.bin.7.153_178"             
 [36] "side.fluo.histogram.ratio.bin.8.178_204"             
 [37] "side.fluo.histogram.ratio.bin.10.229_255"            
 [38] "side.nir.normalized.histogram.bin.3.51_76"           
 [39] "side.nir.normalized.histogram.bin.4.76_102"          
 [40] "side.nir.normalized.histogram.bin.5.102_127"         
 [41] "side.nir.normalized.histogram.bin.6.127_153"         
 [42] "side.nir.normalized.histogram.bin.7.153_178"         
 [43] "side.fluo.normalized.histogram.bin.1.0_25"           
 [44] "side.fluo.normalized.histogram.bin.2.25_51"          
 [45] "side.fluo.normalized.histogram.bin.3.51_76"          
 [46] "side.fluo.normalized.histogram.bin.4.76_102"         
 [47] "side.fluo.normalized.histogram.bin.5.102_127"        
 [48] "side.fluo.normalized.histogram.bin.6.127_153"        
 [49] "side.fluo.normalized.histogram.bin.7.153_178"        
 [50] "side.fluo.normalized.histogram.bin.8.178_204"        
 [51] "side.fluo.normalized.histogram.bin.10.229_255"       
 [52] "side.fluo.normalized.histogram.phenol.bin.1.0_25"    
 [53] "side.fluo.normalized.histogram.phenol.bin.2.25_51"   
 [54] "side.fluo.normalized.histogram.phenol.bin.3.51_76"   
 [55] "side.fluo.normalized.histogram.phenol.bin.4.76_102"  
 [56] "side.fluo.normalized.histogram.phenol.bin.5.102_127" 
 [57] "side.fluo.normalized.histogram.phenol.bin.6.127_153" 
 [58] "side.fluo.normalized.histogram.phenol.bin.7.153_178" 
 [59] "side.fluo.normalized.histogram.phenol.bin.10.229_255"
 [60] "side.fluo.normalized.histogram.ratio.bin.1.0_25"     
 [61] "side.fluo.normalized.histogram.ratio.bin.4.76_102"   
 [62] "side.fluo.normalized.histogram.ratio.bin.5.102_127"  
 [63] "side.fluo.normalized.histogram.ratio.bin.6.127_153"  
 [64] "side.fluo.normalized.histogram.ratio.bin.7.153_178"  
 [65] "side.fluo.normalized.histogram.ratio.bin.8.178_204"  
 [66] "side.fluo.normalized.histogram.ratio.bin.10.229_255" 
 [67] "side.nir.histogram.phenol.bin.3.51_76"               
 [68] "side.nir.histogram.phenol.bin.4.76_102"              
 [69] "side.nir.histogram.phenol.bin.5.102_127"             
 [70] "side.nir.histogram.phenol.bin.6.127_153"             
 [71] "side.nir.histogram.phenol.bin.7.153_178"             
 [72] "side.nir.histogram.ratio.bin.5.102_127"              
 [73] "top.fluo.histogram.bin.1.0_25"                       
 [74] "top.fluo.histogram.bin.2.25_51"                      
 [75] "top.fluo.histogram.bin.3.51_76"                      
 [76] "top.fluo.histogram.bin.4.76_102"                     
 [77] "top.fluo.histogram.bin.5.102_127"                    
 [78] "top.fluo.histogram.bin.6.127_153"                    
 [79] "top.fluo.histogram.bin.7.153_178"                    
 [80] "top.fluo.histogram.bin.8.178_204"                    
 [81] "top.fluo.histogram.bin.10.229_255"                   
 [82] "top.fluo.histogram.phenol.bin.1.0_25"                
 [83] "top.fluo.histogram.phenol.bin.2.25_51"               
 [84] "top.fluo.histogram.phenol.bin.3.51_76"               
 [85] "top.fluo.histogram.phenol.bin.4.76_102"              
 [86] "top.fluo.histogram.phenol.bin.5.102_127"             
 [87] "top.fluo.histogram.phenol.bin.6.127_153"             
 [88] "top.fluo.histogram.phenol.bin.7.153_178"             
 [89] "top.fluo.histogram.phenol.bin.10.229_255"            
 [90] "top.fluo.histogram.ratio.bin.1.0_25"                 
 [91] "top.fluo.histogram.ratio.bin.4.76_102"               
 [92] "top.fluo.histogram.ratio.bin.5.102_127"              
 [93] "top.fluo.histogram.ratio.bin.6.127_153"              
 [94] "top.fluo.histogram.ratio.bin.7.153_178"              
 [95] "top.fluo.histogram.ratio.bin.8.178_204"              
 [96] "top.fluo.histogram.ratio.bin.10.229_255"             
 [97] "top.nir.histogram.bin.2.25_51"                       
 [98] "top.nir.histogram.bin.3.51_76"                       
 [99] "top.nir.histogram.bin.4.76_102"                      
[100] "top.nir.histogram.bin.5.102_127"                     
[101] "top.nir.histogram.bin.6.127_153"                     
[102] "top.nir.histogram.bin.7.153_178"                     
[103] "top.nir.histogram.bin.8.178_204"                     
[104] "top.nir.histogram.bin.9.204_229"                     
[105] "top.nir.histogram.phenol.bin.2.25_51"                
[106] "top.nir.histogram.phenol.bin.3.51_76"                
[107] "top.nir.histogram.phenol.bin.4.76_102"               
[108] "top.nir.histogram.phenol.bin.5.102_127"              
[109] "top.nir.histogram.phenol.bin.6.127_153"              
[110] "top.nir.histogram.phenol.bin.7.153_178"              
[111] "top.nir.histogram.phenol.bin.8.178_204"              
[112] "top.nir.histogram.phenol.bin.9.204_229"              
[113] "top.nir.histogram.ratio.bin.5.102_127"               
> diagramTyp="boxplotStacked"; descriptorList =overallList$boxStackDes; iniDataSet=overallList$iniDataSet[columns]; debug=overallList$debug
> descriptor <- getVector(descriptorList)
> 	descriptorName <- seq(1:length(descriptor))
> descriptor
  [1] "side.nir.normalized.histogram.bin.3.51_76"           
  [2] "side.nir.normalized.histogram.bin.4.76_102"          
  [3] "side.nir.normalized.histogram.bin.5.102_127"         
  [4] "side.nir.normalized.histogram.bin.6.127_153"         
  [5] "side.nir.normalized.histogram.bin.7.153_178"         
  [6] "side.fluo.histogram.bin.1.0_25"                      
  [7] "side.fluo.histogram.bin.2.25_51"                     
  [8] "side.fluo.histogram.bin.3.51_76"                     
  [9] "side.fluo.histogram.bin.4.76_102"                    
 [10] "side.fluo.histogram.bin.5.102_127"                   
 [11] "side.fluo.histogram.bin.6.127_153"                   
 [12] "side.fluo.histogram.bin.7.153_178"                   
 [13] "side.fluo.histogram.bin.8.178_204"                   
 [14] "side.fluo.histogram.bin.10.229_255"                  
 [15] "top.nir.histogram.bin.2.25_51"                       
 [16] "top.nir.histogram.bin.3.51_76"                       
 [17] "top.nir.histogram.bin.4.76_102"                      
 [18] "top.nir.histogram.bin.5.102_127"                     
 [19] "top.nir.histogram.bin.6.127_153"                     
 [20] "top.nir.histogram.bin.7.153_178"                     
 [21] "top.nir.histogram.bin.8.178_204"                     
 [22] "top.nir.histogram.bin.9.204_229"                     
 [23] "side.fluo.histogram.phenol.bin.1.0_25"               
 [24] "side.fluo.histogram.phenol.bin.2.25_51"              
 [25] "side.fluo.histogram.phenol.bin.3.51_76"              
 [26] "side.fluo.histogram.phenol.bin.4.76_102"             
 [27] "side.fluo.histogram.phenol.bin.5.102_127"            
 [28] "side.fluo.histogram.phenol.bin.6.127_153"            
 [29] "side.fluo.histogram.phenol.bin.7.153_178"            
 [30] "side.fluo.histogram.phenol.bin.10.229_255"           
 [31] "side.fluo.histogram.ratio.bin.1.0_25"                
 [32] "side.fluo.histogram.ratio.bin.4.76_102"              
 [33] "side.fluo.histogram.ratio.bin.5.102_127"             
 [34] "side.fluo.histogram.ratio.bin.6.127_153"             
 [35] "side.fluo.histogram.ratio.bin.7.153_178"             
 [36] "side.fluo.histogram.ratio.bin.8.178_204"             
 [37] "side.fluo.histogram.ratio.bin.10.229_255"            
 [38] "side.nir.normalized.histogram.bin.3.51_76"           
 [39] "side.nir.normalized.histogram.bin.4.76_102"          
 [40] "side.nir.normalized.histogram.bin.5.102_127"         
 [41] "side.nir.normalized.histogram.bin.6.127_153"         
 [42] "side.nir.normalized.histogram.bin.7.153_178"         
 [43] "side.fluo.normalized.histogram.bin.1.0_25"           
 [44] "side.fluo.normalized.histogram.bin.2.25_51"          
 [45] "side.fluo.normalized.histogram.bin.3.51_76"          
 [46] "side.fluo.normalized.histogram.bin.4.76_102"         
 [47] "side.fluo.normalized.histogram.bin.5.102_127"        
 [48] "side.fluo.normalized.histogram.bin.6.127_153"        
 [49] "side.fluo.normalized.histogram.bin.7.153_178"        
 [50] "side.fluo.normalized.histogram.bin.8.178_204"        
 [51] "side.fluo.normalized.histogram.bin.10.229_255"       
 [52] "side.fluo.normalized.histogram.phenol.bin.1.0_25"    
 [53] "side.fluo.normalized.histogram.phenol.bin.2.25_51"   
 [54] "side.fluo.normalized.histogram.phenol.bin.3.51_76"   
 [55] "side.fluo.normalized.histogram.phenol.bin.4.76_102"  
 [56] "side.fluo.normalized.histogram.phenol.bin.5.102_127" 
 [57] "side.fluo.normalized.histogram.phenol.bin.6.127_153" 
 [58] "side.fluo.normalized.histogram.phenol.bin.7.153_178" 
 [59] "side.fluo.normalized.histogram.phenol.bin.10.229_255"
 [60] "side.fluo.normalized.histogram.ratio.bin.1.0_25"     
 [61] "side.fluo.normalized.histogram.ratio.bin.4.76_102"   
 [62] "side.fluo.normalized.histogram.ratio.bin.5.102_127"  
 [63] "side.fluo.normalized.histogram.ratio.bin.6.127_153"  
 [64] "side.fluo.normalized.histogram.ratio.bin.7.153_178"  
 [65] "side.fluo.normalized.histogram.ratio.bin.8.178_204"  
 [66] "side.fluo.normalized.histogram.ratio.bin.10.229_255" 
 [67] "side.nir.histogram.phenol.bin.3.51_76"               
 [68] "side.nir.histogram.phenol.bin.4.76_102"              
 [69] "side.nir.histogram.phenol.bin.5.102_127"             
 [70] "side.nir.histogram.phenol.bin.6.127_153"             
 [71] "side.nir.histogram.phenol.bin.7.153_178"             
 [72] "side.nir.histogram.ratio.bin.5.102_127"              
 [73] NA                                                    
 [74] NA                                                    
 [75] "top.fluo.histogram.bin.1.0_25"                       
 [76] "top.fluo.histogram.bin.2.25_51"                      
 [77] "top.fluo.histogram.bin.3.51_76"                      
 [78] "top.fluo.histogram.bin.4.76_102"                     
 [79] "top.fluo.histogram.bin.5.102_127"                    
 [80] "top.fluo.histogram.bin.6.127_153"                    
 [81] "top.fluo.histogram.bin.7.153_178"                    
 [82] "top.fluo.histogram.bin.8.178_204"                    
 [83] "top.fluo.histogram.bin.10.229_255"                   
 [84] "top.fluo.histogram.phenol.bin.1.0_25"                
 [85] "top.fluo.histogram.phenol.bin.2.25_51"               
 [86] "top.fluo.histogram.phenol.bin.3.51_76"               
 [87] "top.fluo.histogram.phenol.bin.4.76_102"              
 [88] "top.fluo.histogram.phenol.bin.5.102_127"             
 [89] "top.fluo.histogram.phenol.bin.6.127_153"             
 [90] "top.fluo.histogram.phenol.bin.7.153_178"             
 [91] "top.fluo.histogram.phenol.bin.10.229_255"            
 [92] "top.fluo.histogram.ratio.bin.1.0_25"                 
 [93] "top.fluo.histogram.ratio.bin.4.76_102"               
 [94] "top.fluo.histogram.ratio.bin.5.102_127"              
 [95] "top.fluo.histogram.ratio.bin.6.127_153"              
 [96] "top.fluo.histogram.ratio.bin.7.153_178"              
 [97] "top.fluo.histogram.ratio.bin.8.178_204"              
 [98] "top.fluo.histogram.ratio.bin.10.229_255"             
 [99] "top.nir.histogram.bin.2.25_51"                       
[100] "top.nir.histogram.bin.3.51_76"                       
[101] "top.nir.histogram.bin.4.76_102"                      
[102] "top.nir.histogram.bin.5.102_127"                     
[103] "top.nir.histogram.bin.6.127_153"                     
[104] "top.nir.histogram.bin.7.153_178"                     
[105] "top.nir.histogram.bin.8.178_204"                     
[106] "top.nir.histogram.bin.9.204_229"                     
[107] "top.nir.histogram.phenol.bin.2.25_51"                
[108] "top.nir.histogram.phenol.bin.3.51_76"                
[109] "top.nir.histogram.phenol.bin.4.76_102"               
[110] "top.nir.histogram.phenol.bin.5.102_127"              
[111] "top.nir.histogram.phenol.bin.6.127_153"              
[112] "top.nir.histogram.phenol.bin.7.153_178"              
[113] "top.nir.histogram.phenol.bin.8.178_204"              
[114] "top.nir.histogram.phenol.bin.9.204_229"              
[115] "top.nir.histogram.ratio.bin.5.102_127"               
[116] NA                                                    
> descriptorList
$`1`
                             descriptorVector
1   side.nir.normalized.histogram.bin.3.51_76
2  side.nir.normalized.histogram.bin.4.76_102
3 side.nir.normalized.histogram.bin.5.102_127
4 side.nir.normalized.histogram.bin.6.127_153
5 side.nir.normalized.histogram.bin.7.153_178

$`2`
                    descriptorVector
1     side.fluo.histogram.bin.1.0_25
2    side.fluo.histogram.bin.2.25_51
3    side.fluo.histogram.bin.3.51_76
4   side.fluo.histogram.bin.4.76_102
5  side.fluo.histogram.bin.5.102_127
6  side.fluo.histogram.bin.6.127_153
7  side.fluo.histogram.bin.7.153_178
8  side.fluo.histogram.bin.8.178_204
9 side.fluo.histogram.bin.10.229_255

$`3`
                 descriptorVector
1   top.nir.histogram.bin.2.25_51
2   top.nir.histogram.bin.3.51_76
3  top.nir.histogram.bin.4.76_102
4 top.nir.histogram.bin.5.102_127
5 top.nir.histogram.bin.6.127_153
6 top.nir.histogram.bin.7.153_178
7 top.nir.histogram.bin.8.178_204
8 top.nir.histogram.bin.9.204_229

$`4`
                           descriptorVector
1     side.fluo.histogram.phenol.bin.1.0_25
2    side.fluo.histogram.phenol.bin.2.25_51
3    side.fluo.histogram.phenol.bin.3.51_76
4   side.fluo.histogram.phenol.bin.4.76_102
5  side.fluo.histogram.phenol.bin.5.102_127
6  side.fluo.histogram.phenol.bin.6.127_153
7  side.fluo.histogram.phenol.bin.7.153_178
8 side.fluo.histogram.phenol.bin.10.229_255

$`5`
                          descriptorVector
1     side.fluo.histogram.ratio.bin.1.0_25
2   side.fluo.histogram.ratio.bin.4.76_102
3  side.fluo.histogram.ratio.bin.5.102_127
4  side.fluo.histogram.ratio.bin.6.127_153
5  side.fluo.histogram.ratio.bin.7.153_178
6  side.fluo.histogram.ratio.bin.8.178_204
7 side.fluo.histogram.ratio.bin.10.229_255

$`6`
                             descriptorVector
1   side.nir.normalized.histogram.bin.3.51_76
2  side.nir.normalized.histogram.bin.4.76_102
3 side.nir.normalized.histogram.bin.5.102_127
4 side.nir.normalized.histogram.bin.6.127_153
5 side.nir.normalized.histogram.bin.7.153_178

$`7`
                               descriptorVector
1     side.fluo.normalized.histogram.bin.1.0_25
2    side.fluo.normalized.histogram.bin.2.25_51
3    side.fluo.normalized.histogram.bin.3.51_76
4   side.fluo.normalized.histogram.bin.4.76_102
5  side.fluo.normalized.histogram.bin.5.102_127
6  side.fluo.normalized.histogram.bin.6.127_153
7  side.fluo.normalized.histogram.bin.7.153_178
8  side.fluo.normalized.histogram.bin.8.178_204
9 side.fluo.normalized.histogram.bin.10.229_255

$`8`
                                      descriptorVector
1     side.fluo.normalized.histogram.phenol.bin.1.0_25
2    side.fluo.normalized.histogram.phenol.bin.2.25_51
3    side.fluo.normalized.histogram.phenol.bin.3.51_76
4   side.fluo.normalized.histogram.phenol.bin.4.76_102
5  side.fluo.normalized.histogram.phenol.bin.5.102_127
6  side.fluo.normalized.histogram.phenol.bin.6.127_153
7  side.fluo.normalized.histogram.phenol.bin.7.153_178
8 side.fluo.normalized.histogram.phenol.bin.10.229_255

$`9`
                                     descriptorVector
1     side.fluo.normalized.histogram.ratio.bin.1.0_25
2   side.fluo.normalized.histogram.ratio.bin.4.76_102
3  side.fluo.normalized.histogram.ratio.bin.5.102_127
4  side.fluo.normalized.histogram.ratio.bin.6.127_153
5  side.fluo.normalized.histogram.ratio.bin.7.153_178
6  side.fluo.normalized.histogram.ratio.bin.8.178_204
7 side.fluo.normalized.histogram.ratio.bin.10.229_255

$`10`
                         descriptorVector
1   side.nir.histogram.phenol.bin.3.51_76
2  side.nir.histogram.phenol.bin.4.76_102
3 side.nir.histogram.phenol.bin.5.102_127
4 side.nir.histogram.phenol.bin.6.127_153
5 side.nir.histogram.phenol.bin.7.153_178

$`11`
                        descriptorVector
1 side.nir.histogram.ratio.bin.5.102_127

$`12`
[1] NA

$`13`
[1] NA

$`14`
                   descriptorVector
1     top.fluo.histogram.bin.1.0_25
2    top.fluo.histogram.bin.2.25_51
3    top.fluo.histogram.bin.3.51_76
4   top.fluo.histogram.bin.4.76_102
5  top.fluo.histogram.bin.5.102_127
6  top.fluo.histogram.bin.6.127_153
7  top.fluo.histogram.bin.7.153_178
8  top.fluo.histogram.bin.8.178_204
9 top.fluo.histogram.bin.10.229_255

$`15`
                          descriptorVector
1     top.fluo.histogram.phenol.bin.1.0_25
2    top.fluo.histogram.phenol.bin.2.25_51
3    top.fluo.histogram.phenol.bin.3.51_76
4   top.fluo.histogram.phenol.bin.4.76_102
5  top.fluo.histogram.phenol.bin.5.102_127
6  top.fluo.histogram.phenol.bin.6.127_153
7  top.fluo.histogram.phenol.bin.7.153_178
8 top.fluo.histogram.phenol.bin.10.229_255

$`16`
                         descriptorVector
1     top.fluo.histogram.ratio.bin.1.0_25
2   top.fluo.histogram.ratio.bin.4.76_102
3  top.fluo.histogram.ratio.bin.5.102_127
4  top.fluo.histogram.ratio.bin.6.127_153
5  top.fluo.histogram.ratio.bin.7.153_178
6  top.fluo.histogram.ratio.bin.8.178_204
7 top.fluo.histogram.ratio.bin.10.229_255

$`17`
                 descriptorVector
1   top.nir.histogram.bin.2.25_51
2   top.nir.histogram.bin.3.51_76
3  top.nir.histogram.bin.4.76_102
4 top.nir.histogram.bin.5.102_127
5 top.nir.histogram.bin.6.127_153
6 top.nir.histogram.bin.7.153_178
7 top.nir.histogram.bin.8.178_204
8 top.nir.histogram.bin.9.204_229

$`18`
                        descriptorVector
1   top.nir.histogram.phenol.bin.2.25_51
2   top.nir.histogram.phenol.bin.3.51_76
3  top.nir.histogram.phenol.bin.4.76_102
4 top.nir.histogram.phenol.bin.5.102_127
5 top.nir.histogram.phenol.bin.6.127_153
6 top.nir.histogram.phenol.bin.7.153_178
7 top.nir.histogram.phenol.bin.8.178_204
8 top.nir.histogram.phenol.bin.9.204_229

$`19`
                       descriptorVector
1 top.nir.histogram.ratio.bin.5.102_127

$`20`
[1] NA

> getVector(descriptorList)
  [1] "side.nir.normalized.histogram.bin.3.51_76"           
  [2] "side.nir.normalized.histogram.bin.4.76_102"          
  [3] "side.nir.normalized.histogram.bin.5.102_127"         
  [4] "side.nir.normalized.histogram.bin.6.127_153"         
  [5] "side.nir.normalized.histogram.bin.7.153_178"         
  [6] "side.fluo.histogram.bin.1.0_25"                      
  [7] "side.fluo.histogram.bin.2.25_51"                     
  [8] "side.fluo.histogram.bin.3.51_76"                     
  [9] "side.fluo.histogram.bin.4.76_102"                    
 [10] "side.fluo.histogram.bin.5.102_127"                   
 [11] "side.fluo.histogram.bin.6.127_153"                   
 [12] "side.fluo.histogram.bin.7.153_178"                   
 [13] "side.fluo.histogram.bin.8.178_204"                   
 [14] "side.fluo.histogram.bin.10.229_255"                  
 [15] "top.nir.histogram.bin.2.25_51"                       
 [16] "top.nir.histogram.bin.3.51_76"                       
 [17] "top.nir.histogram.bin.4.76_102"                      
 [18] "top.nir.histogram.bin.5.102_127"                     
 [19] "top.nir.histogram.bin.6.127_153"                     
 [20] "top.nir.histogram.bin.7.153_178"                     
 [21] "top.nir.histogram.bin.8.178_204"                     
 [22] "top.nir.histogram.bin.9.204_229"                     
 [23] "side.fluo.histogram.phenol.bin.1.0_25"               
 [24] "side.fluo.histogram.phenol.bin.2.25_51"              
 [25] "side.fluo.histogram.phenol.bin.3.51_76"              
 [26] "side.fluo.histogram.phenol.bin.4.76_102"             
 [27] "side.fluo.histogram.phenol.bin.5.102_127"            
 [28] "side.fluo.histogram.phenol.bin.6.127_153"            
 [29] "side.fluo.histogram.phenol.bin.7.153_178"            
 [30] "side.fluo.histogram.phenol.bin.10.229_255"           
 [31] "side.fluo.histogram.ratio.bin.1.0_25"                
 [32] "side.fluo.histogram.ratio.bin.4.76_102"              
 [33] "side.fluo.histogram.ratio.bin.5.102_127"             
 [34] "side.fluo.histogram.ratio.bin.6.127_153"             
 [35] "side.fluo.histogram.ratio.bin.7.153_178"             
 [36] "side.fluo.histogram.ratio.bin.8.178_204"             
 [37] "side.fluo.histogram.ratio.bin.10.229_255"            
 [38] "side.nir.normalized.histogram.bin.3.51_76"           
 [39] "side.nir.normalized.histogram.bin.4.76_102"          
 [40] "side.nir.normalized.histogram.bin.5.102_127"         
 [41] "side.nir.normalized.histogram.bin.6.127_153"         
 [42] "side.nir.normalized.histogram.bin.7.153_178"         
 [43] "side.fluo.normalized.histogram.bin.1.0_25"           
 [44] "side.fluo.normalized.histogram.bin.2.25_51"          
 [45] "side.fluo.normalized.histogram.bin.3.51_76"          
 [46] "side.fluo.normalized.histogram.bin.4.76_102"         
 [47] "side.fluo.normalized.histogram.bin.5.102_127"        
 [48] "side.fluo.normalized.histogram.bin.6.127_153"        
 [49] "side.fluo.normalized.histogram.bin.7.153_178"        
 [50] "side.fluo.normalized.histogram.bin.8.178_204"        
 [51] "side.fluo.normalized.histogram.bin.10.229_255"       
 [52] "side.fluo.normalized.histogram.phenol.bin.1.0_25"    
 [53] "side.fluo.normalized.histogram.phenol.bin.2.25_51"   
 [54] "side.fluo.normalized.histogram.phenol.bin.3.51_76"   
 [55] "side.fluo.normalized.histogram.phenol.bin.4.76_102"  
 [56] "side.fluo.normalized.histogram.phenol.bin.5.102_127" 
 [57] "side.fluo.normalized.histogram.phenol.bin.6.127_153" 
 [58] "side.fluo.normalized.histogram.phenol.bin.7.153_178" 
 [59] "side.fluo.normalized.histogram.phenol.bin.10.229_255"
 [60] "side.fluo.normalized.histogram.ratio.bin.1.0_25"     
 [61] "side.fluo.normalized.histogram.ratio.bin.4.76_102"   
 [62] "side.fluo.normalized.histogram.ratio.bin.5.102_127"  
 [63] "side.fluo.normalized.histogram.ratio.bin.6.127_153"  
 [64] "side.fluo.normalized.histogram.ratio.bin.7.153_178"  
 [65] "side.fluo.normalized.histogram.ratio.bin.8.178_204"  
 [66] "side.fluo.normalized.histogram.ratio.bin.10.229_255" 
 [67] "side.nir.histogram.phenol.bin.3.51_76"               
 [68] "side.nir.histogram.phenol.bin.4.76_102"              
 [69] "side.nir.histogram.phenol.bin.5.102_127"             
 [70] "side.nir.histogram.phenol.bin.6.127_153"             
 [71] "side.nir.histogram.phenol.bin.7.153_178"             
 [72] "side.nir.histogram.ratio.bin.5.102_127"              
 [73] NA                                                    
 [74] NA                                                    
 [75] "top.fluo.histogram.bin.1.0_25"                       
 [76] "top.fluo.histogram.bin.2.25_51"                      
 [77] "top.fluo.histogram.bin.3.51_76"                      
 [78] "top.fluo.histogram.bin.4.76_102"                     
 [79] "top.fluo.histogram.bin.5.102_127"                    
 [80] "top.fluo.histogram.bin.6.127_153"                    
 [81] "top.fluo.histogram.bin.7.153_178"                    
 [82] "top.fluo.histogram.bin.8.178_204"                    
 [83] "top.fluo.histogram.bin.10.229_255"                   
 [84] "top.fluo.histogram.phenol.bin.1.0_25"                
 [85] "top.fluo.histogram.phenol.bin.2.25_51"               
 [86] "top.fluo.histogram.phenol.bin.3.51_76"               
 [87] "top.fluo.histogram.phenol.bin.4.76_102"              
 [88] "top.fluo.histogram.phenol.bin.5.102_127"             
 [89] "top.fluo.histogram.phenol.bin.6.127_153"             
 [90] "top.fluo.histogram.phenol.bin.7.153_178"             
 [91] "top.fluo.histogram.phenol.bin.10.229_255"            
 [92] "top.fluo.histogram.ratio.bin.1.0_25"                 
 [93] "top.fluo.histogram.ratio.bin.4.76_102"               
 [94] "top.fluo.histogram.ratio.bin.5.102_127"              
 [95] "top.fluo.histogram.ratio.bin.6.127_153"              
 [96] "top.fluo.histogram.ratio.bin.7.153_178"              
 [97] "top.fluo.histogram.ratio.bin.8.178_204"              
 [98] "top.fluo.histogram.ratio.bin.10.229_255"             
 [99] "top.nir.histogram.bin.2.25_51"                       
[100] "top.nir.histogram.bin.3.51_76"                       
[101] "top.nir.histogram.bin.4.76_102"                      
[102] "top.nir.histogram.bin.5.102_127"                     
[103] "top.nir.histogram.bin.6.127_153"                     
[104] "top.nir.histogram.bin.7.153_178"                     
[105] "top.nir.histogram.bin.8.178_204"                     
[106] "top.nir.histogram.bin.9.204_229"                     
[107] "top.nir.histogram.phenol.bin.2.25_51"                
[108] "top.nir.histogram.phenol.bin.3.51_76"                
[109] "top.nir.histogram.phenol.bin.4.76_102"               
[110] "top.nir.histogram.phenol.bin.5.102_127"              
[111] "top.nir.histogram.phenol.bin.6.127_153"              
[112] "top.nir.histogram.phenol.bin.7.153_178"              
[113] "top.nir.histogram.phenol.bin.8.178_204"              
[114] "top.nir.histogram.phenol.bin.9.204_229"              
[115] "top.nir.histogram.ratio.bin.5.102_127"               
[116] NA                                                    
> descriptorName[!is.na(descriptor)]
  [1]   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18
 [19]  19  20  21  22  23  24  25  26  27  28  29  30  31  32  33  34  35  36
 [37]  37  38  39  40  41  42  43  44  45  46  47  48  49  50  51  52  53  54
 [55]  55  56  57  58  59  60  61  62  63  64  65  66  67  68  69  70  71  72
 [73]  75  76  77  78  79  80  81  82  83  84  85  86  87  88  89  90  91  92
 [91]  93  94  95  96  97  98  99 100 101 102 103 104 105 106 107 108 109 110
[109] 111 112 113 114 115
> descriptor[!is.na(descriptor)]
  [1] "side.nir.normalized.histogram.bin.3.51_76"           
  [2] "side.nir.normalized.histogram.bin.4.76_102"          
  [3] "side.nir.normalized.histogram.bin.5.102_127"         
  [4] "side.nir.normalized.histogram.bin.6.127_153"         
  [5] "side.nir.normalized.histogram.bin.7.153_178"         
  [6] "side.fluo.histogram.bin.1.0_25"                      
  [7] "side.fluo.histogram.bin.2.25_51"                     
  [8] "side.fluo.histogram.bin.3.51_76"                     
  [9] "side.fluo.histogram.bin.4.76_102"                    
 [10] "side.fluo.histogram.bin.5.102_127"                   
 [11] "side.fluo.histogram.bin.6.127_153"                   
 [12] "side.fluo.histogram.bin.7.153_178"                   
 [13] "side.fluo.histogram.bin.8.178_204"                   
 [14] "side.fluo.histogram.bin.10.229_255"                  
 [15] "top.nir.histogram.bin.2.25_51"                       
 [16] "top.nir.histogram.bin.3.51_76"                       
 [17] "top.nir.histogram.bin.4.76_102"                      
 [18] "top.nir.histogram.bin.5.102_127"                     
 [19] "top.nir.histogram.bin.6.127_153"                     
 [20] "top.nir.histogram.bin.7.153_178"                     
 [21] "top.nir.histogram.bin.8.178_204"                     
 [22] "top.nir.histogram.bin.9.204_229"                     
 [23] "side.fluo.histogram.phenol.bin.1.0_25"               
 [24] "side.fluo.histogram.phenol.bin.2.25_51"              
 [25] "side.fluo.histogram.phenol.bin.3.51_76"              
 [26] "side.fluo.histogram.phenol.bin.4.76_102"             
 [27] "side.fluo.histogram.phenol.bin.5.102_127"            
 [28] "side.fluo.histogram.phenol.bin.6.127_153"            
 [29] "side.fluo.histogram.phenol.bin.7.153_178"            
 [30] "side.fluo.histogram.phenol.bin.10.229_255"           
 [31] "side.fluo.histogram.ratio.bin.1.0_25"                
 [32] "side.fluo.histogram.ratio.bin.4.76_102"              
 [33] "side.fluo.histogram.ratio.bin.5.102_127"             
 [34] "side.fluo.histogram.ratio.bin.6.127_153"             
 [35] "side.fluo.histogram.ratio.bin.7.153_178"             
 [36] "side.fluo.histogram.ratio.bin.8.178_204"             
 [37] "side.fluo.histogram.ratio.bin.10.229_255"            
 [38] "side.nir.normalized.histogram.bin.3.51_76"           
 [39] "side.nir.normalized.histogram.bin.4.76_102"          
 [40] "side.nir.normalized.histogram.bin.5.102_127"         
 [41] "side.nir.normalized.histogram.bin.6.127_153"         
 [42] "side.nir.normalized.histogram.bin.7.153_178"         
 [43] "side.fluo.normalized.histogram.bin.1.0_25"           
 [44] "side.fluo.normalized.histogram.bin.2.25_51"          
 [45] "side.fluo.normalized.histogram.bin.3.51_76"          
 [46] "side.fluo.normalized.histogram.bin.4.76_102"         
 [47] "side.fluo.normalized.histogram.bin.5.102_127"        
 [48] "side.fluo.normalized.histogram.bin.6.127_153"        
 [49] "side.fluo.normalized.histogram.bin.7.153_178"        
 [50] "side.fluo.normalized.histogram.bin.8.178_204"        
 [51] "side.fluo.normalized.histogram.bin.10.229_255"       
 [52] "side.fluo.normalized.histogram.phenol.bin.1.0_25"    
 [53] "side.fluo.normalized.histogram.phenol.bin.2.25_51"   
 [54] "side.fluo.normalized.histogram.phenol.bin.3.51_76"   
 [55] "side.fluo.normalized.histogram.phenol.bin.4.76_102"  
 [56] "side.fluo.normalized.histogram.phenol.bin.5.102_127" 
 [57] "side.fluo.normalized.histogram.phenol.bin.6.127_153" 
 [58] "side.fluo.normalized.histogram.phenol.bin.7.153_178" 
 [59] "side.fluo.normalized.histogram.phenol.bin.10.229_255"
 [60] "side.fluo.normalized.histogram.ratio.bin.1.0_25"     
 [61] "side.fluo.normalized.histogram.ratio.bin.4.76_102"   
 [62] "side.fluo.normalized.histogram.ratio.bin.5.102_127"  
 [63] "side.fluo.normalized.histogram.ratio.bin.6.127_153"  
 [64] "side.fluo.normalized.histogram.ratio.bin.7.153_178"  
 [65] "side.fluo.normalized.histogram.ratio.bin.8.178_204"  
 [66] "side.fluo.normalized.histogram.ratio.bin.10.229_255" 
 [67] "side.nir.histogram.phenol.bin.3.51_76"               
 [68] "side.nir.histogram.phenol.bin.4.76_102"              
 [69] "side.nir.histogram.phenol.bin.5.102_127"             
 [70] "side.nir.histogram.phenol.bin.6.127_153"             
 [71] "side.nir.histogram.phenol.bin.7.153_178"             
 [72] "side.nir.histogram.ratio.bin.5.102_127"              
 [73] "top.fluo.histogram.bin.1.0_25"                       
 [74] "top.fluo.histogram.bin.2.25_51"                      
 [75] "top.fluo.histogram.bin.3.51_76"                      
 [76] "top.fluo.histogram.bin.4.76_102"                     
 [77] "top.fluo.histogram.bin.5.102_127"                    
 [78] "top.fluo.histogram.bin.6.127_153"                    
 [79] "top.fluo.histogram.bin.7.153_178"                    
 [80] "top.fluo.histogram.bin.8.178_204"                    
 [81] "top.fluo.histogram.bin.10.229_255"                   
 [82] "top.fluo.histogram.phenol.bin.1.0_25"                
 [83] "top.fluo.histogram.phenol.bin.2.25_51"               
 [84] "top.fluo.histogram.phenol.bin.3.51_76"               
 [85] "top.fluo.histogram.phenol.bin.4.76_102"              
 [86] "top.fluo.histogram.phenol.bin.5.102_127"             
 [87] "top.fluo.histogram.phenol.bin.6.127_153"             
 [88] "top.fluo.histogram.phenol.bin.7.153_178"             
 [89] "top.fluo.histogram.phenol.bin.10.229_255"            
 [90] "top.fluo.histogram.ratio.bin.1.0_25"                 
 [91] "top.fluo.histogram.ratio.bin.4.76_102"               
 [92] "top.fluo.histogram.ratio.bin.5.102_127"              
 [93] "top.fluo.histogram.ratio.bin.6.127_153"              
 [94] "top.fluo.histogram.ratio.bin.7.153_178"              
 [95] "top.fluo.histogram.ratio.bin.8.178_204"              
 [96] "top.fluo.histogram.ratio.bin.10.229_255"             
 [97] "top.nir.histogram.bin.2.25_51"                       
 [98] "top.nir.histogram.bin.3.51_76"                       
 [99] "top.nir.histogram.bin.4.76_102"                      
[100] "top.nir.histogram.bin.5.102_127"                     
[101] "top.nir.histogram.bin.6.127_153"                     
[102] "top.nir.histogram.bin.7.153_178"                     
[103] "top.nir.histogram.bin.8.178_204"                     
[104] "top.nir.histogram.bin.9.204_229"                     
[105] "top.nir.histogram.phenol.bin.2.25_51"                
[106] "top.nir.histogram.phenol.bin.3.51_76"                
[107] "top.nir.histogram.phenol.bin.4.76_102"               
[108] "top.nir.histogram.phenol.bin.5.102_127"              
[109] "top.nir.histogram.phenol.bin.6.127_153"              
[110] "top.nir.histogram.phenol.bin.7.153_178"              
[111] "top.nir.histogram.phenol.bin.8.178_204"              
[112] "top.nir.histogram.phenol.bin.9.204_229"              
[113] "top.nir.histogram.ratio.bin.5.102_127"               
> descriptor <- getVector(descriptorList)
> 	descriptorName <- seq(1:length(descriptor))
> 	
> 	descriptorName <- descriptorName[!is.na(descriptor)]
> 	descriptor <- descriptor[!is.na(descriptor)]
> groupedDataFrame <- data.table(iniDataSet)
> 		key(groupedDataFrame) <- c(groupBy, colNames$xAxis)	
> colNamesOfTheRest <- groupedDataFrameMean %allColnamesWithoutThisOnes% c(groupBy, colNames$xAxis)
Fehler in inherits(x, "data.frame") : 
  Objekt 'groupedDataFrameMean' nicht gefunden
> groupedDataFrameMean <- as.data.frame(groupedDataFrame[,lapply(.SD, mean, na.rm=TRUE), by=c(groupBy,colNames$xAxis)])
> colNamesOfTheRest <- groupedDataFrameMean %allColnamesWithoutThisOnes% c(groupBy, colNames$xAxis)
> colnames(groupedDataFrameMean) <- c(groupBy, colNames$colOfXaxis, colNamesOfTheRest)
> colnames(groupedDataFrameMean)
  [1] "Genotype"                                            
  [2] "Day..Int."                                           
  [3] "side.nir.normalized.histogram.bin.3.51_76"           
  [4] "side.nir.normalized.histogram.bin.4.76_102"          
  [5] "side.nir.normalized.histogram.bin.5.102_127"         
  [6] "side.nir.normalized.histogram.bin.6.127_153"         
  [7] "side.nir.normalized.histogram.bin.7.153_178"         
  [8] "side.fluo.histogram.bin.1.0_25"                      
  [9] "side.fluo.histogram.bin.2.25_51"                     
 [10] "side.fluo.histogram.bin.3.51_76"                     
 [11] "side.fluo.histogram.bin.4.76_102"                    
 [12] "side.fluo.histogram.bin.5.102_127"                   
 [13] "side.fluo.histogram.bin.6.127_153"                   
 [14] "side.fluo.histogram.bin.7.153_178"                   
 [15] "side.fluo.histogram.bin.8.178_204"                   
 [16] "side.fluo.histogram.bin.10.229_255"                  
 [17] "top.nir.histogram.bin.2.25_51"                       
 [18] "top.nir.histogram.bin.3.51_76"                       
 [19] "top.nir.histogram.bin.4.76_102"                      
 [20] "top.nir.histogram.bin.5.102_127"                     
 [21] "top.nir.histogram.bin.6.127_153"                     
 [22] "top.nir.histogram.bin.7.153_178"                     
 [23] "top.nir.histogram.bin.8.178_204"                     
 [24] "top.nir.histogram.bin.9.204_229"                     
 [25] "side.fluo.histogram.phenol.bin.1.0_25"               
 [26] "side.fluo.histogram.phenol.bin.2.25_51"              
 [27] "side.fluo.histogram.phenol.bin.3.51_76"              
 [28] "side.fluo.histogram.phenol.bin.4.76_102"             
 [29] "side.fluo.histogram.phenol.bin.5.102_127"            
 [30] "side.fluo.histogram.phenol.bin.6.127_153"            
 [31] "side.fluo.histogram.phenol.bin.7.153_178"            
 [32] "side.fluo.histogram.phenol.bin.10.229_255"           
 [33] "side.fluo.histogram.ratio.bin.1.0_25"                
 [34] "side.fluo.histogram.ratio.bin.4.76_102"              
 [35] "side.fluo.histogram.ratio.bin.5.102_127"             
 [36] "side.fluo.histogram.ratio.bin.6.127_153"             
 [37] "side.fluo.histogram.ratio.bin.7.153_178"             
 [38] "side.fluo.histogram.ratio.bin.8.178_204"             
 [39] "side.fluo.histogram.ratio.bin.10.229_255"            
 [40] "side.nir.normalized.histogram.bin.3.51_76.1"         
 [41] "side.nir.normalized.histogram.bin.4.76_102.1"        
 [42] "side.nir.normalized.histogram.bin.5.102_127.1"       
 [43] "side.nir.normalized.histogram.bin.6.127_153.1"       
 [44] "side.nir.normalized.histogram.bin.7.153_178.1"       
 [45] "side.fluo.normalized.histogram.bin.1.0_25"           
 [46] "side.fluo.normalized.histogram.bin.2.25_51"          
 [47] "side.fluo.normalized.histogram.bin.3.51_76"          
 [48] "side.fluo.normalized.histogram.bin.4.76_102"         
 [49] "side.fluo.normalized.histogram.bin.5.102_127"        
 [50] "side.fluo.normalized.histogram.bin.6.127_153"        
 [51] "side.fluo.normalized.histogram.bin.7.153_178"        
 [52] "side.fluo.normalized.histogram.bin.8.178_204"        
 [53] "side.fluo.normalized.histogram.bin.10.229_255"       
 [54] "side.fluo.normalized.histogram.phenol.bin.1.0_25"    
 [55] "side.fluo.normalized.histogram.phenol.bin.2.25_51"   
 [56] "side.fluo.normalized.histogram.phenol.bin.3.51_76"   
 [57] "side.fluo.normalized.histogram.phenol.bin.4.76_102"  
 [58] "side.fluo.normalized.histogram.phenol.bin.5.102_127" 
 [59] "side.fluo.normalized.histogram.phenol.bin.6.127_153" 
 [60] "side.fluo.normalized.histogram.phenol.bin.7.153_178" 
 [61] "side.fluo.normalized.histogram.phenol.bin.10.229_255"
 [62] "side.fluo.normalized.histogram.ratio.bin.1.0_25"     
 [63] "side.fluo.normalized.histogram.ratio.bin.4.76_102"   
 [64] "side.fluo.normalized.histogram.ratio.bin.5.102_127"  
 [65] "side.fluo.normalized.histogram.ratio.bin.6.127_153"  
 [66] "side.fluo.normalized.histogram.ratio.bin.7.153_178"  
 [67] "side.fluo.normalized.histogram.ratio.bin.8.178_204"  
 [68] "side.fluo.normalized.histogram.ratio.bin.10.229_255" 
 [69] "side.nir.histogram.phenol.bin.3.51_76"               
 [70] "side.nir.histogram.phenol.bin.4.76_102"              
 [71] "side.nir.histogram.phenol.bin.5.102_127"             
 [72] "side.nir.histogram.phenol.bin.6.127_153"             
 [73] "side.nir.histogram.phenol.bin.7.153_178"             
 [74] "side.nir.histogram.ratio.bin.5.102_127"              
 [75] "top.fluo.histogram.bin.1.0_25"                       
 [76] "top.fluo.histogram.bin.2.25_51"                      
 [77] "top.fluo.histogram.bin.3.51_76"                      
 [78] "top.fluo.histogram.bin.4.76_102"                     
 [79] "top.fluo.histogram.bin.5.102_127"                    
 [80] "top.fluo.histogram.bin.6.127_153"                    
 [81] "top.fluo.histogram.bin.7.153_178"                    
 [82] "top.fluo.histogram.bin.8.178_204"                    
 [83] "top.fluo.histogram.bin.10.229_255"                   
 [84] "top.fluo.histogram.phenol.bin.1.0_25"                
 [85] "top.fluo.histogram.phenol.bin.2.25_51"               
 [86] "top.fluo.histogram.phenol.bin.3.51_76"               
 [87] "top.fluo.histogram.phenol.bin.4.76_102"              
 [88] "top.fluo.histogram.phenol.bin.5.102_127"             
 [89] "top.fluo.histogram.phenol.bin.6.127_153"             
 [90] "top.fluo.histogram.phenol.bin.7.153_178"             
 [91] "top.fluo.histogram.phenol.bin.10.229_255"            
 [92] "top.fluo.histogram.ratio.bin.1.0_25"                 
 [93] "top.fluo.histogram.ratio.bin.4.76_102"               
 [94] "top.fluo.histogram.ratio.bin.5.102_127"              
 [95] "top.fluo.histogram.ratio.bin.6.127_153"              
 [96] "top.fluo.histogram.ratio.bin.7.153_178"              
 [97] "top.fluo.histogram.ratio.bin.8.178_204"              
 [98] "top.fluo.histogram.ratio.bin.10.229_255"             
 [99] "top.nir.histogram.bin.2.25_51.1"                     
[100] "top.nir.histogram.bin.3.51_76.1"                     
[101] "top.nir.histogram.bin.4.76_102.1"                    
[102] "top.nir.histogram.bin.5.102_127.1"                   
[103] "top.nir.histogram.bin.6.127_153.1"                   
[104] "top.nir.histogram.bin.7.153_178.1"                   
[105] "top.nir.histogram.bin.8.178_204.1"                   
[106] "top.nir.histogram.bin.9.204_229.1"                   
[107] "top.nir.histogram.phenol.bin.2.25_51"                
[108] "top.nir.histogram.phenol.bin.3.51_76"                
[109] "top.nir.histogram.phenol.bin.4.76_102"               
[110] "top.nir.histogram.phenol.bin.5.102_127"              
[111] "top.nir.histogram.phenol.bin.6.127_153"              
[112] "top.nir.histogram.phenol.bin.7.153_178"              
[113] "top.nir.histogram.phenol.bin.8.178_204"              
[114] "top.nir.histogram.phenol.bin.9.204_229"              
[115] "top.nir.histogram.ratio.bin.5.102_127"               
> iniDataSet <- groupedDataFrameMean[booleanVector,]
Fehler in `[.data.frame`(groupedDataFrameMean, booleanVector, ) : 
  Objekt 'booleanVector' nicht gefunden
> booleanVector <- getBooleanVectorForFilterValues(groupedDataFrameMean, booleanVectorList)
> iniDataSet <- groupedDataFrameMean[booleanVector,]		
> head(iniDataSet)
   Genotype Day..Int. side.nir.normalized.histogram.bin.3.51_76
1 Fernandez        12                                       NaN
2 Fernandez        13                                         0
3 Fernandez        15                                         0
4 Fernandez        16                                       NaN
5 Fernandez        17                                         0
6 Fernandez        18                                       NaN
  side.nir.normalized.histogram.bin.4.76_102
1                                        NaN
2                                   40.10413
3                                   60.58593
4                                        NaN
5                                   72.08299
6                                        NaN
  side.nir.normalized.histogram.bin.5.102_127
1                                         NaN
2                                    143.2485
3                                    202.8432
4                                         NaN
5                                    281.9670
6                                         NaN
  side.nir.normalized.histogram.bin.6.127_153
1                                         NaN
2                                    138.0056
3                                    149.7027
4                                         NaN
5                                    173.1181
6                                         NaN
  side.nir.normalized.histogram.bin.7.153_178 side.fluo.histogram.bin.1.0_25
1                                         NaN                            NaN
2                                           0                      0.0000000
3                                           0                      0.0312500
4                                         NaN                            NaN
5                                           0                      0.8709677
6                                         NaN                            NaN
  side.fluo.histogram.bin.2.25_51 side.fluo.histogram.bin.3.51_76
1                             NaN                             NaN
2                        821.9242                        865.7576
3                       1578.9062                       1263.7812
4                             NaN                             NaN
5                       2174.0806                       1761.6290
6                             NaN                             NaN
  side.fluo.histogram.bin.4.76_102 side.fluo.histogram.bin.5.102_127
1                              NaN                               NaN
2                         844.3939                          881.4697
3                        1192.6562                         1183.5625
4                              NaN                               NaN
5                        1608.3710                         1591.6935
6                              NaN                               NaN
  side.fluo.histogram.bin.6.127_153 side.fluo.histogram.bin.7.153_178
1                               NaN                               NaN
2                          990.2727                          1115.970
3                         1260.7656                          1437.781
4                               NaN                               NaN
5                         1693.2258                          1853.371
6                               NaN                               NaN
  side.fluo.histogram.bin.8.178_204 side.fluo.histogram.bin.10.229_255
1                               NaN                                NaN
2                          541.3333                                  0
3                          697.2656                                  0
4                               NaN                                NaN
5                          894.2581                                  0
6                               NaN                                NaN
  top.nir.histogram.bin.2.25_51 top.nir.histogram.bin.3.51_76
1                           NaN                           NaN
2                             0                       0.00000
3                             0                       4.84375
4                           NaN                           NaN
5                             0                       0.00000
6                           NaN                           NaN
  top.nir.histogram.bin.4.76_102 top.nir.histogram.bin.5.102_127
1                            NaN                             NaN
2                        43.6875                        600.0312
3                       742.1875                        522.9062
4                            NaN                             NaN
5                       583.4516                        745.9355
6                            NaN                             NaN
  top.nir.histogram.bin.6.127_153 top.nir.histogram.bin.7.153_178
1                             NaN                             NaN
2                       145.15625                        39.68750
3                        20.68750                        32.31250
4                             NaN                             NaN
5                        62.83871                        56.80645
6                             NaN                             NaN
  top.nir.histogram.bin.8.178_204 top.nir.histogram.bin.9.204_229
1                             NaN                             NaN
2                        14.34375                         0.15625
3                        15.06250                         0.00000
4                             NaN                             NaN
5                        21.64516                         0.00000
6                             NaN                             NaN
  side.fluo.histogram.phenol.bin.1.0_25 side.fluo.histogram.phenol.bin.2.25_51
1                                   NaN                                    NaN
2                                     0                                      0
3                                     0                                      0
4                                   NaN                                    NaN
5                                     0                                      0
6                                   NaN                                    NaN
  side.fluo.histogram.phenol.bin.3.51_76
1                                    NaN
2                                      0
3                                      0
4                                    NaN
5                                      0
6                                    NaN
  side.fluo.histogram.phenol.bin.4.76_102
1                                     NaN
2                                       0
3                                       0
4                                     NaN
5                                       0
6                                     NaN
  side.fluo.histogram.phenol.bin.5.102_127
1                                      NaN
2                                        0
3                                        0
4                                      NaN
5                                        0
6                                      NaN
  side.fluo.histogram.phenol.bin.6.127_153
1                                      NaN
2                                        0
3                                        0
4                                      NaN
5                                        0
6                                      NaN
  side.fluo.histogram.phenol.bin.7.153_178
1                                      NaN
2                                        0
3                                        0
4                                      NaN
5                                        0
6                                      NaN
  side.fluo.histogram.phenol.bin.10.229_255
1                                       NaN
2                                  6061.121
3                                  8614.750
4                                       NaN
5                                 11577.500
6                                       NaN
  side.fluo.histogram.ratio.bin.1.0_25 side.fluo.histogram.ratio.bin.4.76_102
1                                  NaN                                    NaN
2                             6061.121                                      0
3                             8614.750                                      0
4                                  NaN                                    NaN
5                            11577.500                                      0
6                                  NaN                                    NaN
  side.fluo.histogram.ratio.bin.5.102_127
1                                     NaN
2                                       0
3                                       0
4                                     NaN
5                                       0
6                                     NaN
  side.fluo.histogram.ratio.bin.6.127_153
1                                     NaN
2                                       0
3                                       0
4                                     NaN
5                                       0
6                                     NaN
  side.fluo.histogram.ratio.bin.7.153_178
1                                     NaN
2                                       0
3                                       0
4                                     NaN
5                                       0
6                                     NaN
  side.fluo.histogram.ratio.bin.8.178_204
1                                     NaN
2                                       0
3                                       0
4                                     NaN
5                                       0
6                                     NaN
  side.fluo.histogram.ratio.bin.10.229_255
1                                      NaN
2                                        0
3                                        0
4                                      NaN
5                                        0
6                                      NaN
  side.nir.normalized.histogram.bin.3.51_76.1
1                                         NaN
2                                           0
3                                           0
4                                         NaN
5                                           0
6                                         NaN
  side.nir.normalized.histogram.bin.4.76_102.1
1                                          NaN
2                                     40.10413
3                                     60.58593
4                                          NaN
5                                     72.08299
6                                          NaN
  side.nir.normalized.histogram.bin.5.102_127.1
1                                           NaN
2                                      143.2485
3                                      202.8432
4                                           NaN
5                                      281.9670
6                                           NaN
  side.nir.normalized.histogram.bin.6.127_153.1
1                                           NaN
2                                      138.0056
3                                      149.7027
4                                           NaN
5                                      173.1181
6                                           NaN
  side.nir.normalized.histogram.bin.7.153_178.1
1                                           NaN
2                                             0
3                                             0
4                                           NaN
5                                             0
6                                           NaN
  side.fluo.normalized.histogram.bin.1.0_25
1                                       NaN
2                                0.00000000
3                                0.02405635
4                                       NaN
5                                0.66869634
6                                       NaN
  side.fluo.normalized.histogram.bin.2.25_51
1                                        NaN
2                                   631.8529
3                                  1215.4472
4                                        NaN
5                                  1669.1775
6                                        NaN
  side.fluo.normalized.histogram.bin.3.51_76
1                                        NaN
2                                   665.5746
3                                   972.8630
4                                        NaN
5                                  1352.5126
6                                        NaN
  side.fluo.normalized.histogram.bin.4.76_102
1                                         NaN
2                                    649.1458
3                                    918.1107
4                                         NaN
5                                   1234.8469
6                                         NaN
  side.fluo.normalized.histogram.bin.5.102_127
1                                          NaN
2                                     677.6485
3                                     911.1103
4                                          NaN
5                                    1222.0426
6                                          NaN
  side.fluo.normalized.histogram.bin.6.127_153
1                                          NaN
2                                     761.3069
3                                     970.5415
4                                          NaN
5                                    1299.9952
6                                          NaN
  side.fluo.normalized.histogram.bin.7.153_178
1                                          NaN
2                                     857.9449
3                                    1106.8087
4                                          NaN
5                                    1422.9487
6                                          NaN
  side.fluo.normalized.histogram.bin.8.178_204
1                                          NaN
2                                     416.1710
3                                     536.7574
4                                          NaN
5                                     686.5778
6                                          NaN
  side.fluo.normalized.histogram.bin.10.229_255
1                                           NaN
2                                             0
3                                             0
4                                           NaN
5                                             0
6                                           NaN
  side.fluo.normalized.histogram.phenol.bin.1.0_25
1                                              NaN
2                                                0
3                                                0
4                                              NaN
5                                                0
6                                              NaN
  side.fluo.normalized.histogram.phenol.bin.2.25_51
1                                               NaN
2                                                 0
3                                                 0
4                                               NaN
5                                                 0
6                                               NaN
  side.fluo.normalized.histogram.phenol.bin.3.51_76
1                                               NaN
2                                                 0
3                                                 0
4                                               NaN
5                                                 0
6                                               NaN
  side.fluo.normalized.histogram.phenol.bin.4.76_102
1                                                NaN
2                                                  0
3                                                  0
4                                                NaN
5                                                  0
6                                                NaN
  side.fluo.normalized.histogram.phenol.bin.5.102_127
1                                                 NaN
2                                                   0
3                                                   0
4                                                 NaN
5                                                   0
6                                                 NaN
  side.fluo.normalized.histogram.phenol.bin.6.127_153
1                                                 NaN
2                                                   0
3                                                   0
4                                                 NaN
5                                                   0
6                                                 NaN
  side.fluo.normalized.histogram.phenol.bin.7.153_178
1                                                 NaN
2                                                   0
3                                                   0
4                                                 NaN
5                                                   0
6                                                 NaN
  side.fluo.normalized.histogram.phenol.bin.10.229_255
1                                                  NaN
2                                             4659.645
3                                             6631.663
4                                                  NaN
5                                             8888.770
6                                                  NaN
  side.fluo.normalized.histogram.ratio.bin.1.0_25
1                                             NaN
2                                        4659.645
3                                        6631.663
4                                             NaN
5                                        8888.770
6                                             NaN
  side.fluo.normalized.histogram.ratio.bin.4.76_102
1                                               NaN
2                                                 0
3                                                 0
4                                               NaN
5                                                 0
6                                               NaN
  side.fluo.normalized.histogram.ratio.bin.5.102_127
1                                                NaN
2                                                  0
3                                                  0
4                                                NaN
5                                                  0
6                                                NaN
  side.fluo.normalized.histogram.ratio.bin.6.127_153
1                                                NaN
2                                                  0
3                                                  0
4                                                NaN
5                                                  0
6                                                NaN
  side.fluo.normalized.histogram.ratio.bin.7.153_178
1                                                NaN
2                                                  0
3                                                  0
4                                                NaN
5                                                  0
6                                                NaN
  side.fluo.normalized.histogram.ratio.bin.8.178_204
1                                                NaN
2                                                  0
3                                                  0
4                                                NaN
5                                                  0
6                                                NaN
  side.fluo.normalized.histogram.ratio.bin.10.229_255
1                                                 NaN
2                                                   0
3                                                   0
4                                                 NaN
5                                                   0
6                                                 NaN
  side.nir.histogram.phenol.bin.3.51_76 side.nir.histogram.phenol.bin.4.76_102
1                                   NaN                                    NaN
2                                     0                               52.16667
3                                     0                               78.70312
4                                   NaN                                    NaN
5                                     0                               93.88710
6                                   NaN                                    NaN
  side.nir.histogram.phenol.bin.5.102_127
1                                     NaN
2                                186.3333
3                                263.5000
4                                     NaN
5                                367.2581
6                                     NaN
  side.nir.histogram.phenol.bin.6.127_153
1                                     NaN
2                                179.5152
3                                194.4688
4                                     NaN
5                                225.4839
6                                     NaN
  side.nir.histogram.phenol.bin.7.153_178
1                                     NaN
2                                       0
3                                       0
4                                     NaN
5                                       0
6                                     NaN
  side.nir.histogram.ratio.bin.5.102_127 top.fluo.histogram.bin.1.0_25
1                                    NaN                           NaN
2                               418.0152                      4.062500
3                               536.6719                     22.093750
4                                    NaN                           NaN
5                               686.6290                      6.290323
6                                    NaN                           NaN
  top.fluo.histogram.bin.2.25_51 top.fluo.histogram.bin.3.51_76
1                            NaN                            NaN
2                       29.34375                       302.7812
3                      206.03125                       855.4375
4                            NaN                            NaN
5                      109.67742                       839.5161
6                            NaN                            NaN
  top.fluo.histogram.bin.4.76_102 top.fluo.histogram.bin.5.102_127
1                             NaN                              NaN
2                        750.1562                          993.250
3                       1812.9062                         1729.844
4                             NaN                              NaN
5                       2607.6129                         2675.419
6                             NaN                              NaN
  top.fluo.histogram.bin.6.127_153 top.fluo.histogram.bin.7.153_178
1                              NaN                              NaN
2                         811.7188                         541.3125
3                        1264.1875                         828.9062
4                              NaN                              NaN
5                        1935.3226                        1213.3226
6                              NaN                              NaN
  top.fluo.histogram.bin.8.178_204 top.fluo.histogram.bin.10.229_255
1                              NaN                               NaN
2                         27.59375                         0.5312500
3                         45.56250                         0.5937500
4                              NaN                               NaN
5                         65.19355                         0.8387097
6                              NaN                               NaN
  top.fluo.histogram.phenol.bin.1.0_25 top.fluo.histogram.phenol.bin.2.25_51
1                                  NaN                                   NaN
2                               0.0625                               0.00000
3                               0.0625                               0.03125
4                                  NaN                                   NaN
5                               0.0000                               0.00000
6                                  NaN                                   NaN
  top.fluo.histogram.phenol.bin.3.51_76 top.fluo.histogram.phenol.bin.4.76_102
1                                   NaN                                    NaN
2                                     0                                0.00000
3                                     0                                0.03125
4                                   NaN                                    NaN
5                                     0                                0.00000
6                                   NaN                                    NaN
  top.fluo.histogram.phenol.bin.5.102_127
1                                     NaN
2                               0.0625000
3                               0.1250000
4                                     NaN
5                               0.3870968
6                                     NaN
  top.fluo.histogram.phenol.bin.6.127_153
1                                     NaN
2                                0.250000
3                                0.625000
4                                     NaN
5                                1.290323
6                                     NaN
  top.fluo.histogram.phenol.bin.7.153_178
1                                     NaN
2                                       0
3                                       0
4                                     NaN
5                                       0
6                                     NaN
  top.fluo.histogram.phenol.bin.10.229_255 top.fluo.histogram.ratio.bin.1.0_25
1                                      NaN                                 NaN
2                                 3460.375                            3460.125
3                                 6764.688                            6764.469
4                                      NaN                                 NaN
5                                 9451.516                            9451.065
6                                      NaN                                 NaN
  top.fluo.histogram.ratio.bin.4.76_102 top.fluo.histogram.ratio.bin.5.102_127
1                                   NaN                                    NaN
2                             0.0000000                              0.0312500
3                             0.1250000                              0.1562500
4                                   NaN                                    NaN
5                             0.2580645                              0.6774194
6                                   NaN                                    NaN
  top.fluo.histogram.ratio.bin.6.127_153 top.fluo.histogram.ratio.bin.7.153_178
1                                    NaN                                    NaN
2                              0.0625000                             0.00000000
3                              0.1875000                             0.03125000
4                                    NaN                                    NaN
5                              0.3225806                             0.03225806
6                                    NaN                                    NaN
  top.fluo.histogram.ratio.bin.8.178_204
1                                    NaN
2                                      0
3                                      0
4                                    NaN
5                                      0
6                                    NaN
  top.fluo.histogram.ratio.bin.10.229_255 top.nir.histogram.bin.2.25_51.1
1                                     NaN                             NaN
2                               0.2812500                               0
3                               0.3750000                               0
4                                     NaN                             NaN
5                               0.3870968                               0
6                                     NaN                             NaN
  top.nir.histogram.bin.3.51_76.1 top.nir.histogram.bin.4.76_102.1
1                             NaN                              NaN
2                         0.00000                          43.6875
3                         4.84375                         742.1875
4                             NaN                              NaN
5                         0.00000                         583.4516
6                             NaN                              NaN
  top.nir.histogram.bin.5.102_127.1 top.nir.histogram.bin.6.127_153.1
1                               NaN                               NaN
2                          600.0312                         145.15625
3                          522.9062                          20.68750
4                               NaN                               NaN
5                          745.9355                          62.83871
6                               NaN                               NaN
  top.nir.histogram.bin.7.153_178.1 top.nir.histogram.bin.8.178_204.1
1                               NaN                               NaN
2                          39.68750                          14.34375
3                          32.31250                          15.06250
4                               NaN                               NaN
5                          56.80645                          21.64516
6                               NaN                               NaN
  top.nir.histogram.bin.9.204_229.1 top.nir.histogram.phenol.bin.2.25_51
1                               NaN                                  NaN
2                           0.15625                                    0
3                           0.00000                                    0
4                               NaN                                  NaN
5                           0.00000                                    0
6                               NaN                                  NaN
  top.nir.histogram.phenol.bin.3.51_76 top.nir.histogram.phenol.bin.4.76_102
1                                  NaN                                   NaN
2                              0.00000                               43.6875
3                              4.84375                              742.1875
4                                  NaN                                   NaN
5                              0.00000                              583.4516
6                                  NaN                                   NaN
  top.nir.histogram.phenol.bin.5.102_127 top.nir.histogram.phenol.bin.6.127_153
1                                    NaN                                    NaN
2                               600.0312                              145.15625
3                               522.9062                               20.68750
4                                    NaN                                    NaN
5                               745.9355                               62.83871
6                                    NaN                                    NaN
  top.nir.histogram.phenol.bin.7.153_178 top.nir.histogram.phenol.bin.8.178_204
1                                    NaN                                    NaN
2                               39.68750                               14.34375
3                               32.31250                               15.06250
4                                    NaN                                    NaN
5                               56.80645                               21.64516
6                                    NaN                                    NaN
  top.nir.histogram.phenol.bin.9.204_229 top.nir.histogram.ratio.bin.5.102_127
1                                    NaN                                   NaN
2                                0.15625                              843.0625
3                                0.00000                             1338.0000
4                                    NaN                                   NaN
5                                0.00000                             1470.6774
6                                    NaN                                   NaN
> buildRowNameDataSet <- buildRowName(iniDataSet, groupBy)
> temp <- data.frame()
> buildRowNameDataSet %allColnamesWithoutThisOnes% c(colNames$xAxis, colNames$colName, "primaerTreatment")
  [1] "side.nir.normalized.histogram.bin.3.51_76"           
  [2] "side.nir.normalized.histogram.bin.4.76_102"          
  [3] "side.nir.normalized.histogram.bin.5.102_127"         
  [4] "side.nir.normalized.histogram.bin.6.127_153"         
  [5] "side.nir.normalized.histogram.bin.7.153_178"         
  [6] "side.fluo.histogram.bin.1.0_25"                      
  [7] "side.fluo.histogram.bin.2.25_51"                     
  [8] "side.fluo.histogram.bin.3.51_76"                     
  [9] "side.fluo.histogram.bin.4.76_102"                    
 [10] "side.fluo.histogram.bin.5.102_127"                   
 [11] "side.fluo.histogram.bin.6.127_153"                   
 [12] "side.fluo.histogram.bin.7.153_178"                   
 [13] "side.fluo.histogram.bin.8.178_204"                   
 [14] "side.fluo.histogram.bin.10.229_255"                  
 [15] "top.nir.histogram.bin.2.25_51"                       
 [16] "top.nir.histogram.bin.3.51_76"                       
 [17] "top.nir.histogram.bin.4.76_102"                      
 [18] "top.nir.histogram.bin.5.102_127"                     
 [19] "top.nir.histogram.bin.6.127_153"                     
 [20] "top.nir.histogram.bin.7.153_178"                     
 [21] "top.nir.histogram.bin.8.178_204"                     
 [22] "top.nir.histogram.bin.9.204_229"                     
 [23] "side.fluo.histogram.phenol.bin.1.0_25"               
 [24] "side.fluo.histogram.phenol.bin.2.25_51"              
 [25] "side.fluo.histogram.phenol.bin.3.51_76"              
 [26] "side.fluo.histogram.phenol.bin.4.76_102"             
 [27] "side.fluo.histogram.phenol.bin.5.102_127"            
 [28] "side.fluo.histogram.phenol.bin.6.127_153"            
 [29] "side.fluo.histogram.phenol.bin.7.153_178"            
 [30] "side.fluo.histogram.phenol.bin.10.229_255"           
 [31] "side.fluo.histogram.ratio.bin.1.0_25"                
 [32] "side.fluo.histogram.ratio.bin.4.76_102"              
 [33] "side.fluo.histogram.ratio.bin.5.102_127"             
 [34] "side.fluo.histogram.ratio.bin.6.127_153"             
 [35] "side.fluo.histogram.ratio.bin.7.153_178"             
 [36] "side.fluo.histogram.ratio.bin.8.178_204"             
 [37] "side.fluo.histogram.ratio.bin.10.229_255"            
 [38] "side.nir.normalized.histogram.bin.3.51_76.1"         
 [39] "side.nir.normalized.histogram.bin.4.76_102.1"        
 [40] "side.nir.normalized.histogram.bin.5.102_127.1"       
 [41] "side.nir.normalized.histogram.bin.6.127_153.1"       
 [42] "side.nir.normalized.histogram.bin.7.153_178.1"       
 [43] "side.fluo.normalized.histogram.bin.1.0_25"           
 [44] "side.fluo.normalized.histogram.bin.2.25_51"          
 [45] "side.fluo.normalized.histogram.bin.3.51_76"          
 [46] "side.fluo.normalized.histogram.bin.4.76_102"         
 [47] "side.fluo.normalized.histogram.bin.5.102_127"        
 [48] "side.fluo.normalized.histogram.bin.6.127_153"        
 [49] "side.fluo.normalized.histogram.bin.7.153_178"        
 [50] "side.fluo.normalized.histogram.bin.8.178_204"        
 [51] "side.fluo.normalized.histogram.bin.10.229_255"       
 [52] "side.fluo.normalized.histogram.phenol.bin.1.0_25"    
 [53] "side.fluo.normalized.histogram.phenol.bin.2.25_51"   
 [54] "side.fluo.normalized.histogram.phenol.bin.3.51_76"   
 [55] "side.fluo.normalized.histogram.phenol.bin.4.76_102"  
 [56] "side.fluo.normalized.histogram.phenol.bin.5.102_127" 
 [57] "side.fluo.normalized.histogram.phenol.bin.6.127_153" 
 [58] "side.fluo.normalized.histogram.phenol.bin.7.153_178" 
 [59] "side.fluo.normalized.histogram.phenol.bin.10.229_255"
 [60] "side.fluo.normalized.histogram.ratio.bin.1.0_25"     
 [61] "side.fluo.normalized.histogram.ratio.bin.4.76_102"   
 [62] "side.fluo.normalized.histogram.ratio.bin.5.102_127"  
 [63] "side.fluo.normalized.histogram.ratio.bin.6.127_153"  
 [64] "side.fluo.normalized.histogram.ratio.bin.7.153_178"  
 [65] "side.fluo.normalized.histogram.ratio.bin.8.178_204"  
 [66] "side.fluo.normalized.histogram.ratio.bin.10.229_255" 
 [67] "side.nir.histogram.phenol.bin.3.51_76"               
 [68] "side.nir.histogram.phenol.bin.4.76_102"              
 [69] "side.nir.histogram.phenol.bin.5.102_127"             
 [70] "side.nir.histogram.phenol.bin.6.127_153"             
 [71] "side.nir.histogram.phenol.bin.7.153_178"             
 [72] "side.nir.histogram.ratio.bin.5.102_127"              
 [73] "top.fluo.histogram.bin.1.0_25"                       
 [74] "top.fluo.histogram.bin.2.25_51"                      
 [75] "top.fluo.histogram.bin.3.51_76"                      
 [76] "top.fluo.histogram.bin.4.76_102"                     
 [77] "top.fluo.histogram.bin.5.102_127"                    
 [78] "top.fluo.histogram.bin.6.127_153"                    
 [79] "top.fluo.histogram.bin.7.153_178"                    
 [80] "top.fluo.histogram.bin.8.178_204"                    
 [81] "top.fluo.histogram.bin.10.229_255"                   
 [82] "top.fluo.histogram.phenol.bin.1.0_25"                
 [83] "top.fluo.histogram.phenol.bin.2.25_51"               
 [84] "top.fluo.histogram.phenol.bin.3.51_76"               
 [85] "top.fluo.histogram.phenol.bin.4.76_102"              
 [86] "top.fluo.histogram.phenol.bin.5.102_127"             
 [87] "top.fluo.histogram.phenol.bin.6.127_153"             
 [88] "top.fluo.histogram.phenol.bin.7.153_178"             
 [89] "top.fluo.histogram.phenol.bin.10.229_255"            
 [90] "top.fluo.histogram.ratio.bin.1.0_25"                 
 [91] "top.fluo.histogram.ratio.bin.4.76_102"               
 [92] "top.fluo.histogram.ratio.bin.5.102_127"              
 [93] "top.fluo.histogram.ratio.bin.6.127_153"              
 [94] "top.fluo.histogram.ratio.bin.7.153_178"              
 [95] "top.fluo.histogram.ratio.bin.8.178_204"              
 [96] "top.fluo.histogram.ratio.bin.10.229_255"             
 [97] "top.nir.histogram.bin.2.25_51.1"                     
 [98] "top.nir.histogram.bin.3.51_76.1"                     
 [99] "top.nir.histogram.bin.4.76_102.1"                    
[100] "top.nir.histogram.bin.5.102_127.1"                   
[101] "top.nir.histogram.bin.6.127_153.1"                   
[102] "top.nir.histogram.bin.7.153_178.1"                   
[103] "top.nir.histogram.bin.8.178_204.1"                   
[104] "top.nir.histogram.bin.9.204_229.1"                   
[105] "top.nir.histogram.phenol.bin.2.25_51"                
[106] "top.nir.histogram.phenol.bin.3.51_76"                
[107] "top.nir.histogram.phenol.bin.4.76_102"               
[108] "top.nir.histogram.phenol.bin.5.102_127"              
[109] "top.nir.histogram.phenol.bin.6.127_153"              
[110] "top.nir.histogram.phenol.bin.7.153_178"              
[111] "top.nir.histogram.phenol.bin.8.178_204"              
[112] "top.nir.histogram.phenol.bin.9.204_229"              
[113] "top.nir.histogram.ratio.bin.5.102_127"               
> colNameWichMustBind <- buildRowNameDataSet %allColnamesWithoutThisOnes% c(colNames$xAxis, colNames$colName, "primaerTreatment")[1]
> colNameWichMustBind
  [1] "name"                                                
  [2] "side.nir.normalized.histogram.bin.3.51_76"           
  [3] "side.nir.normalized.histogram.bin.4.76_102"          
  [4] "side.nir.normalized.histogram.bin.5.102_127"         
  [5] "side.nir.normalized.histogram.bin.6.127_153"         
  [6] "side.nir.normalized.histogram.bin.7.153_178"         
  [7] "side.fluo.histogram.bin.1.0_25"                      
  [8] "side.fluo.histogram.bin.2.25_51"                     
  [9] "side.fluo.histogram.bin.3.51_76"                     
 [10] "side.fluo.histogram.bin.4.76_102"                    
 [11] "side.fluo.histogram.bin.5.102_127"                   
 [12] "side.fluo.histogram.bin.6.127_153"                   
 [13] "side.fluo.histogram.bin.7.153_178"                   
 [14] "side.fluo.histogram.bin.8.178_204"                   
 [15] "side.fluo.histogram.bin.10.229_255"                  
 [16] "top.nir.histogram.bin.2.25_51"                       
 [17] "top.nir.histogram.bin.3.51_76"                       
 [18] "top.nir.histogram.bin.4.76_102"                      
 [19] "top.nir.histogram.bin.5.102_127"                     
 [20] "top.nir.histogram.bin.6.127_153"                     
 [21] "top.nir.histogram.bin.7.153_178"                     
 [22] "top.nir.histogram.bin.8.178_204"                     
 [23] "top.nir.histogram.bin.9.204_229"                     
 [24] "side.fluo.histogram.phenol.bin.1.0_25"               
 [25] "side.fluo.histogram.phenol.bin.2.25_51"              
 [26] "side.fluo.histogram.phenol.bin.3.51_76"              
 [27] "side.fluo.histogram.phenol.bin.4.76_102"             
 [28] "side.fluo.histogram.phenol.bin.5.102_127"            
 [29] "side.fluo.histogram.phenol.bin.6.127_153"            
 [30] "side.fluo.histogram.phenol.bin.7.153_178"            
 [31] "side.fluo.histogram.phenol.bin.10.229_255"           
 [32] "side.fluo.histogram.ratio.bin.1.0_25"                
 [33] "side.fluo.histogram.ratio.bin.4.76_102"              
 [34] "side.fluo.histogram.ratio.bin.5.102_127"             
 [35] "side.fluo.histogram.ratio.bin.6.127_153"             
 [36] "side.fluo.histogram.ratio.bin.7.153_178"             
 [37] "side.fluo.histogram.ratio.bin.8.178_204"             
 [38] "side.fluo.histogram.ratio.bin.10.229_255"            
 [39] "side.nir.normalized.histogram.bin.3.51_76.1"         
 [40] "side.nir.normalized.histogram.bin.4.76_102.1"        
 [41] "side.nir.normalized.histogram.bin.5.102_127.1"       
 [42] "side.nir.normalized.histogram.bin.6.127_153.1"       
 [43] "side.nir.normalized.histogram.bin.7.153_178.1"       
 [44] "side.fluo.normalized.histogram.bin.1.0_25"           
 [45] "side.fluo.normalized.histogram.bin.2.25_51"          
 [46] "side.fluo.normalized.histogram.bin.3.51_76"          
 [47] "side.fluo.normalized.histogram.bin.4.76_102"         
 [48] "side.fluo.normalized.histogram.bin.5.102_127"        
 [49] "side.fluo.normalized.histogram.bin.6.127_153"        
 [50] "side.fluo.normalized.histogram.bin.7.153_178"        
 [51] "side.fluo.normalized.histogram.bin.8.178_204"        
 [52] "side.fluo.normalized.histogram.bin.10.229_255"       
 [53] "side.fluo.normalized.histogram.phenol.bin.1.0_25"    
 [54] "side.fluo.normalized.histogram.phenol.bin.2.25_51"   
 [55] "side.fluo.normalized.histogram.phenol.bin.3.51_76"   
 [56] "side.fluo.normalized.histogram.phenol.bin.4.76_102"  
 [57] "side.fluo.normalized.histogram.phenol.bin.5.102_127" 
 [58] "side.fluo.normalized.histogram.phenol.bin.6.127_153" 
 [59] "side.fluo.normalized.histogram.phenol.bin.7.153_178" 
 [60] "side.fluo.normalized.histogram.phenol.bin.10.229_255"
 [61] "side.fluo.normalized.histogram.ratio.bin.1.0_25"     
 [62] "side.fluo.normalized.histogram.ratio.bin.4.76_102"   
 [63] "side.fluo.normalized.histogram.ratio.bin.5.102_127"  
 [64] "side.fluo.normalized.histogram.ratio.bin.6.127_153"  
 [65] "side.fluo.normalized.histogram.ratio.bin.7.153_178"  
 [66] "side.fluo.normalized.histogram.ratio.bin.8.178_204"  
 [67] "side.fluo.normalized.histogram.ratio.bin.10.229_255" 
 [68] "side.nir.histogram.phenol.bin.3.51_76"               
 [69] "side.nir.histogram.phenol.bin.4.76_102"              
 [70] "side.nir.histogram.phenol.bin.5.102_127"             
 [71] "side.nir.histogram.phenol.bin.6.127_153"             
 [72] "side.nir.histogram.phenol.bin.7.153_178"             
 [73] "side.nir.histogram.ratio.bin.5.102_127"              
 [74] "top.fluo.histogram.bin.1.0_25"                       
 [75] "top.fluo.histogram.bin.2.25_51"                      
 [76] "top.fluo.histogram.bin.3.51_76"                      
 [77] "top.fluo.histogram.bin.4.76_102"                     
 [78] "top.fluo.histogram.bin.5.102_127"                    
 [79] "top.fluo.histogram.bin.6.127_153"                    
 [80] "top.fluo.histogram.bin.7.153_178"                    
 [81] "top.fluo.histogram.bin.8.178_204"                    
 [82] "top.fluo.histogram.bin.10.229_255"                   
 [83] "top.fluo.histogram.phenol.bin.1.0_25"                
 [84] "top.fluo.histogram.phenol.bin.2.25_51"               
 [85] "top.fluo.histogram.phenol.bin.3.51_76"               
 [86] "top.fluo.histogram.phenol.bin.4.76_102"              
 [87] "top.fluo.histogram.phenol.bin.5.102_127"             
 [88] "top.fluo.histogram.phenol.bin.6.127_153"             
 [89] "top.fluo.histogram.phenol.bin.7.153_178"             
 [90] "top.fluo.histogram.phenol.bin.10.229_255"            
 [91] "top.fluo.histogram.ratio.bin.1.0_25"                 
 [92] "top.fluo.histogram.ratio.bin.4.76_102"               
 [93] "top.fluo.histogram.ratio.bin.5.102_127"              
 [94] "top.fluo.histogram.ratio.bin.6.127_153"              
 [95] "top.fluo.histogram.ratio.bin.7.153_178"              
 [96] "top.fluo.histogram.ratio.bin.8.178_204"              
 [97] "top.fluo.histogram.ratio.bin.10.229_255"             
 [98] "top.nir.histogram.bin.2.25_51.1"                     
 [99] "top.nir.histogram.bin.3.51_76.1"                     
[100] "top.nir.histogram.bin.4.76_102.1"                    
[101] "top.nir.histogram.bin.5.102_127.1"                   
[102] "top.nir.histogram.bin.6.127_153.1"                   
[103] "top.nir.histogram.bin.7.153_178.1"                   
[104] "top.nir.histogram.bin.8.178_204.1"                   
[105] "top.nir.histogram.bin.9.204_229.1"                   
[106] "top.nir.histogram.phenol.bin.2.25_51"                
[107] "top.nir.histogram.phenol.bin.3.51_76"                
[108] "top.nir.histogram.phenol.bin.4.76_102"               
[109] "top.nir.histogram.phenol.bin.5.102_127"              
[110] "top.nir.histogram.phenol.bin.6.127_153"              
[111] "top.nir.histogram.phenol.bin.7.153_178"              
[112] "top.nir.histogram.phenol.bin.8.178_204"              
[113] "top.nir.histogram.phenol.bin.9.204_229"              
[114] "top.nir.histogram.ratio.bin.5.102_127"               
> buildRowNameDataSet %allColnamesWithoutThisOnes% c(colNames$xAxis, colNames$colName, "primaerTreatment")[1]
  [1] "name"                                                
  [2] "side.nir.normalized.histogram.bin.3.51_76"           
  [3] "side.nir.normalized.histogram.bin.4.76_102"          
  [4] "side.nir.normalized.histogram.bin.5.102_127"         
  [5] "side.nir.normalized.histogram.bin.6.127_153"         
  [6] "side.nir.normalized.histogram.bin.7.153_178"         
  [7] "side.fluo.histogram.bin.1.0_25"                      
  [8] "side.fluo.histogram.bin.2.25_51"                     
  [9] "side.fluo.histogram.bin.3.51_76"                     
 [10] "side.fluo.histogram.bin.4.76_102"                    
 [11] "side.fluo.histogram.bin.5.102_127"                   
 [12] "side.fluo.histogram.bin.6.127_153"                   
 [13] "side.fluo.histogram.bin.7.153_178"                   
 [14] "side.fluo.histogram.bin.8.178_204"                   
 [15] "side.fluo.histogram.bin.10.229_255"                  
 [16] "top.nir.histogram.bin.2.25_51"                       
 [17] "top.nir.histogram.bin.3.51_76"                       
 [18] "top.nir.histogram.bin.4.76_102"                      
 [19] "top.nir.histogram.bin.5.102_127"                     
 [20] "top.nir.histogram.bin.6.127_153"                     
 [21] "top.nir.histogram.bin.7.153_178"                     
 [22] "top.nir.histogram.bin.8.178_204"                     
 [23] "top.nir.histogram.bin.9.204_229"                     
 [24] "side.fluo.histogram.phenol.bin.1.0_25"               
 [25] "side.fluo.histogram.phenol.bin.2.25_51"              
 [26] "side.fluo.histogram.phenol.bin.3.51_76"              
 [27] "side.fluo.histogram.phenol.bin.4.76_102"             
 [28] "side.fluo.histogram.phenol.bin.5.102_127"            
 [29] "side.fluo.histogram.phenol.bin.6.127_153"            
 [30] "side.fluo.histogram.phenol.bin.7.153_178"            
 [31] "side.fluo.histogram.phenol.bin.10.229_255"           
 [32] "side.fluo.histogram.ratio.bin.1.0_25"                
 [33] "side.fluo.histogram.ratio.bin.4.76_102"              
 [34] "side.fluo.histogram.ratio.bin.5.102_127"             
 [35] "side.fluo.histogram.ratio.bin.6.127_153"             
 [36] "side.fluo.histogram.ratio.bin.7.153_178"             
 [37] "side.fluo.histogram.ratio.bin.8.178_204"             
 [38] "side.fluo.histogram.ratio.bin.10.229_255"            
 [39] "side.nir.normalized.histogram.bin.3.51_76.1"         
 [40] "side.nir.normalized.histogram.bin.4.76_102.1"        
 [41] "side.nir.normalized.histogram.bin.5.102_127.1"       
 [42] "side.nir.normalized.histogram.bin.6.127_153.1"       
 [43] "side.nir.normalized.histogram.bin.7.153_178.1"       
 [44] "side.fluo.normalized.histogram.bin.1.0_25"           
 [45] "side.fluo.normalized.histogram.bin.2.25_51"          
 [46] "side.fluo.normalized.histogram.bin.3.51_76"          
 [47] "side.fluo.normalized.histogram.bin.4.76_102"         
 [48] "side.fluo.normalized.histogram.bin.5.102_127"        
 [49] "side.fluo.normalized.histogram.bin.6.127_153"        
 [50] "side.fluo.normalized.histogram.bin.7.153_178"        
 [51] "side.fluo.normalized.histogram.bin.8.178_204"        
 [52] "side.fluo.normalized.histogram.bin.10.229_255"       
 [53] "side.fluo.normalized.histogram.phenol.bin.1.0_25"    
 [54] "side.fluo.normalized.histogram.phenol.bin.2.25_51"   
 [55] "side.fluo.normalized.histogram.phenol.bin.3.51_76"   
 [56] "side.fluo.normalized.histogram.phenol.bin.4.76_102"  
 [57] "side.fluo.normalized.histogram.phenol.bin.5.102_127" 
 [58] "side.fluo.normalized.histogram.phenol.bin.6.127_153" 
 [59] "side.fluo.normalized.histogram.phenol.bin.7.153_178" 
 [60] "side.fluo.normalized.histogram.phenol.bin.10.229_255"
 [61] "side.fluo.normalized.histogram.ratio.bin.1.0_25"     
 [62] "side.fluo.normalized.histogram.ratio.bin.4.76_102"   
 [63] "side.fluo.normalized.histogram.ratio.bin.5.102_127"  
 [64] "side.fluo.normalized.histogram.ratio.bin.6.127_153"  
 [65] "side.fluo.normalized.histogram.ratio.bin.7.153_178"  
 [66] "side.fluo.normalized.histogram.ratio.bin.8.178_204"  
 [67] "side.fluo.normalized.histogram.ratio.bin.10.229_255" 
 [68] "side.nir.histogram.phenol.bin.3.51_76"               
 [69] "side.nir.histogram.phenol.bin.4.76_102"              
 [70] "side.nir.histogram.phenol.bin.5.102_127"             
 [71] "side.nir.histogram.phenol.bin.6.127_153"             
 [72] "side.nir.histogram.phenol.bin.7.153_178"             
 [73] "side.nir.histogram.ratio.bin.5.102_127"              
 [74] "top.fluo.histogram.bin.1.0_25"                       
 [75] "top.fluo.histogram.bin.2.25_51"                      
 [76] "top.fluo.histogram.bin.3.51_76"                      
 [77] "top.fluo.histogram.bin.4.76_102"                     
 [78] "top.fluo.histogram.bin.5.102_127"                    
 [79] "top.fluo.histogram.bin.6.127_153"                    
 [80] "top.fluo.histogram.bin.7.153_178"                    
 [81] "top.fluo.histogram.bin.8.178_204"                    
 [82] "top.fluo.histogram.bin.10.229_255"                   
 [83] "top.fluo.histogram.phenol.bin.1.0_25"                
 [84] "top.fluo.histogram.phenol.bin.2.25_51"               
 [85] "top.fluo.histogram.phenol.bin.3.51_76"               
 [86] "top.fluo.histogram.phenol.bin.4.76_102"              
 [87] "top.fluo.histogram.phenol.bin.5.102_127"             
 [88] "top.fluo.histogram.phenol.bin.6.127_153"             
 [89] "top.fluo.histogram.phenol.bin.7.153_178"             
 [90] "top.fluo.histogram.phenol.bin.10.229_255"            
 [91] "top.fluo.histogram.ratio.bin.1.0_25"                 
 [92] "top.fluo.histogram.ratio.bin.4.76_102"               
 [93] "top.fluo.histogram.ratio.bin.5.102_127"              
 [94] "top.fluo.histogram.ratio.bin.6.127_153"              
 [95] "top.fluo.histogram.ratio.bin.7.153_178"              
 [96] "top.fluo.histogram.ratio.bin.8.178_204"              
 [97] "top.fluo.histogram.ratio.bin.10.229_255"             
 [98] "top.nir.histogram.bin.2.25_51.1"                     
 [99] "top.nir.histogram.bin.3.51_76.1"                     
[100] "top.nir.histogram.bin.4.76_102.1"                    
[101] "top.nir.histogram.bin.5.102_127.1"                   
[102] "top.nir.histogram.bin.6.127_153.1"                   
[103] "top.nir.histogram.bin.7.153_178.1"                   
[104] "top.nir.histogram.bin.8.178_204.1"                   
[105] "top.nir.histogram.bin.9.204_229.1"                   
[106] "top.nir.histogram.phenol.bin.2.25_51"                
[107] "top.nir.histogram.phenol.bin.3.51_76"                
[108] "top.nir.histogram.phenol.bin.4.76_102"               
[109] "top.nir.histogram.phenol.bin.5.102_127"              
[110] "top.nir.histogram.phenol.bin.6.127_153"              
[111] "top.nir.histogram.phenol.bin.7.153_178"              
[112] "top.nir.histogram.phenol.bin.8.178_204"              
[113] "top.nir.histogram.phenol.bin.9.204_229"              
[114] "top.nir.histogram.ratio.bin.5.102_127"               
> (buildRowNameDataSet %allColnamesWithoutThisOnes% c(colNames$xAxis, colNames$colName, "primaerTreatment"))[1]
[1] "side.nir.normalized.histogram.bin.3.51_76"
> colNameWichMustBind <- (buildRowNameDataSet %allColnamesWithoutThisOnes% c(colNames$xAxis, colNames$colName, "primaerTreatment")[1])
> colNameWichMustBind
  [1] "name"                                                
  [2] "side.nir.normalized.histogram.bin.3.51_76"           
  [3] "side.nir.normalized.histogram.bin.4.76_102"          
  [4] "side.nir.normalized.histogram.bin.5.102_127"         
  [5] "side.nir.normalized.histogram.bin.6.127_153"         
  [6] "side.nir.normalized.histogram.bin.7.153_178"         
  [7] "side.fluo.histogram.bin.1.0_25"                      
  [8] "side.fluo.histogram.bin.2.25_51"                     
  [9] "side.fluo.histogram.bin.3.51_76"                     
 [10] "side.fluo.histogram.bin.4.76_102"                    
 [11] "side.fluo.histogram.bin.5.102_127"                   
 [12] "side.fluo.histogram.bin.6.127_153"                   
 [13] "side.fluo.histogram.bin.7.153_178"                   
 [14] "side.fluo.histogram.bin.8.178_204"                   
 [15] "side.fluo.histogram.bin.10.229_255"                  
 [16] "top.nir.histogram.bin.2.25_51"                       
 [17] "top.nir.histogram.bin.3.51_76"                       
 [18] "top.nir.histogram.bin.4.76_102"                      
 [19] "top.nir.histogram.bin.5.102_127"                     
 [20] "top.nir.histogram.bin.6.127_153"                     
 [21] "top.nir.histogram.bin.7.153_178"                     
 [22] "top.nir.histogram.bin.8.178_204"                     
 [23] "top.nir.histogram.bin.9.204_229"                     
 [24] "side.fluo.histogram.phenol.bin.1.0_25"               
 [25] "side.fluo.histogram.phenol.bin.2.25_51"              
 [26] "side.fluo.histogram.phenol.bin.3.51_76"              
 [27] "side.fluo.histogram.phenol.bin.4.76_102"             
 [28] "side.fluo.histogram.phenol.bin.5.102_127"            
 [29] "side.fluo.histogram.phenol.bin.6.127_153"            
 [30] "side.fluo.histogram.phenol.bin.7.153_178"            
 [31] "side.fluo.histogram.phenol.bin.10.229_255"           
 [32] "side.fluo.histogram.ratio.bin.1.0_25"                
 [33] "side.fluo.histogram.ratio.bin.4.76_102"              
 [34] "side.fluo.histogram.ratio.bin.5.102_127"             
 [35] "side.fluo.histogram.ratio.bin.6.127_153"             
 [36] "side.fluo.histogram.ratio.bin.7.153_178"             
 [37] "side.fluo.histogram.ratio.bin.8.178_204"             
 [38] "side.fluo.histogram.ratio.bin.10.229_255"            
 [39] "side.nir.normalized.histogram.bin.3.51_76.1"         
 [40] "side.nir.normalized.histogram.bin.4.76_102.1"        
 [41] "side.nir.normalized.histogram.bin.5.102_127.1"       
 [42] "side.nir.normalized.histogram.bin.6.127_153.1"       
 [43] "side.nir.normalized.histogram.bin.7.153_178.1"       
 [44] "side.fluo.normalized.histogram.bin.1.0_25"           
 [45] "side.fluo.normalized.histogram.bin.2.25_51"          
 [46] "side.fluo.normalized.histogram.bin.3.51_76"          
 [47] "side.fluo.normalized.histogram.bin.4.76_102"         
 [48] "side.fluo.normalized.histogram.bin.5.102_127"        
 [49] "side.fluo.normalized.histogram.bin.6.127_153"        
 [50] "side.fluo.normalized.histogram.bin.7.153_178"        
 [51] "side.fluo.normalized.histogram.bin.8.178_204"        
 [52] "side.fluo.normalized.histogram.bin.10.229_255"       
 [53] "side.fluo.normalized.histogram.phenol.bin.1.0_25"    
 [54] "side.fluo.normalized.histogram.phenol.bin.2.25_51"   
 [55] "side.fluo.normalized.histogram.phenol.bin.3.51_76"   
 [56] "side.fluo.normalized.histogram.phenol.bin.4.76_102"  
 [57] "side.fluo.normalized.histogram.phenol.bin.5.102_127" 
 [58] "side.fluo.normalized.histogram.phenol.bin.6.127_153" 
 [59] "side.fluo.normalized.histogram.phenol.bin.7.153_178" 
 [60] "side.fluo.normalized.histogram.phenol.bin.10.229_255"
 [61] "side.fluo.normalized.histogram.ratio.bin.1.0_25"     
 [62] "side.fluo.normalized.histogram.ratio.bin.4.76_102"   
 [63] "side.fluo.normalized.histogram.ratio.bin.5.102_127"  
 [64] "side.fluo.normalized.histogram.ratio.bin.6.127_153"  
 [65] "side.fluo.normalized.histogram.ratio.bin.7.153_178"  
 [66] "side.fluo.normalized.histogram.ratio.bin.8.178_204"  
 [67] "side.fluo.normalized.histogram.ratio.bin.10.229_255" 
 [68] "side.nir.histogram.phenol.bin.3.51_76"               
 [69] "side.nir.histogram.phenol.bin.4.76_102"              
 [70] "side.nir.histogram.phenol.bin.5.102_127"             
 [71] "side.nir.histogram.phenol.bin.6.127_153"             
 [72] "side.nir.histogram.phenol.bin.7.153_178"             
 [73] "side.nir.histogram.ratio.bin.5.102_127"              
 [74] "top.fluo.histogram.bin.1.0_25"                       
 [75] "top.fluo.histogram.bin.2.25_51"                      
 [76] "top.fluo.histogram.bin.3.51_76"                      
 [77] "top.fluo.histogram.bin.4.76_102"                     
 [78] "top.fluo.histogram.bin.5.102_127"                    
 [79] "top.fluo.histogram.bin.6.127_153"                    
 [80] "top.fluo.histogram.bin.7.153_178"                    
 [81] "top.fluo.histogram.bin.8.178_204"                    
 [82] "top.fluo.histogram.bin.10.229_255"                   
 [83] "top.fluo.histogram.phenol.bin.1.0_25"                
 [84] "top.fluo.histogram.phenol.bin.2.25_51"               
 [85] "top.fluo.histogram.phenol.bin.3.51_76"               
 [86] "top.fluo.histogram.phenol.bin.4.76_102"              
 [87] "top.fluo.histogram.phenol.bin.5.102_127"             
 [88] "top.fluo.histogram.phenol.bin.6.127_153"             
 [89] "top.fluo.histogram.phenol.bin.7.153_178"             
 [90] "top.fluo.histogram.phenol.bin.10.229_255"            
 [91] "top.fluo.histogram.ratio.bin.1.0_25"                 
 [92] "top.fluo.histogram.ratio.bin.4.76_102"               
 [93] "top.fluo.histogram.ratio.bin.5.102_127"              
 [94] "top.fluo.histogram.ratio.bin.6.127_153"              
 [95] "top.fluo.histogram.ratio.bin.7.153_178"              
 [96] "top.fluo.histogram.ratio.bin.8.178_204"              
 [97] "top.fluo.histogram.ratio.bin.10.229_255"             
 [98] "top.nir.histogram.bin.2.25_51.1"                     
 [99] "top.nir.histogram.bin.3.51_76.1"                     
[100] "top.nir.histogram.bin.4.76_102.1"                    
[101] "top.nir.histogram.bin.5.102_127.1"                   
[102] "top.nir.histogram.bin.6.127_153.1"                   
[103] "top.nir.histogram.bin.7.153_178.1"                   
[104] "top.nir.histogram.bin.8.178_204.1"                   
[105] "top.nir.histogram.bin.9.204_229.1"                   
[106] "top.nir.histogram.phenol.bin.2.25_51"                
[107] "top.nir.histogram.phenol.bin.3.51_76"                
[108] "top.nir.histogram.phenol.bin.4.76_102"               
[109] "top.nir.histogram.phenol.bin.5.102_127"              
[110] "top.nir.histogram.phenol.bin.6.127_153"              
[111] "top.nir.histogram.phenol.bin.7.153_178"              
[112] "top.nir.histogram.phenol.bin.8.178_204"              
[113] "top.nir.histogram.phenol.bin.9.204_229"              
[114] "top.nir.histogram.ratio.bin.5.102_127"               
> colNameWichMustBind <- (buildRowNameDataSet %allColnamesWithoutThisOnes% c(colNames$xAxis, colNames$colName, "primaerTreatment"))[1]
> colNameWichMustBind
[1] "side.nir.normalized.histogram.bin.3.51_76"
> getPlotNumber(colNameWichMustBind, descriptorList)
[1] "1"
> descriptorList
$`1`
                             descriptorVector
1   side.nir.normalized.histogram.bin.3.51_76
2  side.nir.normalized.histogram.bin.4.76_102
3 side.nir.normalized.histogram.bin.5.102_127
4 side.nir.normalized.histogram.bin.6.127_153
5 side.nir.normalized.histogram.bin.7.153_178

$`2`
                    descriptorVector
1     side.fluo.histogram.bin.1.0_25
2    side.fluo.histogram.bin.2.25_51
3    side.fluo.histogram.bin.3.51_76
4   side.fluo.histogram.bin.4.76_102
5  side.fluo.histogram.bin.5.102_127
6  side.fluo.histogram.bin.6.127_153
7  side.fluo.histogram.bin.7.153_178
8  side.fluo.histogram.bin.8.178_204
9 side.fluo.histogram.bin.10.229_255

$`3`
                 descriptorVector
1   top.nir.histogram.bin.2.25_51
2   top.nir.histogram.bin.3.51_76
3  top.nir.histogram.bin.4.76_102
4 top.nir.histogram.bin.5.102_127
5 top.nir.histogram.bin.6.127_153
6 top.nir.histogram.bin.7.153_178
7 top.nir.histogram.bin.8.178_204
8 top.nir.histogram.bin.9.204_229

$`4`
                           descriptorVector
1     side.fluo.histogram.phenol.bin.1.0_25
2    side.fluo.histogram.phenol.bin.2.25_51
3    side.fluo.histogram.phenol.bin.3.51_76
4   side.fluo.histogram.phenol.bin.4.76_102
5  side.fluo.histogram.phenol.bin.5.102_127
6  side.fluo.histogram.phenol.bin.6.127_153
7  side.fluo.histogram.phenol.bin.7.153_178
8 side.fluo.histogram.phenol.bin.10.229_255

$`5`
                          descriptorVector
1     side.fluo.histogram.ratio.bin.1.0_25
2   side.fluo.histogram.ratio.bin.4.76_102
3  side.fluo.histogram.ratio.bin.5.102_127
4  side.fluo.histogram.ratio.bin.6.127_153
5  side.fluo.histogram.ratio.bin.7.153_178
6  side.fluo.histogram.ratio.bin.8.178_204
7 side.fluo.histogram.ratio.bin.10.229_255

$`6`
                             descriptorVector
1   side.nir.normalized.histogram.bin.3.51_76
2  side.nir.normalized.histogram.bin.4.76_102
3 side.nir.normalized.histogram.bin.5.102_127
4 side.nir.normalized.histogram.bin.6.127_153
5 side.nir.normalized.histogram.bin.7.153_178

$`7`
                               descriptorVector
1     side.fluo.normalized.histogram.bin.1.0_25
2    side.fluo.normalized.histogram.bin.2.25_51
3    side.fluo.normalized.histogram.bin.3.51_76
4   side.fluo.normalized.histogram.bin.4.76_102
5  side.fluo.normalized.histogram.bin.5.102_127
6  side.fluo.normalized.histogram.bin.6.127_153
7  side.fluo.normalized.histogram.bin.7.153_178
8  side.fluo.normalized.histogram.bin.8.178_204
9 side.fluo.normalized.histogram.bin.10.229_255

$`8`
                                      descriptorVector
1     side.fluo.normalized.histogram.phenol.bin.1.0_25
2    side.fluo.normalized.histogram.phenol.bin.2.25_51
3    side.fluo.normalized.histogram.phenol.bin.3.51_76
4   side.fluo.normalized.histogram.phenol.bin.4.76_102
5  side.fluo.normalized.histogram.phenol.bin.5.102_127
6  side.fluo.normalized.histogram.phenol.bin.6.127_153
7  side.fluo.normalized.histogram.phenol.bin.7.153_178
8 side.fluo.normalized.histogram.phenol.bin.10.229_255

$`9`
                                     descriptorVector
1     side.fluo.normalized.histogram.ratio.bin.1.0_25
2   side.fluo.normalized.histogram.ratio.bin.4.76_102
3  side.fluo.normalized.histogram.ratio.bin.5.102_127
4  side.fluo.normalized.histogram.ratio.bin.6.127_153
5  side.fluo.normalized.histogram.ratio.bin.7.153_178
6  side.fluo.normalized.histogram.ratio.bin.8.178_204
7 side.fluo.normalized.histogram.ratio.bin.10.229_255

$`10`
                         descriptorVector
1   side.nir.histogram.phenol.bin.3.51_76
2  side.nir.histogram.phenol.bin.4.76_102
3 side.nir.histogram.phenol.bin.5.102_127
4 side.nir.histogram.phenol.bin.6.127_153
5 side.nir.histogram.phenol.bin.7.153_178

$`11`
                        descriptorVector
1 side.nir.histogram.ratio.bin.5.102_127

$`12`
[1] NA

$`13`
[1] NA

$`14`
                   descriptorVector
1     top.fluo.histogram.bin.1.0_25
2    top.fluo.histogram.bin.2.25_51
3    top.fluo.histogram.bin.3.51_76
4   top.fluo.histogram.bin.4.76_102
5  top.fluo.histogram.bin.5.102_127
6  top.fluo.histogram.bin.6.127_153
7  top.fluo.histogram.bin.7.153_178
8  top.fluo.histogram.bin.8.178_204
9 top.fluo.histogram.bin.10.229_255

$`15`
                          descriptorVector
1     top.fluo.histogram.phenol.bin.1.0_25
2    top.fluo.histogram.phenol.bin.2.25_51
3    top.fluo.histogram.phenol.bin.3.51_76
4   top.fluo.histogram.phenol.bin.4.76_102
5  top.fluo.histogram.phenol.bin.5.102_127
6  top.fluo.histogram.phenol.bin.6.127_153
7  top.fluo.histogram.phenol.bin.7.153_178
8 top.fluo.histogram.phenol.bin.10.229_255

$`16`
                         descriptorVector
1     top.fluo.histogram.ratio.bin.1.0_25
2   top.fluo.histogram.ratio.bin.4.76_102
3  top.fluo.histogram.ratio.bin.5.102_127
4  top.fluo.histogram.ratio.bin.6.127_153
5  top.fluo.histogram.ratio.bin.7.153_178
6  top.fluo.histogram.ratio.bin.8.178_204
7 top.fluo.histogram.ratio.bin.10.229_255

$`17`
                 descriptorVector
1   top.nir.histogram.bin.2.25_51
2   top.nir.histogram.bin.3.51_76
3  top.nir.histogram.bin.4.76_102
4 top.nir.histogram.bin.5.102_127
5 top.nir.histogram.bin.6.127_153
6 top.nir.histogram.bin.7.153_178
7 top.nir.histogram.bin.8.178_204
8 top.nir.histogram.bin.9.204_229

$`18`
                        descriptorVector
1   top.nir.histogram.phenol.bin.2.25_51
2   top.nir.histogram.phenol.bin.3.51_76
3  top.nir.histogram.phenol.bin.4.76_102
4 top.nir.histogram.phenol.bin.5.102_127
5 top.nir.histogram.phenol.bin.6.127_153
6 top.nir.histogram.phenol.bin.7.153_178
7 top.nir.histogram.phenol.bin.8.178_204
8 top.nir.histogram.phenol.bin.9.204_229

$`19`
                       descriptorVector
1 top.nir.histogram.ratio.bin.5.102_127

$`20`
[1] NA

> names(descriptorList)
 [1] "1"  "2"  "3"  "4"  "5"  "6"  "7"  "8"  "9"  "10" "11" "12" "13" "14" "15"
[16] "16" "17" "18" "19" "20"
> for(colNameWichMustBind in buildRowNameDataSet %allColnamesWithoutThisOnes% c(colNames$xAxis, colNames$colName, "primaerTreatment")) {
+ #			count <- count+1
+ 			plot = getPlotNumber(colNameWichMustBind, descriptorList)
+ 		print(plot)
+ 		print(colNameWichMustBind)
+ 		print("##########")
+ 		}
[1] "1"
[1] "side.nir.normalized.histogram.bin.3.51_76"
[1] "##########"
[1] "1"
[1] "side.nir.normalized.histogram.bin.4.76_102"
[1] "##########"
[1] "1"
[1] "side.nir.normalized.histogram.bin.5.102_127"
[1] "##########"
[1] "1"
[1] "side.nir.normalized.histogram.bin.6.127_153"
[1] "##########"
[1] "1"
[1] "side.nir.normalized.histogram.bin.7.153_178"
[1] "##########"
[1] "2"
[1] "side.fluo.histogram.bin.1.0_25"
[1] "##########"
[1] "2"
[1] "side.fluo.histogram.bin.2.25_51"
[1] "##########"
[1] "2"
[1] "side.fluo.histogram.bin.3.51_76"
[1] "##########"
[1] "2"
[1] "side.fluo.histogram.bin.4.76_102"
[1] "##########"
[1] "2"
[1] "side.fluo.histogram.bin.5.102_127"
[1] "##########"
[1] "2"
[1] "side.fluo.histogram.bin.6.127_153"
[1] "##########"
[1] "2"
[1] "side.fluo.histogram.bin.7.153_178"
[1] "##########"
[1] "2"
[1] "side.fluo.histogram.bin.8.178_204"
[1] "##########"
[1] "2"
[1] "side.fluo.histogram.bin.10.229_255"
[1] "##########"
[1] "3"
[1] "top.nir.histogram.bin.2.25_51"
[1] "##########"
[1] "3"
[1] "top.nir.histogram.bin.3.51_76"
[1] "##########"
[1] "3"
[1] "top.nir.histogram.bin.4.76_102"
[1] "##########"
[1] "3"
[1] "top.nir.histogram.bin.5.102_127"
[1] "##########"
[1] "3"
[1] "top.nir.histogram.bin.6.127_153"
[1] "##########"
[1] "3"
[1] "top.nir.histogram.bin.7.153_178"
[1] "##########"
[1] "3"
[1] "top.nir.histogram.bin.8.178_204"
[1] "##########"
[1] "3"
[1] "top.nir.histogram.bin.9.204_229"
[1] "##########"
[1] "4"
[1] "side.fluo.histogram.phenol.bin.1.0_25"
[1] "##########"
[1] "4"
[1] "side.fluo.histogram.phenol.bin.2.25_51"
[1] "##########"
[1] "4"
[1] "side.fluo.histogram.phenol.bin.3.51_76"
[1] "##########"
[1] "4"
[1] "side.fluo.histogram.phenol.bin.4.76_102"
[1] "##########"
[1] "4"
[1] "side.fluo.histogram.phenol.bin.5.102_127"
[1] "##########"
[1] "4"
[1] "side.fluo.histogram.phenol.bin.6.127_153"
[1] "##########"
[1] "4"
[1] "side.fluo.histogram.phenol.bin.7.153_178"
[1] "##########"
[1] "4"
[1] "side.fluo.histogram.phenol.bin.10.229_255"
[1] "##########"
[1] "5"
[1] "side.fluo.histogram.ratio.bin.1.0_25"
[1] "##########"
[1] "5"
[1] "side.fluo.histogram.ratio.bin.4.76_102"
[1] "##########"
[1] "5"
[1] "side.fluo.histogram.ratio.bin.5.102_127"
[1] "##########"
[1] "5"
[1] "side.fluo.histogram.ratio.bin.6.127_153"
[1] "##########"
[1] "5"
[1] "side.fluo.histogram.ratio.bin.7.153_178"
[1] "##########"
[1] "5"
[1] "side.fluo.histogram.ratio.bin.8.178_204"
[1] "##########"
[1] "5"
[1] "side.fluo.histogram.ratio.bin.10.229_255"
[1] "##########"
[1] 0
[1] "side.nir.normalized.histogram.bin.3.51_76.1"
[1] "##########"
[1] 0
[1] "side.nir.normalized.histogram.bin.4.76_102.1"
[1] "##########"
[1] 0
[1] "side.nir.normalized.histogram.bin.5.102_127.1"
[1] "##########"
[1] 0
[1] "side.nir.normalized.histogram.bin.6.127_153.1"
[1] "##########"
[1] 0
[1] "side.nir.normalized.histogram.bin.7.153_178.1"
[1] "##########"
[1] "7"
[1] "side.fluo.normalized.histogram.bin.1.0_25"
[1] "##########"
[1] "7"
[1] "side.fluo.normalized.histogram.bin.2.25_51"
[1] "##########"
[1] "7"
[1] "side.fluo.normalized.histogram.bin.3.51_76"
[1] "##########"
[1] "7"
[1] "side.fluo.normalized.histogram.bin.4.76_102"
[1] "##########"
[1] "7"
[1] "side.fluo.normalized.histogram.bin.5.102_127"
[1] "##########"
[1] "7"
[1] "side.fluo.normalized.histogram.bin.6.127_153"
[1] "##########"
[1] "7"
[1] "side.fluo.normalized.histogram.bin.7.153_178"
[1] "##########"
[1] "7"
[1] "side.fluo.normalized.histogram.bin.8.178_204"
[1] "##########"
[1] "7"
[1] "side.fluo.normalized.histogram.bin.10.229_255"
[1] "##########"
[1] "8"
[1] "side.fluo.normalized.histogram.phenol.bin.1.0_25"
[1] "##########"
[1] "8"
[1] "side.fluo.normalized.histogram.phenol.bin.2.25_51"
[1] "##########"
[1] "8"
[1] "side.fluo.normalized.histogram.phenol.bin.3.51_76"
[1] "##########"
[1] "8"
[1] "side.fluo.normalized.histogram.phenol.bin.4.76_102"
[1] "##########"
[1] "8"
[1] "side.fluo.normalized.histogram.phenol.bin.5.102_127"
[1] "##########"
[1] "8"
[1] "side.fluo.normalized.histogram.phenol.bin.6.127_153"
[1] "##########"
[1] "8"
[1] "side.fluo.normalized.histogram.phenol.bin.7.153_178"
[1] "##########"
[1] "8"
[1] "side.fluo.normalized.histogram.phenol.bin.10.229_255"
[1] "##########"
[1] "9"
[1] "side.fluo.normalized.histogram.ratio.bin.1.0_25"
[1] "##########"
[1] "9"
[1] "side.fluo.normalized.histogram.ratio.bin.4.76_102"
[1] "##########"
[1] "9"
[1] "side.fluo.normalized.histogram.ratio.bin.5.102_127"
[1] "##########"
[1] "9"
[1] "side.fluo.normalized.histogram.ratio.bin.6.127_153"
[1] "##########"
[1] "9"
[1] "side.fluo.normalized.histogram.ratio.bin.7.153_178"
[1] "##########"
[1] "9"
[1] "side.fluo.normalized.histogram.ratio.bin.8.178_204"
[1] "##########"
[1] "9"
[1] "side.fluo.normalized.histogram.ratio.bin.10.229_255"
[1] "##########"
[1] "10"
[1] "side.nir.histogram.phenol.bin.3.51_76"
[1] "##########"
[1] "10"
[1] "side.nir.histogram.phenol.bin.4.76_102"
[1] "##########"
[1] "10"
[1] "side.nir.histogram.phenol.bin.5.102_127"
[1] "##########"
[1] "10"
[1] "side.nir.histogram.phenol.bin.6.127_153"
[1] "##########"
[1] "10"
[1] "side.nir.histogram.phenol.bin.7.153_178"
[1] "##########"
[1] "11"
[1] "side.nir.histogram.ratio.bin.5.102_127"
[1] "##########"
[1] "14"
[1] "top.fluo.histogram.bin.1.0_25"
[1] "##########"
[1] "14"
[1] "top.fluo.histogram.bin.2.25_51"
[1] "##########"
[1] "14"
[1] "top.fluo.histogram.bin.3.51_76"
[1] "##########"
[1] "14"
[1] "top.fluo.histogram.bin.4.76_102"
[1] "##########"
[1] "14"
[1] "top.fluo.histogram.bin.5.102_127"
[1] "##########"
[1] "14"
[1] "top.fluo.histogram.bin.6.127_153"
[1] "##########"
[1] "14"
[1] "top.fluo.histogram.bin.7.153_178"
[1] "##########"
[1] "14"
[1] "top.fluo.histogram.bin.8.178_204"
[1] "##########"
[1] "14"
[1] "top.fluo.histogram.bin.10.229_255"
[1] "##########"
[1] "15"
[1] "top.fluo.histogram.phenol.bin.1.0_25"
[1] "##########"
[1] "15"
[1] "top.fluo.histogram.phenol.bin.2.25_51"
[1] "##########"
[1] "15"
[1] "top.fluo.histogram.phenol.bin.3.51_76"
[1] "##########"
[1] "15"
[1] "top.fluo.histogram.phenol.bin.4.76_102"
[1] "##########"
[1] "15"
[1] "top.fluo.histogram.phenol.bin.5.102_127"
[1] "##########"
[1] "15"
[1] "top.fluo.histogram.phenol.bin.6.127_153"
[1] "##########"
[1] "15"
[1] "top.fluo.histogram.phenol.bin.7.153_178"
[1] "##########"
[1] "15"
[1] "top.fluo.histogram.phenol.bin.10.229_255"
[1] "##########"
[1] "16"
[1] "top.fluo.histogram.ratio.bin.1.0_25"
[1] "##########"
[1] "16"
[1] "top.fluo.histogram.ratio.bin.4.76_102"
[1] "##########"
[1] "16"
[1] "top.fluo.histogram.ratio.bin.5.102_127"
[1] "##########"
[1] "16"
[1] "top.fluo.histogram.ratio.bin.6.127_153"
[1] "##########"
[1] "16"
[1] "top.fluo.histogram.ratio.bin.7.153_178"
[1] "##########"
[1] "16"
[1] "top.fluo.histogram.ratio.bin.8.178_204"
[1] "##########"
[1] "16"
[1] "top.fluo.histogram.ratio.bin.10.229_255"
[1] "##########"
[1] 0
[1] "top.nir.histogram.bin.2.25_51.1"
[1] "##########"
[1] 0
[1] "top.nir.histogram.bin.3.51_76.1"
[1] "##########"
[1] 0
[1] "top.nir.histogram.bin.4.76_102.1"
[1] "##########"
[1] 0
[1] "top.nir.histogram.bin.5.102_127.1"
[1] "##########"
[1] 0
[1] "top.nir.histogram.bin.6.127_153.1"
[1] "##########"
[1] 0
[1] "top.nir.histogram.bin.7.153_178.1"
[1] "##########"
[1] 0
[1] "top.nir.histogram.bin.8.178_204.1"
[1] "##########"
[1] 0
[1] "top.nir.histogram.bin.9.204_229.1"
[1] "##########"
[1] "18"
[1] "top.nir.histogram.phenol.bin.2.25_51"
[1] "##########"
[1] "18"
[1] "top.nir.histogram.phenol.bin.3.51_76"
[1] "##########"
[1] "18"
[1] "top.nir.histogram.phenol.bin.4.76_102"
[1] "##########"
[1] "18"
[1] "top.nir.histogram.phenol.bin.5.102_127"
[1] "##########"
[1] "18"
[1] "top.nir.histogram.phenol.bin.6.127_153"
[1] "##########"
[1] "18"
[1] "top.nir.histogram.phenol.bin.7.153_178"
[1] "##########"
[1] "18"
[1] "top.nir.histogram.phenol.bin.8.178_204"
[1] "##########"
[1] "18"
[1] "top.nir.histogram.phenol.bin.9.204_229"
[1] "##########"
[1] "19"
[1] "top.nir.histogram.ratio.bin.5.102_127"
[1] "##########"
> colNameWichMustBind <- "side.nir.normalized.histogram.bin.3.51_76.1"
> names(descriptorList)
 [1] "1"  "2"  "3"  "4"  "5"  "6"  "7"  "8"  "9"  "10" "11" "12" "13" "14" "15"
[16] "16" "17" "18" "19" "20"
> descriptorList
$`1`
                             descriptorVector
1   side.nir.normalized.histogram.bin.3.51_76
2  side.nir.normalized.histogram.bin.4.76_102
3 side.nir.normalized.histogram.bin.5.102_127
4 side.nir.normalized.histogram.bin.6.127_153
5 side.nir.normalized.histogram.bin.7.153_178

$`2`
                    descriptorVector
1     side.fluo.histogram.bin.1.0_25
2    side.fluo.histogram.bin.2.25_51
3    side.fluo.histogram.bin.3.51_76
4   side.fluo.histogram.bin.4.76_102
5  side.fluo.histogram.bin.5.102_127
6  side.fluo.histogram.bin.6.127_153
7  side.fluo.histogram.bin.7.153_178
8  side.fluo.histogram.bin.8.178_204
9 side.fluo.histogram.bin.10.229_255

$`3`
                 descriptorVector
1   top.nir.histogram.bin.2.25_51
2   top.nir.histogram.bin.3.51_76
3  top.nir.histogram.bin.4.76_102
4 top.nir.histogram.bin.5.102_127
5 top.nir.histogram.bin.6.127_153
6 top.nir.histogram.bin.7.153_178
7 top.nir.histogram.bin.8.178_204
8 top.nir.histogram.bin.9.204_229

$`4`
                           descriptorVector
1     side.fluo.histogram.phenol.bin.1.0_25
2    side.fluo.histogram.phenol.bin.2.25_51
3    side.fluo.histogram.phenol.bin.3.51_76
4   side.fluo.histogram.phenol.bin.4.76_102
5  side.fluo.histogram.phenol.bin.5.102_127
6  side.fluo.histogram.phenol.bin.6.127_153
7  side.fluo.histogram.phenol.bin.7.153_178
8 side.fluo.histogram.phenol.bin.10.229_255

$`5`
                          descriptorVector
1     side.fluo.histogram.ratio.bin.1.0_25
2   side.fluo.histogram.ratio.bin.4.76_102
3  side.fluo.histogram.ratio.bin.5.102_127
4  side.fluo.histogram.ratio.bin.6.127_153
5  side.fluo.histogram.ratio.bin.7.153_178
6  side.fluo.histogram.ratio.bin.8.178_204
7 side.fluo.histogram.ratio.bin.10.229_255

$`6`
                             descriptorVector
1   side.nir.normalized.histogram.bin.3.51_76
2  side.nir.normalized.histogram.bin.4.76_102
3 side.nir.normalized.histogram.bin.5.102_127
4 side.nir.normalized.histogram.bin.6.127_153
5 side.nir.normalized.histogram.bin.7.153_178

$`7`
                               descriptorVector
1     side.fluo.normalized.histogram.bin.1.0_25
2    side.fluo.normalized.histogram.bin.2.25_51
3    side.fluo.normalized.histogram.bin.3.51_76
4   side.fluo.normalized.histogram.bin.4.76_102
5  side.fluo.normalized.histogram.bin.5.102_127
6  side.fluo.normalized.histogram.bin.6.127_153
7  side.fluo.normalized.histogram.bin.7.153_178
8  side.fluo.normalized.histogram.bin.8.178_204
9 side.fluo.normalized.histogram.bin.10.229_255

$`8`
                                      descriptorVector
1     side.fluo.normalized.histogram.phenol.bin.1.0_25
2    side.fluo.normalized.histogram.phenol.bin.2.25_51
3    side.fluo.normalized.histogram.phenol.bin.3.51_76
4   side.fluo.normalized.histogram.phenol.bin.4.76_102
5  side.fluo.normalized.histogram.phenol.bin.5.102_127
6  side.fluo.normalized.histogram.phenol.bin.6.127_153
7  side.fluo.normalized.histogram.phenol.bin.7.153_178
8 side.fluo.normalized.histogram.phenol.bin.10.229_255

$`9`
                                     descriptorVector
1     side.fluo.normalized.histogram.ratio.bin.1.0_25
2   side.fluo.normalized.histogram.ratio.bin.4.76_102
3  side.fluo.normalized.histogram.ratio.bin.5.102_127
4  side.fluo.normalized.histogram.ratio.bin.6.127_153
5  side.fluo.normalized.histogram.ratio.bin.7.153_178
6  side.fluo.normalized.histogram.ratio.bin.8.178_204
7 side.fluo.normalized.histogram.ratio.bin.10.229_255

$`10`
                         descriptorVector
1   side.nir.histogram.phenol.bin.3.51_76
2  side.nir.histogram.phenol.bin.4.76_102
3 side.nir.histogram.phenol.bin.5.102_127
4 side.nir.histogram.phenol.bin.6.127_153
5 side.nir.histogram.phenol.bin.7.153_178

$`11`
                        descriptorVector
1 side.nir.histogram.ratio.bin.5.102_127

$`12`
[1] NA

$`13`
[1] NA

$`14`
                   descriptorVector
1     top.fluo.histogram.bin.1.0_25
2    top.fluo.histogram.bin.2.25_51
3    top.fluo.histogram.bin.3.51_76
4   top.fluo.histogram.bin.4.76_102
5  top.fluo.histogram.bin.5.102_127
6  top.fluo.histogram.bin.6.127_153
7  top.fluo.histogram.bin.7.153_178
8  top.fluo.histogram.bin.8.178_204
9 top.fluo.histogram.bin.10.229_255

$`15`
                          descriptorVector
1     top.fluo.histogram.phenol.bin.1.0_25
2    top.fluo.histogram.phenol.bin.2.25_51
3    top.fluo.histogram.phenol.bin.3.51_76
4   top.fluo.histogram.phenol.bin.4.76_102
5  top.fluo.histogram.phenol.bin.5.102_127
6  top.fluo.histogram.phenol.bin.6.127_153
7  top.fluo.histogram.phenol.bin.7.153_178
8 top.fluo.histogram.phenol.bin.10.229_255

$`16`
                         descriptorVector
1     top.fluo.histogram.ratio.bin.1.0_25
2   top.fluo.histogram.ratio.bin.4.76_102
3  top.fluo.histogram.ratio.bin.5.102_127
4  top.fluo.histogram.ratio.bin.6.127_153
5  top.fluo.histogram.ratio.bin.7.153_178
6  top.fluo.histogram.ratio.bin.8.178_204
7 top.fluo.histogram.ratio.bin.10.229_255

$`17`
                 descriptorVector
1   top.nir.histogram.bin.2.25_51
2   top.nir.histogram.bin.3.51_76
3  top.nir.histogram.bin.4.76_102
4 top.nir.histogram.bin.5.102_127
5 top.nir.histogram.bin.6.127_153
6 top.nir.histogram.bin.7.153_178
7 top.nir.histogram.bin.8.178_204
8 top.nir.histogram.bin.9.204_229

$`18`
                        descriptorVector
1   top.nir.histogram.phenol.bin.2.25_51
2   top.nir.histogram.phenol.bin.3.51_76
3  top.nir.histogram.phenol.bin.4.76_102
4 top.nir.histogram.phenol.bin.5.102_127
5 top.nir.histogram.phenol.bin.6.127_153
6 top.nir.histogram.phenol.bin.7.153_178
7 top.nir.histogram.phenol.bin.8.178_204
8 top.nir.histogram.phenol.bin.9.204_229

$`19`
                       descriptorVector
1 top.nir.histogram.ratio.bin.5.102_127

$`20`
[1] NA

> getPlotNumber <- function(colNameWichMustBind, descriptorList) {
+ 	
+ 	for(n in names(descriptorList)) {
+ 		if(colNameWichMustBind %in% as.vector(unlist(descriptorList[[n]]))) {
+ 			return(n)
+ 		}
+ 	}
+ 	return(-1)
+ }
> getResultDataFrame <- function(diagramTyp, descriptorList, iniDataSet, groupBy, colNames, booleanVectorList, debug) {	
+ 	debug %debug% "getResultDataFrame()"
+ 
+ ################################
+ #	diagramTyp = "boxplotStacked"
+ #	descriptorList = overallList$boxStackDes
+ #	iniDataSet = overallList$iniDataSet[columns]
+ #	groupBy = groupBy 
+ #	colNames = colNames 
+ #	booleanVectorList= booleanVectorList
+ #	descriptorName=overallList$boxStackDesName
+ #	debug = overallList$debug
+ #	diagramTyp = "nboxplot"
+ #	descriptor = getVector(overallList$nBoxDes)
+ #	iniDataSet = overallList$iniDataSet[columns]
+ #	groupBy = groupBy 
+ #	colNames = colNames 
+ #	booleanVectorList= booleanVectorList
+ #	descriptorName=overallList$boxDesName
+ ##########################
+ 
+ 	descriptor <- getVector(descriptorList)
+ 	descriptorName <- seq(1:length(descriptor))
+ 	
+ 	descriptorName <- descriptorName[!is.na(descriptor)]
+ 	descriptor <- descriptor[!is.na(descriptor)]
+ 	
+ 	if(diagramTyp != "boxplot") {
+ 		groupedDataFrame <- data.table(iniDataSet)
+ 		key(groupedDataFrame) <- c(groupBy, colNames$xAxis)		
+ 	}
+ 	
+ 	if(diagramTyp == "boxplot") {
+ 		groupedDataFrameMean <- iniDataSet[groupBy[1]]
+ 		
+ 		groupByReduce <- groupBy[groupBy!=groupBy[1]]
+ 		for(n in c(groupByReduce,  colNames$xAxis, descriptor)) {
+ 			groupedDataFrameMean <- cbind(groupedDataFrameMean,  iniDataSet[n])
+ 		}	
+ 		
+ ####################
+ #		Alternative, den Boxplot selber zu bauen!!
+ #		test <- overallList$iniDataSet %allColnamesWithoutThisOnes% c(groupBy, overallList$xAxis)
+ #		myQuantile <- as.data.frame(groupedDataFrame[,lapply(.SD,quantile, probs=c(0,0.25,0.5,0.75,1), na.rm=TRUE), by=groupBy])
+ #		numberOfGroubingElements <- length(myQuantile[,1]) / 5
+ #		
+ #		testData <- data.frame()
+ #		for(n in seq(1, length(myQuantile[,1]), by=5)) {
+ #			testData <- rbind(testData, myQuantile[n:(n+4),test])
+ #		}
+ #		colnames(testData) <- c("q0", "q25", "q50", "q75", "q100")
+ #		rownames(testData) <- unique(myQuantile[,1])
+ #		
+ #		ggplot(overallList$iniDataSet, aes(x=rownames(testData), ymin=testData[,1], lower=testData[,2], middle=testData[,3], upper=testData[,4], ymax=testData[,5])) + 
+ #				geom_boxplot(stat="identity")
+ #####################		
+ 			
+ 		
+ 	} else {
+ 		groupedDataFrameMean <- as.data.frame(groupedDataFrame[,lapply(.SD, mean, na.rm=TRUE), by=c(groupBy,colNames$xAxis)])
+ 	}
+ 	
+ 	if(diagramTyp == "nboxplot" || diagramTyp == "boxplot") {
+ 		#colNamesOfTheRest <- paste(colNames$colOfMean,seq(1:length(descriptor)), sep="")	
+ 		colNamesOfTheRest <- paste(colNames$colOfMean,descriptorName, sep="")	
+ 	} else {
+ 		colNamesOfTheRest <- groupedDataFrameMean %allColnamesWithoutThisOnes% c(groupBy, colNames$xAxis)
+ 	}
+ 		
+ #alt wenn nur ein Deskriptor übergeben wird
+ #		if(tolower(overallList$diagramTyp) == "nboxplot" || tolower(overallList$diagramTyp) == "boxplot") {
+ #			colNamesOfTheRest <- colOfMean
+ #		} else {
+ #			colNamesOfTheRest <- groupedDataFrameMean %allColnamesWithoutThisOnes% c(groupBy, overallList$xAxis)
+ #		}
+ 		
+ 	colnames(groupedDataFrameMean) <- c(groupBy, colNames$colOfXaxis, colNamesOfTheRest)
+ 	
+ 	if(diagramTyp == "nboxplot") {
+ 		groupedDataFrameSD <- as.data.frame(groupedDataFrame[,lapply(.SD, sd, na.rm=TRUE), by=c(groupBy,colNames$xAxis)])
+ 		colnames(groupedDataFrameSD) <- c(groupBy, colNames$colOfXaxis, paste(colNames$colOfSD,descriptorName, sep=""))
+ 	}
+ 	
+ 	booleanVector <- getBooleanVectorForFilterValues(groupedDataFrameMean, booleanVectorList)
+ 	
+ 	if(diagramTyp == "nboxplot") {
+ 		iniDataSet <- merge(sort=FALSE, groupedDataFrameMean[booleanVector,], groupedDataFrameSD[booleanVector,], by = c(groupBy, colNames$colOfXaxis))
+ 		#overallResult <- buildRowName(iniDataSet,groupBy, descriptorName)
+ 		overallResult <- buildRowName(iniDataSet,groupBy)
+ 		
+ 	} else if(diagramTyp == "boxplot") {
+ 		iniDataSet <- groupedDataFrameMean[booleanVector,]
+ 		#overallResult <- buildRowName(iniDataSet,groupBy, descriptorName)
+ 		overallResult <- buildRowName(iniDataSet,groupBy)
+ 		
+ 	} else {
+ 		iniDataSet <- groupedDataFrameMean[booleanVector,]		
+ 		#buildRowNameDataSet <- buildRowName(iniDataSet, groupBy, descriptorName)
+ 		buildRowNameDataSet <- buildRowName(iniDataSet, groupBy)
+ 		temp <- data.frame()
+ #		count <- 0
+ 		
+ 		for(colNameWichMustBind in buildRowNameDataSet %allColnamesWithoutThisOnes% c(colNames$xAxis, colNames$colName, "primaerTreatment")) {
+ #			count <- count+1
+ 			plot = getPlotNumber(colNameWichMustBind, descriptorList)
+ 		
+ 			if(plot!=-1) {
+ 				colNameWichMustBindReNamed <- reNameHist(colNameWichMustBind)
+ 		
+ 				if(is.null(buildRowNameDataSet$primaerTreatment)){	
+ 					temp <- rbind(temp,data.frame(hist=rep.int(x=colNameWichMustBindReNamed, times=length(buildRowNameDataSet[,colNameWichMustBind])), values=buildRowNameDataSet[,colNameWichMustBind], xAxis=buildRowNameDataSet[,colNames$colOfXaxis], name=buildRowNameDataSet[,colNames$colName], plot=plot))			
+ 				} else {
+ 					temp <- rbind(temp,data.frame(hist=rep.int(x=colNameWichMustBindReNamed, times=length(buildRowNameDataSet[,colNameWichMustBind])), primaerTreatment=buildRowNameDataSet[,"primaerTreatment"], values=buildRowNameDataSet[,colNameWichMustBind], xAxis=buildRowNameDataSet[,colNames$colOfXaxis], name=buildRowNameDataSet[,colNames$colName], plot = plot))			
+ 				}
+ 			}
+ 		}
+ 		overallResult <- temp		
+ 	}	
+ 
+ 	return(overallResult)
+ }
> overallList <- list(iniDataSet=iniDataSet, saveFormat=saveFormat, dpi=dpi, isGray=isGray, 
+ 						nBoxDes = nBoxDes, boxDes = boxDes, boxStackDes = boxStackDes,
+ 						saveName_nBoxDes = nBoxDes, saveName_boxDes = boxDes, saveName_boxStackDes = boxStackDes,
+ 						nBoxDesName = nBoxDesName, boxDesName = boxDesName, boxStackDesName = boxStackDesName,
+ 						nBoxOptions= nBoxOptions, boxOptions= boxOptions, stackedBarOptions = stackedBarOptions, 
+ 						treatment=treatment, filterTreatment=filterTreatment,
+ 						secondTreatment=secondTreatment, filterSecondTreatment=filterSecondTreatment, filterXaxis=filterXaxis, xAxis=xAxis,
+ 						showResultInR=showResultInR, xAxisName=xAxisName, debug=debug, 
+ 						appendix=appendix, stoppTheCalculation=stoppTheCalculation,
+ 						overallResult_nBoxDes=data.frame(), overallResult_boxDes=data.frame(), overallResult_boxStackDes=data.frame(),
+ 						color_nBox = list(), color_box=list(), color_boxStack=list())	
> 				
> 	#install.packages(c("Cairo"), repos="http://cran.r-project.org", dependencies = TRUE)
> 	library("Cairo")
> 	#install.packages(c("RColorBrewer"), repos="http://cran.r-project.org", dependencies = TRUE)
> 	library("RColorBrewer")
> 	#install.packages(c("data.table"), repos="http://cran.r-project.org", dependencies = TRUE)
> 	library(data.table)
> 	#install.packages(c("ggplot2"), repos="http://cran.r-project.org", dependencies = TRUE)
> 	library(ggplot2)
> 	#install.packages(c("Hmisc"), repos="http://cran.r-project.org", dependencies = TRUE)
> 	#library("Hmisc")
> 	
> 	overallList$debug %debug% "Start"
[1] "DebugBreakPoint:  Start"
> 	
> 	overallList <- overallChangeName(overallList)
[1] "DebugBreakPoint:  overallChangeSaveName()"
[1] "... nBoxplot"
[1] "... Boxplot"
[1] "... stackedBoxplot"
> 	overallList <- overallPreprocessingOfDescriptor(overallList)
[1] "DebugBreakPoint:  overallPreprocessingOfDescriptor()"
[1] "... nBoxplot"
[1] "No plotting, because the descriptor(s) (Weight.A..g.) don't exists!"
[1] "No plotting, because the descriptor(s) (Weight.B..g.) don't exists!"
[1] "No plotting, because the descriptor(s) (Water..weight.diff.) don't exists!"
[1] "No plotting, because the descriptor(s) (side.height.norm..mm.) don't exists!"
[1] "No plotting, because the descriptor(s) (side.width.norm..mm.) don't exists!"
[1] "No plotting, because the descriptor(s) (side.area.norm..mm.2.) don't exists!"
[1] "No plotting, because the descriptor(s) (top.area.norm..mm.2.) don't exists!"
[1] "No plotting, because the descriptor(s) (side.fluo.intensity.chlorophyl.average..relative.) don't exists!"
[1] "No plotting, because the descriptor(s) (side.fluo.intensity.phenol.average..relative.) don't exists!"
[1] "No plotting, because the descriptor(s) (side.nir.intensity.average..relative.) don't exists!"
[1] "No plotting, because the descriptor(s) (side.leaf.count.median..leafs.) don't exists!"
[1] "No plotting, because the descriptor(s) (side.bloom.count..tassel.) don't exists!"
[1] "No plotting, because the descriptor(s) (side.leaf.length.sum.norm.max..mm.) don't exists!"
[1] "No plotting, because the descriptor(s) (volume.fluo.iap) don't exists!"
[1] "No plotting, because the descriptor(s) (volume.iap..px.3.) don't exists!"
[1] "No plotting, because the descriptor(s) (volume.iap_max) don't exists!"
[1] "No plotting, because the descriptor(s) (volume.lt..px.3.) don't exists!"
[1] "No plotting, because the descriptor(s) (volume.iap.wue) don't exists!"
[1] "No plotting, because the descriptor(s) (side.nir.wetness.plant_weight_drought_loss) don't exists!"
[1] "No plotting, because the descriptor(s) (top.nir.wetness.plant_weight_drought_loss) don't exists!"
[1] "No plotting, because the descriptor(s) (side.nir.wetness.av) don't exists!"
[1] "No plotting, because the descriptor(s) (top.nir.wetness.av) don't exists!"
[1] "No plotting, because the descriptor(s) (side.area.relative) don't exists!"
[1] "No plotting, because the descriptor(s) (side.height.norm.relative) don't exists!"
[1] "No plotting, because the descriptor(s) (side.width.norm.relative) don't exists!"
[1] "No plotting, because the descriptor(s) (top.area.relative) don't exists!"
[1] "No plotting, because the descriptor(s) (side.area.relative) don't exists!"
[1] "No plotting, because the descriptor(s) (volume.iap.relative) don't exists!"
[1] "No plotting, because the descriptor(s) (side.height..mm.) don't exists!"
[1] "No plotting, because the descriptor(s) (side.width..mm.) don't exists!"
[1] "No plotting, because the descriptor(s) (side.area..px.) don't exists!"
[1] "No plotting, because the descriptor(s) (top.area..px.) don't exists!"
[1] "... Boxplot"
[1] "No plotting, because the descriptor(s) (side.height.norm..mm.) don't exists!"
[1] "No plotting, because the descriptor(s) (side.width.norm..mm.) don't exists!"
[1] "No plotting, because the descriptor(s) (side.area.norm..mm.2.) don't exists!"
[1] "No plotting, because the descriptor(s) (top.area.norm..mm.2.) don't exists!"
[1] "No plotting, because the descriptor(s) (volume.fluo.iap) don't exists!"
[1] "No plotting, because the descriptor(s) (volume.iap..px.3.) don't exists!"
[1] "No plotting, because the descriptor(s) (volume.iap_max) don't exists!"
[1] "No plotting, because the descriptor(s) (volume.lt..px.3.) don't exists!"
[1] "No plotting, because the descriptor(s) (side.height..mm.) don't exists!"
[1] "No plotting, because the descriptor(s) (side.width..mm.) don't exists!"
[1] "No plotting, because the descriptor(s) (side.area..px.) don't exists!"
[1] "No plotting, because the descriptor(s) (top.area..px.) don't exists!"
[1] "... stackedBoxplot"
[1] "No plotting, because the descriptor(s) (side.nir.normalized.histogram.bin.1.0_25) don't exists!"    
[2] "No plotting, because the descriptor(s) (side.nir.normalized.histogram.bin.2.25_51) don't exists!"   
[3] "No plotting, because the descriptor(s) (side.nir.normalized.histogram.bin.8.178_204) don't exists!" 
[4] "No plotting, because the descriptor(s) (side.nir.normalized.histogram.bin.9.204_229) don't exists!" 
[5] "No plotting, because the descriptor(s) (side.nir.normalized.histogram.bin.10.229_255) don't exists!"
[1] "No plotting, because the descriptor(s) (side.fluo.histogram.bin.9.204_229) don't exists!"
[1] "No plotting, because the descriptor(s) (top.nir.histogram.bin.1.0_25) don't exists!"    
[2] "No plotting, because the descriptor(s) (top.nir.histogram.bin.10.229_255) don't exists!"
[1] "No plotting, because the descriptor(s) (side.fluo.histogram.phenol.bin.8.178_204) don't exists!"
[2] "No plotting, because the descriptor(s) (side.fluo.histogram.phenol.bin.9.204_229) don't exists!"
[1] "No plotting, because the descriptor(s) (side.fluo.histogram.ratio.bin.2.25_51) don't exists!"  
[2] "No plotting, because the descriptor(s) (side.fluo.histogram.ratio.bin.3.51_76) don't exists!"  
[3] "No plotting, because the descriptor(s) (side.fluo.histogram.ratio.bin.9.204_229) don't exists!"
[1] "No plotting, because the descriptor(s) (side.nir.normalized.histogram.bin.1.0_25) don't exists!"    
[2] "No plotting, because the descriptor(s) (side.nir.normalized.histogram.bin.2.25_51) don't exists!"   
[3] "No plotting, because the descriptor(s) (side.nir.normalized.histogram.bin.8.178_204) don't exists!" 
[4] "No plotting, because the descriptor(s) (side.nir.normalized.histogram.bin.9.204_229) don't exists!" 
[5] "No plotting, because the descriptor(s) (side.nir.normalized.histogram.bin.10.229_255) don't exists!"
[1] "No plotting, because the descriptor(s) (side.fluo.normalized.histogram.bin.9.204_229) don't exists!"
[1] "No plotting, because the descriptor(s) (side.fluo.normalized.histogram.phenol.bin.8.178_204) don't exists!"
[2] "No plotting, because the descriptor(s) (side.fluo.normalized.histogram.phenol.bin.9.204_229) don't exists!"
[1] "No plotting, because the descriptor(s) (side.fluo.normalized.histogram.ratio.bin.2.25_51) don't exists!"  
[2] "No plotting, because the descriptor(s) (side.fluo.normalized.histogram.ratio.bin.3.51_76) don't exists!"  
[3] "No plotting, because the descriptor(s) (side.fluo.normalized.histogram.ratio.bin.9.204_229) don't exists!"
[1] "No plotting, because the descriptor(s) (side.nir.histogram.phenol.bin.1.0_25) don't exists!"    
[2] "No plotting, because the descriptor(s) (side.nir.histogram.phenol.bin.2.25_51) don't exists!"   
[3] "No plotting, because the descriptor(s) (side.nir.histogram.phenol.bin.8.178_204) don't exists!" 
[4] "No plotting, because the descriptor(s) (side.nir.histogram.phenol.bin.9.204_229) don't exists!" 
[5] "No plotting, because the descriptor(s) (side.nir.histogram.phenol.bin.10.229_255) don't exists!"
[1] "No plotting, because the descriptor(s) (side.nir.histogram.ratio.bin.1.0_25) don't exists!"    
[2] "No plotting, because the descriptor(s) (side.nir.histogram.ratio.nir.2.25_51) don't exists!"   
[3] "No plotting, because the descriptor(s) (side.nir.histogram.ratio.bin.3.51_76) don't exists!"   
[4] "No plotting, because the descriptor(s) (side.nir.histogram.ratio.bin.4.76_102) don't exists!"  
[5] "No plotting, because the descriptor(s) (side.nir.histogram.ratio.bin.6.127_153) don't exists!" 
[6] "No plotting, because the descriptor(s) (side.nir.histogram.ratio.bin.7.153_178) don't exists!" 
[7] "No plotting, because the descriptor(s) (side.nir.histogram.ratio.bin.8.178_204) don't exists!" 
[8] "No plotting, because the descriptor(s) (side.nir.histogram.ratio.bin.9.204_229) don't exists!" 
[9] "No plotting, because the descriptor(s) (side.nir.histogram.ratio.bin.10.229_255) don't exists!"
 [1] "No plotting, because the descriptor(s) (side.vis.hue.histogram.ratio.bin.1.0_25) don't exists!"    
 [2] "No plotting, because the descriptor(s) (side.vis.hue.histogram.ratio.nir.2.25_51) don't exists!"   
 [3] "No plotting, because the descriptor(s) (side.vis.hue.histogram.ratio.bin.3.51_76) don't exists!"   
 [4] "No plotting, because the descriptor(s) (side.vis.hue.histogram.ratio.bin.4.76_102) don't exists!"  
 [5] "No plotting, because the descriptor(s) (side.vis.hue.histogram.ratio.bin.5.102_127) don't exists!" 
 [6] "No plotting, because the descriptor(s) (side.vis.hue.histogram.ratio.bin.6.127_153) don't exists!" 
 [7] "No plotting, because the descriptor(s) (side.vis.hue.histogram.ratio.bin.7.153_178) don't exists!" 
 [8] "No plotting, because the descriptor(s) (side.vis.hue.histogram.ratio.bin.8.178_204) don't exists!" 
 [9] "No plotting, because the descriptor(s) (side.vis.hue.histogram.ratio.bin.9.204_229) don't exists!" 
[10] "No plotting, because the descriptor(s) (side.vis.hue.histogram.ratio.bin.10.229_255) don't exists!"
 [1] "No plotting, because the descriptor(s) (side.vis.normalized.histogram.ratio.bin.1.0_25) don't exists!"    
 [2] "No plotting, because the descriptor(s) (side.vis.normalized.histogram.ratio.bin.2.25_51) don't exists!"   
 [3] "No plotting, because the descriptor(s) (side.vis.normalized.histogram.ratio.bin.3.51_76) don't exists!"   
 [4] "No plotting, because the descriptor(s) (side.vis.normalized.histogram.ratio.bin.4.76_102) don't exists!"  
 [5] "No plotting, because the descriptor(s) (side.vis.normalized.histogram.ratio.bin.5.102_127) don't exists!" 
 [6] "No plotting, because the descriptor(s) (side.vis.normalized.histogram.ratio.bin.6.127_153) don't exists!" 
 [7] "No plotting, because the descriptor(s) (side.vis.normalized.histogram.ratio.bin.7.153_178) don't exists!" 
 [8] "No plotting, because the descriptor(s) (side.vis.normalized.histogram.ratio.bin.8.178_204) don't exists!" 
 [9] "No plotting, because the descriptor(s) (side.vis.normalized.histogram.ratio.bin.9.204_229) don't exists!" 
[10] "No plotting, because the descriptor(s) (side.vis.normalized.histogram.ratio.bin.10.229_255) don't exists!"
[1] "No plotting, because the descriptor(s) (top.fluo.histogram.bin.9.204_229) don't exists!"
[1] "No plotting, because the descriptor(s) (top.fluo.histogram.phenol.bin.8.178_204) don't exists!"
[2] "No plotting, because the descriptor(s) (top.fluo.histogram.phenol.bin.9.204_229) don't exists!"
[1] "No plotting, because the descriptor(s) (top.fluo.histogram.ratio.bin.2.25_51) don't exists!"  
[2] "No plotting, because the descriptor(s) (top.fluo.histogram.ratio.bin.3.51_76) don't exists!"  
[3] "No plotting, because the descriptor(s) (top.fluo.histogram.ratio.bin.9.204_229) don't exists!"
[1] "No plotting, because the descriptor(s) (top.nir.histogram.bin.1.0_25) don't exists!"    
[2] "No plotting, because the descriptor(s) (top.nir.histogram.bin.10.229_255) don't exists!"
[1] "No plotting, because the descriptor(s) (top.nir.histogram.phenol.bin.1.0_25) don't exists!"    
[2] "No plotting, because the descriptor(s) (top.nir.histogram.phenol.bin.10.229_255) don't exists!"
[1] "No plotting, because the descriptor(s) (top.nir.histogram.ratio.bin.1.0_25) don't exists!"    
[2] "No plotting, because the descriptor(s) (top.nir.histogram.ratio.bin.2.25_51) don't exists!"   
[3] "No plotting, because the descriptor(s) (top.nir.histogram.ratio.bin.3.51_76) don't exists!"   
[4] "No plotting, because the descriptor(s) (top.nir.histogram.ratio.bin.4.76_102) don't exists!"  
[5] "No plotting, because the descriptor(s) (top.nir.histogram.ratio.bin.6.127_153) don't exists!" 
[6] "No plotting, because the descriptor(s) (top.nir.histogram.ratio.bin.7.153_178) don't exists!" 
[7] "No plotting, because the descriptor(s) (top.nir.histogram.ratio.bin.8.178_204) don't exists!" 
[8] "No plotting, because the descriptor(s) (top.nir.histogram.ratio.bin.9.204_229) don't exists!" 
[9] "No plotting, because the descriptor(s) (top.nir.histogram.ratio.bin.10.229_255) don't exists!"
 [1] "No plotting, because the descriptor(s) (top.vis.hue.histogram.ratio.bin.1.0_25) don't exists!"    
 [2] "No plotting, because the descriptor(s) (top.vis.hue.histogram.ratio.nir.2.25_51) don't exists!"   
 [3] "No plotting, because the descriptor(s) (top.vis.hue.histogram.ratio.bin.3.51_76) don't exists!"   
 [4] "No plotting, because the descriptor(s) (top.vis.hue.histogram.ratio.bin.4.76_102) don't exists!"  
 [5] "No plotting, because the descriptor(s) (top.vis.hue.histogram.ratio.bin.5.102_127) don't exists!" 
 [6] "No plotting, because the descriptor(s) (top.vis.hue.histogram.ratio.bin.6.127_153) don't exists!" 
 [7] "No plotting, because the descriptor(s) (top.vis.hue.histogram.ratio.bin.7.153_178) don't exists!" 
 [8] "No plotting, because the descriptor(s) (top.vis.hue.histogram.ratio.bin.8.178_204) don't exists!" 
 [9] "No plotting, because the descriptor(s) (top.vis.hue.histogram.ratio.bin.9.204_229) don't exists!" 
[10] "No plotting, because the descriptor(s) (top.vis.hue.histogram.ratio.bin.10.229_255) don't exists!"
> 	
> 	
> ###############################	
> 	overallList <- preprocessingOfxAxisValue(overallList)
[1] "DebugBreakPoint:  preprocessingOfxAxisValue()"
> 	overallList <- preprocessingOfTreatment(overallList)
[1] "DebugBreakPoint:  preprocessingOfTheTreatment()"
> 	overallList <- preprocessingOfSecondTreatment(overallList)
[1] "DebugBreakPoint:  preprocessingOfTheSecondTreatment()"
[1] "... set 'filterSecondTreatment' and 'secondTreatment' to 'none'!"
> 	overallList <- overallCheckIfDescriptorIsNaOrAllZero(overallList)
[1] "DebugBreakPoint:  overallCheckIfDescriptorIsNaOrAllZero()"
[1] "... all in nBoxplot is 'NA'"
[1] "... all in Boxplot is 'NA'"
[1] "... stackedBoxplot"
Es gab 15 Warnungen (Anzeige mit warnings())
> 	overallList <- reduceWorkingDataSize(overallList)
[1] "DebugBreakPoint:  reduceWorkingDataSize()"
> 	overallList <- setDefaultAxisNames(overallList)	
[1] "DebugBreakPoint:  setDefaultAxisNames()"
> 	overallList <- overallGetResultDataFrame(overallList)
[1] "DebugBreakPoint:  overallGetResultDataFrame()"
[1] "DebugBreakPoint:  buildList()"
[1] "... all in nBoxplot is 'NA'"
[1] "... all in Boxplot is 'NA'"
[1] "... stackedBoxplot"
[1] "DebugBreakPoint:  getResultDataFrame()"
> 	overallList <- setColor(overallList) 
[1] "DebugBreakPoint:  setColor()"
[1] "... all values are 'NA'"
[1] "... all values are 'NA'"
[1] "... all values are 'NA'"
Es gab 15 Warnungen (Anzeige mit warnings())
> 	makeDiagrams(overallList)
[1] "DebugBreakPoint:  makeDiagrams()"
[1] "... all in nBoxplot is 'NA'"
[1] "... all in Boxplot is 'NA'"
[1] "... stacked Boxplot"
[1] "DebugBreakPoint:  makeBoxplotStackedDiagram()"
[1] "DebugBreakPoint:  reduceWholeOverallResultToOneValue()"
[1] "DebugBreakPoint:  PreWorkForMakeBigOverallImage()"
[1] "DebugBreakPoint:  plotStackedImage()"
Saving 5.45" x 3.92" image
Saving 5.45" x 3.92" image
Saving 5.45" x 3.92" image
[1] "DebugBreakPoint:  reduceWholeOverallResultToOneValue()"
[1] "DebugBreakPoint:  PreWorkForMakeBigOverallImage()"
[1] "DebugBreakPoint:  plotStackedImage()"
Saving 5.45" x 3.92" image
Saving 5.45" x 3.92" image
Saving 5.45" x 3.92" image
[1] "DebugBreakPoint:  reduceWholeOverallResultToOneValue()"
[1] "DebugBreakPoint:  PreWorkForMakeBigOverallImage()"
[1] "DebugBreakPoint:  plotStackedImage()"
Saving 5.45" x 3.92" image
Saving 5.45" x 3.92" image
Saving 5.45" x 3.92" image
[1] "DebugBreakPoint:  reduceWholeOverallResultToOneValue()"
[1] "DebugBreakPoint:  PreWorkForMakeBigOverallImage()"
[1] "DebugBreakPoint:  plotStackedImage()"
Saving 5.45" x 3.92" image
Saving 5.45" x 3.92" image
Saving 5.45" x 3.92" image
[1] "DebugBreakPoint:  reduceWholeOverallResultToOneValue()"
[1] "DebugBreakPoint:  PreWorkForMakeBigOverallImage()"
[1] "DebugBreakPoint:  plotStackedImage()"
Saving 5.45" x 3.92" image
Saving 5.45" x 3.92" image
Saving 5.45" x 3.92" image
[1] "DebugBreakPoint:  reduceWholeOverallResultToOneValue()"
[1] "DebugBreakPoint:  PreWorkForMakeBigOverallImage()"
[1] "DebugBreakPoint:  plotStackedImage()"
[1] "DebugBreakPoint:  reduceWholeOverallResultToOneValue()"
[1] "DebugBreakPoint:  PreWorkForMakeBigOverallImage()"
[1] "DebugBreakPoint:  plotStackedImage()"
Saving 5.45" x 3.92" image
Saving 5.45" x 3.92" image
Saving 5.45" x 3.92" image
[1] "DebugBreakPoint:  reduceWholeOverallResultToOneValue()"
[1] "DebugBreakPoint:  PreWorkForMakeBigOverallImage()"
[1] "DebugBreakPoint:  plotStackedImage()"
Saving 5.45" x 3.92" image
Saving 5.45" x 3.92" image
Saving 5.45" x 3.92" image
[1] "DebugBreakPoint:  reduceWholeOverallResultToOneValue()"
[1] "DebugBreakPoint:  PreWorkForMakeBigOverallImage()"
[1] "DebugBreakPoint:  plotStackedImage()"
Saving 5.45" x 3.92" image
Saving 5.45" x 3.92" image
Saving 5.45" x 3.92" image
[1] "DebugBreakPoint:  reduceWholeOverallResultToOneValue()"
[1] "DebugBreakPoint:  PreWorkForMakeBigOverallImage()"
[1] "DebugBreakPoint:  plotStackedImage()"
Saving 5.45" x 3.92" image
Saving 5.45" x 3.92" image
Saving 5.45" x 3.92" image
[1] "DebugBreakPoint:  reduceWholeOverallResultToOneValue()"
[1] "DebugBreakPoint:  PreWorkForMakeBigOverallImage()"
[1] "DebugBreakPoint:  plotStackedImage()"
Saving 5.45" x 3.92" image
Saving 5.45" x 3.92" image
Saving 5.45" x 3.92" image
[1] "DebugBreakPoint:  reduceWholeOverallResultToOneValue()"
[1] "DebugBreakPoint:  PreWorkForMakeBigOverallImage()"
[1] "DebugBreakPoint:  plotStackedImage()"
[1] "DebugBreakPoint:  reduceWholeOverallResultToOneValue()"
[1] "DebugBreakPoint:  PreWorkForMakeBigOverallImage()"
[1] "DebugBreakPoint:  plotStackedImage()"
[1] "DebugBreakPoint:  reduceWholeOverallResultToOneValue()"
[1] "DebugBreakPoint:  PreWorkForMakeBigOverallImage()"
[1] "DebugBreakPoint:  plotStackedImage()"
Saving 5.45" x 3.92" image
Saving 5.45" x 3.92" image
Saving 5.45" x 3.92" image
[1] "DebugBreakPoint:  reduceWholeOverallResultToOneValue()"
[1] "DebugBreakPoint:  PreWorkForMakeBigOverallImage()"
[1] "DebugBreakPoint:  plotStackedImage()"
Saving 5.45" x 3.92" image
Saving 5.45" x 3.92" image
Saving 5.45" x 3.92" image
[1] "DebugBreakPoint:  reduceWholeOverallResultToOneValue()"
[1] "DebugBreakPoint:  PreWorkForMakeBigOverallImage()"
[1] "DebugBreakPoint:  plotStackedImage()"
Saving 5.45" x 3.92" image
Saving 5.45" x 3.92" image
Saving 5.45" x 3.92" image
[1] "DebugBreakPoint:  reduceWholeOverallResultToOneValue()"
[1] "DebugBreakPoint:  PreWorkForMakeBigOverallImage()"
[1] "DebugBreakPoint:  plotStackedImage()"
[1] "DebugBreakPoint:  reduceWholeOverallResultToOneValue()"
[1] "DebugBreakPoint:  PreWorkForMakeBigOverallImage()"
[1] "DebugBreakPoint:  plotStackedImage()"
Saving 5.45" x 3.92" image
Saving 5.45" x 3.92" image
Saving 5.45" x 3.92" image
[1] "DebugBreakPoint:  reduceWholeOverallResultToOneValue()"
[1] "DebugBreakPoint:  PreWorkForMakeBigOverallImage()"
[1] "DebugBreakPoint:  plotStackedImage()"
Saving 5.45" x 3.92" image
Saving 5.45" x 3.92" image
Saving 5.45" x 3.92" image
[1] "DebugBreakPoint:  reduceWholeOverallResultToOneValue()"
[1] "DebugBreakPoint:  PreWorkForMakeBigOverallImage()"
[1] "DebugBreakPoint:  plotStackedImage()"
> rm(list=ls(all=TRUE))
> # TODO: Add comment
> # 
> # Author: Entzian
> ###############################################################################
> 
> "%debug%" <- function(debug, debugNumber) {
+ 	if (debug) {
+ 		print(paste("DebugBreakPoint: ", debugNumber))
+ 	}
+ }
> 
> "%checkEqual%" <- function(treat, seconTreat) {
+ 	if(treat == seconTreat) {
+ 		print("SecondTreatment are the same value as Treatment so it set to \"none\"")
+ 		return("none")
+ 	} else {
+ 		return(seconTreat)
+ 	}
+ }
> 
> "%errorReport%" <- function(errorDescriptor, typOfError="notExists") {
+ 	#overallList$debug %debug% "%errorReport%"
+ 	if (length(errorDescriptor) > 0) {
+ 		if (tolower(typOfError) == "notexists"){
+ 			print(paste("No plotting, because the descriptor(s) (",errorDescriptor,") don't exists!", sep=""))
+ 			
+ 		} else if (tolower(typOfError) == "notnumericorallzero") {
+ 			#plotDummy(overallList)
+ 			print(paste("Dummy plotting for this descriptor(s) ((",errorDescriptor,"), because all zero or not numeric!", sep=""))
+ 		}
+ 	}
+ }
> 
> "%exists%" <- function(standardValue, argsValue){
+ 	
+ 	if(!is.na(argsValue) & argsValue != "")	{
+ 		return(argsValue)
+ 	} else {
+ 		return(standardValue)
+ 	}
+ }
> 
> "%getData%" <- function(separation, fileName){	
+ 	#separation <- ";"
+ 	print("... Read input file")
+ 	
+ 	if(file.exists(fileName)) {
+ 		preScanForPointOrComma <- scan(file=fileName, what=character(0), nlines=2, sep="\n")
+ 		preScanForPointOrComma <- paste(preScanForPointOrComma[2],",.", sep="")
+ 		allCharacterSeparated <- table(strsplit(toupper(preScanForPointOrComma), '')[[1]])
+ 		
+ 		if(allCharacterSeparated["."] > allCharacterSeparated[","]) {
+ 			print("... english Version")
+ 			return(read.csv(fileName, header=TRUE, sep=separation, fileEncoding="ISO-8859-1", encoding="UTF-8"))
+ 		} else {
+ 			print("... german Version")
+ 			return(read.csv2(fileName, header=TRUE, sep=separation, fileEncoding="ISO-8859-1", encoding="UTF-8"))
+ 		}
+ 	} else {
+ 		return("error")
+ 	}
+ 	
+ #	if (englischVersion) {
+ #		return(read.csv(fileName, header=TRUE, sep=separation, fileEncoding="ISO-8859-1", encoding="UTF-8"))
+ #	} else {
+ #		return(read.csv2(fileName, header=TRUE, sep=separation, fileEncoding="ISO-8859-1", encoding="UTF-8"))
+ #	}
+ }
> 
> "%checkIfDescriptorExists%" <- function(descriptor, dataSet) {
+ 	if (is.data.frame(dataSet)) {
+ 		return(descriptor %in% colnames(dataSet))
+ 	} else {
+ 		return(descriptor %in% dataSet)
+ 	}	
+ }
> 
> "%GetDescriptorsAfterCheckIfDescriptorExists%" <- function(descriptor, dataSet) {
+ 	return(descriptor[descriptor %checkIfDescriptorExists% dataSet])
+ 	
+ }
> 
> "%GetDescriptorAfterCheckIfDescriptorNotExists%" <- function(descriptor, dataSet) {
+ 	return(descriptor[!descriptor %checkIfDescriptorExists% dataSet])
+ 	
+ }
> 
> "%contactAllWithAll%" <- function(vector1, vector2) {
+ 	vectorTemp <- character(0)
+ 	for(k in vector2) {
+ 		if(k=="none") {
+ 			vectorTemp <- c(vectorTemp,vector1)
+ 		} else {
+ 			vectorTemp <- c(vectorTemp,paste(vector1,k, sep = "#"))
+ 		}
+ 	}
+ 	return(vectorTemp)
+ }
> 
> "%allColnamesWithoutThisOnes%" <- function(dataSet, withoutColNamesVector) {
+ 	return(colnames(dataSet)[!colnames(dataSet) %in% withoutColNamesVector])
+ }
> 
> buildDataSet <- function(workingDataSet, overallResult, colname, index) {
+ 	
+ 	if(length(colname) > 0) {
+ 		for(n in 1:length(colname)) {
+ 			workingDataSet <- cbind(workingDataSet, overallResult[paste(colname[n],index, sep="")])
+ 		}	
+ 		return(workingDataSet)
+ 	}
+ }
> 
> 
> reNameHist <-  function(colNameWichMustBind) {
+ 	colNameWichMustBind <- as.character(colNameWichMustBind)
+ 	positions <- which(strsplit(colNameWichMustBind, '')[[1]]=='.')
+ 	colNameWichMustBind <- substr(colNameWichMustBind,positions[length(positions)]+1,nchar(colNameWichMustBind))
+ 	
+ 	regExpressionSpezialCharacter <- "\\_"
+ 	colNameWichMustBind <- gsub(regExpressionSpezialCharacter,"..",colNameWichMustBind)
+ 	
+ 	return(colNameWichMustBind)	
+ }
> 
> reNameColumn <-  function(plotThisValues, columnNameReplace="name", columnNameWhichUsedToReplace="primaerTreatment") {
+ 	if(!is.null(plotThisValues[columnNameWhichUsedToReplace])){
+ 		plotThisValues[columnNameReplace] <- plotThisValues[columnNameWhichUsedToReplace]
+ 	}
+ 	
+ 	return(plotThisValues)
+ }
> 
> swap <- function(listWithTwoParameter) {
+ 	temp <- listWithTwoParameter[[1]]
+ 	listWithTwoParameter[[1]] <- listWithTwoParameter[[2]]
+ 	listWithTwoParameter[[2]] <- temp
+ 	return(listWithTwoParameter)
+ }
> 
> changeWhenTreatmentNoneAndSecondTreatmentNotNone <- function(listOfTreat, listOfFilterTreat) {
+ 	if(listOfTreat[[1]] == "none" & listOfTreat[[2]] != "none") {
+ 		print("The values of Treatment and SecondTreamt are changed (filter values also)")
+ 		return(list(swap(listOfTreat),swap(listOfFilterTreat)))	
+ 	} else {
+ 		return(list(listOfTreat,listOfFilterTreat))
+ 	}
+ }
> 
> checkOfTreatments <- function(args, treatment, filterTreatment, secondTreatment, filterSecondTreatment, workingDataSet, debug) {
+ 	debug %debug% "Start of checkOfTreatments()"
+ 	
+ 	treatment <- treatment %exists% args[4]
+ 	secondTreatment <- secondTreatment %exists% args[5]
+ 	secondTreatment <- treatment %checkEqual% secondTreatment
+ 	
+ 	listOfTreat <- list(treatment=treatment, secondTreatment=secondTreatment)
+ 	listOfFilterTreat <- list(filterTreatment=filterTreatment, filterSecondTreatment=filterSecondTreatment)	## wird erstmal noch nichts weiter mit gemacht! nur geswapt falls notwendig
+ 
+ 	for(k in names(listOfTreat)){
+ 		if(listOfTreat[[k]] != "none") {
+ 			#overallTreat <- list(iniDataSet=workingDataSet, descriptor=listOfTreat[[k]], debug=debug, stoppTheCalculation = FALSE, errorDescriptor=character())
+ 			#overallTreat <- list(iniDataSet=workingDataSet, descriptor=listOfTreat[[k]], debug=debug, stoppTheCalculation = FALSE)
+ 			descriptorVector <- getVector(preprocessingOfDescriptor(listOfTreat[[k]], workingDataSet))
+ 			
+ 			if(!is.null(descriptorVector)) {
+ 				descriptorVector <- getVector(checkIfDescriptorIsNaOrAllZero(descriptorVector, workingDataSet, FALSE))
+ 				
+ 				if(!is.null(descriptorVector)) {
+ 					listOfTreat[[k]] <- descriptorVector
+ 				} 
+ 			} 
+ 			
+ 			if(is.null(descriptorVector)) {
+ 				print(paste(k, "set to \"none\""))
+ 				listOfTreat[[k]] <- "none"
+ 			}
+ 		}
+ 	}
+ 	
+ 	listOfTreatAndFilterTreat <- changeWhenTreatmentNoneAndSecondTreatmentNotNone(listOfTreat, listOfFilterTreat)
+ 	debug %debug% "End of checkOfTreatments()"
+ 	return(listOfTreatAndFilterTreat)
+ }
> 
> overallCheckIfDescriptorIsNaOrAllZero <- function(overallList) {
+ 	overallList$debug %debug% "overallCheckIfDescriptorIsNaOrAllZero()"	
+ 	
+ 	if(sum(!is.na(overallList$nBoxDes)) > 0) {
+ 		if(overallList$debug) {print("... nBoxplot")}
+ 		for(n in 1:length(overallList$nBoxDes)) {
+ 			if(!is.na(overallList$nBoxDes[[n]])) {
+ 				overallList$nBoxDes[n] <- checkIfDescriptorIsNaOrAllZero(overallList$nBoxDes[[n]], overallList$iniDataSet)
+ 			}
+ 		}
+ 		names(overallList$nBoxDes) <- c(1:length(overallList$nBoxDes))
+ 	} else {
+ 		print("... all in nBoxplot is 'NA'")
+ 	}
+ 	
+ 	if(sum(!is.na(overallList$boxDes)) > 0) {
+ 		if(overallList$debug) {print("... Boxplot")}
+ 		for(n in 1:length(overallList$boxDes)) {
+ 			if(!is.na(overallList$boxDes[[n]])) {
+ 				overallList$boxDes[[n]] <- checkIfDescriptorIsNaOrAllZero(overallList$boxDes[[n]], overallList$iniDataSet)
+ 			}
+ 		}
+ 		names(overallList$boxDes) <- c(1:length(overallList$boxDes))
+ 	} else {
+ 		print("... all in Boxplot is 'NA'")
+ 	}
+ 
+ 	if(sum(!is.na(overallList$boxStackDes)) > 0) {
+ 		if(overallList$debug) {print("... stackedBoxplot")}
+ 		for(n in 1:length(overallList$boxStackDes)) {
+ 			if(!is.na(overallList$boxStackDes[[n]])) {
+ 				overallList$boxStackDes[[n]] <- checkIfDescriptorIsNaOrAllZero(overallList$boxStackDes[[n]], overallList$iniDataSet)
+ 			}
+ 		}
+ 		names(overallList$boxStackDes) <- c(1:length(overallList$boxStackDes))
+ 	} else {
+ 		print("... all in stackedBoxplot is 'NA'")
+ 	}
+ 	
+ 	if(!sum(!is.na(overallList$boxStackDes)) > 0 && !sum(!is.na(overallList$boxDes)) > 0 && !sum(!is.na(overallList$nBoxDes)) > 0) {
+ 		print("... no descriptor set (all descriptors are zero or NA) - the program stopp!")
+ 		overallList$stoppTheCalculation <- TRUE 
+ 	}
+ 	
+ 	return(overallList)
+ }
> 
> checkIfDescriptorIsNaOrAllZero <- function(descriptorVector, iniDataSet, isDescriptor = TRUE){
+ 	#overallList$debug %debug% "checkIfDescriptorIsNaOrAllZero()"
+ 	descriptorVector <- as.vector(descriptorVector)
+ 	#descriptorVector <- getVector(descriptorVector)
+ 	tempDescriptor <- descriptorVector 
+ 	if(isDescriptor) {
+ 		descriptorVector <- descriptorVector[colSums(!is.na(iniDataSet[descriptorVector])) != 0 & colSums(iniDataSet[descriptorVector] *1, na.rm = TRUE) > 0]
+ 	} else {
+ 		descriptorVector <- descriptorVector[colSums(!is.na(iniDataSet[descriptorVector])) != 0]
+ 	}
+ 	errorDescriptor <- tempDescriptor %GetDescriptorAfterCheckIfDescriptorNotExists% descriptorVector
+ 
+ 	if (length(errorDescriptor) > 0) {
+ 		errorDescriptor %errorReport% "NotNumericOrAllZero"	
+ 	}
+ 	
+ 	if(length(descriptorVector) > 0) {
+ 		return(as.data.frame(descriptorVector))
+ 	} else {
+ 		return(NA)
+ 	}
+ }
> 
> overallChangeName <- function(overallList) {
+ 	overallList$debug %debug% "overallChangeSaveName()"	
+ 	
+ 	if(!is.null(overallList$saveName_nBoxDes)) {
+ 		if(overallList$debug) {print("... nBoxplot")}
+ 		overallList$saveName_nBoxDes <- changeSaveName(overallList$saveName_nBoxDes)
+ 		names(overallList$saveName_nBoxDes) <- c(1:length(overallList$saveName_nBoxDes))
+ 		
+ 		overallList$nBoxDesName <- as.list(overallList$nBoxDesName)
+ 		names(overallList$nBoxDesName) <- c(1:length(overallList$nBoxDesName))
+ 	}
+ 	
+ 	if(!is.null(overallList$saveName_boxDes)) {
+ 		if(overallList$debug) {print("... Boxplot")}
+ 		overallList$saveName_boxDes <- changeSaveName(overallList$saveName_boxDes)
+ 		names(overallList$saveName_boxDes) <- c(1:length(overallList$saveName_boxDes))
+ 		
+ 		overallList$boxDesName <- as.list(overallList$boxDesName)
+ 		names(overallList$boxDesName) <- c(1:length(overallList$boxDesName))
+ 	}
+ 	
+ 	if(!is.null(overallList$saveName_boxStackDes)) {
+ 		if(overallList$debug) {print("... stackedBoxplot")}
+ 		overallList$saveName_boxStackDes <- changeSaveName(overallList$saveName_boxStackDes)
+ 		names(overallList$saveName_boxStackDes) <- c(1:length(overallList$saveName_boxStackDes))
+ 		
+ 		overallList$boxStackDesName <- as.list(overallList$boxStackDesName)
+ 		names(overallList$boxStackDesName) <- c(1:length(overallList$boxStackDesName))
+ 	}
+ 	
+ 	return(overallList)
+ }
> 
> changeSaveName <- function(saveNameVector) {
+ 	#Sollte hier nicht noch die Leerzeichen durch Punkte ersetzt werden?
+ 	saveNameVector <- gsub("\\$",";",substr(saveNameVector,1,70))
+ 	saveNameVector <- gsub("\\^", "", saveNameVector);
+ 	
+ 	return(as.list(saveNameVector))
+ }
> 
> preprocessingOfValues <- function(value, isColValue=FALSE, replaceString=".") {
+ 
+ 	if (!is.null(value)) {
+ 		regExpressionCol <- "[^[:alnum:]|^_]|[[:space:]|\\^]"
+ 		if(isColValue) {
+ 			value <- strsplit(value, "$", fixed=TRUE)
+ 		}
+ 		
+ 		for(n in 1:length(value)) {
+ 			value[[n]] <- gsub(regExpressionCol,replaceString,value[[n]])
+ 		}
+ 	} else {
+ 			return("none")
+ 		}
+ 	return(value)
+ }
> 
> overallPreprocessingOfDescriptor <- function(overallList) {
+ 	overallList$debug %debug% "overallPreprocessingOfDescriptor()"	
+ 	
+ 	if(!is.null(overallList$nBoxDes)) {
+ 		if(overallList$debug) {print("... nBoxplot")}
+ 		for(n in 1:length(overallList$nBoxDes)) {
+ 			overallList$nBoxDes[n] <- preprocessingOfDescriptor(overallList$nBoxDes[[n]], overallList$iniDataSet)
+ 		}
+ 	} else {
+ 		print("... nBoxplot is NULL")
+ 	} 
+ 	
+ 	if(!is.null(overallList$boxDes)) {
+ 		if(overallList$debug) {print("... Boxplot")}
+ 		for(n in 1:length(overallList$boxDes)) {
+ 			overallList$boxDes[n] <- preprocessingOfDescriptor(overallList$boxDes[[n]], overallList$iniDataSet)
+ 		}
+ 	} else {
+ 		print("... Boxplot is NULL")
+ 	} 
+ 	
+ 	if(!is.null(overallList$boxStackDes)) {
+ 		if(overallList$debug) {print("... stackedBoxplot")}
+ 		for(n in 1:length(overallList$boxStackDes)) {
+ 			overallList$boxStackDes[n] <- preprocessingOfDescriptor(overallList$boxStackDes[[n]], overallList$iniDataSet)
+ 		}
+ 	} else {
+ 		print("... stackedBoxplot is NULL")
+ 	} 
+ 	
+ 	if(!sum(!is.na(overallList$boxStackDes)) > 0 && !sum(!is.na(overallList$boxDes)) > 0 && !sum(!is.na(overallList$nBoxDes)) > 0) {
+ 		print("... no descriptor set - this pass stopped!")
+ 		overallList$stoppTheCalculation <- TRUE
+ 	}
+ 	
+ 	return(overallList)
+ }
> 
> preprocessingOfDescriptor <- function(descriptorVector, iniDataSet) {
+ 	#overallList$debug %debug% "preprocessingOfDescriptor()"
+ 	descriptorVector <- unlist(preprocessingOfValues(descriptorVector, TRUE))	#descriptor is value for yAxis
+ 	
+ 	errorDescriptor <- descriptorVector %GetDescriptorAfterCheckIfDescriptorNotExists% iniDataSet 
+ 	descriptorVector <- descriptorVector %GetDescriptorsAfterCheckIfDescriptorExists% iniDataSet
+ 	if (length(errorDescriptor)>0) {
+ 		errorDescriptor %errorReport% "notExists"
+ 	} 
+ 	
+ 	if(length(descriptorVector) > 0) {
+ 		return(as.data.frame(descriptorVector))
+ 	} else {
+ 		return(NA)
+ 	}	
+ }
> 
> preprocessingOfxAxisValue <- function(overallList) {
+ 	overallList$debug %debug% "preprocessingOfxAxisValue()"
+ 	overallList$xAxis <- unlist(preprocessingOfValues(overallList$xAxis, TRUE))
+ 	
+ 	if (overallList$filterXaxis != "none") {
+ 		overallList$filterXaxis <- as.numeric(strsplit(overallList$filterXaxis, "$", fixed=TRUE)[[1]])
+ 	} else {
+ 		overallList$filterXaxis <- as.numeric(unique(overallList$iniDataSet[overallList$xAxis])[[1]])	#xAxis muss einen Wert enthalten ansonsten Bricht das Program weiter oben ab
+ 	}
+ 	
+ 	return(overallList)
+ }
> 
> getSingelFilter <- function(filter, treatment, dataSet) {
+ 	if(filter != "none") {
+ 		return(strsplit(filter, "$", fixed=TRUE)[[1]])
+ 	} else {
+ 		return(as.character(unique(dataSet[treatment])[[1]]))
+ 	}
+ }
> 
> preprocessingOfTreatment <- function(overallList) {
+ 	overallList$debug %debug% "preprocessingOfTheTreatment()"
+ 	
+ 	if(!is.null(overallList$treatment)){
+ 		overallList$treatment <- preprocessingOfValues(overallList$treatment)
+ 		
+ 		if(overallList$treatment != "none" & (overallList$treatment %checkIfDescriptorExists% overallList$iniDataSet)) {	
+ 			overallList$filterTreatment <- getSingelFilter(overallList$filterTreatment, overallList$treatment, overallList$iniDataSet)
+ 
+ 		} else {
+ 			overallList$treatment <- "none"
+ 			overallList$filterTreatment <- "none"
+ 			print("... set 'filterTreatment' and 'treatment' to 'none'!")		
+ 		}
+ 			
+ 	} else {
+ 		overallList$treatment <- "none"
+ 		overallList$filterTreatment <- "none"
+ 		print("... set 'filterTreatment' and 'treatment' to 'none'!")
+ 	}
+ 
+ 	return(overallList)
+ }
> 
> preprocessingOfSecondTreatment <- function(overallList) {
+ 	overallList$debug %debug% "preprocessingOfTheSecondTreatment()"
+ 	
+ 	if(!is.null(overallList$secondTreatment)){
+ 		overallList$secondTreatment <- preprocessingOfValues(overallList$secondTreatment)
+ 
+ 		if (overallList$secondTreatment != "none" & (overallList$secondTreatment %checkIfDescriptorExists% overallList$iniDataSet)) {
+ 			overallList$filterSecondTreatment <- getSingelFilter(overallList$filterSecondTreatment, overallList$secondTreatment, overallList$iniDataSet)
+ 			
+ 		} else {
+ 			overallList$secondTreatment <- "none"
+ 			overallList$filterSecondTreatment <- "none"
+ 			print("... set 'filterSecondTreatment' and 'secondTreatment' to 'none'!")
+ 		}	
+ 	} else {
+ 		overallList$secondTreatment <- "none"
+ 		overallList$filterSecondTreatment <- "none"
+ 		print("... set 'filterSecondTreatment' and 'secondTreatment' to 'none'!")
+ 	}
+ 	return(overallList)
+ }
> 
> check <- function(value, checkValue=c("none", NA)){
+ 	if(!is.null(value)){
+ 		return(value %GetDescriptorAfterCheckIfDescriptorNotExists% checkValue)
+ 	} else {
+ 		return(character(0))
+ 	}
+ }
> 
> getVector <- function(descriptorSet) {
+ 	if(!is.null(descriptorSet)) {
+ 		vector <-  vector()
+ 		for(n in 1:length(descriptorSet)) {
+ 			vector <- c(vector, as.vector(unlist(descriptorSet[[n]])))
+ 		}
+ 		return(vector)
+ 	}
+ 	return(character(0))
+ }
> 
> reduceWorkingDataSize <- function(overallList){
+ 	overallList$debug %debug% "reduceWorkingDataSize()"
+ 	overallList$iniDataSet <- overallList$iniDataSet[unique(c(check(getVector(overallList$nBoxDes)), check(getVector(overallList$boxDes)), check(getVector(overallList$boxStackDes)), check(overallList$xAxis), check(overallList$treatment), check(overallList$secondTreatment)))]
+ 	return(overallList)
+ }
> 
> setRowAndColNameOfFinalDataFrame <- function(overallList) {
+ 	overallList$debug %debug% "setRowAndColNameOfFinalDataFrame()"
+ 
+ 	overallList$rowName <- (overallList$descriptor %contactAllWithAll% overallList$filterTreatment) %contactAllWithAll% overallList$filterSecondTreatment
+ 	overallList$colName <- as.character(overallList$filterXaxis)
+ 	
+ 	return(overallList)
+ }
> 
> groupByFunction <- function(groupByList) {
+ 	
+ 	groupByList <- unlist(groupByList)
+ 	return(unlist(groupByList[ifelse(groupByList != "none",TRUE,FALSE)]))
+ 	
+ }
> 
> getBooleanVectorForFilterValues <- function(groupedDataFrame, listOfValues) {
+ 	
+ 	tempVector <- rep.int(TRUE,times=length(groupedDataFrame[,1]))
+ 	for(h in names(listOfValues)) {
+ 		if(h != "none" & !is.null(groupedDataFrame[[h]])) {
+ 			tempVector <- tempVector & groupedDataFrame[[h]] %in% listOfValues[[h]]
+ 		}
+ 	}
+ 	return(tempVector)
+ }
> 
> buildRowForOverallList <- function(i, des, listOfValues, dataSet, day) {
+ 	rowString <- list(row=des, day=numeric())
+ 	for(k in listOfValues){
+ 		if(k != "none") {
+ 			rowString$row <- paste(rowString$row,dataSet[i,k])
+ 		}
+ 	}
+ 	return(rowString)
+ } 
> 
> fillOverallResult <- function(overallList, preErrorBars) {
+ 	overallList$debug %debug% "fillOverallResult()"
+ 	if(length(overallList$iniDataSet[,1]) > 0){
+ 		for(i in 1:length(overallList$iniDataSet[,1])) {
+ 			for(des in overallList$descriptor) {
+ 				rowAndColumn <- buildRowForOverallList(i,des, c(overallList$treatment, overallList$secondTreatment),overallList$iniDataSet, overallList$xAxis)
+ 				overallList$overallResult[rowAndColumn$row, as.character(overallList$iniDataSet[i,overallList$xAxis])] <- overallList$iniDataSet[i,des]
+ 				if(tolower(overallList$diagramTyp) != "boxplotstacked")
+ 					overallList$errorBars[rowAndColumn$row, as.character(overallList$iniDataSet[i,overallList$xAxis])] <- preErrorBars[i,des]
+ 			}
+ 		}
+ 	} else {
+ 		print("... no Value for the OverallResult-DataFrame - Wrong filter!")
+ 		overallList$stoppTheCalculation <- TRUE
+ 	}
+ 	return(overallList)
+ }
> 
> buildList <- function(overallList, colOfXaxis) {
+ 	overallList$debug %debug% "buildList()"
+ 	newList <- list()
+ 	
+ 	newList[[overallList$treatment]] <- overallList$filterTreatment
+ 	newList[[overallList$secondTreatment]] <- overallList$filterSecondTreatment
+ 	newList[[colOfXaxis]] <- overallList$filterXaxis
+ 	
+ 	return(newList)
+ }
> 
> conactAllWithAll <- function(value1, value2) {
+ 	
+ 	conactRow <- character()
+ 	for(k1 in value1){
+ 		if(k1 != "none") {
+ 			for(k2 in value2){
+ 				if(k2 != "none") {
+ 					conactRow <- c(conactRow, paste(k1,k2,sep = "#"))
+ 				}
+ 			}
+ 		}
+ 	}
+ 	return(conactRow)
+ }
> 
> buildRowName <- function(mergeDataSet,groupBy, yName = "value") {
+ 	
+ 	if(length(groupBy) == 0) {
+ 		return(data.frame(name=rep.int(yName, length(mergeDataSet[,1])), mergeDataSet))
+ 	} else if (length(groupBy) == 1) {
+ 		return(data.frame(name=mergeDataSet[,groupBy], mergeDataSet[,!(colnames(mergeDataSet) %in% groupBy)]))
+ 	} else {		
+ 		temp <- mergeDataSet[,groupBy[1]]
+ 		for(h in 2:length(groupBy)) {
+ 			temp <- paste(temp, mergeDataSet[,groupBy[h]], sep = "#")
+ 		}
+ 		return(data.frame(name=temp, primaerTreatment= mergeDataSet[,groupBy[1]], mergeDataSet[,mergeDataSet %allColnamesWithoutThisOnes% groupBy]))
+ 	}	
+ }
> 
> overallGetResultDataFrame <- function(overallList) {
+ 	overallList$debug %debug% "overallGetResultDataFrame()"	
+ 	groupBy <- groupByFunction(list(overallList$treatment, overallList$secondTreatment))
+ 	colNames <- list(colOfXaxis="xAxis", colOfMean="mean", colOfSD="se", colName="name", xAxis=overallList$xAxis)
+ 	booleanVectorList <- buildList(overallList, colNames$colOfXaxis)
+ 	columnsStandard <- c(check(overallList$xAxis), check(overallList$treatment), check(overallList$secondTreatment))
+ 		
+ 	if(sum(!is.na(overallList$nBoxDes)) > 0) {
+ 		if(overallList$debug) {print("... nBoxplot")}
+ 		columns <- c(columnsStandard, check(getVector(overallList$nBoxDes)))
+ 		overallList$overallResult_nBoxDes <- getResultDataFrame("nboxplot", overallList$nBoxDes, overallList$iniDataSet[columns], groupBy, colNames, booleanVectorList, overallList$debug)
+ 	} else {
+ 		print("... all in nBoxplot is 'NA'")
+ 	}
+ 	
+ 	if(sum(!is.na(overallList$boxDes)) > 0) {
+ 		if(overallList$debug) {print("... Boxplot")}
+ 		colNames$colOfMean <- "value"
+ 		columns <- c(columnsStandard, check(getVector(overallList$boxDes)))
+ 		overallList$overallResult_boxDes <- getResultDataFrame("boxplot", overallList$boxDes, overallList$iniDataSet[columns], groupBy, colNames, booleanVectorList, overallList$debug)
+ 	} else {
+ 		print("... all in Boxplot is 'NA'")
+ 	}
+ 	
+ 	if(sum(!is.na(overallList$boxStackDes)) > 0) {
+ 		if(overallList$debug) {print("... stackedBoxplot")}
+ 		colNames$colOfMean <- check(getVector(overallList$boxStackDes))
+ 		colNames$colOfXaxis <- overallList$xAxis
+ 		columns <- c(columnsStandard, check(getVector(overallList$boxStackDes)))
+ 		overallList$overallResult_boxStackDes <- getResultDataFrame("boxplotStacked", overallList$boxStackDes, overallList$iniDataSet[columns], groupBy, colNames, booleanVectorList,overallList$debug)
+ 	} else {
+ 		print("... all in stackedBoxplot is 'NA'")
+ 	}
+ 	
+ 	if(is.null(overallList$boxStackDes) && is.null(overallList$boxDes) && is.null(overallList$nBoxDes)) {
+ 		print("... no descriptor set - this pass stopped!")
+ 		overallList$stoppTheCalculation <- TRUE
+ 	}
+ 	
+ 	return(overallList)
+ }
> 
> getPlotNumber <- function(colNameWichMustBind, descriptorList) {
+ 	
+ 	for(n in names(descriptorList)) {
+ 		if(colNameWichMustBind %in% as.vector(unlist(descriptorList[[n]]))) {
+ 			return(n)
+ 		}
+ 	}
+ 	return(-1)
+ }
> #descriptorName kann entfernt werden
> getResultDataFrame <- function(diagramTyp, descriptorList, iniDataSet, groupBy, colNames, booleanVectorList, debug) {	
+ 	debug %debug% "getResultDataFrame()"
+ 
+ ################################
+ #	diagramTyp = "boxplotStacked"
+ #	descriptorList = overallList$boxStackDes
+ #	iniDataSet = overallList$iniDataSet[columns]
+ #	groupBy = groupBy 
+ #	colNames = colNames 
+ #	booleanVectorList= booleanVectorList
+ #	descriptorName=overallList$boxStackDesName
+ #	debug = overallList$debug
+ #	diagramTyp = "nboxplot"
+ #	descriptor = getVector(overallList$nBoxDes)
+ #	iniDataSet = overallList$iniDataSet[columns]
+ #	groupBy = groupBy 
+ #	colNames = colNames 
+ #	booleanVectorList= booleanVectorList
+ #	descriptorName=overallList$boxDesName
+ ##########################
+ 
+ 	descriptor <- getVector(descriptorList)
+ 	descriptorName <- seq(1:length(descriptor))
+ 	
+ 	descriptorName <- descriptorName[!is.na(descriptor)]
+ 	descriptor <- descriptor[!is.na(descriptor)]
+ 	
+ 	if(diagramTyp != "boxplot") {
+ 		groupedDataFrame <- data.table(iniDataSet)
+ 		key(groupedDataFrame) <- c(groupBy, colNames$xAxis)		
+ 	}
+ 	
+ 	if(diagramTyp == "boxplot") {
+ 		groupedDataFrameMean <- iniDataSet[groupBy[1]]
+ 		
+ 		groupByReduce <- groupBy[groupBy!=groupBy[1]]
+ 		for(n in c(groupByReduce,  colNames$xAxis, descriptor)) {
+ 			groupedDataFrameMean <- cbind(groupedDataFrameMean,  iniDataSet[n])
+ 		}	
+ 		
+ ####################
+ #		Alternative, den Boxplot selber zu bauen!!
+ #		test <- overallList$iniDataSet %allColnamesWithoutThisOnes% c(groupBy, overallList$xAxis)
+ #		myQuantile <- as.data.frame(groupedDataFrame[,lapply(.SD,quantile, probs=c(0,0.25,0.5,0.75,1), na.rm=TRUE), by=groupBy])
+ #		numberOfGroubingElements <- length(myQuantile[,1]) / 5
+ #		
+ #		testData <- data.frame()
+ #		for(n in seq(1, length(myQuantile[,1]), by=5)) {
+ #			testData <- rbind(testData, myQuantile[n:(n+4),test])
+ #		}
+ #		colnames(testData) <- c("q0", "q25", "q50", "q75", "q100")
+ #		rownames(testData) <- unique(myQuantile[,1])
+ #		
+ #		ggplot(overallList$iniDataSet, aes(x=rownames(testData), ymin=testData[,1], lower=testData[,2], middle=testData[,3], upper=testData[,4], ymax=testData[,5])) + 
+ #				geom_boxplot(stat="identity")
+ #####################		
+ 			
+ 		
+ 	} else {
+ 		groupedDataFrameMean <- as.data.frame(groupedDataFrame[,lapply(.SD, mean, na.rm=TRUE), by=c(groupBy,colNames$xAxis)])
+ 	}
+ 	
+ 	if(diagramTyp == "nboxplot" || diagramTyp == "boxplot") {
+ 		#colNamesOfTheRest <- paste(colNames$colOfMean,seq(1:length(descriptor)), sep="")	
+ 		colNamesOfTheRest <- paste(colNames$colOfMean,descriptorName, sep="")	
+ 	} else {
+ 		colNamesOfTheRest <- groupedDataFrameMean %allColnamesWithoutThisOnes% c(groupBy, colNames$xAxis)
+ 	}
+ 		
+ #alt wenn nur ein Deskriptor übergeben wird
+ #		if(tolower(overallList$diagramTyp) == "nboxplot" || tolower(overallList$diagramTyp) == "boxplot") {
+ #			colNamesOfTheRest <- colOfMean
+ #		} else {
+ #			colNamesOfTheRest <- groupedDataFrameMean %allColnamesWithoutThisOnes% c(groupBy, overallList$xAxis)
+ #		}
+ 		
+ 	colnames(groupedDataFrameMean) <- c(groupBy, colNames$colOfXaxis, colNamesOfTheRest)
+ 	
+ 	if(diagramTyp == "nboxplot") {
+ 		groupedDataFrameSD <- as.data.frame(groupedDataFrame[,lapply(.SD, sd, na.rm=TRUE), by=c(groupBy,colNames$xAxis)])
+ 		colnames(groupedDataFrameSD) <- c(groupBy, colNames$colOfXaxis, paste(colNames$colOfSD,descriptorName, sep=""))
+ 	}
+ 	
+ 	booleanVector <- getBooleanVectorForFilterValues(groupedDataFrameMean, booleanVectorList)
+ 	
+ 	if(diagramTyp == "nboxplot") {
+ 		iniDataSet <- merge(sort=FALSE, groupedDataFrameMean[booleanVector,], groupedDataFrameSD[booleanVector,], by = c(groupBy, colNames$colOfXaxis))
+ 		#overallResult <- buildRowName(iniDataSet,groupBy, descriptorName)
+ 		overallResult <- buildRowName(iniDataSet,groupBy)
+ 		
+ 	} else if(diagramTyp == "boxplot") {
+ 		iniDataSet <- groupedDataFrameMean[booleanVector,]
+ 		#overallResult <- buildRowName(iniDataSet,groupBy, descriptorName)
+ 		overallResult <- buildRowName(iniDataSet,groupBy)
+ 		
+ 	} else {
+ 		iniDataSet <- groupedDataFrameMean[booleanVector,]		
+ 		#buildRowNameDataSet <- buildRowName(iniDataSet, groupBy, descriptorName)
+ 		buildRowNameDataSet <- buildRowName(iniDataSet, groupBy)
+ 		temp <- data.frame()
+ #		count <- 0
+ 		
+ 		for(colNameWichMustBind in buildRowNameDataSet %allColnamesWithoutThisOnes% c(colNames$xAxis, colNames$colName, "primaerTreatment")) {
+ #			count <- count+1
+ 			plot = getPlotNumber(colNameWichMustBind, descriptorList)
+ 		
+ 			if(plot!=-1) {
+ 				colNameWichMustBindReNamed <- reNameHist(colNameWichMustBind)
+ 		
+ 				if(is.null(buildRowNameDataSet$primaerTreatment)){	
+ 					temp <- rbind(temp,data.frame(hist=rep.int(x=colNameWichMustBindReNamed, times=length(buildRowNameDataSet[,colNameWichMustBind])), values=buildRowNameDataSet[,colNameWichMustBind], xAxis=buildRowNameDataSet[,colNames$colOfXaxis], name=buildRowNameDataSet[,colNames$colName], plot=plot))			
+ 				} else {
+ 					temp <- rbind(temp,data.frame(hist=rep.int(x=colNameWichMustBindReNamed, times=length(buildRowNameDataSet[,colNameWichMustBind])), primaerTreatment=buildRowNameDataSet[,"primaerTreatment"], values=buildRowNameDataSet[,colNameWichMustBind], xAxis=buildRowNameDataSet[,colNames$colOfXaxis], name=buildRowNameDataSet[,colNames$colName], plot = plot))			
+ 				}
+ 			}
+ 		}
+ 		overallResult <- temp		
+ 	}	
+ 
+ 	return(overallResult)
+ }
> 
> setDefaultAxisNames <- function(overallList) {
+ 	overallList$debug %debug% "setDefaultAxisNames()"
+ 	
+ 	if (overallList$xAxisName == "none") {
+ 		overallList$xAxisName <- gsub('[[:punct:]]'," ",overallList$xAxis)
+ 	}
+ #	if (overallList$yAxisName == "none") {
+ #		overallList$yAxisName <- gsub('[[:punct:]]'," ",overallList$descriptor)
+ #	}
+ 	return(overallList)
+ }
> 
> setColorListHist <- function(descriptorList) {
+ 	interval <- seq(0.05,0.95, by=0.1)
+ 	intervalSat <- rep.int(c(0.8,1.0), 5)
+ 	intervalFluo <- seq(0,0.166666666666, by=0.01666666)
+ 	
+ 	if(length(grep("fluo",getVector(descriptorList), ignore.case=TRUE)) > 0) { #rot			
+ 		#colorList <- as.list(rgb(255, seq(256/10/2,255,by=255/10), 255, max = 255))
+ 		#colorList <- as.list(rgb(1, interval, 0, max = 1))
+ 		colorList <- as.list(hsv(h=rev(intervalFluo), s=intervalSat, v=1))
+ 		
+ 	} else if(length(grep("phenol",getVector(descriptorList), ignore.case=TRUE)) > 0) { #gelb
+ 		#colorList <- as.list(rgb(255, rev(seq(256/10/2,255,by=255/10)), 255, max = 255))
+ 		#colorList <- as.list(rgb(1, rev(interval), 0, max = 1))
+ 		colorList <- as.list(hsv(h=intervalFluo, s=intervalSat, v=1))
+ 		
+ 	} else if(length(grep("vis",getVector(descriptorList), ignore.case=TRUE)) > 0) {
+ 		colorList <- as.list(hsv(h=interval, s=1, v=intervalSat))
+ 		
+ 	} else if(length(grep("nir",getVector(descriptorList), ignore.case=TRUE)) > 0) {
+ 		colorList <- as.list(rgb(rev(interval), rev(interval), rev(interval), max = 1))		
+ 	} else {
+ 		return(list(0))
+ 	}
+ 	names(colorList) <- c("0..25", "25..51", "51..76", "76..102", "102..127", "127..153", "153..178", "178..204", "204..229", "229..255")
+ 	return(colorList)
+ }
> 
> setColorList <- function(diagramTyp, descriptorList, overallResult, isGray) {
+ #################	
+ #diagramTyp = "boxplotStacked"
+ #descriptorList = overallList$boxStackDes
+ #isGrey = overallList$isGray
+ #	overallResult=overallList$overallResult_nBoxDes
+ #	diagramTyp = "boxplotStacked"
+ #	descriptorList = overallList$nBoxDes	
+ ##################
+ 	
+ 	if(!as.logical(isGray)) {
+ 		colorVector <- c(brewer.pal(11, "Spectral"))
+ 	} else {
+ 		colorVector <- c(brewer.pal(9, "Greys"))
+ 	}
+ 	
+ 	colorList <- list()
+ 	if(diagramTyp == "nboxplot" || diagramTyp == "boxplot") {
+ 		for(n in names(descriptorList)) {
+ 			if(!is.na(descriptorList[[n]])) {
+ 				colorList[[n]] <- colorRampPalette(colorVector)(length(unique(overallResult$name)))
+ 			} else {
+ 				print("... all values are 'NA'")
+ 			}
+ 		}
+ 	} else {
+ 		for(n in names(descriptorList)) {
+ 			if(!is.na(descriptorList[[n]])) {
+ 				colorList[[n]] <- setColorListHist(descriptorList[n])
+ 			} else {
+ 				print("... all values are 'NA'")
+ 			}
+ 		}
+ 	}
+ 	return(colorList)
+ }
> 
> setColor <- function(overallList) {
+ 	overallList$debug %debug% "setColor()"
+ 	  
+ 	overallList$color_nBox <- setColorList("nboxplot", overallList$nBoxDes, overallList$overallResult_nBoxDes, overallList$isGray)
+ 	overallList$color_box <- setColorList("boxplot", overallList$boxDes, overallList$overallResult_boxDes, overallList$isGray)
+ 	overallList$color_boxStack <- setColorList("boxplotStacked", overallList$boxStackDes, overallList$overallResult_boxStackDes, overallList$isGray)
+ 	return(overallList)
+ }
> 
> normalizeToHundredPercent <-  function(whichRows, overallResult) {
+ 	return(t(apply(overallResult[whichRows,], 1, function(x,y){(100*x)/y}, y=colSums(overallResult[whichRows,]))))
+ }
> 
> writeLatexFile <- function(saveNameLatexFile, saveNameImageFile="", o="") {
+ 	
+ 	saveNameImageFile <- preprocessingOfValues(saveNameImageFile, FALSE, "_")
+ 	saveNameLatexFile <- preprocessingOfValues(saveNameLatexFile, FALSE, "_")
+ 	o <- gsub('[[:punct:]]',"_",o)
+ 	
+ 	latexText <- paste("\\loadImage{",
+ 					   ifelse(saveNameImageFile=="",saveNameLatexFile,saveNameImageFile),
+ 					   ifelse(o=="", "", paste("_",o ,sep="")),
+ 					   ".pdf}", sep="")
+ 	
+ 	write(x=latexText, append=TRUE, file=paste(saveNameLatexFile,"tex",sep="."))
+ 	
+ }
> 
> saveImageFile <- function(overallList, plot, saveName, extraString="") {
+ 	filename <- preprocessingOfValues(paste(saveName,extraString,sep=""), FALSE,replaceString = "_")	
+ 	ggsave (filename=paste(filename,overallList$saveFormat,sep="."), plot = plot, dpi=as.numeric(overallList$dpi))
+ 
+ }
> 
> makeDepthBoxplotDiagram <- function(h, overallList) {
+ 
+ 	overallList$debug %debug% "makeDepthBoxplotDiagram()"
+ 	overallList$symbolParameter <- 15
+ 	
+ 	if (h==1) {
+ 		openImageFile(overallList)
+ 	}
+ 	par(mar=c(4.1,4.1,2.1,2.1))
+ 	plot.depth(as.matrix(overallList$overallResult), plot.type=h, xlabel=overallList$xAxisName, l.width=12, lp.color=overallList$color)
+ 	
+ 	grid()
+ 	if (h==1) {
+ 		dev.off()
+ 	}
+ 	if(overallList$appendix) {
+ 		writeLatexFile("appendixImage", overallList$saveName)
+ 	}
+ 	
+ 	return(overallList)
+ }
> 
> CheckIfOneColumnHasOnlyValues <- function(overallResult, descriptor="", diagramTyp="nboxplot") {	
+ 	
+ 	max <- -1	
+ 	for(index in levels(overallResult$name)){
+ 		if(diagramTyp == "nboxplot" || diagramTyp == "boxplot") {
+ 			temp <- sum(!is.na(overallResult$mean[overallResult$name == index]))
+ 		} else {
+ 			boolVec <- overallResult$name == index
+ 			temp <- sum(!is.na(overallResult[boolVec,descriptor]))
+ 		}
+ 		max <- ifelse(temp > max, temp, max)
+ 	}
+ 		
+ 	return(ifelse(max == 1,TRUE, FALSE))
+ }
> 
> 
> buildMyStats <- function(values, means, se) {
+ 	means <- as.data.frame(as.vector(means))
+ 	colnames(means) <- "means"
+ 	
+ 	se <- as.data.frame(as.vector(se))
+ 	colnames(se) <- "se"
+ 
+ 	return(data.frame(value=values,means=means, se=se))
+ }
> 
> buildMyStats2 <- function(values, means, se, rowName) {
+ 	means <- as.data.frame(as.vector(means))
+ 	colnames(means) <- "means"
+ 	
+ 	rowName <- as.data.frame(as.vector(rowName))
+ 	colnames(rowName) <- Name
+ 	
+ 	se <- as.data.frame(as.vector(se))
+ 	colnames(se) <- "se"
+ 	
+ 	return(data.frame(value=values,means=means, se=se, rowName=rowName))
+ }
> 
> reduceOverallResult <- function(tempOverallList, imagesIndex) {
+ 	tempOverallList$debug %debug% "reduceOverallResult()"
+ 
+ 	workingDataSet <- buildDataSet(tempOverallList$overallResult[,1:2], tempOverallList, c("mean", "se"), imagesIndex)
+ 	colnames(workingDataSet) <- c(colnames(workingDataSet)[1:2], "mean", "se")
+ 	return(workingDataSet)	
+ }
> 
> 
> reduceWholeOverallResultToOneValue <- function(tempOverallResult, imagesIndex, debug, diagramTyp="nboxplot") {
+ 	debug %debug% "reduceWholeOverallResultToOneValue()"
+ 	
+ 	if(diagramTyp == "boxplotstacked") {
+ 		
+ 		workingDataSet <- tempOverallResult[tempOverallResult$plot == imagesIndex,]
+ 		workingDataSet$hist <- factor(workingDataSet$hist, unique(workingDataSet$hist))
+ 		
+ 	} else {
+ 		colNames <- vector()
+ 		if(diagramTyp == "nboxplot" || diagramTyp == "barplot") {
+ 			colNames <- c("mean", "se")
+ 		} else if(diagramTyp == "boxplot") {
+ 			colNames <- c("value")
+ 		} 
+ 		
+ 		if("primaerTreatment" %in% tempOverallResult) {
+ 			standardColumnName <- c("name", "primaerTreatment", "xAxis")
+ 		} else {
+ 			standardColumnName <- c("name", "xAxis")
+ 		}
+ 		
+ 		workingDataSet <- buildDataSet(tempOverallResult[,standardColumnName], tempOverallResult, colNames, imagesIndex)
+ 		colnames(workingDataSet) <- c(standardColumnName, colNames)
+ 	}
+ 	return(workingDataSet)	
+ }
> 
> 
> makeLinearDiagram <- function(h, overallResult, overallDescriptor, overallColor, overallDesName, overallSaveName, overallList) {
+ ########################		
+ 	h=h 
+ 	overallResult = overallList$overallResult_nBoxDes
+ 	overallColor=overallList$color_nBox
+ #	debug = overallList$debug
+ 	overallDescriptor = overallList$nBoxDes
+ 	overallDesName = overallList$nBoxDesName
+ #########################
+ 	
+ 	overallList$debug %debug% "makeLinearDiagram()"	
+ 	
+ 	tempOverallResult <-  overallResult
+ 	
+ 	for(imagesIndex in names(overallDescriptor)) {
+ 		if(!is.na(overallDescriptor[[imagesIndex]])) {
+ 			print(paste("... images",imagesIndex))
+ 			overallResult <- reduceWholeOverallResultToOneValue(tempOverallResult, imagesIndex, overallList$debug, "nboxplot")
+ 			
+ 			if(!CheckIfOneColumnHasOnlyValues(overallResult)) {	
+ 		
+ 	#			myDataSet <- data.frame(name=c("normal","wet","dry","normal","wet","dry","normal","wet","dry"), 
+ 	#									xAxis=c(6,6,6,8,8,8,10,10,10),		
+ 	#									mean=c(4883,6224,4630,6047,5790,7758,7349,7778,9725), 
+ 	#									se=c(1515,1190,1670,1831,2013,1318,2387,2182,1499))
+ 						
+ 				plot <-	ggplot(data=overallResult, aes(x=xAxis, y=mean, shape=name)) +
+ 						#geom_smooth(aes(ymin=mean-se, ymax=mean+se, colour=name, fill=name), stat="identity", alpha=0.1) +
+ 						geom_ribbon(aes(ymin=mean-se, ymax=mean+se, fill=name), stat="identity", alpha=0.1) +
+ 						geom_line(aes(color=name), alpha=0.2) +
+ 						geom_point(aes(color=name), size=3) +
+ 						scale_x_continuous(name=overallList$xAxisName, minor_breaks = min(overallResult$xAxis):max(overallResult$xAxis)) +
+ 						ylab(overallDesName[[imagesIndex]]) +
+ 						scale_fill_manual(values = overallColor[[imagesIndex]]) +
+ 						scale_colour_manual(values= overallColor[[imagesIndex]]) +
+ 						scale_shape_manual(values = c(1:length(overallColor[[imagesIndex]]))) +
+ 						theme_bw() +
+ 						opts(axis.title.x = theme_text(face="bold", size=11),
+ 								axis.title.y = theme_text(face="bold", size=11, angle=90),
+ 								#panel.grid.major = theme_blank(), # switch off major gridlines
+ 								#panel.grid.minor = theme_blank(), # switch off minor gridlines
+ 								legend.position = "right", # manually position the legend (numbers being from 0,0 at bottom left of whole plot to 1,1 at top right)
+ 								legend.title = theme_blank(), # switch off the legend title						
+ 								#legend.key.size = unit(1.5, "lines"),
+ 								legend.key = theme_blank(), # switch off the rectangle around symbols in the legend
+ 								panel.border = theme_rect(colour="Grey", size=0.1)
+ 						)
+ 				
+ 				if(length(overallColor[[imagesIndex]]) > 25) {
+ 					plot <- plot + opts(legend.text = theme_text(size=6),
+ 										legend.key.size = unit(0.7, "lines")
+ 										)
+ 				} else {
+ 					plot <- plot + opts(legend.text = theme_text(size=11))
+ 				}
+ 								
+ 	#			print(plot)
+ 		
+ 		##!# nicht löschen, ist die interpolation (alles in dieser if Abfrage mit #!# makiert)
+ 		##!#				newCoords <- seq(min(overallList$filterXaxis,na.rm=TRUE),max(overallList$filterXaxis,na.rm=TRUE),1)
+ 		##!#				newValue <- approx(overallList$filterXaxis, overallList$overallResult[y,],xout=newCoords,method="linear")
+ 		##!#				
+ 		##!#				naVector <- is.na(overallList$overallResult[y,])
+ 		##!#				overallResultWithNaValues <- overallList$overallResult[y,]
+ 		##!#				overallList$overallResult[y,naVector] <- newValue$y[overallList$filterXaxis[naVector]]
+ 		#				
+ 		#				if (firstPlot) {
+ 		#					firstPlot <- FALSE
+ 		##!#				plot(overallList$filterXaxis, overallList$overallResult[y,], main="", type="c", xlab=overallList$xAxisName, col=overallList$color[y], ylab=overallList$yAxisName, pch=y, lty=1, lwd=3, ylim=c(min(overallList$overallResult,na.rm=TRUE),max(overallList$overallResult,na.rm=TRUE)))
+ 		#					plot(overallList$filterXaxis, overallList$overallResult[y,], main="", type="b", xlab=overallList$xAxisName, col=overallList$color[y], ylab=overallList$yAxisName, pch=y, lty=1, lwd=3, ylim=c(min(overallList$overallResult,na.rm=TRUE),max(overallList$overallResult,na.rm=TRUE)))
+ 		#				} else {
+ 		##!#				points(overallList$filterXaxis, overallList$overallResult[y,], type="c", col=overallList$color[y], pch=y, lty=1, lwd=3 )	
+ 		#					points(overallList$filterXaxis, overallList$overallResult[y,], type="b", col=overallList$color[y], pch=y, lty=1, lwd=3 )
+ 		#				}
+ 		##!#				points(overallList$filterXaxis, overallResultWithNaValues, type="p", col=overallList$color[y], pch=y, lty=1, lwd=3 )
+ 		#			} 
+ 		
+ 				if(h==1) {
+ 					saveImageFile(overallList, plot, overallSaveName[[imagesIndex]], "nboxplot")
+ 				} else {
+ 					print(plot)
+ 				}
+ 				if(overallList$appendix) {
+ 					writeLatexFile("appendixImage", overallSaveName[[imagesIndex]], "nboxplot")
+ 				}
+ 			
+ 			} else {
+ 				print("... only one column has values, so it will be plot as barplot!")
+ 		
+ 				day <- overallResult$xAxis[!is.na(overallResult$mean)][1]
+ 				overallList$xAxisName <- paste(overallList$xAxisName,day)
+ 				#overallList$overallResult <- overallList$overallResult[!is.na(overallList$overallResult$mean),]
+ 				overallList <- makeBarDiagram(h, overallResult, overallDescriptor, overallColor, overallDesName, overallSaveName, overallList, TRUE)
+ 			}
+ 		}
+ 	}
+ 	#return(overallList)
+ }
> 
> getColor <- function(overallColorIndex, overallResult) {
+ 	input <- as.vector(unique(overallResult$hist))
+ 	
+ 	color <- vector()
+ 	for(n in input) {
+ 		color <- c(color, overallColorIndex[[n]])
+ 	}
+ 	return(color)
+ }
> 
> 
> plotStackedImage <- function(h, overallList, overallResult, title = "", makeOverallImage = FALSE, legende=TRUE, minor_breaks=TRUE, overallColor, overallDesName, imagesIndex, overallSaveName) {
+ 	overallList$debug %debug% "plotStackedImage()"	
+ 		
+ 	if(length(overallResult[,1]) > 0) {
+ 
+ 		if(length(overallList$stackedBarOptions$typOfGeomBar) == 0) {
+ 			overallList$stackedBarOptions$typOfGeomBar <- c("fill")
+ 		}
+ 		
+ 		for(positionTyp in overallList$stackedBarOptions$typOfGeomBar) {
+ 		
+ 		
+ 			plot <- ggplot(overallResult, aes(xAxis, values, fill=hist)) + 
+ 					geom_bar(stat="identity", position = positionTyp) +
+ 				 	ylab(overallDesName[[imagesIndex]]) 
+ 					#coord_cartesian(ylim=c(0,1)) +
+ 				
+ 			if(minor_breaks) {
+ 				plot <- plot + scale_x_continuous(name=overallList$xAxisName, minor_breaks = min(overallResult$xAxis):max(overallResult$xAxis))
+ 			} else {
+ 				plot <- plot + xlab(overallList$xAxisName)
+ 			}
+ 					
+ 			plot <- plot +		
+ 					scale_fill_manual(values = getColor(overallColor[[imagesIndex]], overallResult), name="") +
+ 					theme_bw() +
+ 					opts(axis.title.x = theme_text(face="bold", size=11),
+ 							axis.title.y = theme_text(face="bold", size=11, angle=90),
+ 							plot.margin = unit(c(0.1, 0.1, 0, 0), "cm"),
+ 							#panel.background = theme_rect(linetype = "dotted"),
+ 							panel.border = theme_rect(colour="Grey", size=0.1),
+ 							strip.background = theme_rect(colour=NA)
+ 	#						plot.title = theme_text(size=10),
+ 	#						plot.title = theme_rect(colour="Pink", size=0.1),
+ 					) 
+ 			
+ 			if(!legende) {
+ 				plot <- plot + opts(legend.position="none")
+ 			} else {
+ 				plot <- plot + opts(legend.position="right", 
+ 									legend.title = theme_blank(),
+ 									legend.text = theme_text(size=11),
+ 									legend.key = theme_blank())
+ 			}
+ 			
+ 			if(title != "") {
+ 				plot <- plot + opts(title = title)
+ 			}
+ 			
+ 			if(!minor_breaks) {
+ 				plot <- plot + opts(panel.grid.minor = theme_blank())
+ 			}
+ 			
+ 			if(makeOverallImage) {
+ 				#plot <- plot + facet_wrap(~ name, drop=TRUE)
+ 				plot <- plot + facet_wrap(~ name)
+ 			}
+ 			
+ 			if (h==1) {
+ 				saveImageFile(overallList, plot, overallSaveName[[imagesIndex]], paste("overall", title, positionTyp, sep=""))
+ 				if(makeOverallImage) {
+ 					writeLatexFile(paste(overallSaveName[[imagesIndex]], "stackedOverallImage", sep=""), paste(overallSaveName[[imagesIndex]],"overall",title, positionTyp, sep=""))	
+ 				} else {
+ 					writeLatexFile(overallSaveName[[imagesIndex]], paste(overallSaveName[[imagesIndex]],"overall",title,positionTyp, sep=""))	
+ 				}
+ 			} else {
+ 				print(plot)
+ 			}
+ 		}
+ 	}
+ }
> 
> PreWorkForMakeBigOverallImage <- function(h, overallResult, overallDescriptor, overallColor, overallDesName, overallSaveName, overallList, imagesIndex) {
+ 	overallList$debug %debug% "PreWorkForMakeBigOverallImage()"	
+ 	
+ 	groupBy <- groupByFunction(list(overallList$treatment, overallList$secondTreatment))
+ 	if(length(groupBy) == 0 || length(groupBy) == 1) {
+ 		plotStackedImage(h = h, overallList = overallList, overallResult = overallResult, makeOverallImage = TRUE, legende=TRUE, minor_breaks=FALSE, overallColor = overallColor, overallDesName = overallDesName, imagesIndex= imagesIndex, overallSaveName =overallSaveName)
+ 		
+ 	} else {
+ 		for(value in overallList$filterSecondTreatment) {
+ 			title <- value
+ 			plottedName <- overallList$filterTreatment %contactAllWithAll% value
+ 			booleanVector <- getBooleanVectorForFilterValues(overallResult, list(name = plottedName))
+ 			plotThisValues <- overallResult[booleanVector,]
+ 			plotThisValues <- reNameColumn(plotThisValues, "name", "primaerTreatment")
+ 			plotStackedImage(h, overallList, plotThisValues, title = title, makeOverallImage = TRUE,  legende=TRUE, minor_breaks=FALSE, overallColor = overallColor, overallDesName = overallDesName, imagesIndex=imagesIndex, overallSaveName=overallSaveName)
+ 		}	 
+ 	}
+ }
> 
> PreWorkForMakeNormalImages <- function(h, overallList) {
+ 	overallList$debug %debug% "PreWorkForMakeNormalImages()"
+ 	stackedImages <- unlist(unique(overallList$overallResult["name"]))
+ 	
+ 	for(o in stackedImages) {
+ 		overallList$debug %debug% paste("makeBoxplotStackedDiagram with the descriptor: ",overallList$saveName,o)
+ 		plotThisValues <- overallList$overallResult[overallList$overallResult["name"] == o,]
+ 		plotStackedImage(h, overallList, plotThisValues, o, FALSE, TRUE, TRUE)
+ 	}
+ }
> 
> 
> makeBoxplotStackedDiagram <- function(h, overallResult, overallDescriptor, overallColor, overallDesName, overallSaveName, overallList) {
+ 	########################		
+ #	h=h
+ #	overallResult=overallList$overallResult_boxStackDes
+ #	overallDescriptor=overallList$boxStackDes
+ #	overallColor=overallList$color_boxStack
+ #	overallDesName=overallList$boxStackDesName
+ #	overallList=overallList
+ #	overallSaveName = overallList$saveName_nBoxDes
+ 	#########################
+ 
+ 
+ 	
+ 	
+ 	overallList$debug %debug% "makeBoxplotStackedDiagram()"
+ 	overallResult[is.na(overallResult)] <- 0
+ 	tempOverallResult <- overallResult
+ 	
+ 	for(imagesIndex in names(overallDescriptor)) {
+ 		
+ 		overallResult <- reduceWholeOverallResultToOneValue(tempOverallResult, imagesIndex, overallList$debug, "boxplotstacked")
+ 	
+ 		PreWorkForMakeBigOverallImage(h, overallResult, overallDescriptor, overallColor, overallDesName, overallSaveName, overallList, imagesIndex)
+ 		#PreWorkForMakeNormalImages(h,overallList)
+ 	}
+ 	#return(overallList)
+ }	
> 
> makeBarDiagram <- function(h, overallResult, overallDescriptor, overallColor, overallDesName, overallSaveName, overallList, isOnlyOneValue = FALSE) {
+ 	########################		
+ #	h=h 
+ #	overallResult = overallList$overallResult_nBoxDes
+ #	overallColor=overallList$color_nBox
+ ##	debug = overallList$debug
+ #	overallDescriptor = overallList$nBoxDes
+ #	overallDesName = overallList$nBoxDesName
+ #	isOnlyOneValue = FALSE
+ 	#########################
+ 
+ 	overallList$debug %debug% "makeBarDiagram()"
+ 
+ 	tempOverallResult <-  overallResult
+ 	
+ 	for(imagesIndex in names(overallDescriptor)) {
+ 		if(!is.na(overallDescriptor[[imagesIndex]])) {
+ 			overallResult <- reduceWholeOverallResultToOneValue(tempOverallResult, imagesIndex, overallList$debug, "barplot")
+ 			overallResult <- overallResult[!is.na(overallResult$mean),]
+ 			
+ 			if(isOnlyOneValue) {
+ 				myPlot <- ggplot(data=overallResult, aes(x=name, y=mean))
+ 			} else {
+ 				myPlot <- ggplot(data=overallResult, aes(x=xAxis, y=mean))
+ 			}
+ 			
+ 			myPlot <- myPlot + 						
+ 					geom_bar(stat="identity", aes(fill=name), colour="Grey", size=0.1) +
+ 					geom_errorbar(aes(ymax=mean+se, ymin=mean-se), width=0.2, colour="black")+
+ 					#geom_errorbar(aes(ymax=mean+se, ymin=mean-se), width=0.5, colour="Pink")+
+ 					ylab(overallDesName[[imagesIndex]]) +
+ 					coord_cartesian(ylim=c(0,max(overallResult$mean + overallResult$se + 10,na.rm=TRUE))) +
+ 					xlab(overallList$xAxisName) +
+ 					scale_fill_manual(values = overallColor[[imagesIndex]]) +
+ 					theme_bw() +
+ 					opts(legend.position="none",
+ 							plot.margin = unit(c(0.1, 0.1, 0, 0), "cm"),
+ 							axis.title.x = theme_text(face="bold", size=11),
+ 							axis.title.y = theme_text(face="bold", size=11, angle=90),
+ 							panel.grid.minor = theme_blank(),
+ 							panel.border = theme_rect(colour="Grey", size=0.1)
+ 					)
+ 			
+ 			if(length(overallColor[[imagesIndex]]) > 10) {
+ 				myPlot <- myPlot + opts(axis.text.x = theme_text(size=6, angle=90))
+ 			}
+ 			print(myPlot)
+ 			
+ 			if (h==1) {
+ 				saveImageFile(overallList, myPlot, overallSaveName[[imagesIndex]], "barplot")
+ 			} else {
+ 				print(myPlot)
+ 			}
+ 			if(overallList$appendix) {
+ 				writeLatexFile("appendixImage", overallSaveName[[imagesIndex]], "barplot")
+ 			}
+ 		}
+ 	}
+ 	#return(overallList)
+ }
> 
> ##Problem: der median wird nicht angezeigt!
> makeBoxplotDiagram <- function(h, overallResult, overallDescriptor, overallColor, overallDesName, overallSaveName, overallList) {
+ 	########################		
+ #	h=h 
+ #	overallResult = overallList$overallResult_boxDes
+ #	overallColor=overallList$color_box
+ ##	debug = overallList$debug
+ #	overallDescriptor = overallList$boxDes
+ #	overallDesName = overallList$boxDesName
+ 	#########################
+ 	
+ 	overallList$debug %debug% "makeBoxplotDiagram()"
+ 	#overallList$overallResult <- overallList$overallResult[!is.na(overallList$overallResult$mean),]
+ 
+ 	tempOverallResult <-  overallResult
+ 	
+ 	for(imagesIndex in names(overallDescriptor)) {
+ 		if(!is.na(overallDescriptor[[imagesIndex]])) {
+ 			overallResult <- reduceWholeOverallResultToOneValue(tempOverallResult, imagesIndex, overallList$debug, "boxplot")
+ 			
+ 			
+ 			#myPlot <- ggplot(overallList$overallResult, aes(factor(name), value, fill=name, colour=name)) + 
+ 			myPlot <- ggplot(overallResult, aes(factor(name), value, fill=name)) +
+ 					geom_boxplot() +
+ 					ylab(overallDesName[[imagesIndex]]) +
+ 					#coord_cartesian(ylim=c(0,max(overallList$overallResult$mean + overallList$overallResult$se + 10,na.rm=TRUE))) +
+ 					xlab(overallList$xAxisName) +
+ 					scale_fill_manual(values = overallColor[[imagesIndex]]) +
+ 					#stat_summary(fun.data = f, geom = "crossbar", height = 0.1,	colour = NA, fill = "skyblue", width = 0.8, alpha = 0.5) +
+ 					theme_bw() +
+ 					opts(legend.position="none",
+ 							plot.margin = unit(c(0.1, 0.1, 0, 0), "cm"),
+ 							axis.title.x = theme_text(face="bold", size=11),
+ 							axis.title.y = theme_text(face="bold", size=11, angle=90),
+ 							panel.grid.minor = theme_blank(),
+ 							panel.border = theme_rect(colour="Grey", size=0.1)
+ 					)
+ 		
+ 			if(length(overallColor[[imagesIndex]]) > 10) {
+ 				myPlot <- myPlot + opts(axis.text.x = theme_text(size=6, angle=90))
+ 			}	
+ 			
+ 		#	print(myPlot)
+ 
+ 			if (h==1) {
+ 				saveImageFile(overallList, myPlot, overallSaveName[[imagesIndex]], "boxplot")
+ 			} else {
+ 				print(myPlot)
+ 			}
+ 			if(overallList$appendix) {
+ 				writeLatexFile("appendixImage", overallSaveName[[imagesIndex]], "boxplot")
+ 			}
+ 		}
+ 	}
+ 	#return(overallList)
+ }
> 
> makeDiagrams <- function(overallList) {
+ 	overallList$debug %debug% "makeDiagrams()"
+ 	durchlauf <- ifelse(overallList$showResultInR, 2, 1)
+ 	
+ 	for(h in 1:durchlauf) {
+ 
+ 		if(sum(!is.na(overallList$nBoxDes)) > 0) {
+ 			if(overallList$debug) {print("... nBoxplot")}	
+ 			makeLinearDiagram(h, overallList$overallResult_nBoxDes, overallList$nBoxDes, overallList$color_nBox, overallDesName=overallList$nBoxDesName, overallList$saveName_nBoxDes ,overallList)
+ 		} else {
+ 			print("... all in nBoxplot is 'NA'")
+ 		}
+ 		
+ 		if(sum(!is.na(overallList$boxDes)) > 0) {
+ 			if(overallList$debug) {print("... Boxplot")}
+ 			makeBoxplotDiagram(h, overallList$overallResult_boxDes, overallList$boxDes, overallList$color_box, overallDesName=overallList$boxDesName, overallList$saveName_boxDes, overallList)
+ 		} else {
+ 			print("... all in Boxplot is 'NA'")
+ 		}
+ 		
+ 		if(sum(!is.na(overallList$boxStackDes)) > 0) {
+ 			if(overallList$debug) {print("... stacked Boxplot")}
+ 			makeBoxplotStackedDiagram(h, overallList$overallResult_boxStackDes, overallList$boxStackDes, overallList$color_boxStack, overallDesName=overallList$boxStackDesName, overallList$saveName_boxStackDes, overallList)
+ 		} else {
+ 			print("... all in stacked Boxplot is 'NA'")
+ 		}
+ 		
+ 		if(FALSE) {	# falls auch mal barplots erstellt werden sollen (ausser wenn nur ein Tag vorhanden ist!)
+ 			if(overallList$debug) {print("... Barplot")}
+ 			makeBarDiagram(h, overallList$overallResult_nBoxDes, overallList$nBoxDes, overallList$color_nBox, overallDesName=overallList$nBoxDesName, overallList$saveName_nBoxDes, overallList)
+ 		}
+ 	}
+ }
> 
> #makeDiagrams <- function(overallList) {
> #	overallList$debug %debug% "makeDiagrams()"
> #	durchlauf <- ifelse(overallList$showResultInR, 2, 1)
> #	
> #	for(h in 1:durchlauf) {
> #						
> #		if (tolower(overallList$diagramTyp) == "boxplot") {
> #			overallList <- makeBoxplotDiagram(h, overallList)
> #			
> #		} else if (tolower(overallList$diagramTyp) == "boxplotstacked") {
> #			overallList <- makeBoxplotStackedDiagram(h, overallList)
> #			
> #		} else if(tolower(overallList$diagramTyp) == "nboxplot"){
> #			overallList <- makeLinearDiagram(h, overallList)
> #			
> #		}  else if (tolower(overallList$diagramTyp) == "barplot") {
> #			overallList <- makeBarDiagram(h, overallList)
> #		} else {
> #			print("Error - overallList$diagramTyp is undefined!")
> #		}
> #	}
> #}
> 
> checkIfAllNecessaryFilesAreThere <- function() {
+ 		print("... check if the noValues-Image is there")
+ 		file <- "noValues.pdf"
+ 		if(!file.exists(file)){
+ 			library("Cairo")
+ 			print(paste("... create defaultImage '",file,"'",sep=""))
+ 			Cairo(width=900, height=70,file=file,type="pdf",bg="transparent",units="px",dpi=90)
+ 			par(mar = c(0,0,0,0))
+ 			plot.new()
+ 			legend("left", "no values", col= c("black"), pch=1, bty="n")
+ 			dev.off()
+ 		}	
+ }
> 
> buildBlacklist <- function(workingDataSet, descriptorSet) {
+ 	
+ 	searchString <- ".histogram."
+ 	searchString <- paste(searchString,"mark",sep = "|")	
+ 	additionalDescriptors <- c(descriptorSet, "Day (Int)","Day","Time", "Plant ID", "vis.side", "fluo.side", "nir.side", "vis.top", "fluo.top", "nir.top")
+ 	
+ 	return(c(colnames(workingDataSet)[grep(searchString,colnames(workingDataSet), ignore.case = TRUE)], preprocessingOfValues(additionalDescriptors, TRUE)))
+ }
> 
> initRfunction <- function(DEBUG = FALSE){
+ 	
+ 	if(DEBUG) {
+ 		
+ 		options(error = quote({
+ 			#sink(file="error.txt", split = TRUE);
+ 			dump.frames();
+ 			print(attr(last.dump,"error.message"));
+ 			#x <- attr(last.dump,"error.message")
+ 			traceback();
+ 			#sink(file=NULL);		
+ 			#q()
+ 		}))
+ 	} else {	
+ 		options(error = NULL)
+ 	}
+ 	memory.limit(size=3500)
+ 
+ 	while(!is.null(dev.list())) {
+ 		dev.off()
+ 	}
+ }
> typOfStartOptions = "test"
> 	typOfStartOptions <- tolower(typOfStartOptions)
> 	
> 	args <- commandArgs(TRUE)
> 	print("#### Arguments")
[1] "#### Arguments"
> 	print(args)
character(0)
> 	print("####")
[1] "####"
> 	
> 	saveFormat <- "pdf"	
> 	dpi <- "150" ##90
> 	
> 	isGray <- FALSE
> 	showResultInR <- FALSE
> 	
> 	treatment <- "Treatment"
> 	filterTreatment <- "none"
> 	
> 	secondTreatment <- "none"
> 	filterSecondTreatment <- "none"
> 	
> 	xAxis <- "Day (Int)" 
> 	xAxisName <- "DAS"
> 	filterXaxis <- "none"
> 	
> #	diagramTypVector <- vector()
> 	descriptorSet <- vector()
> 	descriptorSetName <- vector()
> 	
> 	fileName <- "error"
> 
> 	appendix <- FALSE
> 	#appendix <- TRUE
> 	
> 	separation <- ";"
> #	if (length(args) < 1) {
> #		englischVersion <- FALSE
> #		#englischVersion <- TRUE
> #	} else {
> #		englischVersion <- TRUE
> #	}
> 
> 	if (typOfStartOptions == "all" | typOfStartOptions == "report" | typOfStartOptions == "allmanual") {
+ 
+ 		if (typOfStartOptions != "allmanual") {
+ 			fileName <- fileName %exists% args[1]
+ 		} else {
+ 			fileName <- "numeric_data.MaizeAnalysisAction_ 1116BA_new3.csv"
+ 			#fileName <- "report.csv" ## englischVersion <- TRUE setzen!!
+ 			#fileName <- "testDataset3.csv"
+ 		}
+ 		
+ 		if (fileName != "error") {
+ 			workingDataSet <- separation %getData% fileName
+ 			
+ 			if(workingDataSet != "error") {
+ 				#nboxplot
+ 				if (typOfStartOptions == "all") {
+ 					descriptorSet_nBoxplot <- colnames(workingDataSet)
+ 					descriptorSetName_nBoxplot <- descriptorSet
+ 					
+ 				} else { #Report	
+ 					descriptorSet_nBoxplot <- c("Weight A (g)","Weight B (g)","Water (weight-diff)","side.height.norm (mm)","side.width.norm (mm)","side.area.norm (mm^2)", "top.area.norm (mm^2)",
+ 							"side.fluo.intensity.chlorophyl.average (relative)","side.fluo.intensity.phenol.average (relative)",
+ 							"side.nir.intensity.average (relative)","side.leaf.count.median (leafs)","side.bloom.count (tassel)",
+ 							"side.leaf.length.sum.norm.max (mm)", "volume.fluo.iap","volume.iap (px^3)", "volume.iap_max", "volume.lt (px^3)",
+ 							"volume.iap.wue", "side.nir.wetness.plant_weight_drought_loss", "top.nir.wetness.plant_weight_drought_loss", "side.nir.wetness.av", "top.nir.wetness.av",
+ 							"side.area.relative", "side.height.norm.relative", "side.width.norm.relative", "top.area.relative", "side.area.relative", "volume.iap.relative",
+ 							"side.height (mm)","side.width (mm)","side.area (px)", "top.area (px)")
+ 				
+ 					descriptorSetName_nBoxplot <- c("weight before watering (g)","weight after watering (g)", "water weight (g)", "normalized height (mm)", "normalized width (mm)", "normalized side area (mm^2)", "normalized top area (mm^2)",
+ 							"chlorophyl intensity (relative intensity/pixel)", "fluorescence intensity (relative intensity/pixel)", "nir intensity (relative intensity/pixel)",
+ 							"number of leafs (leaf)", "number of tassels (tassel)", "length of leafs plus stem (mm)", "volume based on FLUO (IAP) (px^3)", "volume based on RGB (IAP) (px^3)", "volume based on max RGB-image (IAP) (px^3)", "volume based on RGB (LemnaTec) (px^3)",
+ 							"volume based water use efficiency", "weighted loss through drought stress (side)", "weighted loss through drought stress (top)", "Average wetness of side image", "Average wetness of top image",
+ 							"relative projected side area (%)", "relative plant height (%)", "relative plant width (%)", "relative projected top area (%)", "relative projected side area (%)", "relative volume (IAP based formular - RGB) (%)",
+ 							"height (px)", "width (px)", "side area (px)", "top area (px)")		
+ 				}
+ 	
+ 				nBoxOptions= NULL
+ 				#diagramTypVector <- rep.int("nboxplot", times=length(descriptorSetName))
+ 		
+ 		
+ 				#boxplot
+ 				descriptorSet_boxplot <- c("side.height.norm (mm)","side.width.norm (mm)","side.area.norm (mm^2)", "top.area.norm (mm^2)",
+ 						"volume.fluo.iap","volume.iap (px^3)", "volume.iap_max", "volume.lt (px^3)",
+ 						"side.height (mm)","side.width (mm)","side.area (px)", "top.area (px)")
+ 				
+ 				descriptorSetName_boxplot <- c("normalized height (mm)", "normalized width (mm)", "normalized side area (mm^2)", "normalized top area (mm^2)",
+ 						"volume based on FLUO (IAP) (px^3)", "volume based on RGB (IAP) (px^3)", "volume based on max RGB-image (IAP) (px^3)", "volume based on RGB (LemnaTec) (px^3)",
+ 						"height (px)", "width (px)", "side area (px)", "top area (px)")	
+ 				
+ 				boxOptions= NULL
+ 				#diagramTypVectorBox <- rep.int("boxplot", times=length(descriptorSetBox))
+ 				
+ 				#descriptorSet <- c(descriptorSet, descriptorSetBox)
+ 				#descriptorSetName <- c(descriptorSetName, descriptorSetNameBox)
+ 				#diagramTypVector <- c(diagramTypVector, diagramTypVectorBox)
+ 				
+ 				#boxplotStacked
+ 				descriptorSet_boxplotStacked <- c("side.nir.normalized.histogram.bin.1.0_25$side.nir.normalized.histogram.bin.2.25_51$side.nir.normalized.histogram.bin.3.51_76$side.nir.normalized.histogram.bin.4.76_102$side.nir.normalized.histogram.bin.5.102_127$side.nir.normalized.histogram.bin.6.127_153$side.nir.normalized.histogram.bin.7.153_178$side.nir.normalized.histogram.bin.8.178_204$side.nir.normalized.histogram.bin.9.204_229$side.nir.normalized.histogram.bin.10.229_255",
+ 								   				  "side.fluo.histogram.bin.1.0_25$side.fluo.histogram.bin.2.25_51$side.fluo.histogram.bin.3.51_76$side.fluo.histogram.bin.4.76_102$side.fluo.histogram.bin.5.102_127$side.fluo.histogram.bin.6.127_153$side.fluo.histogram.bin.7.153_178$side.fluo.histogram.bin.8.178_204$side.fluo.histogram.bin.9.204_229$side.fluo.histogram.bin.10.229_255",
+ 										  		  "top.nir.histogram.bin.1.0_25$top.nir.histogram.bin.2.25_51$top.nir.histogram.bin.3.51_76$top.nir.histogram.bin.4.76_102$top.nir.histogram.bin.5.102_127$top.nir.histogram.bin.6.127_153$top.nir.histogram.bin.7.153_178$top.nir.histogram.bin.8.178_204$top.nir.histogram.bin.9.204_229$top.nir.histogram.bin.10.229_255",
+ 												  "side.fluo.histogram.phenol.bin.1.0_25$side.fluo.histogram.phenol.bin.2.25_51$side.fluo.histogram.phenol.bin.3.51_76$side.fluo.histogram.phenol.bin.4.76_102$side.fluo.histogram.phenol.bin.5.102_127$side.fluo.histogram.phenol.bin.6.127_153$side.fluo.histogram.phenol.bin.7.153_178$side.fluo.histogram.phenol.bin.8.178_204$side.fluo.histogram.phenol.bin.9.204_229$side.fluo.histogram.phenol.bin.10.229_255",
+ 												  "side.fluo.histogram.ratio.bin.1.0_25$side.fluo.histogram.ratio.bin.2.25_51$side.fluo.histogram.ratio.bin.3.51_76$side.fluo.histogram.ratio.bin.4.76_102$side.fluo.histogram.ratio.bin.5.102_127$side.fluo.histogram.ratio.bin.6.127_153$side.fluo.histogram.ratio.bin.7.153_178$side.fluo.histogram.ratio.bin.8.178_204$side.fluo.histogram.ratio.bin.9.204_229$side.fluo.histogram.ratio.bin.10.229_255",
+ 												  "side.nir.normalized.histogram.bin.1.0_25$side.nir.normalized.histogram.bin.2.25_51$side.nir.normalized.histogram.bin.3.51_76$side.nir.normalized.histogram.bin.4.76_102$side.nir.normalized.histogram.bin.5.102_127$side.nir.normalized.histogram.bin.6.127_153$side.nir.normalized.histogram.bin.7.153_178$side.nir.normalized.histogram.bin.8.178_204$side.nir.normalized.histogram.bin.9.204_229$side.nir.normalized.histogram.bin.10.229_255",
+ 												  "side.fluo.normalized.histogram.bin.1.0_25$side.fluo.normalized.histogram.bin.2.25_51$side.fluo.normalized.histogram.bin.3.51_76$side.fluo.normalized.histogram.bin.4.76_102$side.fluo.normalized.histogram.bin.5.102_127$side.fluo.normalized.histogram.bin.6.127_153$side.fluo.normalized.histogram.bin.7.153_178$side.fluo.normalized.histogram.bin.8.178_204$side.fluo.normalized.histogram.bin.9.204_229$side.fluo.normalized.histogram.bin.10.229_255",
+ 												  "side.fluo.normalized.histogram.phenol.bin.1.0_25$side.fluo.normalized.histogram.phenol.bin.2.25_51$side.fluo.normalized.histogram.phenol.bin.3.51_76$side.fluo.normalized.histogram.phenol.bin.4.76_102$side.fluo.normalized.histogram.phenol.bin.5.102_127$side.fluo.normalized.histogram.phenol.bin.6.127_153$side.fluo.normalized.histogram.phenol.bin.7.153_178$side.fluo.normalized.histogram.phenol.bin.8.178_204$side.fluo.normalized.histogram.phenol.bin.9.204_229$side.fluo.normalized.histogram.phenol.bin.10.229_255",
+ 												  "side.fluo.normalized.histogram.ratio.bin.1.0_25$side.fluo.normalized.histogram.ratio.bin.2.25_51$side.fluo.normalized.histogram.ratio.bin.3.51_76$side.fluo.normalized.histogram.ratio.bin.4.76_102$side.fluo.normalized.histogram.ratio.bin.5.102_127$side.fluo.normalized.histogram.ratio.bin.6.127_153$side.fluo.normalized.histogram.ratio.bin.7.153_178$side.fluo.normalized.histogram.ratio.bin.8.178_204$side.fluo.normalized.histogram.ratio.bin.9.204_229$side.fluo.normalized.histogram.ratio.bin.10.229_255",
+ 												  "side.nir.histogram.phenol.bin.1.0_25$side.nir.histogram.phenol.bin.2.25_51$side.nir.histogram.phenol.bin.3.51_76$side.nir.histogram.phenol.bin.4.76_102$side.nir.histogram.phenol.bin.5.102_127$side.nir.histogram.phenol.bin.6.127_153$side.nir.histogram.phenol.bin.7.153_178$side.nir.histogram.phenol.bin.8.178_204$side.nir.histogram.phenol.bin.9.204_229$side.nir.histogram.phenol.bin.10.229_255",
+ 												  "side.nir.histogram.ratio.bin.1.0_25$side.nir.histogram.ratio.nir.2.25_51$side.nir.histogram.ratio.bin.3.51_76$side.nir.histogram.ratio.bin.4.76_102$side.nir.histogram.ratio.bin.5.102_127$side.nir.histogram.ratio.bin.6.127_153$side.nir.histogram.ratio.bin.7.153_178$side.nir.histogram.ratio.bin.8.178_204$side.nir.histogram.ratio.bin.9.204_229$side.nir.histogram.ratio.bin.10.229_255",
+ 												  "side.vis.hue.histogram.ratio.bin.1.0_25$side.vis.hue.histogram.ratio.nir.2.25_51$side.vis.hue.histogram.ratio.bin.3.51_76$side.vis.hue.histogram.ratio.bin.4.76_102$side.vis.hue.histogram.ratio.bin.5.102_127$side.vis.hue.histogram.ratio.bin.6.127_153$side.vis.hue.histogram.ratio.bin.7.153_178$side.vis.hue.histogram.ratio.bin.8.178_204$side.vis.hue.histogram.ratio.bin.9.204_229$side.vis.hue.histogram.ratio.bin.10.229_255",
+ 												  "side.vis.normalized.histogram.ratio.bin.1.0_25$side.vis.normalized.histogram.ratio.bin.2.25_51$side.vis.normalized.histogram.ratio.bin.3.51_76$side.vis.normalized.histogram.ratio.bin.4.76_102$side.vis.normalized.histogram.ratio.bin.5.102_127$side.vis.normalized.histogram.ratio.bin.6.127_153$side.vis.normalized.histogram.ratio.bin.7.153_178$side.vis.normalized.histogram.ratio.bin.8.178_204$side.vis.normalized.histogram.ratio.bin.9.204_229$side.vis.normalized.histogram.ratio.bin.10.229_255",
+ 												  "top.fluo.histogram.bin.1.0_25$top.fluo.histogram.bin.2.25_51$top.fluo.histogram.bin.3.51_76$top.fluo.histogram.bin.4.76_102$top.fluo.histogram.bin.5.102_127$top.fluo.histogram.bin.6.127_153$top.fluo.histogram.bin.7.153_178$top.fluo.histogram.bin.8.178_204$top.fluo.histogram.bin.9.204_229$top.fluo.histogram.bin.10.229_255",
+ 												  "top.fluo.histogram.phenol.bin.1.0_25$top.fluo.histogram.phenol.bin.2.25_51$top.fluo.histogram.phenol.bin.3.51_76$top.fluo.histogram.phenol.bin.4.76_102$top.fluo.histogram.phenol.bin.5.102_127$top.fluo.histogram.phenol.bin.6.127_153$top.fluo.histogram.phenol.bin.7.153_178$top.fluo.histogram.phenol.bin.8.178_204$top.fluo.histogram.phenol.bin.9.204_229$top.fluo.histogram.phenol.bin.10.229_255",
+ 												  "top.fluo.histogram.ratio.bin.1.0_25$top.fluo.histogram.ratio.bin.2.25_51$top.fluo.histogram.ratio.bin.3.51_76$top.fluo.histogram.ratio.bin.4.76_102$top.fluo.histogram.ratio.bin.5.102_127$top.fluo.histogram.ratio.bin.6.127_153$top.fluo.histogram.ratio.bin.7.153_178$top.fluo.histogram.ratio.bin.8.178_204$top.fluo.histogram.ratio.bin.9.204_229$top.fluo.histogram.ratio.bin.10.229_255",
+ 												  "top.nir.histogram.bin.1.0_25$top.nir.histogram.bin.2.25_51$top.nir.histogram.bin.3.51_76$top.nir.histogram.bin.4.76_102$top.nir.histogram.bin.5.102_127$top.nir.histogram.bin.6.127_153$top.nir.histogram.bin.7.153_178$top.nir.histogram.bin.8.178_204$top.nir.histogram.bin.9.204_229$top.nir.histogram.bin.10.229_255",
+ 												  "top.nir.histogram.phenol.bin.1.0_25$top.nir.histogram.phenol.bin.2.25_51$top.nir.histogram.phenol.bin.3.51_76$top.nir.histogram.phenol.bin.4.76_102$top.nir.histogram.phenol.bin.5.102_127$top.nir.histogram.phenol.bin.6.127_153$top.nir.histogram.phenol.bin.7.153_178$top.nir.histogram.phenol.bin.8.178_204$top.nir.histogram.phenol.bin.9.204_229$top.nir.histogram.phenol.bin.10.229_255",
+ 												  "top.nir.histogram.ratio.bin.1.0_25$top.nir.histogram.ratio.bin.2.25_51$top.nir.histogram.ratio.bin.3.51_76$top.nir.histogram.ratio.bin.4.76_102$top.nir.histogram.ratio.bin.5.102_127$top.nir.histogram.ratio.bin.6.127_153$top.nir.histogram.ratio.bin.7.153_178$top.nir.histogram.ratio.bin.8.178_204$top.nir.histogram.ratio.bin.9.204_229$top.nir.histogram.ratio.bin.10.229_255",
+ 												  "top.vis.hue.histogram.ratio.bin.1.0_25$top.vis.hue.histogram.ratio.nir.2.25_51$top.vis.hue.histogram.ratio.bin.3.51_76$top.vis.hue.histogram.ratio.bin.4.76_102$top.vis.hue.histogram.ratio.bin.5.102_127$top.vis.hue.histogram.ratio.bin.6.127_153$top.vis.hue.histogram.ratio.bin.7.153_178$top.vis.hue.histogram.ratio.bin.8.178_204$top.vis.hue.histogram.ratio.bin.9.204_229$top.vis.hue.histogram.ratio.bin.10.229_255")
+ 												  
+ 										  
+ 										  
+ 										  
+ 				descriptorSetName_boxplotStacked <- c("NIR side (%)", "red side fluorescence histogram (%)", "NIR top (%)", "yellow side fluorescence histogram (%)", "fluo side ratio histogramm (%)",
+ 													  "NIR side normalized (%)", "red side normalized fluo histogramm (%)", "yellow side normalized fluo histogramm (%)", "fluo side normalized ratio histogramm (%)",
+ 													  "NIR side phenol (%)", "NIR side ratio histogramm (%)", "VIS HUE side ratio histogramm (%)", "VIS side normalized ratio histogramm (%)",
+ 													  "red top fluorescence histogram (%)", "yellow top fluorescence histogram (%)","fluo top ratio histogramm (%)",
+ 													  "NIR top (%)", "NIR top phenol histogram (%)","NIR top ratio histogramm (%)",
+ 													  "VIS HUE top ratio histogramm (%)")
+ 											  
+ 				stackedBarOptions = list(typOfGeomBar=c("fill", "stack", "dodge"))
+ 				#diagramTypVector <- c(diagramTypVector, "boxplotStacked", "boxplotStacked")
+ 				
+ 				appendix <- appendix %exists% args[3]
+ 				
+ 				if(appendix) {
+ 					blacklist <- buildBlacklist(workingDataSet, descriptorSet)
+ 					descriptorSetAppendix <- colnames(workingDataSet[!as.data.frame(sapply(colnames(workingDataSet),'%in%', blacklist))[,1]])
+ 					descriptorSetNameAppendix <- descriptorSetAppendix
+ 					#diagramTypVectorAppendix <- rep.int("nboxplot", times=length(descriptorSetNameAppendix))
+ 				}
+ 			
+ 				saveFormat <- saveFormat %exists% args[2]
+ 							
+ 				listOfTreatAndFilterTreat <- checkOfTreatments(args, treatment, filterTreatment, secondTreatment, filterSecondTreatment, workingDataSet, debug)
+ 				treatment <- listOfTreatAndFilterTreat[[1]][[1]]
+ 				secondTreatment <- listOfTreatAndFilterTreat[[1]][[2]]
+ 				filterTreatment <- listOfTreatAndFilterTreat[[2]][[1]]
+ 				filterSecondTreatment <- listOfTreatAndFilterTreat[[2]][[2]]
+ 			} else {
+ 				fileName = "error"
+ 			}
+ 		}
+ 		
+ 	} else if (typOfStartOptions == "test"){
+ 		
+ 		
+ 		#fileName <- "1107BA_Corn_new2.csv"
+ 			
+ 		#workingDataSet <- read.csv2(fileName, header=TRUE, sep=";", fileEncoding="ISO-8859-1", encoding="UTF-8")                   
+ 		#descriptorSet <- c("side.nir.intensity.average.norm","side.nir.intensity.average","side.hull.area.norm","side.height.norm","Gewicht.B","water.consumption")                   
+ 		#descriptorSetName <- c("nir intensity (rel. intensity/px)","nir intensity (rel. intensity/px)","convex hull area (mm^2)","height (mm)","target weight (g)","water consumption")
+ 			
+ 		#descriptorSet <- c("side.nir.intensity.average.norm","Gewicht.B")                   
+ 		#descriptorSetName <- c("nir intensity (rel. intensity/px)","target weight (g)")
+ 				
+ 		#descriptorSet <- c("digital.biomass.unnormal","digital.biomass.normal","mark3.y")                   
+ 		#descriptorSetName <- c("digital biomass (mm^3)","digital biomass (mm^3)","mark (% from image height)")
+ 			
+ 		#descriptorSet <- c("digital.biomass.keygene.norm","side.area","top.area")                   
+ 		#descriptorSetName <- c("digital biomass (mm^3)","test1", "test2")
+ 			
+ #		descriptorSet <- c("side.nir.normalized.histogram.bin.1.0_25$side.nir.normalized.histogram.bin.2.25_51$side.nir.normalized.histogram.bin.3.51_76$side.nir.normalized.histogram.bin.4.76_102$side.nir.normalized.histogram.bin.5.102_127$side.nir.normalized.histogram.bin.6.127_153$side.nir.normalized.histogram.bin.7.153_178$side.nir.normalized.histogram.bin.8.178_204$side.nir.normalized.histogram.bin.9.204_229$side.nir.normalized.histogram.bin.10.229_255",
+ #					"side.fluo.normalized.histogram.bin.1.0_25$side.fluo.normalized.histogram.bin.2.25_51$side.fluo.normalized.histogram.bin.3.51_76$side.fluo.normalized.histogram.bin.4.76_102$side.fluo.normalized.histogram.bin.5.102_127$side.fluo.normalized.histogram.bin.6.127_153$side.fluo.normalized.histogram.bin.7.153_178$side.fluo.normalized.histogram.bin.8.178_204$side.fluo.normalized.histogram.bin.9.204_229$side.fluo.normalized.histogram.bin.10.229_255")
+ #		descriptorSetName <- c("NIR absorption class (%)", "chlorophyll fluorescence histogram (%)")
+ 			
+ #		descriptorSet <- c("side.nir.normalized.histogram.bin.1.0_25$side.nir.normalized.histogram.bin.2.25_51$side.nir.normalized.histogram.bin.3.51_76$side.nir.normalized.histogram.bin.4.76_102$side.nir.normalized.histogram.bin.5.102_127$side.nir.normalized.histogram.bin.6.127_153$side.nir.normalized.histogram.bin.7.153_178$side.nir.normalized.histogram.bin.8.178_204$side.nir.normalized.histogram.bin.9.204_229$side.nir.normalized.histogram.bin.10.229_255")
+ #		descriptorSetName <- c("NIR absorption class (%)")
+ 			
+ 		#descriptorSet <- c("Plant ID$Treatment$Hallo$Wert1$Repl ID")
+ 		#descriptorSetName <- c("VariableMix")
+ 	
+ #		descriptorSet <- c("side.fluo.normalized.histogram.bin.1.0_25$side.fluo.normalized.histogram.bin.2.25_51$side.fluo.normalized.histogram.bin.3.51_76$side.fluo.normalized.histogram.bin.4.76_102$side.fluo.normalized.histogram.bin.5.102_127$side.fluo.normalized.histogram.bin.6.127_153$side.fluo.normalized.histogram.bin.7.153_178$side.fluo.normalized.histogram.bin.8.178_204$side.fluo.normalized.histogram.bin.9.204_229$side.fluo.normalized.histogram.bin.10.229_255")
+ #		#descriptorSet <- c("side.fluo.normalized.histogram.bin.2.25_51$side.fluo.normalized.histogram.bin.1.0_25$side.fluo.normalized.histogram.bin.3.51_76$side.fluo.normalized.histogram.bin.4.76_102$side.fluo.normalized.histogram.bin.5.102_127$side.fluo.normalized.histogram.bin.6.127_153$side.fluo.normalized.histogram.bin.7.153_178$side.fluo.normalized.histogram.bin.8.178_204$side.fluo.normalized.histogram.bin.9.204_229$side.fluo.normalized.histogram.bin.10.229_255")
+ #		descriptorSetName <- c("red fluorescence histogram (%)")
+ 	
+ 	
+ 		#descriptorSet <- c("Weight B (g)","side.height.norm (mm)","side.width.norm (mm)","side.area.norm (mm^2)",
+ 		#		"side.fluo.intensity.chlorophyl.average (relative)","side.fluo.intensity.phenol.average (relative)",
+ 		#		"side.nir.intensity.average (relative)",
+ 		#		"side.leaf.count.median (leafs)","side.bloom.count (tassel)","side.leaf.length.sum.norm.max (mm)")
+ 			
+ 		# "digital biomass IAP (pixel^3)","digital biomass KeyGene (pixel^3)", 
+ 		#descriptorSetName <- c("weight (g)","height (mm)", "width (mm)", "side area (pixel^2)",
+ 		#		"chlorophyl intensity (relative intensity/pixel)", "fluorescence intensity (relative intensity/pixel)", "nir intensity (relative intensity/pixel)",
+ 		#		"number of leafs (leaf)", "number of tassels (tassel)", "length of leafs plus stem (mm)")
+ 		
+ #		descriptorSet <- c("side.area (px)","side.area.norm (mm^2)")
+ #		descriptorSetName <- c("side area uncorrected (mm^2)", "side area corrected (mm^2)")
+ 		
+ 		#descriptorSet <- c("Hallo2")
+ 		#descriptorSetName <- c("Test")
+ 		
+ 		#descriptorSet <- colnames(workingDataSet)
+ 		#descriptorSetName <- colnames(workingDataSet)
+ 		
+ 		#treatment <- "none"
+ 		treatment <- "Genotype"
+ 		#treatment <- "Treatment"
+ 		#treatment <- "Condition"
+ 		#filterTreatment <- "dry$normal$wet"
+ 		#filterTreatment <- "dry$normal"
+ 		#filterTreatment <- "normal bewaessert$Trockentress"
+ 		#filterTreatment <- "ganz"
+ 		filterTreatment <- "none"
+ 		##filterTreatment <- "Deutschland$Spanien$Italien$China"
+ 		
+ 		#secondTreatment <- "Genotype"
+ 		secondTreatment <- "none"
+ 		#secondTreatment <- "Species"
+ 		#secondTreatment <- "Variety"
+ 		filterSecondTreatment <- "none"
+ 		
+ 		#secondTreatment <- "secondTreatment"
+ 		#filterSecondTreatment <- "a$c"
+ 		
+ 		###1116BA#########6 8 10 12 13 14 15 16 17 19 20 21 22 23 24 25 26 27 28 29 30 31 33 34 35 36 37 38 39 40
+ 		#filterXaxis <- c("6$8$10$12$13$14$15$16$20$21$22$23$26$27$28$29$30$31$33$34$35$36$37$38")
+ 		#filterXaxis <- c("6$8$13")
+ 		###1107BA#########2$4$6$8$10$12$13$15$16$21$22$25$27$29$30$31$33$35$36$37$39$41$42$43$45$47$49$50$51$55$57$59$61$63$64
+ 		#filterXaxis <- c("2$4$6$8$10$12$13$15$16$21$22$25$27$29$30$31$33$35$36$37$39$41$43$45$47$49$50$51$55$57$59$61$63$64")
+ 		#filterXaxis <- c("6$8$10")
+ 		filterXaxis <- "none"
+ 		#filterXaxis <- c("6$8$10$12$13$14$15$16$20$21$22$23$26$27$28$29$30$31$33$34$35$36$37$38")
+ 		
+ 		#treatment <- "Treatment"
+ 		##treatment <- "Variety"
+ 		#treatment <- "none"
+ 		
+ 		#diagramTyp="boxplotStacked"
+ 		#diagramTyp="nboxplot"
+ 		#diagramTyp="boxplot"
+ 		
+ 		bgColor <- "transparent"
+ 		isGray="FALSE"
+ 		#transparent <- "TRUE"
+ 		#legendUnderImage <- "TRUE"
+ 		#showResultInR <- TRUE
+ 		showResultInR <- FALSE
+ 		
+ 		#fileName <- "numeric_data.MaizeAnalysisAction_ 1116BA_new3.csv"
+ 		#fileName <- "testDataset2.csv"
+ 		fileName <- "report.csv"
+ 		#fileName <- "testDataset3.csv"
+ 		#englischVersion <- FALSE
+ 		#englischVersion <- TRUE
+ 		separation <- ";"
+ 		workingDataSet <- separation %getData% fileName
+ 		
+ 		#descriptor <- c("Hallo2")
+ 		#descriptor <- c("Plant ID","Treatment","Hallo","Wert1", "Repl ID")
+ 		#descriptor <- c("Repl ID")		
+ 		#descriptorSet <- c("nir.top")
+ 		#descriptorSet <- c("Plant ID")
+ 		#descriptorSet <- c("side.height.norm (mm)")
+ 
+ 		#descriptorSet <- c("side.area.norm (mm^2)")
+ 		#descriptorSetName <- c("Das ist ein Testname")
+ 		if(TRUE) {
+ 			
+ 			descriptorSet_nBoxplot <- c("Weight A (g)","Weight B (g)","Water (weight-diff)","side.height.norm (mm)","side.width.norm (mm)","side.area.norm (mm^2)", "top.area.norm (mm^2)",
+ 					"side.fluo.intensity.chlorophyl.average (relative)","side.fluo.intensity.phenol.average (relative)",
+ 					"side.nir.intensity.average (relative)","side.leaf.count.median (leafs)","side.bloom.count (tassel)",
+ 					"side.leaf.length.sum.norm.max (mm)", "volume.fluo.iap","volume.iap (px^3)", "volume.iap_max", "volume.lt (px^3)",
+ 					"volume.iap.wue", "side.nir.wetness.plant_weight_drought_loss", "top.nir.wetness.plant_weight_drought_loss", "side.nir.wetness.av", "top.nir.wetness.av",
+ 					"side.area.relative", "side.height.norm.relative", "side.width.norm.relative", "top.area.relative", "side.area.relative", "volume.iap.relative",
+ 					"side.height (mm)","side.width (mm)","side.area (px)", "top.area (px)")
+ 			
+ 			descriptorSetName_nBoxplot <- c("weight before watering (g)","weight after watering (g)", "water weight (g)", "normalized height (mm)", "normalized width (mm)", "normalized side area (mm^2)", "normalized top area (mm^2)",
+ 					"chlorophyl intensity (relative intensity/pixel)", "fluorescence intensity (relative intensity/pixel)", "nir intensity (relative intensity/pixel)",
+ 					"number of leafs (leaf)", "number of tassels (tassel)", "length of leafs plus stem (mm)", "volume based on FLUO (IAP) (px^3)", "volume based on RGB (IAP) (px^3)", "volume based on max RGB-image (IAP) (px^3)", "volume based on RGB (LemnaTec) (px^3)",
+ 					"volume based water use efficiency", "weighted loss through drought stress (side)", "weighted loss through drought stress (top)", "Average wetness of side image", "Average wetness of top image",
+ 					"relative projected side area (%)", "relative plant height (%)", "relative plant width (%)", "relative projected top area (%)", "relative projected side area (%)", "relative volume (IAP based formular - RGB) (%)",
+ 					"height (px)", "width (px)", "side area (px)", "top area (px)")		
+ 		
+ 		nBoxOptions= NULL
+ 		#diagramTypVector <- rep.int("nboxplot", times=length(descriptorSetName))
+ 		
+ 		
+ 		#boxplot
+ 		descriptorSet_boxplot <- c("side.height.norm (mm)","side.width.norm (mm)","side.area.norm (mm^2)", "top.area.norm (mm^2)",
+ 				"volume.fluo.iap","volume.iap (px^3)", "volume.iap_max", "volume.lt (px^3)",
+ 				"side.height (mm)","side.width (mm)","side.area (px)", "top.area (px)")
+ 		
+ 		descriptorSetName_boxplot <- c("normalized height (mm)", "normalized width (mm)", "normalized side area (mm^2)", "normalized top area (mm^2)",
+ 				"volume based on FLUO (IAP) (px^3)", "volume based on RGB (IAP) (px^3)", "volume based on max RGB-image (IAP) (px^3)", "volume based on RGB (LemnaTec) (px^3)",
+ 				"height (px)", "width (px)", "side area (px)", "top area (px)")	
+ 		
+ 		boxOptions= NULL
+ 		#diagramTypVectorBox <- rep.int("boxplot", times=length(descriptorSetBox))
+ 		
+ 		#descriptorSet <- c(descriptorSet, descriptorSetBox)
+ 		#descriptorSetName <- c(descriptorSetName, descriptorSetNameBox)
+ 		#diagramTypVector <- c(diagramTypVector, diagramTypVectorBox)
+ 		
+ 		#boxplotStacked
+ 		descriptorSet_boxplotStacked <- c("side.nir.normalized.histogram.bin.1.0_25$side.nir.normalized.histogram.bin.2.25_51$side.nir.normalized.histogram.bin.3.51_76$side.nir.normalized.histogram.bin.4.76_102$side.nir.normalized.histogram.bin.5.102_127$side.nir.normalized.histogram.bin.6.127_153$side.nir.normalized.histogram.bin.7.153_178$side.nir.normalized.histogram.bin.8.178_204$side.nir.normalized.histogram.bin.9.204_229$side.nir.normalized.histogram.bin.10.229_255",
+ 				"side.fluo.histogram.bin.1.0_25$side.fluo.histogram.bin.2.25_51$side.fluo.histogram.bin.3.51_76$side.fluo.histogram.bin.4.76_102$side.fluo.histogram.bin.5.102_127$side.fluo.histogram.bin.6.127_153$side.fluo.histogram.bin.7.153_178$side.fluo.histogram.bin.8.178_204$side.fluo.histogram.bin.9.204_229$side.fluo.histogram.bin.10.229_255",
+ 				"top.nir.histogram.bin.1.0_25$top.nir.histogram.bin.2.25_51$top.nir.histogram.bin.3.51_76$top.nir.histogram.bin.4.76_102$top.nir.histogram.bin.5.102_127$top.nir.histogram.bin.6.127_153$top.nir.histogram.bin.7.153_178$top.nir.histogram.bin.8.178_204$top.nir.histogram.bin.9.204_229$top.nir.histogram.bin.10.229_255",
+ 				"side.fluo.histogram.phenol.bin.1.0_25$side.fluo.histogram.phenol.bin.2.25_51$side.fluo.histogram.phenol.bin.3.51_76$side.fluo.histogram.phenol.bin.4.76_102$side.fluo.histogram.phenol.bin.5.102_127$side.fluo.histogram.phenol.bin.6.127_153$side.fluo.histogram.phenol.bin.7.153_178$side.fluo.histogram.phenol.bin.8.178_204$side.fluo.histogram.phenol.bin.9.204_229$side.fluo.histogram.phenol.bin.10.229_255",
+ 				"side.fluo.histogram.ratio.bin.1.0_25$side.fluo.histogram.ratio.bin.2.25_51$side.fluo.histogram.ratio.bin.3.51_76$side.fluo.histogram.ratio.bin.4.76_102$side.fluo.histogram.ratio.bin.5.102_127$side.fluo.histogram.ratio.bin.6.127_153$side.fluo.histogram.ratio.bin.7.153_178$side.fluo.histogram.ratio.bin.8.178_204$side.fluo.histogram.ratio.bin.9.204_229$side.fluo.histogram.ratio.bin.10.229_255",
+ 				"side.nir.normalized.histogram.bin.1.0_25$side.nir.normalized.histogram.bin.2.25_51$side.nir.normalized.histogram.bin.3.51_76$side.nir.normalized.histogram.bin.4.76_102$side.nir.normalized.histogram.bin.5.102_127$side.nir.normalized.histogram.bin.6.127_153$side.nir.normalized.histogram.bin.7.153_178$side.nir.normalized.histogram.bin.8.178_204$side.nir.normalized.histogram.bin.9.204_229$side.nir.normalized.histogram.bin.10.229_255",
+ 				"side.fluo.normalized.histogram.bin.1.0_25$side.fluo.normalized.histogram.bin.2.25_51$side.fluo.normalized.histogram.bin.3.51_76$side.fluo.normalized.histogram.bin.4.76_102$side.fluo.normalized.histogram.bin.5.102_127$side.fluo.normalized.histogram.bin.6.127_153$side.fluo.normalized.histogram.bin.7.153_178$side.fluo.normalized.histogram.bin.8.178_204$side.fluo.normalized.histogram.bin.9.204_229$side.fluo.normalized.histogram.bin.10.229_255",
+ 				"side.fluo.normalized.histogram.phenol.bin.1.0_25$side.fluo.normalized.histogram.phenol.bin.2.25_51$side.fluo.normalized.histogram.phenol.bin.3.51_76$side.fluo.normalized.histogram.phenol.bin.4.76_102$side.fluo.normalized.histogram.phenol.bin.5.102_127$side.fluo.normalized.histogram.phenol.bin.6.127_153$side.fluo.normalized.histogram.phenol.bin.7.153_178$side.fluo.normalized.histogram.phenol.bin.8.178_204$side.fluo.normalized.histogram.phenol.bin.9.204_229$side.fluo.normalized.histogram.phenol.bin.10.229_255",
+ 				"side.fluo.normalized.histogram.ratio.bin.1.0_25$side.fluo.normalized.histogram.ratio.bin.2.25_51$side.fluo.normalized.histogram.ratio.bin.3.51_76$side.fluo.normalized.histogram.ratio.bin.4.76_102$side.fluo.normalized.histogram.ratio.bin.5.102_127$side.fluo.normalized.histogram.ratio.bin.6.127_153$side.fluo.normalized.histogram.ratio.bin.7.153_178$side.fluo.normalized.histogram.ratio.bin.8.178_204$side.fluo.normalized.histogram.ratio.bin.9.204_229$side.fluo.normalized.histogram.ratio.bin.10.229_255",
+ 				"side.nir.histogram.phenol.bin.1.0_25$side.nir.histogram.phenol.bin.2.25_51$side.nir.histogram.phenol.bin.3.51_76$side.nir.histogram.phenol.bin.4.76_102$side.nir.histogram.phenol.bin.5.102_127$side.nir.histogram.phenol.bin.6.127_153$side.nir.histogram.phenol.bin.7.153_178$side.nir.histogram.phenol.bin.8.178_204$side.nir.histogram.phenol.bin.9.204_229$side.nir.histogram.phenol.bin.10.229_255",
+ 				"side.nir.histogram.ratio.bin.1.0_25$side.nir.histogram.ratio.nir.2.25_51$side.nir.histogram.ratio.bin.3.51_76$side.nir.histogram.ratio.bin.4.76_102$side.nir.histogram.ratio.bin.5.102_127$side.nir.histogram.ratio.bin.6.127_153$side.nir.histogram.ratio.bin.7.153_178$side.nir.histogram.ratio.bin.8.178_204$side.nir.histogram.ratio.bin.9.204_229$side.nir.histogram.ratio.bin.10.229_255",
+ 				"side.vis.hue.histogram.ratio.bin.1.0_25$side.vis.hue.histogram.ratio.nir.2.25_51$side.vis.hue.histogram.ratio.bin.3.51_76$side.vis.hue.histogram.ratio.bin.4.76_102$side.vis.hue.histogram.ratio.bin.5.102_127$side.vis.hue.histogram.ratio.bin.6.127_153$side.vis.hue.histogram.ratio.bin.7.153_178$side.vis.hue.histogram.ratio.bin.8.178_204$side.vis.hue.histogram.ratio.bin.9.204_229$side.vis.hue.histogram.ratio.bin.10.229_255",
+ 				"side.vis.normalized.histogram.ratio.bin.1.0_25$side.vis.normalized.histogram.ratio.bin.2.25_51$side.vis.normalized.histogram.ratio.bin.3.51_76$side.vis.normalized.histogram.ratio.bin.4.76_102$side.vis.normalized.histogram.ratio.bin.5.102_127$side.vis.normalized.histogram.ratio.bin.6.127_153$side.vis.normalized.histogram.ratio.bin.7.153_178$side.vis.normalized.histogram.ratio.bin.8.178_204$side.vis.normalized.histogram.ratio.bin.9.204_229$side.vis.normalized.histogram.ratio.bin.10.229_255",
+ 				"top.fluo.histogram.bin.1.0_25$top.fluo.histogram.bin.2.25_51$top.fluo.histogram.bin.3.51_76$top.fluo.histogram.bin.4.76_102$top.fluo.histogram.bin.5.102_127$top.fluo.histogram.bin.6.127_153$top.fluo.histogram.bin.7.153_178$top.fluo.histogram.bin.8.178_204$top.fluo.histogram.bin.9.204_229$top.fluo.histogram.bin.10.229_255",
+ 				"top.fluo.histogram.phenol.bin.1.0_25$top.fluo.histogram.phenol.bin.2.25_51$top.fluo.histogram.phenol.bin.3.51_76$top.fluo.histogram.phenol.bin.4.76_102$top.fluo.histogram.phenol.bin.5.102_127$top.fluo.histogram.phenol.bin.6.127_153$top.fluo.histogram.phenol.bin.7.153_178$top.fluo.histogram.phenol.bin.8.178_204$top.fluo.histogram.phenol.bin.9.204_229$top.fluo.histogram.phenol.bin.10.229_255",
+ 				"top.fluo.histogram.ratio.bin.1.0_25$top.fluo.histogram.ratio.bin.2.25_51$top.fluo.histogram.ratio.bin.3.51_76$top.fluo.histogram.ratio.bin.4.76_102$top.fluo.histogram.ratio.bin.5.102_127$top.fluo.histogram.ratio.bin.6.127_153$top.fluo.histogram.ratio.bin.7.153_178$top.fluo.histogram.ratio.bin.8.178_204$top.fluo.histogram.ratio.bin.9.204_229$top.fluo.histogram.ratio.bin.10.229_255",
+ 				"top.nir.histogram.bin.1.0_25$top.nir.histogram.bin.2.25_51$top.nir.histogram.bin.3.51_76$top.nir.histogram.bin.4.76_102$top.nir.histogram.bin.5.102_127$top.nir.histogram.bin.6.127_153$top.nir.histogram.bin.7.153_178$top.nir.histogram.bin.8.178_204$top.nir.histogram.bin.9.204_229$top.nir.histogram.bin.10.229_255",
+ 				"top.nir.histogram.phenol.bin.1.0_25$top.nir.histogram.phenol.bin.2.25_51$top.nir.histogram.phenol.bin.3.51_76$top.nir.histogram.phenol.bin.4.76_102$top.nir.histogram.phenol.bin.5.102_127$top.nir.histogram.phenol.bin.6.127_153$top.nir.histogram.phenol.bin.7.153_178$top.nir.histogram.phenol.bin.8.178_204$top.nir.histogram.phenol.bin.9.204_229$top.nir.histogram.phenol.bin.10.229_255",
+ 				"top.nir.histogram.ratio.bin.1.0_25$top.nir.histogram.ratio.bin.2.25_51$top.nir.histogram.ratio.bin.3.51_76$top.nir.histogram.ratio.bin.4.76_102$top.nir.histogram.ratio.bin.5.102_127$top.nir.histogram.ratio.bin.6.127_153$top.nir.histogram.ratio.bin.7.153_178$top.nir.histogram.ratio.bin.8.178_204$top.nir.histogram.ratio.bin.9.204_229$top.nir.histogram.ratio.bin.10.229_255",
+ 				"top.vis.hue.histogram.ratio.bin.1.0_25$top.vis.hue.histogram.ratio.nir.2.25_51$top.vis.hue.histogram.ratio.bin.3.51_76$top.vis.hue.histogram.ratio.bin.4.76_102$top.vis.hue.histogram.ratio.bin.5.102_127$top.vis.hue.histogram.ratio.bin.6.127_153$top.vis.hue.histogram.ratio.bin.7.153_178$top.vis.hue.histogram.ratio.bin.8.178_204$top.vis.hue.histogram.ratio.bin.9.204_229$top.vis.hue.histogram.ratio.bin.10.229_255")
+ 		
+ 		
+ 		
+ 		
+ 		descriptorSetName_boxplotStacked <- c("NIR side (%)", "red side fluorescence histogram (%)", "NIR top (%)", "yellow side fluorescence histogram (%)", "fluo side ratio histogramm (%)",
+ 				"NIR side normalized (%)", "red side normalized fluo histogramm (%)", "yellow side normalized fluo histogramm (%)", "fluo side normalized ratio histogramm (%)",
+ 				"NIR side phenol (%)", "NIR side ratio histogramm (%)", "VIS HUE side ratio histogramm (%)", "VIS side normalized ratio histogramm (%)",
+ 				"red top fluorescence histogram (%)", "yellow top fluorescence histogram (%)","fluo top ratio histogramm (%)",
+ 				"NIR top (%)", "NIR top phenol histogram (%)","NIR top ratio histogramm (%)",
+ 				"VIS HUE top ratio histogramm (%)")
+ 		
+ 		stackedBarOptions = list(typOfGeomBar=c("fill", "stack", "dodge"))
+ 		#diagramTypVector <- c(diagramTypVector, "boxplotStacked", "boxplotStacked")
+ 		} else {
+ 
+ 			descriptorSet_nBoxplot <- c("side.area.norm (mm^2)", "Weight A (g)","side.height.norm (mm)")
+ 			descriptorSetName_nBoxplot <- c("Area", "Gewicht", "Heigh")
+ 	
+ 			descriptorSet_boxplot <- c("side.area.norm (mm^2)", "side.height.norm (mm)")
+ 			descriptorSetName_boxplot <- c("Area Boxplot", "Heigh Boxplot")
+ 			
+ 	#		descriptorSet_boxplotStacked <- c("side.nir.normalized.histogram.bin.1.0_25$side.nir.normalized.histogram.bin.2.25_51$side.nir.normalized.histogram.bin.3.51_76$side.nir.normalized.histogram.bin.4.76_102$side.nir.normalized.histogram.bin.5.102_127$side.nir.normalized.histogram.bin.6.127_153$side.nir.normalized.histogram.bin.7.153_178$side.nir.normalized.histogram.bin.8.178_204$side.nir.normalized.histogram.bin.9.204_229$side.nir.normalized.histogram.bin.10.229_255",
+ 	#										  "side.fluo.normalized.histogram.bin.1.0_25$side.fluo.normalized.histogram.bin.2.25_51$side.fluo.normalized.histogram.bin.3.51_76$side.fluo.normalized.histogram.bin.4.76_102$side.fluo.normalized.histogram.bin.5.102_127$side.fluo.normalized.histogram.bin.6.127_153$side.fluo.normalized.histogram.bin.7.153_178$side.fluo.normalized.histogram.bin.8.178_204$side.fluo.normalized.histogram.bin.9.204_229$side.fluo.normalized.histogram.bin.10.229_255")
+ 			
+ 			descriptorSet_boxplotStacked <- c("side.fluo.normalized.histogram.bin.1.0_25$side.fluo.normalized.histogram.bin.2.25_51$side.fluo.normalized.histogram.bin.3.51_76$side.fluo.normalized.histogram.bin.4.76_102$side.fluo.normalized.histogram.bin.5.102_127$side.fluo.normalized.histogram.bin.6.127_153$side.fluo.normalized.histogram.bin.7.153_178$side.fluo.normalized.histogram.bin.8.178_204$side.fluo.normalized.histogram.bin.9.204_229$side.fluo.normalized.histogram.bin.10.229_255",
+ 									  "side.nir.normalized.histogram.bin.1.0_25$side.nir.normalized.histogram.bin.2.25_51$side.nir.normalized.histogram.bin.3.51_76$side.nir.normalized.histogram.bin.4.76_102$side.nir.normalized.histogram.bin.5.102_127$side.nir.normalized.histogram.bin.6.127_153$side.nir.normalized.histogram.bin.7.153_178$side.nir.normalized.histogram.bin.8.178_204$side.nir.normalized.histogram.bin.9.204_229$side.nir.normalized.histogram.bin.10.229_255",
+ 									  "top.nir.histogram.bin.1.0_25$top.nir.histogram.bin.2.25_51$top.nir.histogram.bin.3.51_76$top.nir.histogram.bin.4.76_102$top.nir.histogram.bin.5.102_127$top.nir.histogram.bin.6.127_153$top.nir.histogram.bin.7.153_178$top.nir.histogram.bin.8.178_204$top.nir.histogram.bin.9.204_229$top.nir.histogram.bin.10.229_255")
+ 			
+ 			descriptorSetName_boxplotStacked <- c("red fluorescence histogram (%)", "NIR absorption class (%)", "NIR Top")
+ 		
+ 			
+ 			nBoxOptions= NULL
+ 			boxOptions= NULL
+ 			stackedBarOptions = list(typOfGeomBar=c("fill", "stack", "dodge"))
+ 		}	
+ 	
+ 		
+ 		#descriptorSet <- c("Plant ID$Treatment$Hallo$Wert1$Repl ID")
+ 		#diagramTypVector <- diagramTyp
+ 		#diagramTypVector <- rep.int(diagramTyp, times=length(descriptorSetName))
+ 		
+ 		
+ 
+ 		nBoxDes = descriptorSet_nBoxplot
+ 		boxDes = descriptorSet_boxplot
+ 		boxStackDes = descriptorSet_boxplotStacked
+ 		SaveName_nBoxDes = nBoxDes
+ 		SaveName_boxDes = boxDes
+ 		SaveName_boxStackDes = boxStackDes
+ 		nBoxDesName = descriptorSetName_nBoxplot
+ 		boxDesName = descriptorSetName_boxplot
+ 		boxStackDesName = descriptorSetName_boxplotStacked
+ 
+ 		saveName <- "test2"
+ 		yAxisName <- "test2"
+ 		debug <- TRUE
+ 		iniDataSet = workingDataSet
+ 		#descriptor <- c("Plant ID$Treatment$Hallo$Wert1$Repl ID")
+ 		#descriptor <- c("side.area.norm (mm^2)")
+ 		#descriptorSet <- c("side.fluo.bloom.area.size (mm^2)")
+ 		#descriptor <- c("side.fluo.bloom.area.size (mm^2)")
+ 		descriptor <- descriptorSet
+ 		#descriptor <- c("Repl ID")
+ 		#descriptor <- c("side.nir.normalized.histogram.bin.1.0_25$side.nir.normalized.histogram.bin.2.25_51$side.nir.normalized.histogram.bin.3.51_76$side.nir.normalized.histogram.bin.4.76_102$side.nir.normalized.histogram.bin.5.102_127$side.nir.normalized.histogram.bin.6.127_153$side.nir.normalized.histogram.bin.7.153_178$side.nir.normalized.histogram.bin.8.178_204$side.nir.normalized.histogram.bin.9.204_229$side.nir.normalized.histogram.bin.10.229_255")
+ 		appendix <- FALSE
+ 		stoppTheCalculation <- FALSE
+ 		
+ }
[1] "... Read input file"
Read 2 items
[1] "... english Version"
> overallList <- list(iniDataSet=iniDataSet, saveFormat=saveFormat, dpi=dpi, isGray=isGray, 
+ 						nBoxDes = nBoxDes, boxDes = boxDes, boxStackDes = boxStackDes,
+ 						saveName_nBoxDes = nBoxDes, saveName_boxDes = boxDes, saveName_boxStackDes = boxStackDes,
+ 						nBoxDesName = nBoxDesName, boxDesName = boxDesName, boxStackDesName = boxStackDesName,
+ 						nBoxOptions= nBoxOptions, boxOptions= boxOptions, stackedBarOptions = stackedBarOptions, 
+ 						treatment=treatment, filterTreatment=filterTreatment,
+ 						secondTreatment=secondTreatment, filterSecondTreatment=filterSecondTreatment, filterXaxis=filterXaxis, xAxis=xAxis,
+ 						showResultInR=showResultInR, xAxisName=xAxisName, debug=debug, 
+ 						appendix=appendix, stoppTheCalculation=stoppTheCalculation,
+ 						overallResult_nBoxDes=data.frame(), overallResult_boxDes=data.frame(), overallResult_boxStackDes=data.frame(),
+ 						color_nBox = list(), color_box=list(), color_boxStack=list())	
> 				
> 	#install.packages(c("Cairo"), repos="http://cran.r-project.org", dependencies = TRUE)
> 	library("Cairo")
> 	#install.packages(c("RColorBrewer"), repos="http://cran.r-project.org", dependencies = TRUE)
> 	library("RColorBrewer")
> 	#install.packages(c("data.table"), repos="http://cran.r-project.org", dependencies = TRUE)
> 	library(data.table)
> 	#install.packages(c("ggplot2"), repos="http://cran.r-project.org", dependencies = TRUE)
> 	library(ggplot2)
> 	#install.packages(c("Hmisc"), repos="http://cran.r-project.org", dependencies = TRUE)
> 	#library("Hmisc")
> 	
> 	overallList$debug %debug% "Start"
[1] "DebugBreakPoint:  Start"
> 	
> 	overallList <- overallChangeName(overallList)
[1] "DebugBreakPoint:  overallChangeSaveName()"
[1] "... nBoxplot"
[1] "... Boxplot"
[1] "... stackedBoxplot"
> 	overallList <- overallPreprocessingOfDescriptor(overallList)
[1] "DebugBreakPoint:  overallPreprocessingOfDescriptor()"
[1] "... nBoxplot"
[1] "No plotting, because the descriptor(s) (top.area.norm..mm.2.) don't exists!"
[1] "No plotting, because the descriptor(s) (side.nir.wetness.av) don't exists!"
[1] "No plotting, because the descriptor(s) (top.nir.wetness.av) don't exists!"
[1] "... Boxplot"
[1] "No plotting, because the descriptor(s) (top.area.norm..mm.2.) don't exists!"
[1] "... stackedBoxplot"
[1] "No plotting, because the descriptor(s) (side.nir.histogram.ratio.nir.2.25_51) don't exists!"
[1] "No plotting, because the descriptor(s) (side.vis.hue.histogram.ratio.nir.2.25_51) don't exists!"
[1] "No plotting, because the descriptor(s) (top.vis.hue.histogram.ratio.nir.2.25_51) don't exists!"
> 	
> 	
> ###############################	
> #	overallList <- preprocessingOfxAxisValue(overallList)
> #	overallList <- preprocessingOfTreatment(overallList)
> #	overallList <- preprocessingOfSecondTreatment(overallList)
> #	overallList <- overallCheckIfDescriptorIsNaOrAllZero(overallList)
> #	overallList <- reduceWorkingDataSize(overallList)
> #	overallList <- setDefaultAxisNames(overallList)	
> #	overallList <- overallGetResultDataFrame(overallList)
> #	overallList <- setColor(overallList) 
> #	makeDiagrams(overallList)
> ###############################
> 
> 
> 	
> 	if(!overallList$stoppTheCalculation) {
+ 		overallList <- preprocessingOfxAxisValue(overallList)
+ 		overallList <- preprocessingOfTreatment(overallList)
+ 		overallList <- preprocessingOfSecondTreatment(overallList)
+ 		overallList <- overallCheckIfDescriptorIsNaOrAllZero(overallList)
+ 		if(!overallList$stoppTheCalculation) {
+ 			overallList <- reduceWorkingDataSize(overallList)
+ 			overallList <- setDefaultAxisNames(overallList)	
+ 			overallList <- overallGetResultDataFrame(overallList)
+ 			if(!overallList$stoppTheCalculation) {
+ 				overallList$color <- setColor(overallList) 
+ 				makeDiagrams(overallList)
+ 			}
+ 		}
+ 	}
[1] "DebugBreakPoint:  preprocessingOfxAxisValue()"
[1] "DebugBreakPoint:  preprocessingOfTheTreatment()"
[1] "DebugBreakPoint:  preprocessingOfTheSecondTreatment()"
[1] "... set 'filterSecondTreatment' and 'secondTreatment' to 'none'!"
[1] "DebugBreakPoint:  overallCheckIfDescriptorIsNaOrAllZero()"
[1] "... nBoxplot"
[1] "Dummy plotting for this descriptor(s) ((side.bloom.count..tassel.), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((side.nir.wetness.plant_weight_drought_loss), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((top.nir.wetness.plant_weight_drought_loss), because all zero or not numeric!"
[1] "... Boxplot"
[1] "... stackedBoxplot"
[1] "Dummy plotting for this descriptor(s) ((side.nir.normalized.histogram.bin.1.0_25), because all zero or not numeric!"    
[2] "Dummy plotting for this descriptor(s) ((side.nir.normalized.histogram.bin.2.25_51), because all zero or not numeric!"   
[3] "Dummy plotting for this descriptor(s) ((side.nir.normalized.histogram.bin.8.178_204), because all zero or not numeric!" 
[4] "Dummy plotting for this descriptor(s) ((side.nir.normalized.histogram.bin.9.204_229), because all zero or not numeric!" 
[5] "Dummy plotting for this descriptor(s) ((side.nir.normalized.histogram.bin.10.229_255), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((side.fluo.histogram.bin.9.204_229), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((top.nir.histogram.bin.1.0_25), because all zero or not numeric!"    
[2] "Dummy plotting for this descriptor(s) ((top.nir.histogram.bin.10.229_255), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((side.fluo.histogram.phenol.bin.8.178_204), because all zero or not numeric!"
[2] "Dummy plotting for this descriptor(s) ((side.fluo.histogram.phenol.bin.9.204_229), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((side.fluo.histogram.ratio.bin.2.25_51), because all zero or not numeric!"  
[2] "Dummy plotting for this descriptor(s) ((side.fluo.histogram.ratio.bin.3.51_76), because all zero or not numeric!"  
[3] "Dummy plotting for this descriptor(s) ((side.fluo.histogram.ratio.bin.9.204_229), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((side.nir.normalized.histogram.bin.1.0_25), because all zero or not numeric!"    
[2] "Dummy plotting for this descriptor(s) ((side.nir.normalized.histogram.bin.2.25_51), because all zero or not numeric!"   
[3] "Dummy plotting for this descriptor(s) ((side.nir.normalized.histogram.bin.8.178_204), because all zero or not numeric!" 
[4] "Dummy plotting for this descriptor(s) ((side.nir.normalized.histogram.bin.9.204_229), because all zero or not numeric!" 
[5] "Dummy plotting for this descriptor(s) ((side.nir.normalized.histogram.bin.10.229_255), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((side.fluo.normalized.histogram.bin.9.204_229), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((side.fluo.normalized.histogram.phenol.bin.8.178_204), because all zero or not numeric!"
[2] "Dummy plotting for this descriptor(s) ((side.fluo.normalized.histogram.phenol.bin.9.204_229), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((side.fluo.normalized.histogram.ratio.bin.2.25_51), because all zero or not numeric!"  
[2] "Dummy plotting for this descriptor(s) ((side.fluo.normalized.histogram.ratio.bin.3.51_76), because all zero or not numeric!"  
[3] "Dummy plotting for this descriptor(s) ((side.fluo.normalized.histogram.ratio.bin.9.204_229), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((side.nir.histogram.phenol.bin.1.0_25), because all zero or not numeric!"    
[2] "Dummy plotting for this descriptor(s) ((side.nir.histogram.phenol.bin.2.25_51), because all zero or not numeric!"   
[3] "Dummy plotting for this descriptor(s) ((side.nir.histogram.phenol.bin.8.178_204), because all zero or not numeric!" 
[4] "Dummy plotting for this descriptor(s) ((side.nir.histogram.phenol.bin.9.204_229), because all zero or not numeric!" 
[5] "Dummy plotting for this descriptor(s) ((side.nir.histogram.phenol.bin.10.229_255), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((side.nir.histogram.ratio.bin.1.0_25), because all zero or not numeric!"    
[2] "Dummy plotting for this descriptor(s) ((side.nir.histogram.ratio.bin.3.51_76), because all zero or not numeric!"   
[3] "Dummy plotting for this descriptor(s) ((side.nir.histogram.ratio.bin.4.76_102), because all zero or not numeric!"  
[4] "Dummy plotting for this descriptor(s) ((side.nir.histogram.ratio.bin.6.127_153), because all zero or not numeric!" 
[5] "Dummy plotting for this descriptor(s) ((side.nir.histogram.ratio.bin.7.153_178), because all zero or not numeric!" 
[6] "Dummy plotting for this descriptor(s) ((side.nir.histogram.ratio.bin.8.178_204), because all zero or not numeric!" 
[7] "Dummy plotting for this descriptor(s) ((side.nir.histogram.ratio.bin.9.204_229), because all zero or not numeric!" 
[8] "Dummy plotting for this descriptor(s) ((side.nir.histogram.ratio.bin.10.229_255), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((side.vis.hue.histogram.ratio.bin.1.0_25), because all zero or not numeric!"    
[2] "Dummy plotting for this descriptor(s) ((side.vis.hue.histogram.ratio.bin.3.51_76), because all zero or not numeric!"   
[3] "Dummy plotting for this descriptor(s) ((side.vis.hue.histogram.ratio.bin.4.76_102), because all zero or not numeric!"  
[4] "Dummy plotting for this descriptor(s) ((side.vis.hue.histogram.ratio.bin.5.102_127), because all zero or not numeric!" 
[5] "Dummy plotting for this descriptor(s) ((side.vis.hue.histogram.ratio.bin.6.127_153), because all zero or not numeric!" 
[6] "Dummy plotting for this descriptor(s) ((side.vis.hue.histogram.ratio.bin.7.153_178), because all zero or not numeric!" 
[7] "Dummy plotting for this descriptor(s) ((side.vis.hue.histogram.ratio.bin.8.178_204), because all zero or not numeric!" 
[8] "Dummy plotting for this descriptor(s) ((side.vis.hue.histogram.ratio.bin.9.204_229), because all zero or not numeric!" 
[9] "Dummy plotting for this descriptor(s) ((side.vis.hue.histogram.ratio.bin.10.229_255), because all zero or not numeric!"
 [1] "Dummy plotting for this descriptor(s) ((side.vis.normalized.histogram.ratio.bin.1.0_25), because all zero or not numeric!"    
 [2] "Dummy plotting for this descriptor(s) ((side.vis.normalized.histogram.ratio.bin.2.25_51), because all zero or not numeric!"   
 [3] "Dummy plotting for this descriptor(s) ((side.vis.normalized.histogram.ratio.bin.3.51_76), because all zero or not numeric!"   
 [4] "Dummy plotting for this descriptor(s) ((side.vis.normalized.histogram.ratio.bin.4.76_102), because all zero or not numeric!"  
 [5] "Dummy plotting for this descriptor(s) ((side.vis.normalized.histogram.ratio.bin.5.102_127), because all zero or not numeric!" 
 [6] "Dummy plotting for this descriptor(s) ((side.vis.normalized.histogram.ratio.bin.6.127_153), because all zero or not numeric!" 
 [7] "Dummy plotting for this descriptor(s) ((side.vis.normalized.histogram.ratio.bin.7.153_178), because all zero or not numeric!" 
 [8] "Dummy plotting for this descriptor(s) ((side.vis.normalized.histogram.ratio.bin.8.178_204), because all zero or not numeric!" 
 [9] "Dummy plotting for this descriptor(s) ((side.vis.normalized.histogram.ratio.bin.9.204_229), because all zero or not numeric!" 
[10] "Dummy plotting for this descriptor(s) ((side.vis.normalized.histogram.ratio.bin.10.229_255), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((top.fluo.histogram.bin.9.204_229), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((top.fluo.histogram.phenol.bin.8.178_204), because all zero or not numeric!"
[2] "Dummy plotting for this descriptor(s) ((top.fluo.histogram.phenol.bin.9.204_229), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((top.fluo.histogram.ratio.bin.2.25_51), because all zero or not numeric!"  
[2] "Dummy plotting for this descriptor(s) ((top.fluo.histogram.ratio.bin.3.51_76), because all zero or not numeric!"  
[3] "Dummy plotting for this descriptor(s) ((top.fluo.histogram.ratio.bin.9.204_229), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((top.nir.histogram.bin.1.0_25), because all zero or not numeric!"    
[2] "Dummy plotting for this descriptor(s) ((top.nir.histogram.bin.10.229_255), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((top.nir.histogram.phenol.bin.1.0_25), because all zero or not numeric!"    
[2] "Dummy plotting for this descriptor(s) ((top.nir.histogram.phenol.bin.10.229_255), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((top.nir.histogram.ratio.bin.1.0_25), because all zero or not numeric!"    
[2] "Dummy plotting for this descriptor(s) ((top.nir.histogram.ratio.bin.2.25_51), because all zero or not numeric!"   
[3] "Dummy plotting for this descriptor(s) ((top.nir.histogram.ratio.bin.3.51_76), because all zero or not numeric!"   
[4] "Dummy plotting for this descriptor(s) ((top.nir.histogram.ratio.bin.4.76_102), because all zero or not numeric!"  
[5] "Dummy plotting for this descriptor(s) ((top.nir.histogram.ratio.bin.6.127_153), because all zero or not numeric!" 
[6] "Dummy plotting for this descriptor(s) ((top.nir.histogram.ratio.bin.7.153_178), because all zero or not numeric!" 
[7] "Dummy plotting for this descriptor(s) ((top.nir.histogram.ratio.bin.8.178_204), because all zero or not numeric!" 
[8] "Dummy plotting for this descriptor(s) ((top.nir.histogram.ratio.bin.9.204_229), because all zero or not numeric!" 
[9] "Dummy plotting for this descriptor(s) ((top.nir.histogram.ratio.bin.10.229_255), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((top.vis.hue.histogram.ratio.bin.1.0_25), because all zero or not numeric!"    
[2] "Dummy plotting for this descriptor(s) ((top.vis.hue.histogram.ratio.bin.3.51_76), because all zero or not numeric!"   
[3] "Dummy plotting for this descriptor(s) ((top.vis.hue.histogram.ratio.bin.4.76_102), because all zero or not numeric!"  
[4] "Dummy plotting for this descriptor(s) ((top.vis.hue.histogram.ratio.bin.5.102_127), because all zero or not numeric!" 
[5] "Dummy plotting for this descriptor(s) ((top.vis.hue.histogram.ratio.bin.6.127_153), because all zero or not numeric!" 
[6] "Dummy plotting for this descriptor(s) ((top.vis.hue.histogram.ratio.bin.7.153_178), because all zero or not numeric!" 
[7] "Dummy plotting for this descriptor(s) ((top.vis.hue.histogram.ratio.bin.8.178_204), because all zero or not numeric!" 
[8] "Dummy plotting for this descriptor(s) ((top.vis.hue.histogram.ratio.bin.9.204_229), because all zero or not numeric!" 
[9] "Dummy plotting for this descriptor(s) ((top.vis.hue.histogram.ratio.bin.10.229_255), because all zero or not numeric!"
[1] "DebugBreakPoint:  reduceWorkingDataSize()"
[1] "DebugBreakPoint:  setDefaultAxisNames()"
[1] "DebugBreakPoint:  overallGetResultDataFrame()"
[1] "DebugBreakPoint:  buildList()"
[1] "... nBoxplot"
[1] "DebugBreakPoint:  getResultDataFrame()"
[1] "... Boxplot"
[1] "DebugBreakPoint:  getResultDataFrame()"
[1] "... stackedBoxplot"
[1] "DebugBreakPoint:  getResultDataFrame()"
[1] "DebugBreakPoint:  setColor()"
[1] "... all values are 'NA'"
[1] "... all values are 'NA'"
[1] "... all values are 'NA'"
[1] "... all values are 'NA'"
[1] "... all values are 'NA'"
[1] "... all values are 'NA'"
[1] "... all values are 'NA'"
[1] "... all values are 'NA'"
[1] "... all values are 'NA'"
[1] "... all values are 'NA'"
[1] "DebugBreakPoint:  makeDiagrams()"
[1] "... nBoxplot"
[1] "DebugBreakPoint:  makeLinearDiagram()"
[1] "... images 1"
[1] "DebugBreakPoint:  reduceWholeOverallResultToOneValue()"
Saving 5.45" x 3.92" image
Fehler in names(output_df) <- output : 
  Attribut 'names' [1] muss dieselbe Länge haben wie der Vektor [0]
Zusätzlich: Es gab 35 Warnungen (Anzeige mit warnings())
> overallList <- list(iniDataSet=iniDataSet, saveFormat=saveFormat, dpi=dpi, isGray=isGray, 
+ 						nBoxDes = nBoxDes, boxDes = boxDes, boxStackDes = boxStackDes,
+ 						saveName_nBoxDes = nBoxDes, saveName_boxDes = boxDes, saveName_boxStackDes = boxStackDes,
+ 						nBoxDesName = nBoxDesName, boxDesName = boxDesName, boxStackDesName = boxStackDesName,
+ 						nBoxOptions= nBoxOptions, boxOptions= boxOptions, stackedBarOptions = stackedBarOptions, 
+ 						treatment=treatment, filterTreatment=filterTreatment,
+ 						secondTreatment=secondTreatment, filterSecondTreatment=filterSecondTreatment, filterXaxis=filterXaxis, xAxis=xAxis,
+ 						showResultInR=showResultInR, xAxisName=xAxisName, debug=debug, 
+ 						appendix=appendix, stoppTheCalculation=stoppTheCalculation,
+ 						overallResult_nBoxDes=data.frame(), overallResult_boxDes=data.frame(), overallResult_boxStackDes=data.frame(),
+ 						color_nBox = list(), color_box=list(), color_boxStack=list())	
> 				
> 	#install.packages(c("Cairo"), repos="http://cran.r-project.org", dependencies = TRUE)
> 	library("Cairo")
> 	#install.packages(c("RColorBrewer"), repos="http://cran.r-project.org", dependencies = TRUE)
> 	library("RColorBrewer")
> 	#install.packages(c("data.table"), repos="http://cran.r-project.org", dependencies = TRUE)
> 	library(data.table)
> 	#install.packages(c("ggplot2"), repos="http://cran.r-project.org", dependencies = TRUE)
> 	library(ggplot2)
> 	#install.packages(c("Hmisc"), repos="http://cran.r-project.org", dependencies = TRUE)
> 	#library("Hmisc")
> 	
> 	overallList$debug %debug% "Start"
[1] "DebugBreakPoint:  Start"
> 	
> 	overallList <- overallChangeName(overallList)
[1] "DebugBreakPoint:  overallChangeSaveName()"
[1] "... nBoxplot"
[1] "... Boxplot"
[1] "... stackedBoxplot"
> 	overallList <- overallPreprocessingOfDescriptor(overallList)
[1] "DebugBreakPoint:  overallPreprocessingOfDescriptor()"
[1] "... nBoxplot"
[1] "No plotting, because the descriptor(s) (top.area.norm..mm.2.) don't exists!"
[1] "No plotting, because the descriptor(s) (side.nir.wetness.av) don't exists!"
[1] "No plotting, because the descriptor(s) (top.nir.wetness.av) don't exists!"
[1] "... Boxplot"
[1] "No plotting, because the descriptor(s) (top.area.norm..mm.2.) don't exists!"
[1] "... stackedBoxplot"
[1] "No plotting, because the descriptor(s) (side.nir.histogram.ratio.nir.2.25_51) don't exists!"
[1] "No plotting, because the descriptor(s) (side.vis.hue.histogram.ratio.nir.2.25_51) don't exists!"
[1] "No plotting, because the descriptor(s) (top.vis.hue.histogram.ratio.nir.2.25_51) don't exists!"
> 	
> 	
> ###############################	
> 	overallList <- preprocessingOfxAxisValue(overallList)
[1] "DebugBreakPoint:  preprocessingOfxAxisValue()"
> 	overallList <- preprocessingOfTreatment(overallList)
[1] "DebugBreakPoint:  preprocessingOfTheTreatment()"
> 	overallList <- preprocessingOfSecondTreatment(overallList)
[1] "DebugBreakPoint:  preprocessingOfTheSecondTreatment()"
[1] "... set 'filterSecondTreatment' and 'secondTreatment' to 'none'!"
> 	overallList <- overallCheckIfDescriptorIsNaOrAllZero(overallList)
[1] "DebugBreakPoint:  overallCheckIfDescriptorIsNaOrAllZero()"
[1] "... nBoxplot"
[1] "Dummy plotting for this descriptor(s) ((side.bloom.count..tassel.), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((side.nir.wetness.plant_weight_drought_loss), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((top.nir.wetness.plant_weight_drought_loss), because all zero or not numeric!"
[1] "... Boxplot"
[1] "... stackedBoxplot"
[1] "Dummy plotting for this descriptor(s) ((side.nir.normalized.histogram.bin.1.0_25), because all zero or not numeric!"    
[2] "Dummy plotting for this descriptor(s) ((side.nir.normalized.histogram.bin.2.25_51), because all zero or not numeric!"   
[3] "Dummy plotting for this descriptor(s) ((side.nir.normalized.histogram.bin.8.178_204), because all zero or not numeric!" 
[4] "Dummy plotting for this descriptor(s) ((side.nir.normalized.histogram.bin.9.204_229), because all zero or not numeric!" 
[5] "Dummy plotting for this descriptor(s) ((side.nir.normalized.histogram.bin.10.229_255), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((side.fluo.histogram.bin.9.204_229), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((top.nir.histogram.bin.1.0_25), because all zero or not numeric!"    
[2] "Dummy plotting for this descriptor(s) ((top.nir.histogram.bin.10.229_255), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((side.fluo.histogram.phenol.bin.8.178_204), because all zero or not numeric!"
[2] "Dummy plotting for this descriptor(s) ((side.fluo.histogram.phenol.bin.9.204_229), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((side.fluo.histogram.ratio.bin.2.25_51), because all zero or not numeric!"  
[2] "Dummy plotting for this descriptor(s) ((side.fluo.histogram.ratio.bin.3.51_76), because all zero or not numeric!"  
[3] "Dummy plotting for this descriptor(s) ((side.fluo.histogram.ratio.bin.9.204_229), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((side.nir.normalized.histogram.bin.1.0_25), because all zero or not numeric!"    
[2] "Dummy plotting for this descriptor(s) ((side.nir.normalized.histogram.bin.2.25_51), because all zero or not numeric!"   
[3] "Dummy plotting for this descriptor(s) ((side.nir.normalized.histogram.bin.8.178_204), because all zero or not numeric!" 
[4] "Dummy plotting for this descriptor(s) ((side.nir.normalized.histogram.bin.9.204_229), because all zero or not numeric!" 
[5] "Dummy plotting for this descriptor(s) ((side.nir.normalized.histogram.bin.10.229_255), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((side.fluo.normalized.histogram.bin.9.204_229), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((side.fluo.normalized.histogram.phenol.bin.8.178_204), because all zero or not numeric!"
[2] "Dummy plotting for this descriptor(s) ((side.fluo.normalized.histogram.phenol.bin.9.204_229), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((side.fluo.normalized.histogram.ratio.bin.2.25_51), because all zero or not numeric!"  
[2] "Dummy plotting for this descriptor(s) ((side.fluo.normalized.histogram.ratio.bin.3.51_76), because all zero or not numeric!"  
[3] "Dummy plotting for this descriptor(s) ((side.fluo.normalized.histogram.ratio.bin.9.204_229), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((side.nir.histogram.phenol.bin.1.0_25), because all zero or not numeric!"    
[2] "Dummy plotting for this descriptor(s) ((side.nir.histogram.phenol.bin.2.25_51), because all zero or not numeric!"   
[3] "Dummy plotting for this descriptor(s) ((side.nir.histogram.phenol.bin.8.178_204), because all zero or not numeric!" 
[4] "Dummy plotting for this descriptor(s) ((side.nir.histogram.phenol.bin.9.204_229), because all zero or not numeric!" 
[5] "Dummy plotting for this descriptor(s) ((side.nir.histogram.phenol.bin.10.229_255), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((side.nir.histogram.ratio.bin.1.0_25), because all zero or not numeric!"    
[2] "Dummy plotting for this descriptor(s) ((side.nir.histogram.ratio.bin.3.51_76), because all zero or not numeric!"   
[3] "Dummy plotting for this descriptor(s) ((side.nir.histogram.ratio.bin.4.76_102), because all zero or not numeric!"  
[4] "Dummy plotting for this descriptor(s) ((side.nir.histogram.ratio.bin.6.127_153), because all zero or not numeric!" 
[5] "Dummy plotting for this descriptor(s) ((side.nir.histogram.ratio.bin.7.153_178), because all zero or not numeric!" 
[6] "Dummy plotting for this descriptor(s) ((side.nir.histogram.ratio.bin.8.178_204), because all zero or not numeric!" 
[7] "Dummy plotting for this descriptor(s) ((side.nir.histogram.ratio.bin.9.204_229), because all zero or not numeric!" 
[8] "Dummy plotting for this descriptor(s) ((side.nir.histogram.ratio.bin.10.229_255), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((side.vis.hue.histogram.ratio.bin.1.0_25), because all zero or not numeric!"    
[2] "Dummy plotting for this descriptor(s) ((side.vis.hue.histogram.ratio.bin.3.51_76), because all zero or not numeric!"   
[3] "Dummy plotting for this descriptor(s) ((side.vis.hue.histogram.ratio.bin.4.76_102), because all zero or not numeric!"  
[4] "Dummy plotting for this descriptor(s) ((side.vis.hue.histogram.ratio.bin.5.102_127), because all zero or not numeric!" 
[5] "Dummy plotting for this descriptor(s) ((side.vis.hue.histogram.ratio.bin.6.127_153), because all zero or not numeric!" 
[6] "Dummy plotting for this descriptor(s) ((side.vis.hue.histogram.ratio.bin.7.153_178), because all zero or not numeric!" 
[7] "Dummy plotting for this descriptor(s) ((side.vis.hue.histogram.ratio.bin.8.178_204), because all zero or not numeric!" 
[8] "Dummy plotting for this descriptor(s) ((side.vis.hue.histogram.ratio.bin.9.204_229), because all zero or not numeric!" 
[9] "Dummy plotting for this descriptor(s) ((side.vis.hue.histogram.ratio.bin.10.229_255), because all zero or not numeric!"
 [1] "Dummy plotting for this descriptor(s) ((side.vis.normalized.histogram.ratio.bin.1.0_25), because all zero or not numeric!"    
 [2] "Dummy plotting for this descriptor(s) ((side.vis.normalized.histogram.ratio.bin.2.25_51), because all zero or not numeric!"   
 [3] "Dummy plotting for this descriptor(s) ((side.vis.normalized.histogram.ratio.bin.3.51_76), because all zero or not numeric!"   
 [4] "Dummy plotting for this descriptor(s) ((side.vis.normalized.histogram.ratio.bin.4.76_102), because all zero or not numeric!"  
 [5] "Dummy plotting for this descriptor(s) ((side.vis.normalized.histogram.ratio.bin.5.102_127), because all zero or not numeric!" 
 [6] "Dummy plotting for this descriptor(s) ((side.vis.normalized.histogram.ratio.bin.6.127_153), because all zero or not numeric!" 
 [7] "Dummy plotting for this descriptor(s) ((side.vis.normalized.histogram.ratio.bin.7.153_178), because all zero or not numeric!" 
 [8] "Dummy plotting for this descriptor(s) ((side.vis.normalized.histogram.ratio.bin.8.178_204), because all zero or not numeric!" 
 [9] "Dummy plotting for this descriptor(s) ((side.vis.normalized.histogram.ratio.bin.9.204_229), because all zero or not numeric!" 
[10] "Dummy plotting for this descriptor(s) ((side.vis.normalized.histogram.ratio.bin.10.229_255), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((top.fluo.histogram.bin.9.204_229), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((top.fluo.histogram.phenol.bin.8.178_204), because all zero or not numeric!"
[2] "Dummy plotting for this descriptor(s) ((top.fluo.histogram.phenol.bin.9.204_229), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((top.fluo.histogram.ratio.bin.2.25_51), because all zero or not numeric!"  
[2] "Dummy plotting for this descriptor(s) ((top.fluo.histogram.ratio.bin.3.51_76), because all zero or not numeric!"  
[3] "Dummy plotting for this descriptor(s) ((top.fluo.histogram.ratio.bin.9.204_229), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((top.nir.histogram.bin.1.0_25), because all zero or not numeric!"    
[2] "Dummy plotting for this descriptor(s) ((top.nir.histogram.bin.10.229_255), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((top.nir.histogram.phenol.bin.1.0_25), because all zero or not numeric!"    
[2] "Dummy plotting for this descriptor(s) ((top.nir.histogram.phenol.bin.10.229_255), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((top.nir.histogram.ratio.bin.1.0_25), because all zero or not numeric!"    
[2] "Dummy plotting for this descriptor(s) ((top.nir.histogram.ratio.bin.2.25_51), because all zero or not numeric!"   
[3] "Dummy plotting for this descriptor(s) ((top.nir.histogram.ratio.bin.3.51_76), because all zero or not numeric!"   
[4] "Dummy plotting for this descriptor(s) ((top.nir.histogram.ratio.bin.4.76_102), because all zero or not numeric!"  
[5] "Dummy plotting for this descriptor(s) ((top.nir.histogram.ratio.bin.6.127_153), because all zero or not numeric!" 
[6] "Dummy plotting for this descriptor(s) ((top.nir.histogram.ratio.bin.7.153_178), because all zero or not numeric!" 
[7] "Dummy plotting for this descriptor(s) ((top.nir.histogram.ratio.bin.8.178_204), because all zero or not numeric!" 
[8] "Dummy plotting for this descriptor(s) ((top.nir.histogram.ratio.bin.9.204_229), because all zero or not numeric!" 
[9] "Dummy plotting for this descriptor(s) ((top.nir.histogram.ratio.bin.10.229_255), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((top.vis.hue.histogram.ratio.bin.1.0_25), because all zero or not numeric!"    
[2] "Dummy plotting for this descriptor(s) ((top.vis.hue.histogram.ratio.bin.3.51_76), because all zero or not numeric!"   
[3] "Dummy plotting for this descriptor(s) ((top.vis.hue.histogram.ratio.bin.4.76_102), because all zero or not numeric!"  
[4] "Dummy plotting for this descriptor(s) ((top.vis.hue.histogram.ratio.bin.5.102_127), because all zero or not numeric!" 
[5] "Dummy plotting for this descriptor(s) ((top.vis.hue.histogram.ratio.bin.6.127_153), because all zero or not numeric!" 
[6] "Dummy plotting for this descriptor(s) ((top.vis.hue.histogram.ratio.bin.7.153_178), because all zero or not numeric!" 
[7] "Dummy plotting for this descriptor(s) ((top.vis.hue.histogram.ratio.bin.8.178_204), because all zero or not numeric!" 
[8] "Dummy plotting for this descriptor(s) ((top.vis.hue.histogram.ratio.bin.9.204_229), because all zero or not numeric!" 
[9] "Dummy plotting for this descriptor(s) ((top.vis.hue.histogram.ratio.bin.10.229_255), because all zero or not numeric!"
Es gab 20 Warnungen (Anzeige mit warnings())
> 	overallList <- reduceWorkingDataSize(overallList)
[1] "DebugBreakPoint:  reduceWorkingDataSize()"
> 	overallList <- setDefaultAxisNames(overallList)	
[1] "DebugBreakPoint:  setDefaultAxisNames()"
> 	overallList <- overallGetResultDataFrame(overallList)
[1] "DebugBreakPoint:  overallGetResultDataFrame()"
[1] "DebugBreakPoint:  buildList()"
[1] "... nBoxplot"
[1] "DebugBreakPoint:  getResultDataFrame()"
[1] "... Boxplot"
[1] "DebugBreakPoint:  getResultDataFrame()"
[1] "... stackedBoxplot"
[1] "DebugBreakPoint:  getResultDataFrame()"
> 	overallList <- setColor(overallList) 
[1] "DebugBreakPoint:  setColor()"
[1] "... all values are 'NA'"
[1] "... all values are 'NA'"
[1] "... all values are 'NA'"
[1] "... all values are 'NA'"
[1] "... all values are 'NA'"
[1] "... all values are 'NA'"
[1] "... all values are 'NA'"
[1] "... all values are 'NA'"
[1] "... all values are 'NA'"
[1] "... all values are 'NA'"
Es gab 15 Warnungen (Anzeige mit warnings())
> rm(list=ls(all=TRUE))
> # TODO: Add comment
> # 
> # Author: Entzian
> ###############################################################################
> 
> "%debug%" <- function(debug, debugNumber) {
+ 	if (debug) {
+ 		print(paste("DebugBreakPoint: ", debugNumber))
+ 	}
+ }
> 
> "%checkEqual%" <- function(treat, seconTreat) {
+ 	if(treat == seconTreat) {
+ 		print("SecondTreatment are the same value as Treatment so it set to \"none\"")
+ 		return("none")
+ 	} else {
+ 		return(seconTreat)
+ 	}
+ }
> 
> "%errorReport%" <- function(errorDescriptor, typOfError="notExists") {
+ 	#overallList$debug %debug% "%errorReport%"
+ 	if (length(errorDescriptor) > 0) {
+ 		if (tolower(typOfError) == "notexists"){
+ 			print(paste("No plotting, because the descriptor(s) (",errorDescriptor,") don't exists!", sep=""))
+ 			
+ 		} else if (tolower(typOfError) == "notnumericorallzero") {
+ 			#plotDummy(overallList)
+ 			print(paste("Dummy plotting for this descriptor(s) ((",errorDescriptor,"), because all zero or not numeric!", sep=""))
+ 		}
+ 	}
+ }
> 
> "%exists%" <- function(standardValue, argsValue){
+ 	
+ 	if(!is.na(argsValue) & argsValue != "")	{
+ 		return(argsValue)
+ 	} else {
+ 		return(standardValue)
+ 	}
+ }
> 
> "%getData%" <- function(separation, fileName){	
+ 	#separation <- ";"
+ 	print("... Read input file")
+ 	
+ 	if(file.exists(fileName)) {
+ 		preScanForPointOrComma <- scan(file=fileName, what=character(0), nlines=2, sep="\n")
+ 		preScanForPointOrComma <- paste(preScanForPointOrComma[2],",.", sep="")
+ 		allCharacterSeparated <- table(strsplit(toupper(preScanForPointOrComma), '')[[1]])
+ 		
+ 		if(allCharacterSeparated["."] > allCharacterSeparated[","]) {
+ 			print("... english Version")
+ 			return(read.csv(fileName, header=TRUE, sep=separation, fileEncoding="ISO-8859-1", encoding="UTF-8"))
+ 		} else {
+ 			print("... german Version")
+ 			return(read.csv2(fileName, header=TRUE, sep=separation, fileEncoding="ISO-8859-1", encoding="UTF-8"))
+ 		}
+ 	} else {
+ 		return("error")
+ 	}
+ 	
+ #	if (englischVersion) {
+ #		return(read.csv(fileName, header=TRUE, sep=separation, fileEncoding="ISO-8859-1", encoding="UTF-8"))
+ #	} else {
+ #		return(read.csv2(fileName, header=TRUE, sep=separation, fileEncoding="ISO-8859-1", encoding="UTF-8"))
+ #	}
+ }
> 
> "%checkIfDescriptorExists%" <- function(descriptor, dataSet) {
+ 	if (is.data.frame(dataSet)) {
+ 		return(descriptor %in% colnames(dataSet))
+ 	} else {
+ 		return(descriptor %in% dataSet)
+ 	}	
+ }
> 
> "%GetDescriptorsAfterCheckIfDescriptorExists%" <- function(descriptor, dataSet) {
+ 	return(descriptor[descriptor %checkIfDescriptorExists% dataSet])
+ 	
+ }
> 
> "%GetDescriptorAfterCheckIfDescriptorNotExists%" <- function(descriptor, dataSet) {
+ 	return(descriptor[!descriptor %checkIfDescriptorExists% dataSet])
+ 	
+ }
> 
> "%contactAllWithAll%" <- function(vector1, vector2) {
+ 	vectorTemp <- character(0)
+ 	for(k in vector2) {
+ 		if(k=="none") {
+ 			vectorTemp <- c(vectorTemp,vector1)
+ 		} else {
+ 			vectorTemp <- c(vectorTemp,paste(vector1,k, sep = "#"))
+ 		}
+ 	}
+ 	return(vectorTemp)
+ }
> 
> "%allColnamesWithoutThisOnes%" <- function(dataSet, withoutColNamesVector) {
+ 	return(colnames(dataSet)[!colnames(dataSet) %in% withoutColNamesVector])
+ }
> 
> buildDataSet <- function(workingDataSet, overallResult, colname, index) {
+ 	
+ 	if(length(colname) > 0) {
+ 		for(n in 1:length(colname)) {
+ 			workingDataSet <- cbind(workingDataSet, overallResult[paste(colname[n],index, sep="")])
+ 		}	
+ 		return(workingDataSet)
+ 	}
+ }
> 
> 
> reNameHist <-  function(colNameWichMustBind) {
+ 	colNameWichMustBind <- as.character(colNameWichMustBind)
+ 	positions <- which(strsplit(colNameWichMustBind, '')[[1]]=='.')
+ 	colNameWichMustBind <- substr(colNameWichMustBind,positions[length(positions)]+1,nchar(colNameWichMustBind))
+ 	
+ 	regExpressionSpezialCharacter <- "\\_"
+ 	colNameWichMustBind <- gsub(regExpressionSpezialCharacter,"..",colNameWichMustBind)
+ 	
+ 	return(colNameWichMustBind)	
+ }
> 
> reNameColumn <-  function(plotThisValues, columnNameReplace="name", columnNameWhichUsedToReplace="primaerTreatment") {
+ 	if(!is.null(plotThisValues[columnNameWhichUsedToReplace])){
+ 		plotThisValues[columnNameReplace] <- plotThisValues[columnNameWhichUsedToReplace]
+ 	}
+ 	
+ 	return(plotThisValues)
+ }
> 
> swap <- function(listWithTwoParameter) {
+ 	temp <- listWithTwoParameter[[1]]
+ 	listWithTwoParameter[[1]] <- listWithTwoParameter[[2]]
+ 	listWithTwoParameter[[2]] <- temp
+ 	return(listWithTwoParameter)
+ }
> 
> changeWhenTreatmentNoneAndSecondTreatmentNotNone <- function(listOfTreat, listOfFilterTreat) {
+ 	if(listOfTreat[[1]] == "none" & listOfTreat[[2]] != "none") {
+ 		print("The values of Treatment and SecondTreamt are changed (filter values also)")
+ 		return(list(swap(listOfTreat),swap(listOfFilterTreat)))	
+ 	} else {
+ 		return(list(listOfTreat,listOfFilterTreat))
+ 	}
+ }
> 
> checkOfTreatments <- function(args, treatment, filterTreatment, secondTreatment, filterSecondTreatment, workingDataSet, debug) {
+ 	debug %debug% "Start of checkOfTreatments()"
+ 	
+ 	treatment <- treatment %exists% args[4]
+ 	secondTreatment <- secondTreatment %exists% args[5]
+ 	secondTreatment <- treatment %checkEqual% secondTreatment
+ 	
+ 	listOfTreat <- list(treatment=treatment, secondTreatment=secondTreatment)
+ 	listOfFilterTreat <- list(filterTreatment=filterTreatment, filterSecondTreatment=filterSecondTreatment)	## wird erstmal noch nichts weiter mit gemacht! nur geswapt falls notwendig
+ 
+ 	for(k in names(listOfTreat)){
+ 		if(listOfTreat[[k]] != "none") {
+ 			#overallTreat <- list(iniDataSet=workingDataSet, descriptor=listOfTreat[[k]], debug=debug, stoppTheCalculation = FALSE, errorDescriptor=character())
+ 			#overallTreat <- list(iniDataSet=workingDataSet, descriptor=listOfTreat[[k]], debug=debug, stoppTheCalculation = FALSE)
+ 			descriptorVector <- getVector(preprocessingOfDescriptor(listOfTreat[[k]], workingDataSet))
+ 			
+ 			if(!is.null(descriptorVector)) {
+ 				descriptorVector <- getVector(checkIfDescriptorIsNaOrAllZero(descriptorVector, workingDataSet, FALSE))
+ 				
+ 				if(!is.null(descriptorVector)) {
+ 					listOfTreat[[k]] <- descriptorVector
+ 				} 
+ 			} 
+ 			
+ 			if(is.null(descriptorVector)) {
+ 				print(paste(k, "set to \"none\""))
+ 				listOfTreat[[k]] <- "none"
+ 			}
+ 		}
+ 	}
+ 	
+ 	listOfTreatAndFilterTreat <- changeWhenTreatmentNoneAndSecondTreatmentNotNone(listOfTreat, listOfFilterTreat)
+ 	debug %debug% "End of checkOfTreatments()"
+ 	return(listOfTreatAndFilterTreat)
+ }
> 
> overallCheckIfDescriptorIsNaOrAllZero <- function(overallList) {
+ 	overallList$debug %debug% "overallCheckIfDescriptorIsNaOrAllZero()"	
+ 	
+ 	if(sum(!is.na(overallList$nBoxDes)) > 0) {
+ 		if(overallList$debug) {print("... nBoxplot")}
+ 		for(n in 1:length(overallList$nBoxDes)) {
+ 			if(!is.na(overallList$nBoxDes[[n]])) {
+ 				overallList$nBoxDes[n] <- checkIfDescriptorIsNaOrAllZero(overallList$nBoxDes[[n]], overallList$iniDataSet)
+ 			}
+ 		}
+ 		names(overallList$nBoxDes) <- c(1:length(overallList$nBoxDes))
+ 	} else {
+ 		print("... all in nBoxplot is 'NA'")
+ 	}
+ 	
+ 	if(sum(!is.na(overallList$boxDes)) > 0) {
+ 		if(overallList$debug) {print("... Boxplot")}
+ 		for(n in 1:length(overallList$boxDes)) {
+ 			if(!is.na(overallList$boxDes[[n]])) {
+ 				overallList$boxDes[[n]] <- checkIfDescriptorIsNaOrAllZero(overallList$boxDes[[n]], overallList$iniDataSet)
+ 			}
+ 		}
+ 		names(overallList$boxDes) <- c(1:length(overallList$boxDes))
+ 	} else {
+ 		print("... all in Boxplot is 'NA'")
+ 	}
+ 
+ 	if(sum(!is.na(overallList$boxStackDes)) > 0) {
+ 		if(overallList$debug) {print("... stackedBoxplot")}
+ 		for(n in 1:length(overallList$boxStackDes)) {
+ 			if(!is.na(overallList$boxStackDes[[n]])) {
+ 				overallList$boxStackDes[[n]] <- checkIfDescriptorIsNaOrAllZero(overallList$boxStackDes[[n]], overallList$iniDataSet)
+ 			}
+ 		}
+ 		names(overallList$boxStackDes) <- c(1:length(overallList$boxStackDes))
+ 	} else {
+ 		print("... all in stackedBoxplot is 'NA'")
+ 	}
+ 	
+ 	if(!sum(!is.na(overallList$boxStackDes)) > 0 && !sum(!is.na(overallList$boxDes)) > 0 && !sum(!is.na(overallList$nBoxDes)) > 0) {
+ 		print("... no descriptor set (all descriptors are zero or NA) - the program stopp!")
+ 		overallList$stoppTheCalculation <- TRUE 
+ 	}
+ 	
+ 	return(overallList)
+ }
> 
> checkIfDescriptorIsNaOrAllZero <- function(descriptorVector, iniDataSet, isDescriptor = TRUE){
+ 	#overallList$debug %debug% "checkIfDescriptorIsNaOrAllZero()"
+ 	descriptorVector <- as.vector(descriptorVector)
+ 	#descriptorVector <- getVector(descriptorVector)
+ 	tempDescriptor <- descriptorVector 
+ 	if(isDescriptor) {
+ 		descriptorVector <- descriptorVector[colSums(!is.na(iniDataSet[descriptorVector])) != 0 & colSums(iniDataSet[descriptorVector] *1, na.rm = TRUE) > 0]
+ 	} else {
+ 		descriptorVector <- descriptorVector[colSums(!is.na(iniDataSet[descriptorVector])) != 0]
+ 	}
+ 	errorDescriptor <- tempDescriptor %GetDescriptorAfterCheckIfDescriptorNotExists% descriptorVector
+ 
+ 	if (length(errorDescriptor) > 0) {
+ 		errorDescriptor %errorReport% "NotNumericOrAllZero"	
+ 	}
+ 	
+ 	if(length(descriptorVector) > 0) {
+ 		return(as.data.frame(descriptorVector))
+ 	} else {
+ 		return(NA)
+ 	}
+ }
> 
> overallChangeName <- function(overallList) {
+ 	overallList$debug %debug% "overallChangeSaveName()"	
+ 	
+ 	if(!is.null(overallList$saveName_nBoxDes)) {
+ 		if(overallList$debug) {print("... nBoxplot")}
+ 		overallList$saveName_nBoxDes <- changeSaveName(overallList$saveName_nBoxDes)
+ 		names(overallList$saveName_nBoxDes) <- c(1:length(overallList$saveName_nBoxDes))
+ 		
+ 		overallList$nBoxDesName <- as.list(overallList$nBoxDesName)
+ 		names(overallList$nBoxDesName) <- c(1:length(overallList$nBoxDesName))
+ 	}
+ 	
+ 	if(!is.null(overallList$saveName_boxDes)) {
+ 		if(overallList$debug) {print("... Boxplot")}
+ 		overallList$saveName_boxDes <- changeSaveName(overallList$saveName_boxDes)
+ 		names(overallList$saveName_boxDes) <- c(1:length(overallList$saveName_boxDes))
+ 		
+ 		overallList$boxDesName <- as.list(overallList$boxDesName)
+ 		names(overallList$boxDesName) <- c(1:length(overallList$boxDesName))
+ 	}
+ 	
+ 	if(!is.null(overallList$saveName_boxStackDes)) {
+ 		if(overallList$debug) {print("... stackedBoxplot")}
+ 		overallList$saveName_boxStackDes <- changeSaveName(overallList$saveName_boxStackDes)
+ 		names(overallList$saveName_boxStackDes) <- c(1:length(overallList$saveName_boxStackDes))
+ 		
+ 		overallList$boxStackDesName <- as.list(overallList$boxStackDesName)
+ 		names(overallList$boxStackDesName) <- c(1:length(overallList$boxStackDesName))
+ 	}
+ 	
+ 	return(overallList)
+ }
> 
> changeSaveName <- function(saveNameVector) {
+ 	#Sollte hier nicht noch die Leerzeichen durch Punkte ersetzt werden?
+ 	saveNameVector <- gsub("\\$",";",substr(saveNameVector,1,70))
+ 	saveNameVector <- gsub("\\^", "", saveNameVector);
+ 	
+ 	return(as.list(saveNameVector))
+ }
> 
> preprocessingOfValues <- function(value, isColValue=FALSE, replaceString=".") {
+ 
+ 	if (!is.null(value)) {
+ 		regExpressionCol <- "[^[:alnum:]|^_]|[[:space:]|\\^]"
+ 		if(isColValue) {
+ 			value <- strsplit(value, "$", fixed=TRUE)
+ 		}
+ 		
+ 		for(n in 1:length(value)) {
+ 			value[[n]] <- gsub(regExpressionCol,replaceString,value[[n]])
+ 		}
+ 	} else {
+ 			return("none")
+ 		}
+ 	return(value)
+ }
> 
> overallPreprocessingOfDescriptor <- function(overallList) {
+ 	overallList$debug %debug% "overallPreprocessingOfDescriptor()"	
+ 	
+ 	if(!is.null(overallList$nBoxDes)) {
+ 		if(overallList$debug) {print("... nBoxplot")}
+ 		for(n in 1:length(overallList$nBoxDes)) {
+ 			overallList$nBoxDes[n] <- preprocessingOfDescriptor(overallList$nBoxDes[[n]], overallList$iniDataSet)
+ 		}
+ 	} else {
+ 		print("... nBoxplot is NULL")
+ 	} 
+ 	
+ 	if(!is.null(overallList$boxDes)) {
+ 		if(overallList$debug) {print("... Boxplot")}
+ 		for(n in 1:length(overallList$boxDes)) {
+ 			overallList$boxDes[n] <- preprocessingOfDescriptor(overallList$boxDes[[n]], overallList$iniDataSet)
+ 		}
+ 	} else {
+ 		print("... Boxplot is NULL")
+ 	} 
+ 	
+ 	if(!is.null(overallList$boxStackDes)) {
+ 		if(overallList$debug) {print("... stackedBoxplot")}
+ 		for(n in 1:length(overallList$boxStackDes)) {
+ 			overallList$boxStackDes[n] <- preprocessingOfDescriptor(overallList$boxStackDes[[n]], overallList$iniDataSet)
+ 		}
+ 	} else {
+ 		print("... stackedBoxplot is NULL")
+ 	} 
+ 	
+ 	if(!sum(!is.na(overallList$boxStackDes)) > 0 && !sum(!is.na(overallList$boxDes)) > 0 && !sum(!is.na(overallList$nBoxDes)) > 0) {
+ 		print("... no descriptor set - this pass stopped!")
+ 		overallList$stoppTheCalculation <- TRUE
+ 	}
+ 	
+ 	return(overallList)
+ }
> 
> preprocessingOfDescriptor <- function(descriptorVector, iniDataSet) {
+ 	#overallList$debug %debug% "preprocessingOfDescriptor()"
+ 	descriptorVector <- unlist(preprocessingOfValues(descriptorVector, TRUE))	#descriptor is value for yAxis
+ 	
+ 	errorDescriptor <- descriptorVector %GetDescriptorAfterCheckIfDescriptorNotExists% iniDataSet 
+ 	descriptorVector <- descriptorVector %GetDescriptorsAfterCheckIfDescriptorExists% iniDataSet
+ 	if (length(errorDescriptor)>0) {
+ 		errorDescriptor %errorReport% "notExists"
+ 	} 
+ 	
+ 	if(length(descriptorVector) > 0) {
+ 		return(as.data.frame(descriptorVector))
+ 	} else {
+ 		return(NA)
+ 	}	
+ }
> 
> preprocessingOfxAxisValue <- function(overallList) {
+ 	overallList$debug %debug% "preprocessingOfxAxisValue()"
+ 	overallList$xAxis <- unlist(preprocessingOfValues(overallList$xAxis, TRUE))
+ 	
+ 	if (overallList$filterXaxis != "none") {
+ 		overallList$filterXaxis <- as.numeric(strsplit(overallList$filterXaxis, "$", fixed=TRUE)[[1]])
+ 	} else {
+ 		overallList$filterXaxis <- as.numeric(unique(overallList$iniDataSet[overallList$xAxis])[[1]])	#xAxis muss einen Wert enthalten ansonsten Bricht das Program weiter oben ab
+ 	}
+ 	
+ 	return(overallList)
+ }
> 
> getSingelFilter <- function(filter, treatment, dataSet) {
+ 	if(filter != "none") {
+ 		return(strsplit(filter, "$", fixed=TRUE)[[1]])
+ 	} else {
+ 		return(as.character(unique(dataSet[treatment])[[1]]))
+ 	}
+ }
> 
> preprocessingOfTreatment <- function(overallList) {
+ 	overallList$debug %debug% "preprocessingOfTheTreatment()"
+ 	
+ 	if(!is.null(overallList$treatment)){
+ 		overallList$treatment <- preprocessingOfValues(overallList$treatment)
+ 		
+ 		if(overallList$treatment != "none" & (overallList$treatment %checkIfDescriptorExists% overallList$iniDataSet)) {	
+ 			overallList$filterTreatment <- getSingelFilter(overallList$filterTreatment, overallList$treatment, overallList$iniDataSet)
+ 
+ 		} else {
+ 			overallList$treatment <- "none"
+ 			overallList$filterTreatment <- "none"
+ 			print("... set 'filterTreatment' and 'treatment' to 'none'!")		
+ 		}
+ 			
+ 	} else {
+ 		overallList$treatment <- "none"
+ 		overallList$filterTreatment <- "none"
+ 		print("... set 'filterTreatment' and 'treatment' to 'none'!")
+ 	}
+ 
+ 	return(overallList)
+ }
> 
> preprocessingOfSecondTreatment <- function(overallList) {
+ 	overallList$debug %debug% "preprocessingOfTheSecondTreatment()"
+ 	
+ 	if(!is.null(overallList$secondTreatment)){
+ 		overallList$secondTreatment <- preprocessingOfValues(overallList$secondTreatment)
+ 
+ 		if (overallList$secondTreatment != "none" & (overallList$secondTreatment %checkIfDescriptorExists% overallList$iniDataSet)) {
+ 			overallList$filterSecondTreatment <- getSingelFilter(overallList$filterSecondTreatment, overallList$secondTreatment, overallList$iniDataSet)
+ 			
+ 		} else {
+ 			overallList$secondTreatment <- "none"
+ 			overallList$filterSecondTreatment <- "none"
+ 			print("... set 'filterSecondTreatment' and 'secondTreatment' to 'none'!")
+ 		}	
+ 	} else {
+ 		overallList$secondTreatment <- "none"
+ 		overallList$filterSecondTreatment <- "none"
+ 		print("... set 'filterSecondTreatment' and 'secondTreatment' to 'none'!")
+ 	}
+ 	return(overallList)
+ }
> 
> check <- function(value, checkValue=c("none", NA)){
+ 	if(!is.null(value)){
+ 		return(value %GetDescriptorAfterCheckIfDescriptorNotExists% checkValue)
+ 	} else {
+ 		return(character(0))
+ 	}
+ }
> 
> getVector <- function(descriptorSet) {
+ 	if(!is.null(descriptorSet)) {
+ 		vector <-  vector()
+ 		for(n in 1:length(descriptorSet)) {
+ 			vector <- c(vector, as.vector(unlist(descriptorSet[[n]])))
+ 		}
+ 		return(vector)
+ 	}
+ 	return(character(0))
+ }
> 
> reduceWorkingDataSize <- function(overallList){
+ 	overallList$debug %debug% "reduceWorkingDataSize()"
+ 	overallList$iniDataSet <- overallList$iniDataSet[unique(c(check(getVector(overallList$nBoxDes)), check(getVector(overallList$boxDes)), check(getVector(overallList$boxStackDes)), check(overallList$xAxis), check(overallList$treatment), check(overallList$secondTreatment)))]
+ 	return(overallList)
+ }
> 
> setRowAndColNameOfFinalDataFrame <- function(overallList) {
+ 	overallList$debug %debug% "setRowAndColNameOfFinalDataFrame()"
+ 
+ 	overallList$rowName <- (overallList$descriptor %contactAllWithAll% overallList$filterTreatment) %contactAllWithAll% overallList$filterSecondTreatment
+ 	overallList$colName <- as.character(overallList$filterXaxis)
+ 	
+ 	return(overallList)
+ }
> 
> groupByFunction <- function(groupByList) {
+ 	
+ 	groupByList <- unlist(groupByList)
+ 	return(unlist(groupByList[ifelse(groupByList != "none",TRUE,FALSE)]))
+ 	
+ }
> 
> getBooleanVectorForFilterValues <- function(groupedDataFrame, listOfValues) {
+ 	
+ 	tempVector <- rep.int(TRUE,times=length(groupedDataFrame[,1]))
+ 	for(h in names(listOfValues)) {
+ 		if(h != "none" & !is.null(groupedDataFrame[[h]])) {
+ 			tempVector <- tempVector & groupedDataFrame[[h]] %in% listOfValues[[h]]
+ 		}
+ 	}
+ 	return(tempVector)
+ }
> 
> buildRowForOverallList <- function(i, des, listOfValues, dataSet, day) {
+ 	rowString <- list(row=des, day=numeric())
+ 	for(k in listOfValues){
+ 		if(k != "none") {
+ 			rowString$row <- paste(rowString$row,dataSet[i,k])
+ 		}
+ 	}
+ 	return(rowString)
+ } 
> 
> fillOverallResult <- function(overallList, preErrorBars) {
+ 	overallList$debug %debug% "fillOverallResult()"
+ 	if(length(overallList$iniDataSet[,1]) > 0){
+ 		for(i in 1:length(overallList$iniDataSet[,1])) {
+ 			for(des in overallList$descriptor) {
+ 				rowAndColumn <- buildRowForOverallList(i,des, c(overallList$treatment, overallList$secondTreatment),overallList$iniDataSet, overallList$xAxis)
+ 				overallList$overallResult[rowAndColumn$row, as.character(overallList$iniDataSet[i,overallList$xAxis])] <- overallList$iniDataSet[i,des]
+ 				if(tolower(overallList$diagramTyp) != "boxplotstacked")
+ 					overallList$errorBars[rowAndColumn$row, as.character(overallList$iniDataSet[i,overallList$xAxis])] <- preErrorBars[i,des]
+ 			}
+ 		}
+ 	} else {
+ 		print("... no Value for the OverallResult-DataFrame - Wrong filter!")
+ 		overallList$stoppTheCalculation <- TRUE
+ 	}
+ 	return(overallList)
+ }
> 
> buildList <- function(overallList, colOfXaxis) {
+ 	overallList$debug %debug% "buildList()"
+ 	newList <- list()
+ 	
+ 	newList[[overallList$treatment]] <- overallList$filterTreatment
+ 	newList[[overallList$secondTreatment]] <- overallList$filterSecondTreatment
+ 	newList[[colOfXaxis]] <- overallList$filterXaxis
+ 	
+ 	return(newList)
+ }
> 
> conactAllWithAll <- function(value1, value2) {
+ 	
+ 	conactRow <- character()
+ 	for(k1 in value1){
+ 		if(k1 != "none") {
+ 			for(k2 in value2){
+ 				if(k2 != "none") {
+ 					conactRow <- c(conactRow, paste(k1,k2,sep = "#"))
+ 				}
+ 			}
+ 		}
+ 	}
+ 	return(conactRow)
+ }
> 
> buildRowName <- function(mergeDataSet,groupBy, yName = "value") {
+ 	
+ 	if(length(groupBy) == 0) {
+ 		return(data.frame(name=rep.int(yName, length(mergeDataSet[,1])), mergeDataSet))
+ 	} else if (length(groupBy) == 1) {
+ 		return(data.frame(name=mergeDataSet[,groupBy], mergeDataSet[,!(colnames(mergeDataSet) %in% groupBy)]))
+ 	} else {		
+ 		temp <- mergeDataSet[,groupBy[1]]
+ 		for(h in 2:length(groupBy)) {
+ 			temp <- paste(temp, mergeDataSet[,groupBy[h]], sep = "#")
+ 		}
+ 		return(data.frame(name=temp, primaerTreatment= mergeDataSet[,groupBy[1]], mergeDataSet[,mergeDataSet %allColnamesWithoutThisOnes% groupBy]))
+ 	}	
+ }
> 
> overallGetResultDataFrame <- function(overallList) {
+ 	overallList$debug %debug% "overallGetResultDataFrame()"	
+ 	groupBy <- groupByFunction(list(overallList$treatment, overallList$secondTreatment))
+ 	colNames <- list(colOfXaxis="xAxis", colOfMean="mean", colOfSD="se", colName="name", xAxis=overallList$xAxis)
+ 	booleanVectorList <- buildList(overallList, colNames$colOfXaxis)
+ 	columnsStandard <- c(check(overallList$xAxis), check(overallList$treatment), check(overallList$secondTreatment))
+ 		
+ 	if(sum(!is.na(overallList$nBoxDes)) > 0) {
+ 		if(overallList$debug) {print("... nBoxplot")}
+ 		columns <- c(columnsStandard, check(getVector(overallList$nBoxDes)))
+ 		overallList$overallResult_nBoxDes <- getResultDataFrame("nboxplot", overallList$nBoxDes, overallList$iniDataSet[columns], groupBy, colNames, booleanVectorList, overallList$debug)
+ 	} else {
+ 		print("... all in nBoxplot is 'NA'")
+ 	}
+ 	
+ 	if(sum(!is.na(overallList$boxDes)) > 0) {
+ 		if(overallList$debug) {print("... Boxplot")}
+ 		colNames$colOfMean <- "value"
+ 		columns <- c(columnsStandard, check(getVector(overallList$boxDes)))
+ 		overallList$overallResult_boxDes <- getResultDataFrame("boxplot", overallList$boxDes, overallList$iniDataSet[columns], groupBy, colNames, booleanVectorList, overallList$debug)
+ 	} else {
+ 		print("... all in Boxplot is 'NA'")
+ 	}
+ 	
+ 	if(sum(!is.na(overallList$boxStackDes)) > 0) {
+ 		if(overallList$debug) {print("... stackedBoxplot")}
+ 		colNames$colOfMean <- check(getVector(overallList$boxStackDes))
+ 		colNames$colOfXaxis <- overallList$xAxis
+ 		columns <- c(columnsStandard, check(getVector(overallList$boxStackDes)))
+ 		overallList$overallResult_boxStackDes <- getResultDataFrame("boxplotStacked", overallList$boxStackDes, overallList$iniDataSet[columns], groupBy, colNames, booleanVectorList,overallList$debug)
+ 	} else {
+ 		print("... all in stackedBoxplot is 'NA'")
+ 	}
+ 	
+ 	if(is.null(overallList$boxStackDes) && is.null(overallList$boxDes) && is.null(overallList$nBoxDes)) {
+ 		print("... no descriptor set - this pass stopped!")
+ 		overallList$stoppTheCalculation <- TRUE
+ 	}
+ 	
+ 	return(overallList)
+ }
> 
> getPlotNumber <- function(colNameWichMustBind, descriptorList) {
+ 	
+ 	for(n in names(descriptorList)) {
+ 		if(colNameWichMustBind %in% as.vector(unlist(descriptorList[[n]]))) {
+ 			return(n)
+ 		}
+ 	}
+ 	return(-1)
+ }
> #descriptorName kann entfernt werden
> getResultDataFrame <- function(diagramTyp, descriptorList, iniDataSet, groupBy, colNames, booleanVectorList, debug) {	
+ 	debug %debug% "getResultDataFrame()"
+ 
+ ################################
+ #	diagramTyp = "boxplotStacked"
+ #	descriptorList = overallList$boxStackDes
+ #	iniDataSet = overallList$iniDataSet[columns]
+ #	groupBy = groupBy 
+ #	colNames = colNames 
+ #	booleanVectorList= booleanVectorList
+ #	descriptorName=overallList$boxStackDesName
+ #	debug = overallList$debug
+ #	diagramTyp = "nboxplot"
+ #	descriptor = getVector(overallList$nBoxDes)
+ #	iniDataSet = overallList$iniDataSet[columns]
+ #	groupBy = groupBy 
+ #	colNames = colNames 
+ #	booleanVectorList= booleanVectorList
+ #	descriptorName=overallList$boxDesName
+ ##########################
+ 
+ 	descriptor <- getVector(descriptorList)
+ 	descriptorName <- seq(1:length(descriptor))
+ 	
+ 	descriptorName <- descriptorName[!is.na(descriptor)]
+ 	descriptor <- descriptor[!is.na(descriptor)]
+ 	
+ 	if(diagramTyp != "boxplot") {
+ 		groupedDataFrame <- data.table(iniDataSet)
+ 		key(groupedDataFrame) <- c(groupBy, colNames$xAxis)		
+ 	}
+ 	
+ 	if(diagramTyp == "boxplot") {
+ 		groupedDataFrameMean <- iniDataSet[groupBy[1]]
+ 		
+ 		groupByReduce <- groupBy[groupBy!=groupBy[1]]
+ 		for(n in c(groupByReduce,  colNames$xAxis, descriptor)) {
+ 			groupedDataFrameMean <- cbind(groupedDataFrameMean,  iniDataSet[n])
+ 		}	
+ 		
+ ####################
+ #		Alternative, den Boxplot selber zu bauen!!
+ #		test <- overallList$iniDataSet %allColnamesWithoutThisOnes% c(groupBy, overallList$xAxis)
+ #		myQuantile <- as.data.frame(groupedDataFrame[,lapply(.SD,quantile, probs=c(0,0.25,0.5,0.75,1), na.rm=TRUE), by=groupBy])
+ #		numberOfGroubingElements <- length(myQuantile[,1]) / 5
+ #		
+ #		testData <- data.frame()
+ #		for(n in seq(1, length(myQuantile[,1]), by=5)) {
+ #			testData <- rbind(testData, myQuantile[n:(n+4),test])
+ #		}
+ #		colnames(testData) <- c("q0", "q25", "q50", "q75", "q100")
+ #		rownames(testData) <- unique(myQuantile[,1])
+ #		
+ #		ggplot(overallList$iniDataSet, aes(x=rownames(testData), ymin=testData[,1], lower=testData[,2], middle=testData[,3], upper=testData[,4], ymax=testData[,5])) + 
+ #				geom_boxplot(stat="identity")
+ #####################		
+ 			
+ 		
+ 	} else {
+ 		groupedDataFrameMean <- as.data.frame(groupedDataFrame[,lapply(.SD, mean, na.rm=TRUE), by=c(groupBy,colNames$xAxis)])
+ 	}
+ 	
+ 	if(diagramTyp == "nboxplot" || diagramTyp == "boxplot") {
+ 		#colNamesOfTheRest <- paste(colNames$colOfMean,seq(1:length(descriptor)), sep="")	
+ 		colNamesOfTheRest <- paste(colNames$colOfMean,descriptorName, sep="")	
+ 	} else {
+ 		colNamesOfTheRest <- groupedDataFrameMean %allColnamesWithoutThisOnes% c(groupBy, colNames$xAxis)
+ 	}
+ 		
+ #alt wenn nur ein Deskriptor übergeben wird
+ #		if(tolower(overallList$diagramTyp) == "nboxplot" || tolower(overallList$diagramTyp) == "boxplot") {
+ #			colNamesOfTheRest <- colOfMean
+ #		} else {
+ #			colNamesOfTheRest <- groupedDataFrameMean %allColnamesWithoutThisOnes% c(groupBy, overallList$xAxis)
+ #		}
+ 		
+ 	colnames(groupedDataFrameMean) <- c(groupBy, colNames$colOfXaxis, colNamesOfTheRest)
+ 	
+ 	if(diagramTyp == "nboxplot") {
+ 		groupedDataFrameSD <- as.data.frame(groupedDataFrame[,lapply(.SD, sd, na.rm=TRUE), by=c(groupBy,colNames$xAxis)])
+ 		colnames(groupedDataFrameSD) <- c(groupBy, colNames$colOfXaxis, paste(colNames$colOfSD,descriptorName, sep=""))
+ 	}
+ 	
+ 	booleanVector <- getBooleanVectorForFilterValues(groupedDataFrameMean, booleanVectorList)
+ 	
+ 	if(diagramTyp == "nboxplot") {
+ 		iniDataSet <- merge(sort=FALSE, groupedDataFrameMean[booleanVector,], groupedDataFrameSD[booleanVector,], by = c(groupBy, colNames$colOfXaxis))
+ 		#overallResult <- buildRowName(iniDataSet,groupBy, descriptorName)
+ 		overallResult <- buildRowName(iniDataSet,groupBy)
+ 		
+ 	} else if(diagramTyp == "boxplot") {
+ 		iniDataSet <- groupedDataFrameMean[booleanVector,]
+ 		#overallResult <- buildRowName(iniDataSet,groupBy, descriptorName)
+ 		overallResult <- buildRowName(iniDataSet,groupBy)
+ 		
+ 	} else {
+ 		iniDataSet <- groupedDataFrameMean[booleanVector,]		
+ 		#buildRowNameDataSet <- buildRowName(iniDataSet, groupBy, descriptorName)
+ 		buildRowNameDataSet <- buildRowName(iniDataSet, groupBy)
+ 		temp <- data.frame()
+ #		count <- 0
+ 		
+ 		for(colNameWichMustBind in buildRowNameDataSet %allColnamesWithoutThisOnes% c(colNames$xAxis, colNames$colName, "primaerTreatment")) {
+ #			count <- count+1
+ 			plot = getPlotNumber(colNameWichMustBind, descriptorList)
+ 		
+ 			if(plot!=-1) {
+ 				colNameWichMustBindReNamed <- reNameHist(colNameWichMustBind)
+ 		
+ 				if(is.null(buildRowNameDataSet$primaerTreatment)){	
+ 					temp <- rbind(temp,data.frame(hist=rep.int(x=colNameWichMustBindReNamed, times=length(buildRowNameDataSet[,colNameWichMustBind])), values=buildRowNameDataSet[,colNameWichMustBind], xAxis=buildRowNameDataSet[,colNames$colOfXaxis], name=buildRowNameDataSet[,colNames$colName], plot=plot))			
+ 				} else {
+ 					temp <- rbind(temp,data.frame(hist=rep.int(x=colNameWichMustBindReNamed, times=length(buildRowNameDataSet[,colNameWichMustBind])), primaerTreatment=buildRowNameDataSet[,"primaerTreatment"], values=buildRowNameDataSet[,colNameWichMustBind], xAxis=buildRowNameDataSet[,colNames$colOfXaxis], name=buildRowNameDataSet[,colNames$colName], plot = plot))			
+ 				}
+ 			}
+ 		}
+ 		overallResult <- temp		
+ 	}	
+ 
+ 	return(overallResult)
+ }
> 
> setDefaultAxisNames <- function(overallList) {
+ 	overallList$debug %debug% "setDefaultAxisNames()"
+ 	
+ 	if (overallList$xAxisName == "none") {
+ 		overallList$xAxisName <- gsub('[[:punct:]]'," ",overallList$xAxis)
+ 	}
+ #	if (overallList$yAxisName == "none") {
+ #		overallList$yAxisName <- gsub('[[:punct:]]'," ",overallList$descriptor)
+ #	}
+ 	return(overallList)
+ }
> 
> setColorListHist <- function(descriptorList) {
+ 	interval <- seq(0.05,0.95, by=0.1)
+ 	intervalSat <- rep.int(c(0.8,1.0), 5)
+ 	intervalFluo <- seq(0,0.166666666666, by=0.01666666)
+ 	
+ 	if(length(grep("fluo",getVector(descriptorList), ignore.case=TRUE)) > 0) { #rot			
+ 		#colorList <- as.list(rgb(255, seq(256/10/2,255,by=255/10), 255, max = 255))
+ 		#colorList <- as.list(rgb(1, interval, 0, max = 1))
+ 		colorList <- as.list(hsv(h=rev(intervalFluo), s=intervalSat, v=1))
+ 		
+ 	} else if(length(grep("phenol",getVector(descriptorList), ignore.case=TRUE)) > 0) { #gelb
+ 		#colorList <- as.list(rgb(255, rev(seq(256/10/2,255,by=255/10)), 255, max = 255))
+ 		#colorList <- as.list(rgb(1, rev(interval), 0, max = 1))
+ 		colorList <- as.list(hsv(h=intervalFluo, s=intervalSat, v=1))
+ 		
+ 	} else if(length(grep("vis",getVector(descriptorList), ignore.case=TRUE)) > 0) {
+ 		colorList <- as.list(hsv(h=interval, s=1, v=intervalSat))
+ 		
+ 	} else if(length(grep("nir",getVector(descriptorList), ignore.case=TRUE)) > 0) {
+ 		colorList <- as.list(rgb(rev(interval), rev(interval), rev(interval), max = 1))		
+ 	} else {
+ 		return(list(0))
+ 	}
+ 	names(colorList) <- c("0..25", "25..51", "51..76", "76..102", "102..127", "127..153", "153..178", "178..204", "204..229", "229..255")
+ 	return(colorList)
+ }
> 
> setColorList <- function(diagramTyp, descriptorList, overallResult, isGray) {
+ #################	
+ #diagramTyp = "boxplotStacked"
+ #descriptorList = overallList$boxStackDes
+ #isGrey = overallList$isGray
+ #	overallResult=overallList$overallResult_nBoxDes
+ #	diagramTyp = "boxplotStacked"
+ #	descriptorList = overallList$nBoxDes	
+ ##################
+ 	
+ 	if(!as.logical(isGray)) {
+ 		colorVector <- c(brewer.pal(11, "Spectral"))
+ 	} else {
+ 		colorVector <- c(brewer.pal(9, "Greys"))
+ 	}
+ 	
+ 	colorList <- list()
+ 	if(diagramTyp == "nboxplot" || diagramTyp == "boxplot") {
+ 		for(n in names(descriptorList)) {
+ 			if(!is.na(descriptorList[[n]])) {
+ 				colorList[[n]] <- colorRampPalette(colorVector)(length(unique(overallResult$name)))
+ 			} else {
+ 				print("... all values are 'NA'")
+ 			}
+ 		}
+ 	} else {
+ 		for(n in names(descriptorList)) {
+ 			if(!is.na(descriptorList[[n]])) {
+ 				colorList[[n]] <- setColorListHist(descriptorList[n])
+ 			} else {
+ 				print("... all values are 'NA'")
+ 			}
+ 		}
+ 	}
+ 	return(colorList)
+ }
> 
> setColor <- function(overallList) {
+ 	overallList$debug %debug% "setColor()"
+ 	  
+ 	overallList$color_nBox <- setColorList("nboxplot", overallList$nBoxDes, overallList$overallResult_nBoxDes, overallList$isGray)
+ 	overallList$color_box <- setColorList("boxplot", overallList$boxDes, overallList$overallResult_boxDes, overallList$isGray)
+ 	overallList$color_boxStack <- setColorList("boxplotStacked", overallList$boxStackDes, overallList$overallResult_boxStackDes, overallList$isGray)
+ 	return(overallList)
+ }
> 
> normalizeToHundredPercent <-  function(whichRows, overallResult) {
+ 	return(t(apply(overallResult[whichRows,], 1, function(x,y){(100*x)/y}, y=colSums(overallResult[whichRows,]))))
+ }
> 
> writeLatexFile <- function(saveNameLatexFile, saveNameImageFile="", o="") {
+ 	
+ 	saveNameImageFile <- preprocessingOfValues(saveNameImageFile, FALSE, "_")
+ 	saveNameLatexFile <- preprocessingOfValues(saveNameLatexFile, FALSE, "_")
+ 	o <- gsub('[[:punct:]]',"_",o)
+ 	
+ 	latexText <- paste("\\loadImage{",
+ 					   ifelse(saveNameImageFile=="",saveNameLatexFile,saveNameImageFile),
+ 					   ifelse(o=="", "", paste("_",o ,sep="")),
+ 					   ".pdf}", sep="")
+ 	
+ 	write(x=latexText, append=TRUE, file=paste(saveNameLatexFile,"tex",sep="."))
+ 	
+ }
> 
> saveImageFile <- function(overallList, plot, saveName, extraString="") {
+ 	filename <- preprocessingOfValues(paste(saveName,extraString,sep=""), FALSE,replaceString = "_")	
+ 	ggsave (filename=paste(filename,overallList$saveFormat,sep="."), plot = plot, dpi=as.numeric(overallList$dpi))
+ 
+ }
> 
> makeDepthBoxplotDiagram <- function(h, overallList) {
+ 
+ 	overallList$debug %debug% "makeDepthBoxplotDiagram()"
+ 	overallList$symbolParameter <- 15
+ 	
+ 	if (h==1) {
+ 		openImageFile(overallList)
+ 	}
+ 	par(mar=c(4.1,4.1,2.1,2.1))
+ 	plot.depth(as.matrix(overallList$overallResult), plot.type=h, xlabel=overallList$xAxisName, l.width=12, lp.color=overallList$color)
+ 	
+ 	grid()
+ 	if (h==1) {
+ 		dev.off()
+ 	}
+ 	if(overallList$appendix) {
+ 		writeLatexFile("appendixImage", overallList$saveName)
+ 	}
+ 	
+ 	return(overallList)
+ }
> 
> CheckIfOneColumnHasOnlyValues <- function(overallResult, descriptor="", diagramTyp="nboxplot") {	
+ 	
+ 	max <- -1	
+ 	for(index in levels(overallResult$name)){
+ 		if(diagramTyp == "nboxplot" || diagramTyp == "boxplot") {
+ 			temp <- sum(!is.na(overallResult$mean[overallResult$name == index]))
+ 		} else {
+ 			boolVec <- overallResult$name == index
+ 			temp <- sum(!is.na(overallResult[boolVec,descriptor]))
+ 		}
+ 		max <- ifelse(temp > max, temp, max)
+ 	}
+ 		
+ 	return(ifelse(max == 1,TRUE, FALSE))
+ }
> 
> 
> buildMyStats <- function(values, means, se) {
+ 	means <- as.data.frame(as.vector(means))
+ 	colnames(means) <- "means"
+ 	
+ 	se <- as.data.frame(as.vector(se))
+ 	colnames(se) <- "se"
+ 
+ 	return(data.frame(value=values,means=means, se=se))
+ }
> 
> buildMyStats2 <- function(values, means, se, rowName) {
+ 	means <- as.data.frame(as.vector(means))
+ 	colnames(means) <- "means"
+ 	
+ 	rowName <- as.data.frame(as.vector(rowName))
+ 	colnames(rowName) <- Name
+ 	
+ 	se <- as.data.frame(as.vector(se))
+ 	colnames(se) <- "se"
+ 	
+ 	return(data.frame(value=values,means=means, se=se, rowName=rowName))
+ }
> 
> reduceOverallResult <- function(tempOverallList, imagesIndex) {
+ 	tempOverallList$debug %debug% "reduceOverallResult()"
+ 
+ 	workingDataSet <- buildDataSet(tempOverallList$overallResult[,1:2], tempOverallList, c("mean", "se"), imagesIndex)
+ 	colnames(workingDataSet) <- c(colnames(workingDataSet)[1:2], "mean", "se")
+ 	return(workingDataSet)	
+ }
> 
> 
> reduceWholeOverallResultToOneValue <- function(tempOverallResult, imagesIndex, debug, diagramTyp="nboxplot") {
+ 	debug %debug% "reduceWholeOverallResultToOneValue()"
+ 	
+ 	if(diagramTyp == "boxplotstacked") {
+ 		
+ 		workingDataSet <- tempOverallResult[tempOverallResult$plot == imagesIndex,]
+ 		workingDataSet$hist <- factor(workingDataSet$hist, unique(workingDataSet$hist))
+ 		
+ 	} else {
+ 		colNames <- vector()
+ 		if(diagramTyp == "nboxplot" || diagramTyp == "barplot") {
+ 			colNames <- c("mean", "se")
+ 		} else if(diagramTyp == "boxplot") {
+ 			colNames <- c("value")
+ 		} 
+ 		
+ 		if("primaerTreatment" %in% tempOverallResult) {
+ 			standardColumnName <- c("name", "primaerTreatment", "xAxis")
+ 		} else {
+ 			standardColumnName <- c("name", "xAxis")
+ 		}
+ 		
+ 		workingDataSet <- buildDataSet(tempOverallResult[,standardColumnName], tempOverallResult, colNames, imagesIndex)
+ 		colnames(workingDataSet) <- c(standardColumnName, colNames)
+ 	}
+ 	return(workingDataSet)	
+ }
> 
> 
> makeLinearDiagram <- function(h, overallResult, overallDescriptor, overallColor, overallDesName, overallSaveName, overallList) {
+ ########################		
+ #	h=h 
+ #	overallResult = overallList$overallResult_nBoxDes
+ #	overallColor=overallList$color_nBox
+ ##	debug = overallList$debug
+ #	overallDescriptor = overallList$nBoxDes
+ #	overallDesName = overallList$nBoxDesName
+ #########################
+ 	
+ 	overallList$debug %debug% "makeLinearDiagram()"	
+ 	
+ 	tempOverallResult <-  overallResult
+ 	
+ 	for(imagesIndex in names(overallDescriptor)) {
+ 		if(!is.na(overallDescriptor[[imagesIndex]])) {
+ 			print(paste("... images",imagesIndex))
+ 			overallResult <- reduceWholeOverallResultToOneValue(tempOverallResult, imagesIndex, overallList$debug, "nboxplot")
+ 			
+ 			if(!CheckIfOneColumnHasOnlyValues(overallResult)) {	
+ 		
+ 	#			myDataSet <- data.frame(name=c("normal","wet","dry","normal","wet","dry","normal","wet","dry"), 
+ 	#									xAxis=c(6,6,6,8,8,8,10,10,10),		
+ 	#									mean=c(4883,6224,4630,6047,5790,7758,7349,7778,9725), 
+ 	#									se=c(1515,1190,1670,1831,2013,1318,2387,2182,1499))
+ 						
+ 				plot <-	ggplot(data=overallResult, aes(x=xAxis, y=mean, shape=name)) +
+ 						#geom_smooth(aes(ymin=mean-se, ymax=mean+se, colour=name, fill=name), stat="identity", alpha=0.1) +
+ 						geom_ribbon(aes(ymin=mean-se, ymax=mean+se, fill=name), stat="identity", alpha=0.1) +
+ 						geom_line(aes(color=name), alpha=0.2) +
+ 						geom_point(aes(color=name), size=3) +
+ 						scale_x_continuous(name=overallList$xAxisName, minor_breaks = min(overallResult$xAxis):max(overallResult$xAxis)) +
+ 						ylab(overallDesName[[imagesIndex]]) +
+ 						scale_fill_manual(values = overallColor[[imagesIndex]]) +
+ 						scale_colour_manual(values= overallColor[[imagesIndex]]) +
+ 						scale_shape_manual(values = c(1:length(overallColor[[imagesIndex]]))) +
+ 						theme_bw() +
+ 						opts(axis.title.x = theme_text(face="bold", size=11),
+ 								axis.title.y = theme_text(face="bold", size=11, angle=90),
+ 								#panel.grid.major = theme_blank(), # switch off major gridlines
+ 								#panel.grid.minor = theme_blank(), # switch off minor gridlines
+ 								legend.position = "right", # manually position the legend (numbers being from 0,0 at bottom left of whole plot to 1,1 at top right)
+ 								legend.title = theme_blank(), # switch off the legend title						
+ 								#legend.key.size = unit(1.5, "lines"),
+ 								legend.key = theme_blank(), # switch off the rectangle around symbols in the legend
+ 								panel.border = theme_rect(colour="Grey", size=0.1)
+ 						)
+ 				
+ 				if(length(overallColor[[imagesIndex]]) > 25) {
+ 					plot <- plot + opts(legend.text = theme_text(size=6),
+ 										legend.key.size = unit(0.7, "lines")
+ 										)
+ 				} else {
+ 					plot <- plot + opts(legend.text = theme_text(size=11))
+ 				}
+ 								
+ 	#			print(plot)
+ 		
+ 		##!# nicht löschen, ist die interpolation (alles in dieser if Abfrage mit #!# makiert)
+ 		##!#				newCoords <- seq(min(overallList$filterXaxis,na.rm=TRUE),max(overallList$filterXaxis,na.rm=TRUE),1)
+ 		##!#				newValue <- approx(overallList$filterXaxis, overallList$overallResult[y,],xout=newCoords,method="linear")
+ 		##!#				
+ 		##!#				naVector <- is.na(overallList$overallResult[y,])
+ 		##!#				overallResultWithNaValues <- overallList$overallResult[y,]
+ 		##!#				overallList$overallResult[y,naVector] <- newValue$y[overallList$filterXaxis[naVector]]
+ 		#				
+ 		#				if (firstPlot) {
+ 		#					firstPlot <- FALSE
+ 		##!#				plot(overallList$filterXaxis, overallList$overallResult[y,], main="", type="c", xlab=overallList$xAxisName, col=overallList$color[y], ylab=overallList$yAxisName, pch=y, lty=1, lwd=3, ylim=c(min(overallList$overallResult,na.rm=TRUE),max(overallList$overallResult,na.rm=TRUE)))
+ 		#					plot(overallList$filterXaxis, overallList$overallResult[y,], main="", type="b", xlab=overallList$xAxisName, col=overallList$color[y], ylab=overallList$yAxisName, pch=y, lty=1, lwd=3, ylim=c(min(overallList$overallResult,na.rm=TRUE),max(overallList$overallResult,na.rm=TRUE)))
+ 		#				} else {
+ 		##!#				points(overallList$filterXaxis, overallList$overallResult[y,], type="c", col=overallList$color[y], pch=y, lty=1, lwd=3 )	
+ 		#					points(overallList$filterXaxis, overallList$overallResult[y,], type="b", col=overallList$color[y], pch=y, lty=1, lwd=3 )
+ 		#				}
+ 		##!#				points(overallList$filterXaxis, overallResultWithNaValues, type="p", col=overallList$color[y], pch=y, lty=1, lwd=3 )
+ 		#			} 
+ 		
+ 				if(h==1) {
+ 					saveImageFile(overallList, plot, overallSaveName[[imagesIndex]], "nboxplot")
+ 				} else {
+ 					print(plot)
+ 				}
+ 				if(overallList$appendix) {
+ 					writeLatexFile("appendixImage", overallSaveName[[imagesIndex]], "nboxplot")
+ 				}
+ 			
+ 			} else {
+ 				print("... only one column has values, so it will be plot as barplot!")
+ 		
+ 				day <- overallResult$xAxis[!is.na(overallResult$mean)][1]
+ 				overallList$xAxisName <- paste(overallList$xAxisName,day)
+ 				#overallList$overallResult <- overallList$overallResult[!is.na(overallList$overallResult$mean),]
+ 				overallList <- makeBarDiagram(h, overallResult, overallDescriptor, overallColor, overallDesName, overallSaveName, overallList, TRUE)
+ 			}
+ 		}
+ 	}
+ 	#return(overallList)
+ }
> 
> getColor <- function(overallColorIndex, overallResult) {
+ 	input <- as.vector(unique(overallResult$hist))
+ 	
+ 	color <- vector()
+ 	for(n in input) {
+ 		color <- c(color, overallColorIndex[[n]])
+ 	}
+ 	return(color)
+ }
> 
> 
> plotStackedImage <- function(h, overallList, overallResult, title = "", makeOverallImage = FALSE, legende=TRUE, minor_breaks=TRUE, overallColor, overallDesName, imagesIndex, overallSaveName) {
+ 	overallList$debug %debug% "plotStackedImage()"	
+ 		
+ 	if(length(overallResult[,1]) > 0) {
+ 
+ 		if(length(overallList$stackedBarOptions$typOfGeomBar) == 0) {
+ 			overallList$stackedBarOptions$typOfGeomBar <- c("fill")
+ 		}
+ 		
+ 		for(positionTyp in overallList$stackedBarOptions$typOfGeomBar) {
+ 		
+ 		
+ 			plot <- ggplot(overallResult, aes(xAxis, values, fill=hist)) + 
+ 					geom_bar(stat="identity", position = positionTyp) +
+ 				 	ylab(overallDesName[[imagesIndex]]) 
+ 					#coord_cartesian(ylim=c(0,1)) +
+ 				
+ 			if(minor_breaks) {
+ 				plot <- plot + scale_x_continuous(name=overallList$xAxisName, minor_breaks = min(overallResult$xAxis):max(overallResult$xAxis))
+ 			} else {
+ 				plot <- plot + xlab(overallList$xAxisName)
+ 			}
+ 					
+ 			plot <- plot +		
+ 					scale_fill_manual(values = getColor(overallColor[[imagesIndex]], overallResult), name="") +
+ 					theme_bw() +
+ 					opts(axis.title.x = theme_text(face="bold", size=11),
+ 							axis.title.y = theme_text(face="bold", size=11, angle=90),
+ 							plot.margin = unit(c(0.1, 0.1, 0, 0), "cm"),
+ 							#panel.background = theme_rect(linetype = "dotted"),
+ 							panel.border = theme_rect(colour="Grey", size=0.1),
+ 							strip.background = theme_rect(colour=NA)
+ 	#						plot.title = theme_text(size=10),
+ 	#						plot.title = theme_rect(colour="Pink", size=0.1),
+ 					) 
+ 			
+ 			if(!legende) {
+ 				plot <- plot + opts(legend.position="none")
+ 			} else {
+ 				plot <- plot + opts(legend.position="right", 
+ 									legend.title = theme_blank(),
+ 									legend.text = theme_text(size=11),
+ 									legend.key = theme_blank())
+ 			}
+ 			
+ 			if(title != "") {
+ 				plot <- plot + opts(title = title)
+ 			}
+ 			
+ 			if(!minor_breaks) {
+ 				plot <- plot + opts(panel.grid.minor = theme_blank())
+ 			}
+ 			
+ 			if(makeOverallImage) {
+ 				#plot <- plot + facet_wrap(~ name, drop=TRUE)
+ 				plot <- plot + facet_wrap(~ name)
+ 			}
+ 			
+ 			if (h==1) {
+ 				saveImageFile(overallList, plot, overallSaveName[[imagesIndex]], paste("overall", title, positionTyp, sep=""))
+ 				if(makeOverallImage) {
+ 					writeLatexFile(paste(overallSaveName[[imagesIndex]], "stackedOverallImage", sep=""), paste(overallSaveName[[imagesIndex]],"overall",title, positionTyp, sep=""))	
+ 				} else {
+ 					writeLatexFile(overallSaveName[[imagesIndex]], paste(overallSaveName[[imagesIndex]],"overall",title,positionTyp, sep=""))	
+ 				}
+ 			} else {
+ 				print(plot)
+ 			}
+ 		}
+ 	}
+ }
> 
> PreWorkForMakeBigOverallImage <- function(h, overallResult, overallDescriptor, overallColor, overallDesName, overallSaveName, overallList, imagesIndex) {
+ 	overallList$debug %debug% "PreWorkForMakeBigOverallImage()"	
+ 	
+ 	groupBy <- groupByFunction(list(overallList$treatment, overallList$secondTreatment))
+ 	if(length(groupBy) == 0 || length(groupBy) == 1) {
+ 		plotStackedImage(h = h, overallList = overallList, overallResult = overallResult, makeOverallImage = TRUE, legende=TRUE, minor_breaks=FALSE, overallColor = overallColor, overallDesName = overallDesName, imagesIndex= imagesIndex, overallSaveName =overallSaveName)
+ 		
+ 	} else {
+ 		for(value in overallList$filterSecondTreatment) {
+ 			title <- value
+ 			plottedName <- overallList$filterTreatment %contactAllWithAll% value
+ 			booleanVector <- getBooleanVectorForFilterValues(overallResult, list(name = plottedName))
+ 			plotThisValues <- overallResult[booleanVector,]
+ 			plotThisValues <- reNameColumn(plotThisValues, "name", "primaerTreatment")
+ 			plotStackedImage(h, overallList, plotThisValues, title = title, makeOverallImage = TRUE,  legende=TRUE, minor_breaks=FALSE, overallColor = overallColor, overallDesName = overallDesName, imagesIndex=imagesIndex, overallSaveName=overallSaveName)
+ 		}	 
+ 	}
+ }
> 
> PreWorkForMakeNormalImages <- function(h, overallList) {
+ 	overallList$debug %debug% "PreWorkForMakeNormalImages()"
+ 	stackedImages <- unlist(unique(overallList$overallResult["name"]))
+ 	
+ 	for(o in stackedImages) {
+ 		overallList$debug %debug% paste("makeBoxplotStackedDiagram with the descriptor: ",overallList$saveName,o)
+ 		plotThisValues <- overallList$overallResult[overallList$overallResult["name"] == o,]
+ 		plotStackedImage(h, overallList, plotThisValues, o, FALSE, TRUE, TRUE)
+ 	}
+ }
> 
> 
> makeBoxplotStackedDiagram <- function(h, overallResult, overallDescriptor, overallColor, overallDesName, overallSaveName, overallList) {
+ 	########################		
+ #	h=h
+ #	overallResult=overallList$overallResult_boxStackDes
+ #	overallDescriptor=overallList$boxStackDes
+ #	overallColor=overallList$color_boxStack
+ #	overallDesName=overallList$boxStackDesName
+ #	overallList=overallList
+ #	overallSaveName = overallList$saveName_nBoxDes
+ 	#########################
+ 
+ 
+ 	
+ 	
+ 	overallList$debug %debug% "makeBoxplotStackedDiagram()"
+ 	overallResult[is.na(overallResult)] <- 0
+ 	tempOverallResult <- overallResult
+ 	
+ 	for(imagesIndex in names(overallDescriptor)) {
+ 		
+ 		overallResult <- reduceWholeOverallResultToOneValue(tempOverallResult, imagesIndex, overallList$debug, "boxplotstacked")
+ 	
+ 		PreWorkForMakeBigOverallImage(h, overallResult, overallDescriptor, overallColor, overallDesName, overallSaveName, overallList, imagesIndex)
+ 		#PreWorkForMakeNormalImages(h,overallList)
+ 	}
+ 	#return(overallList)
+ }	
> 
> makeBarDiagram <- function(h, overallResult, overallDescriptor, overallColor, overallDesName, overallSaveName, overallList, isOnlyOneValue = FALSE) {
+ 	########################		
+ #	h=h 
+ #	overallResult = overallList$overallResult_nBoxDes
+ #	overallColor=overallList$color_nBox
+ ##	debug = overallList$debug
+ #	overallDescriptor = overallList$nBoxDes
+ #	overallDesName = overallList$nBoxDesName
+ #	isOnlyOneValue = FALSE
+ 	#########################
+ 
+ 	overallList$debug %debug% "makeBarDiagram()"
+ 
+ 	tempOverallResult <-  overallResult
+ 	
+ 	for(imagesIndex in names(overallDescriptor)) {
+ 		if(!is.na(overallDescriptor[[imagesIndex]])) {
+ 			overallResult <- reduceWholeOverallResultToOneValue(tempOverallResult, imagesIndex, overallList$debug, "barplot")
+ 			overallResult <- overallResult[!is.na(overallResult$mean),]
+ 			
+ 			if(isOnlyOneValue) {
+ 				myPlot <- ggplot(data=overallResult, aes(x=name, y=mean))
+ 			} else {
+ 				myPlot <- ggplot(data=overallResult, aes(x=xAxis, y=mean))
+ 			}
+ 			
+ 			myPlot <- myPlot + 						
+ 					geom_bar(stat="identity", aes(fill=name), colour="Grey", size=0.1) +
+ 					geom_errorbar(aes(ymax=mean+se, ymin=mean-se), width=0.2, colour="black")+
+ 					#geom_errorbar(aes(ymax=mean+se, ymin=mean-se), width=0.5, colour="Pink")+
+ 					ylab(overallDesName[[imagesIndex]]) +
+ 					coord_cartesian(ylim=c(0,max(overallResult$mean + overallResult$se + 10,na.rm=TRUE))) +
+ 					xlab(overallList$xAxisName) +
+ 					scale_fill_manual(values = overallColor[[imagesIndex]]) +
+ 					theme_bw() +
+ 					opts(legend.position="none",
+ 							plot.margin = unit(c(0.1, 0.1, 0, 0), "cm"),
+ 							axis.title.x = theme_text(face="bold", size=11),
+ 							axis.title.y = theme_text(face="bold", size=11, angle=90),
+ 							panel.grid.minor = theme_blank(),
+ 							panel.border = theme_rect(colour="Grey", size=0.1)
+ 					)
+ 			
+ 			if(length(overallColor[[imagesIndex]]) > 10) {
+ 				myPlot <- myPlot + opts(axis.text.x = theme_text(size=6, angle=90))
+ 			}
+ 			print(myPlot)
+ 			
+ 			if (h==1) {
+ 				saveImageFile(overallList, myPlot, overallSaveName[[imagesIndex]], "barplot")
+ 			} else {
+ 				print(myPlot)
+ 			}
+ 			if(overallList$appendix) {
+ 				writeLatexFile("appendixImage", overallSaveName[[imagesIndex]], "barplot")
+ 			}
+ 		}
+ 	}
+ 	#return(overallList)
+ }
> 
> ##Problem: der median wird nicht angezeigt!
> makeBoxplotDiagram <- function(h, overallResult, overallDescriptor, overallColor, overallDesName, overallSaveName, overallList) {
+ 	########################		
+ #	h=h 
+ #	overallResult = overallList$overallResult_boxDes
+ #	overallColor=overallList$color_box
+ ##	debug = overallList$debug
+ #	overallDescriptor = overallList$boxDes
+ #	overallDesName = overallList$boxDesName
+ 	#########################
+ 	
+ 	overallList$debug %debug% "makeBoxplotDiagram()"
+ 	#overallList$overallResult <- overallList$overallResult[!is.na(overallList$overallResult$mean),]
+ 
+ 	tempOverallResult <-  overallResult
+ 	
+ 	for(imagesIndex in names(overallDescriptor)) {
+ 		if(!is.na(overallDescriptor[[imagesIndex]])) {
+ 			overallResult <- reduceWholeOverallResultToOneValue(tempOverallResult, imagesIndex, overallList$debug, "boxplot")
+ 			
+ 			
+ 			#myPlot <- ggplot(overallList$overallResult, aes(factor(name), value, fill=name, colour=name)) + 
+ 			myPlot <- ggplot(overallResult, aes(factor(name), value, fill=name)) +
+ 					geom_boxplot() +
+ 					ylab(overallDesName[[imagesIndex]]) +
+ 					#coord_cartesian(ylim=c(0,max(overallList$overallResult$mean + overallList$overallResult$se + 10,na.rm=TRUE))) +
+ 					xlab(overallList$xAxisName) +
+ 					scale_fill_manual(values = overallColor[[imagesIndex]]) +
+ 					#stat_summary(fun.data = f, geom = "crossbar", height = 0.1,	colour = NA, fill = "skyblue", width = 0.8, alpha = 0.5) +
+ 					theme_bw() +
+ 					opts(legend.position="none",
+ 							plot.margin = unit(c(0.1, 0.1, 0, 0), "cm"),
+ 							axis.title.x = theme_text(face="bold", size=11),
+ 							axis.title.y = theme_text(face="bold", size=11, angle=90),
+ 							panel.grid.minor = theme_blank(),
+ 							panel.border = theme_rect(colour="Grey", size=0.1)
+ 					)
+ 		
+ 			if(length(overallColor[[imagesIndex]]) > 10) {
+ 				myPlot <- myPlot + opts(axis.text.x = theme_text(size=6, angle=90))
+ 			}	
+ 			
+ 		#	print(myPlot)
+ 
+ 			if (h==1) {
+ 				saveImageFile(overallList, myPlot, overallSaveName[[imagesIndex]], "boxplot")
+ 			} else {
+ 				print(myPlot)
+ 			}
+ 			if(overallList$appendix) {
+ 				writeLatexFile("appendixImage", overallSaveName[[imagesIndex]], "boxplot")
+ 			}
+ 		}
+ 	}
+ 	#return(overallList)
+ }
> 
> makeDiagrams <- function(overallList) {
+ 	overallList$debug %debug% "makeDiagrams()"
+ 	durchlauf <- ifelse(overallList$showResultInR, 2, 1)
+ 	
+ 	for(h in 1:durchlauf) {
+ 
+ 		if(sum(!is.na(overallList$nBoxDes)) > 0) {
+ 			if(overallList$debug) {print("... nBoxplot")}	
+ 			makeLinearDiagram(h, overallList$overallResult_nBoxDes, overallList$nBoxDes, overallList$color_nBox, overallDesName=overallList$nBoxDesName, overallList$saveName_nBoxDes ,overallList)
+ 		} else {
+ 			print("... all in nBoxplot is 'NA'")
+ 		}
+ 		
+ 		if(sum(!is.na(overallList$boxDes)) > 0) {
+ 			if(overallList$debug) {print("... Boxplot")}
+ 			makeBoxplotDiagram(h, overallList$overallResult_boxDes, overallList$boxDes, overallList$color_box, overallDesName=overallList$boxDesName, overallList$saveName_boxDes, overallList)
+ 		} else {
+ 			print("... all in Boxplot is 'NA'")
+ 		}
+ 		
+ 		if(sum(!is.na(overallList$boxStackDes)) > 0) {
+ 			if(overallList$debug) {print("... stacked Boxplot")}
+ 			makeBoxplotStackedDiagram(h, overallList$overallResult_boxStackDes, overallList$boxStackDes, overallList$color_boxStack, overallDesName=overallList$boxStackDesName, overallList$saveName_boxStackDes, overallList)
+ 		} else {
+ 			print("... all in stacked Boxplot is 'NA'")
+ 		}
+ 		
+ 		if(FALSE) {	# falls auch mal barplots erstellt werden sollen (ausser wenn nur ein Tag vorhanden ist!)
+ 			if(overallList$debug) {print("... Barplot")}
+ 			makeBarDiagram(h, overallList$overallResult_nBoxDes, overallList$nBoxDes, overallList$color_nBox, overallDesName=overallList$nBoxDesName, overallList$saveName_nBoxDes, overallList)
+ 		}
+ 	}
+ }
> 
> #makeDiagrams <- function(overallList) {
> #	overallList$debug %debug% "makeDiagrams()"
> #	durchlauf <- ifelse(overallList$showResultInR, 2, 1)
> #	
> #	for(h in 1:durchlauf) {
> #						
> #		if (tolower(overallList$diagramTyp) == "boxplot") {
> #			overallList <- makeBoxplotDiagram(h, overallList)
> #			
> #		} else if (tolower(overallList$diagramTyp) == "boxplotstacked") {
> #			overallList <- makeBoxplotStackedDiagram(h, overallList)
> #			
> #		} else if(tolower(overallList$diagramTyp) == "nboxplot"){
> #			overallList <- makeLinearDiagram(h, overallList)
> #			
> #		}  else if (tolower(overallList$diagramTyp) == "barplot") {
> #			overallList <- makeBarDiagram(h, overallList)
> #		} else {
> #			print("Error - overallList$diagramTyp is undefined!")
> #		}
> #	}
> #}
> 
> checkIfAllNecessaryFilesAreThere <- function() {
+ 		print("... check if the noValues-Image is there")
+ 		file <- "noValues.pdf"
+ 		if(!file.exists(file)){
+ 			library("Cairo")
+ 			print(paste("... create defaultImage '",file,"'",sep=""))
+ 			Cairo(width=900, height=70,file=file,type="pdf",bg="transparent",units="px",dpi=90)
+ 			par(mar = c(0,0,0,0))
+ 			plot.new()
+ 			legend("left", "no values", col= c("black"), pch=1, bty="n")
+ 			dev.off()
+ 		}	
+ }
> 
> buildBlacklist <- function(workingDataSet, descriptorSet) {
+ 	
+ 	searchString <- ".histogram."
+ 	searchString <- paste(searchString,"mark",sep = "|")	
+ 	additionalDescriptors <- c(descriptorSet, "Day (Int)","Day","Time", "Plant ID", "vis.side", "fluo.side", "nir.side", "vis.top", "fluo.top", "nir.top")
+ 	
+ 	return(c(colnames(workingDataSet)[grep(searchString,colnames(workingDataSet), ignore.case = TRUE)], preprocessingOfValues(additionalDescriptors, TRUE)))
+ }
> 
> initRfunction <- function(DEBUG = FALSE){
+ 	
+ 	if(DEBUG) {
+ 		
+ 		options(error = quote({
+ 			#sink(file="error.txt", split = TRUE);
+ 			dump.frames();
+ 			print(attr(last.dump,"error.message"));
+ 			#x <- attr(last.dump,"error.message")
+ 			traceback();
+ 			#sink(file=NULL);		
+ 			#q()
+ 		}))
+ 	} else {	
+ 		options(error = NULL)
+ 	}
+ 	memory.limit(size=3500)
+ 
+ 	while(!is.null(dev.list())) {
+ 		dev.off()
+ 	}
+ }
> typOfStartOptions = "test"
> 	typOfStartOptions <- tolower(typOfStartOptions)
> 	
> 	args <- commandArgs(TRUE)
> 	print("#### Arguments")
[1] "#### Arguments"
> 	print(args)
character(0)
> 	print("####")
[1] "####"
> 	
> 	saveFormat <- "pdf"	
> 	dpi <- "150" ##90
> 	
> 	isGray <- FALSE
> 	showResultInR <- FALSE
> 	
> 	treatment <- "Treatment"
> 	filterTreatment <- "none"
> 	
> 	secondTreatment <- "none"
> 	filterSecondTreatment <- "none"
> 	
> 	xAxis <- "Day (Int)" 
> 	xAxisName <- "DAS"
> 	filterXaxis <- "none"
> 	
> #	diagramTypVector <- vector()
> 	descriptorSet <- vector()
> 	descriptorSetName <- vector()
> 	
> 	fileName <- "error"
> 
> 	appendix <- FALSE
> 	#appendix <- TRUE
> 	
> 	separation <- ";"
> #	if (length(args) < 1) {
> #		englischVersion <- FALSE
> #		#englischVersion <- TRUE
> #	} else {
> #		englischVersion <- TRUE
> #	}
> 
> 	if (typOfStartOptions == "all" | typOfStartOptions == "report" | typOfStartOptions == "allmanual") {
+ 
+ 		if (typOfStartOptions != "allmanual") {
+ 			fileName <- fileName %exists% args[1]
+ 		} else {
+ 			fileName <- "numeric_data.MaizeAnalysisAction_ 1116BA_new3.csv"
+ 			#fileName <- "report.csv" ## englischVersion <- TRUE setzen!!
+ 			#fileName <- "testDataset3.csv"
+ 		}
+ 		
+ 		if (fileName != "error") {
+ 			workingDataSet <- separation %getData% fileName
+ 			
+ 			if(workingDataSet != "error") {
+ 				#nboxplot
+ 				if (typOfStartOptions == "all") {
+ 					descriptorSet_nBoxplot <- colnames(workingDataSet)
+ 					descriptorSetName_nBoxplot <- descriptorSet
+ 					
+ 				} else { #Report	
+ 					descriptorSet_nBoxplot <- c("Weight A (g)","Weight B (g)","Water (weight-diff)","side.height.norm (mm)","side.width.norm (mm)","side.area.norm (mm^2)", "top.area.norm (mm^2)",
+ 							"side.fluo.intensity.chlorophyl.average (relative)","side.fluo.intensity.phenol.average (relative)",
+ 							"side.nir.intensity.average (relative)","side.leaf.count.median (leafs)","side.bloom.count (tassel)",
+ 							"side.leaf.length.sum.norm.max (mm)", "volume.fluo.iap","volume.iap (px^3)", "volume.iap_max", "volume.lt (px^3)",
+ 							"volume.iap.wue", "side.nir.wetness.plant_weight_drought_loss", "top.nir.wetness.plant_weight_drought_loss", "side.nir.wetness.av", "top.nir.wetness.av",
+ 							"side.area.relative", "side.height.norm.relative", "side.width.norm.relative", "top.area.relative", "side.area.relative", "volume.iap.relative",
+ 							"side.height (mm)","side.width (mm)","side.area (px)", "top.area (px)")
+ 				
+ 					descriptorSetName_nBoxplot <- c("weight before watering (g)","weight after watering (g)", "water weight (g)", "normalized height (mm)", "normalized width (mm)", "normalized side area (mm^2)", "normalized top area (mm^2)",
+ 							"chlorophyl intensity (relative intensity/pixel)", "fluorescence intensity (relative intensity/pixel)", "nir intensity (relative intensity/pixel)",
+ 							"number of leafs (leaf)", "number of tassels (tassel)", "length of leafs plus stem (mm)", "volume based on FLUO (IAP) (px^3)", "volume based on RGB (IAP) (px^3)", "volume based on max RGB-image (IAP) (px^3)", "volume based on RGB (LemnaTec) (px^3)",
+ 							"volume based water use efficiency", "weighted loss through drought stress (side)", "weighted loss through drought stress (top)", "Average wetness of side image", "Average wetness of top image",
+ 							"relative projected side area (%)", "relative plant height (%)", "relative plant width (%)", "relative projected top area (%)", "relative projected side area (%)", "relative volume (IAP based formular - RGB) (%)",
+ 							"height (px)", "width (px)", "side area (px)", "top area (px)")		
+ 				}
+ 	
+ 				nBoxOptions= NULL
+ 				#diagramTypVector <- rep.int("nboxplot", times=length(descriptorSetName))
+ 		
+ 		
+ 				#boxplot
+ 				descriptorSet_boxplot <- c("side.height.norm (mm)","side.width.norm (mm)","side.area.norm (mm^2)", "top.area.norm (mm^2)",
+ 						"volume.fluo.iap","volume.iap (px^3)", "volume.iap_max", "volume.lt (px^3)",
+ 						"side.height (mm)","side.width (mm)","side.area (px)", "top.area (px)")
+ 				
+ 				descriptorSetName_boxplot <- c("normalized height (mm)", "normalized width (mm)", "normalized side area (mm^2)", "normalized top area (mm^2)",
+ 						"volume based on FLUO (IAP) (px^3)", "volume based on RGB (IAP) (px^3)", "volume based on max RGB-image (IAP) (px^3)", "volume based on RGB (LemnaTec) (px^3)",
+ 						"height (px)", "width (px)", "side area (px)", "top area (px)")	
+ 				
+ 				boxOptions= NULL
+ 				#diagramTypVectorBox <- rep.int("boxplot", times=length(descriptorSetBox))
+ 				
+ 				#descriptorSet <- c(descriptorSet, descriptorSetBox)
+ 				#descriptorSetName <- c(descriptorSetName, descriptorSetNameBox)
+ 				#diagramTypVector <- c(diagramTypVector, diagramTypVectorBox)
+ 				
+ 				#boxplotStacked
+ 				descriptorSet_boxplotStacked <- c("side.nir.normalized.histogram.bin.1.0_25$side.nir.normalized.histogram.bin.2.25_51$side.nir.normalized.histogram.bin.3.51_76$side.nir.normalized.histogram.bin.4.76_102$side.nir.normalized.histogram.bin.5.102_127$side.nir.normalized.histogram.bin.6.127_153$side.nir.normalized.histogram.bin.7.153_178$side.nir.normalized.histogram.bin.8.178_204$side.nir.normalized.histogram.bin.9.204_229$side.nir.normalized.histogram.bin.10.229_255",
+ 								   				  "side.fluo.histogram.bin.1.0_25$side.fluo.histogram.bin.2.25_51$side.fluo.histogram.bin.3.51_76$side.fluo.histogram.bin.4.76_102$side.fluo.histogram.bin.5.102_127$side.fluo.histogram.bin.6.127_153$side.fluo.histogram.bin.7.153_178$side.fluo.histogram.bin.8.178_204$side.fluo.histogram.bin.9.204_229$side.fluo.histogram.bin.10.229_255",
+ 										  		  "top.nir.histogram.bin.1.0_25$top.nir.histogram.bin.2.25_51$top.nir.histogram.bin.3.51_76$top.nir.histogram.bin.4.76_102$top.nir.histogram.bin.5.102_127$top.nir.histogram.bin.6.127_153$top.nir.histogram.bin.7.153_178$top.nir.histogram.bin.8.178_204$top.nir.histogram.bin.9.204_229$top.nir.histogram.bin.10.229_255",
+ 												  "side.fluo.histogram.phenol.bin.1.0_25$side.fluo.histogram.phenol.bin.2.25_51$side.fluo.histogram.phenol.bin.3.51_76$side.fluo.histogram.phenol.bin.4.76_102$side.fluo.histogram.phenol.bin.5.102_127$side.fluo.histogram.phenol.bin.6.127_153$side.fluo.histogram.phenol.bin.7.153_178$side.fluo.histogram.phenol.bin.8.178_204$side.fluo.histogram.phenol.bin.9.204_229$side.fluo.histogram.phenol.bin.10.229_255",
+ 												  "side.fluo.histogram.ratio.bin.1.0_25$side.fluo.histogram.ratio.bin.2.25_51$side.fluo.histogram.ratio.bin.3.51_76$side.fluo.histogram.ratio.bin.4.76_102$side.fluo.histogram.ratio.bin.5.102_127$side.fluo.histogram.ratio.bin.6.127_153$side.fluo.histogram.ratio.bin.7.153_178$side.fluo.histogram.ratio.bin.8.178_204$side.fluo.histogram.ratio.bin.9.204_229$side.fluo.histogram.ratio.bin.10.229_255",
+ 												  "side.nir.normalized.histogram.bin.1.0_25$side.nir.normalized.histogram.bin.2.25_51$side.nir.normalized.histogram.bin.3.51_76$side.nir.normalized.histogram.bin.4.76_102$side.nir.normalized.histogram.bin.5.102_127$side.nir.normalized.histogram.bin.6.127_153$side.nir.normalized.histogram.bin.7.153_178$side.nir.normalized.histogram.bin.8.178_204$side.nir.normalized.histogram.bin.9.204_229$side.nir.normalized.histogram.bin.10.229_255",
+ 												  "side.fluo.normalized.histogram.bin.1.0_25$side.fluo.normalized.histogram.bin.2.25_51$side.fluo.normalized.histogram.bin.3.51_76$side.fluo.normalized.histogram.bin.4.76_102$side.fluo.normalized.histogram.bin.5.102_127$side.fluo.normalized.histogram.bin.6.127_153$side.fluo.normalized.histogram.bin.7.153_178$side.fluo.normalized.histogram.bin.8.178_204$side.fluo.normalized.histogram.bin.9.204_229$side.fluo.normalized.histogram.bin.10.229_255",
+ 												  "side.fluo.normalized.histogram.phenol.bin.1.0_25$side.fluo.normalized.histogram.phenol.bin.2.25_51$side.fluo.normalized.histogram.phenol.bin.3.51_76$side.fluo.normalized.histogram.phenol.bin.4.76_102$side.fluo.normalized.histogram.phenol.bin.5.102_127$side.fluo.normalized.histogram.phenol.bin.6.127_153$side.fluo.normalized.histogram.phenol.bin.7.153_178$side.fluo.normalized.histogram.phenol.bin.8.178_204$side.fluo.normalized.histogram.phenol.bin.9.204_229$side.fluo.normalized.histogram.phenol.bin.10.229_255",
+ 												  "side.fluo.normalized.histogram.ratio.bin.1.0_25$side.fluo.normalized.histogram.ratio.bin.2.25_51$side.fluo.normalized.histogram.ratio.bin.3.51_76$side.fluo.normalized.histogram.ratio.bin.4.76_102$side.fluo.normalized.histogram.ratio.bin.5.102_127$side.fluo.normalized.histogram.ratio.bin.6.127_153$side.fluo.normalized.histogram.ratio.bin.7.153_178$side.fluo.normalized.histogram.ratio.bin.8.178_204$side.fluo.normalized.histogram.ratio.bin.9.204_229$side.fluo.normalized.histogram.ratio.bin.10.229_255",
+ 												  "side.nir.histogram.phenol.bin.1.0_25$side.nir.histogram.phenol.bin.2.25_51$side.nir.histogram.phenol.bin.3.51_76$side.nir.histogram.phenol.bin.4.76_102$side.nir.histogram.phenol.bin.5.102_127$side.nir.histogram.phenol.bin.6.127_153$side.nir.histogram.phenol.bin.7.153_178$side.nir.histogram.phenol.bin.8.178_204$side.nir.histogram.phenol.bin.9.204_229$side.nir.histogram.phenol.bin.10.229_255",
+ 												  "side.nir.histogram.ratio.bin.1.0_25$side.nir.histogram.ratio.nir.2.25_51$side.nir.histogram.ratio.bin.3.51_76$side.nir.histogram.ratio.bin.4.76_102$side.nir.histogram.ratio.bin.5.102_127$side.nir.histogram.ratio.bin.6.127_153$side.nir.histogram.ratio.bin.7.153_178$side.nir.histogram.ratio.bin.8.178_204$side.nir.histogram.ratio.bin.9.204_229$side.nir.histogram.ratio.bin.10.229_255",
+ 												  "side.vis.hue.histogram.ratio.bin.1.0_25$side.vis.hue.histogram.ratio.nir.2.25_51$side.vis.hue.histogram.ratio.bin.3.51_76$side.vis.hue.histogram.ratio.bin.4.76_102$side.vis.hue.histogram.ratio.bin.5.102_127$side.vis.hue.histogram.ratio.bin.6.127_153$side.vis.hue.histogram.ratio.bin.7.153_178$side.vis.hue.histogram.ratio.bin.8.178_204$side.vis.hue.histogram.ratio.bin.9.204_229$side.vis.hue.histogram.ratio.bin.10.229_255",
+ 												  "side.vis.normalized.histogram.ratio.bin.1.0_25$side.vis.normalized.histogram.ratio.bin.2.25_51$side.vis.normalized.histogram.ratio.bin.3.51_76$side.vis.normalized.histogram.ratio.bin.4.76_102$side.vis.normalized.histogram.ratio.bin.5.102_127$side.vis.normalized.histogram.ratio.bin.6.127_153$side.vis.normalized.histogram.ratio.bin.7.153_178$side.vis.normalized.histogram.ratio.bin.8.178_204$side.vis.normalized.histogram.ratio.bin.9.204_229$side.vis.normalized.histogram.ratio.bin.10.229_255",
+ 												  "top.fluo.histogram.bin.1.0_25$top.fluo.histogram.bin.2.25_51$top.fluo.histogram.bin.3.51_76$top.fluo.histogram.bin.4.76_102$top.fluo.histogram.bin.5.102_127$top.fluo.histogram.bin.6.127_153$top.fluo.histogram.bin.7.153_178$top.fluo.histogram.bin.8.178_204$top.fluo.histogram.bin.9.204_229$top.fluo.histogram.bin.10.229_255",
+ 												  "top.fluo.histogram.phenol.bin.1.0_25$top.fluo.histogram.phenol.bin.2.25_51$top.fluo.histogram.phenol.bin.3.51_76$top.fluo.histogram.phenol.bin.4.76_102$top.fluo.histogram.phenol.bin.5.102_127$top.fluo.histogram.phenol.bin.6.127_153$top.fluo.histogram.phenol.bin.7.153_178$top.fluo.histogram.phenol.bin.8.178_204$top.fluo.histogram.phenol.bin.9.204_229$top.fluo.histogram.phenol.bin.10.229_255",
+ 												  "top.fluo.histogram.ratio.bin.1.0_25$top.fluo.histogram.ratio.bin.2.25_51$top.fluo.histogram.ratio.bin.3.51_76$top.fluo.histogram.ratio.bin.4.76_102$top.fluo.histogram.ratio.bin.5.102_127$top.fluo.histogram.ratio.bin.6.127_153$top.fluo.histogram.ratio.bin.7.153_178$top.fluo.histogram.ratio.bin.8.178_204$top.fluo.histogram.ratio.bin.9.204_229$top.fluo.histogram.ratio.bin.10.229_255",
+ 												  "top.nir.histogram.bin.1.0_25$top.nir.histogram.bin.2.25_51$top.nir.histogram.bin.3.51_76$top.nir.histogram.bin.4.76_102$top.nir.histogram.bin.5.102_127$top.nir.histogram.bin.6.127_153$top.nir.histogram.bin.7.153_178$top.nir.histogram.bin.8.178_204$top.nir.histogram.bin.9.204_229$top.nir.histogram.bin.10.229_255",
+ 												  "top.nir.histogram.phenol.bin.1.0_25$top.nir.histogram.phenol.bin.2.25_51$top.nir.histogram.phenol.bin.3.51_76$top.nir.histogram.phenol.bin.4.76_102$top.nir.histogram.phenol.bin.5.102_127$top.nir.histogram.phenol.bin.6.127_153$top.nir.histogram.phenol.bin.7.153_178$top.nir.histogram.phenol.bin.8.178_204$top.nir.histogram.phenol.bin.9.204_229$top.nir.histogram.phenol.bin.10.229_255",
+ 												  "top.nir.histogram.ratio.bin.1.0_25$top.nir.histogram.ratio.bin.2.25_51$top.nir.histogram.ratio.bin.3.51_76$top.nir.histogram.ratio.bin.4.76_102$top.nir.histogram.ratio.bin.5.102_127$top.nir.histogram.ratio.bin.6.127_153$top.nir.histogram.ratio.bin.7.153_178$top.nir.histogram.ratio.bin.8.178_204$top.nir.histogram.ratio.bin.9.204_229$top.nir.histogram.ratio.bin.10.229_255",
+ 												  "top.vis.hue.histogram.ratio.bin.1.0_25$top.vis.hue.histogram.ratio.nir.2.25_51$top.vis.hue.histogram.ratio.bin.3.51_76$top.vis.hue.histogram.ratio.bin.4.76_102$top.vis.hue.histogram.ratio.bin.5.102_127$top.vis.hue.histogram.ratio.bin.6.127_153$top.vis.hue.histogram.ratio.bin.7.153_178$top.vis.hue.histogram.ratio.bin.8.178_204$top.vis.hue.histogram.ratio.bin.9.204_229$top.vis.hue.histogram.ratio.bin.10.229_255")
+ 												  
+ 										  
+ 										  
+ 										  
+ 				descriptorSetName_boxplotStacked <- c("NIR side (%)", "red side fluorescence histogram (%)", "NIR top (%)", "yellow side fluorescence histogram (%)", "fluo side ratio histogramm (%)",
+ 													  "NIR side normalized (%)", "red side normalized fluo histogramm (%)", "yellow side normalized fluo histogramm (%)", "fluo side normalized ratio histogramm (%)",
+ 													  "NIR side phenol (%)", "NIR side ratio histogramm (%)", "VIS HUE side ratio histogramm (%)", "VIS side normalized ratio histogramm (%)",
+ 													  "red top fluorescence histogram (%)", "yellow top fluorescence histogram (%)","fluo top ratio histogramm (%)",
+ 													  "NIR top (%)", "NIR top phenol histogram (%)","NIR top ratio histogramm (%)",
+ 													  "VIS HUE top ratio histogramm (%)")
+ 											  
+ 				stackedBarOptions = list(typOfGeomBar=c("fill", "stack", "dodge"))
+ 				#diagramTypVector <- c(diagramTypVector, "boxplotStacked", "boxplotStacked")
+ 				
+ 				appendix <- appendix %exists% args[3]
+ 				
+ 				if(appendix) {
+ 					blacklist <- buildBlacklist(workingDataSet, descriptorSet)
+ 					descriptorSetAppendix <- colnames(workingDataSet[!as.data.frame(sapply(colnames(workingDataSet),'%in%', blacklist))[,1]])
+ 					descriptorSetNameAppendix <- descriptorSetAppendix
+ 					#diagramTypVectorAppendix <- rep.int("nboxplot", times=length(descriptorSetNameAppendix))
+ 				}
+ 			
+ 				saveFormat <- saveFormat %exists% args[2]
+ 							
+ 				listOfTreatAndFilterTreat <- checkOfTreatments(args, treatment, filterTreatment, secondTreatment, filterSecondTreatment, workingDataSet, debug)
+ 				treatment <- listOfTreatAndFilterTreat[[1]][[1]]
+ 				secondTreatment <- listOfTreatAndFilterTreat[[1]][[2]]
+ 				filterTreatment <- listOfTreatAndFilterTreat[[2]][[1]]
+ 				filterSecondTreatment <- listOfTreatAndFilterTreat[[2]][[2]]
+ 			} else {
+ 				fileName = "error"
+ 			}
+ 		}
+ 		
+ 	} else if (typOfStartOptions == "test"){
+ 		
+ 		
+ 		#fileName <- "1107BA_Corn_new2.csv"
+ 			
+ 		#workingDataSet <- read.csv2(fileName, header=TRUE, sep=";", fileEncoding="ISO-8859-1", encoding="UTF-8")                   
+ 		#descriptorSet <- c("side.nir.intensity.average.norm","side.nir.intensity.average","side.hull.area.norm","side.height.norm","Gewicht.B","water.consumption")                   
+ 		#descriptorSetName <- c("nir intensity (rel. intensity/px)","nir intensity (rel. intensity/px)","convex hull area (mm^2)","height (mm)","target weight (g)","water consumption")
+ 			
+ 		#descriptorSet <- c("side.nir.intensity.average.norm","Gewicht.B")                   
+ 		#descriptorSetName <- c("nir intensity (rel. intensity/px)","target weight (g)")
+ 				
+ 		#descriptorSet <- c("digital.biomass.unnormal","digital.biomass.normal","mark3.y")                   
+ 		#descriptorSetName <- c("digital biomass (mm^3)","digital biomass (mm^3)","mark (% from image height)")
+ 			
+ 		#descriptorSet <- c("digital.biomass.keygene.norm","side.area","top.area")                   
+ 		#descriptorSetName <- c("digital biomass (mm^3)","test1", "test2")
+ 			
+ #		descriptorSet <- c("side.nir.normalized.histogram.bin.1.0_25$side.nir.normalized.histogram.bin.2.25_51$side.nir.normalized.histogram.bin.3.51_76$side.nir.normalized.histogram.bin.4.76_102$side.nir.normalized.histogram.bin.5.102_127$side.nir.normalized.histogram.bin.6.127_153$side.nir.normalized.histogram.bin.7.153_178$side.nir.normalized.histogram.bin.8.178_204$side.nir.normalized.histogram.bin.9.204_229$side.nir.normalized.histogram.bin.10.229_255",
+ #					"side.fluo.normalized.histogram.bin.1.0_25$side.fluo.normalized.histogram.bin.2.25_51$side.fluo.normalized.histogram.bin.3.51_76$side.fluo.normalized.histogram.bin.4.76_102$side.fluo.normalized.histogram.bin.5.102_127$side.fluo.normalized.histogram.bin.6.127_153$side.fluo.normalized.histogram.bin.7.153_178$side.fluo.normalized.histogram.bin.8.178_204$side.fluo.normalized.histogram.bin.9.204_229$side.fluo.normalized.histogram.bin.10.229_255")
+ #		descriptorSetName <- c("NIR absorption class (%)", "chlorophyll fluorescence histogram (%)")
+ 			
+ #		descriptorSet <- c("side.nir.normalized.histogram.bin.1.0_25$side.nir.normalized.histogram.bin.2.25_51$side.nir.normalized.histogram.bin.3.51_76$side.nir.normalized.histogram.bin.4.76_102$side.nir.normalized.histogram.bin.5.102_127$side.nir.normalized.histogram.bin.6.127_153$side.nir.normalized.histogram.bin.7.153_178$side.nir.normalized.histogram.bin.8.178_204$side.nir.normalized.histogram.bin.9.204_229$side.nir.normalized.histogram.bin.10.229_255")
+ #		descriptorSetName <- c("NIR absorption class (%)")
+ 			
+ 		#descriptorSet <- c("Plant ID$Treatment$Hallo$Wert1$Repl ID")
+ 		#descriptorSetName <- c("VariableMix")
+ 	
+ #		descriptorSet <- c("side.fluo.normalized.histogram.bin.1.0_25$side.fluo.normalized.histogram.bin.2.25_51$side.fluo.normalized.histogram.bin.3.51_76$side.fluo.normalized.histogram.bin.4.76_102$side.fluo.normalized.histogram.bin.5.102_127$side.fluo.normalized.histogram.bin.6.127_153$side.fluo.normalized.histogram.bin.7.153_178$side.fluo.normalized.histogram.bin.8.178_204$side.fluo.normalized.histogram.bin.9.204_229$side.fluo.normalized.histogram.bin.10.229_255")
+ #		#descriptorSet <- c("side.fluo.normalized.histogram.bin.2.25_51$side.fluo.normalized.histogram.bin.1.0_25$side.fluo.normalized.histogram.bin.3.51_76$side.fluo.normalized.histogram.bin.4.76_102$side.fluo.normalized.histogram.bin.5.102_127$side.fluo.normalized.histogram.bin.6.127_153$side.fluo.normalized.histogram.bin.7.153_178$side.fluo.normalized.histogram.bin.8.178_204$side.fluo.normalized.histogram.bin.9.204_229$side.fluo.normalized.histogram.bin.10.229_255")
+ #		descriptorSetName <- c("red fluorescence histogram (%)")
+ 	
+ 	
+ 		#descriptorSet <- c("Weight B (g)","side.height.norm (mm)","side.width.norm (mm)","side.area.norm (mm^2)",
+ 		#		"side.fluo.intensity.chlorophyl.average (relative)","side.fluo.intensity.phenol.average (relative)",
+ 		#		"side.nir.intensity.average (relative)",
+ 		#		"side.leaf.count.median (leafs)","side.bloom.count (tassel)","side.leaf.length.sum.norm.max (mm)")
+ 			
+ 		# "digital biomass IAP (pixel^3)","digital biomass KeyGene (pixel^3)", 
+ 		#descriptorSetName <- c("weight (g)","height (mm)", "width (mm)", "side area (pixel^2)",
+ 		#		"chlorophyl intensity (relative intensity/pixel)", "fluorescence intensity (relative intensity/pixel)", "nir intensity (relative intensity/pixel)",
+ 		#		"number of leafs (leaf)", "number of tassels (tassel)", "length of leafs plus stem (mm)")
+ 		
+ #		descriptorSet <- c("side.area (px)","side.area.norm (mm^2)")
+ #		descriptorSetName <- c("side area uncorrected (mm^2)", "side area corrected (mm^2)")
+ 		
+ 		#descriptorSet <- c("Hallo2")
+ 		#descriptorSetName <- c("Test")
+ 		
+ 		#descriptorSet <- colnames(workingDataSet)
+ 		#descriptorSetName <- colnames(workingDataSet)
+ 		
+ 		#treatment <- "none"
+ 		treatment <- "Genotype"
+ 		#treatment <- "Treatment"
+ 		#treatment <- "Condition"
+ 		#filterTreatment <- "dry$normal$wet"
+ 		#filterTreatment <- "dry$normal"
+ 		#filterTreatment <- "normal bewaessert$Trockentress"
+ 		#filterTreatment <- "ganz"
+ 		filterTreatment <- "none"
+ 		##filterTreatment <- "Deutschland$Spanien$Italien$China"
+ 		
+ 		#secondTreatment <- "Genotype"
+ 		secondTreatment <- "none"
+ 		#secondTreatment <- "Species"
+ 		#secondTreatment <- "Variety"
+ 		filterSecondTreatment <- "none"
+ 		
+ 		#secondTreatment <- "secondTreatment"
+ 		#filterSecondTreatment <- "a$c"
+ 		
+ 		###1116BA#########6 8 10 12 13 14 15 16 17 19 20 21 22 23 24 25 26 27 28 29 30 31 33 34 35 36 37 38 39 40
+ 		#filterXaxis <- c("6$8$10$12$13$14$15$16$20$21$22$23$26$27$28$29$30$31$33$34$35$36$37$38")
+ 		#filterXaxis <- c("6$8$13")
+ 		###1107BA#########2$4$6$8$10$12$13$15$16$21$22$25$27$29$30$31$33$35$36$37$39$41$42$43$45$47$49$50$51$55$57$59$61$63$64
+ 		#filterXaxis <- c("2$4$6$8$10$12$13$15$16$21$22$25$27$29$30$31$33$35$36$37$39$41$43$45$47$49$50$51$55$57$59$61$63$64")
+ 		#filterXaxis <- c("6$8$10")
+ 		filterXaxis <- "none"
+ 		#filterXaxis <- c("6$8$10$12$13$14$15$16$20$21$22$23$26$27$28$29$30$31$33$34$35$36$37$38")
+ 		
+ 		#treatment <- "Treatment"
+ 		##treatment <- "Variety"
+ 		#treatment <- "none"
+ 		
+ 		#diagramTyp="boxplotStacked"
+ 		#diagramTyp="nboxplot"
+ 		#diagramTyp="boxplot"
+ 		
+ 		bgColor <- "transparent"
+ 		isGray="FALSE"
+ 		#transparent <- "TRUE"
+ 		#legendUnderImage <- "TRUE"
+ 		#showResultInR <- TRUE
+ 		showResultInR <- FALSE
+ 		
+ 		#fileName <- "numeric_data.MaizeAnalysisAction_ 1116BA_new3.csv"
+ 		#fileName <- "testDataset2.csv"
+ 		fileName <- "report.csv"
+ 		#fileName <- "testDataset3.csv"
+ 		#englischVersion <- FALSE
+ 		#englischVersion <- TRUE
+ 		separation <- ";"
+ 		workingDataSet <- separation %getData% fileName
+ 		
+ 		#descriptor <- c("Hallo2")
+ 		#descriptor <- c("Plant ID","Treatment","Hallo","Wert1", "Repl ID")
+ 		#descriptor <- c("Repl ID")		
+ 		#descriptorSet <- c("nir.top")
+ 		#descriptorSet <- c("Plant ID")
+ 		#descriptorSet <- c("side.height.norm (mm)")
+ 
+ 		#descriptorSet <- c("side.area.norm (mm^2)")
+ 		#descriptorSetName <- c("Das ist ein Testname")
+ 		if(TRUE) {
+ 			
+ 			descriptorSet_nBoxplot <- c("Weight A (g)","Weight B (g)","Water (weight-diff)","side.height.norm (mm)","side.width.norm (mm)","side.area.norm (mm^2)", "top.area.norm (mm^2)",
+ 					"side.fluo.intensity.chlorophyl.average (relative)","side.fluo.intensity.phenol.average (relative)",
+ 					"side.nir.intensity.average (relative)","side.leaf.count.median (leafs)","side.bloom.count (tassel)",
+ 					"side.leaf.length.sum.norm.max (mm)", "volume.fluo.iap","volume.iap (px^3)", "volume.iap_max", "volume.lt (px^3)",
+ 					"volume.iap.wue", "side.nir.wetness.plant_weight_drought_loss", "top.nir.wetness.plant_weight_drought_loss", "side.nir.wetness.av", "top.nir.wetness.av",
+ 					"side.area.relative", "side.height.norm.relative", "side.width.norm.relative", "top.area.relative", "side.area.relative", "volume.iap.relative",
+ 					"side.height (mm)","side.width (mm)","side.area (px)", "top.area (px)")
+ 			
+ 			descriptorSetName_nBoxplot <- c("weight before watering (g)","weight after watering (g)", "water weight (g)", "normalized height (mm)", "normalized width (mm)", "normalized side area (mm^2)", "normalized top area (mm^2)",
+ 					"chlorophyl intensity (relative intensity/pixel)", "fluorescence intensity (relative intensity/pixel)", "nir intensity (relative intensity/pixel)",
+ 					"number of leafs (leaf)", "number of tassels (tassel)", "length of leafs plus stem (mm)", "volume based on FLUO (IAP) (px^3)", "volume based on RGB (IAP) (px^3)", "volume based on max RGB-image (IAP) (px^3)", "volume based on RGB (LemnaTec) (px^3)",
+ 					"volume based water use efficiency", "weighted loss through drought stress (side)", "weighted loss through drought stress (top)", "Average wetness of side image", "Average wetness of top image",
+ 					"relative projected side area (%)", "relative plant height (%)", "relative plant width (%)", "relative projected top area (%)", "relative projected side area (%)", "relative volume (IAP based formular - RGB) (%)",
+ 					"height (px)", "width (px)", "side area (px)", "top area (px)")		
+ 		
+ 		nBoxOptions= NULL
+ 		#diagramTypVector <- rep.int("nboxplot", times=length(descriptorSetName))
+ 		
+ 		
+ 		#boxplot
+ 		descriptorSet_boxplot <- c("side.height.norm (mm)","side.width.norm (mm)","side.area.norm (mm^2)", "top.area.norm (mm^2)",
+ 				"volume.fluo.iap","volume.iap (px^3)", "volume.iap_max", "volume.lt (px^3)",
+ 				"side.height (mm)","side.width (mm)","side.area (px)", "top.area (px)")
+ 		
+ 		descriptorSetName_boxplot <- c("normalized height (mm)", "normalized width (mm)", "normalized side area (mm^2)", "normalized top area (mm^2)",
+ 				"volume based on FLUO (IAP) (px^3)", "volume based on RGB (IAP) (px^3)", "volume based on max RGB-image (IAP) (px^3)", "volume based on RGB (LemnaTec) (px^3)",
+ 				"height (px)", "width (px)", "side area (px)", "top area (px)")	
+ 		
+ 		boxOptions= NULL
+ 		#diagramTypVectorBox <- rep.int("boxplot", times=length(descriptorSetBox))
+ 		
+ 		#descriptorSet <- c(descriptorSet, descriptorSetBox)
+ 		#descriptorSetName <- c(descriptorSetName, descriptorSetNameBox)
+ 		#diagramTypVector <- c(diagramTypVector, diagramTypVectorBox)
+ 		
+ 		#boxplotStacked
+ 		descriptorSet_boxplotStacked <- c("side.nir.normalized.histogram.bin.1.0_25$side.nir.normalized.histogram.bin.2.25_51$side.nir.normalized.histogram.bin.3.51_76$side.nir.normalized.histogram.bin.4.76_102$side.nir.normalized.histogram.bin.5.102_127$side.nir.normalized.histogram.bin.6.127_153$side.nir.normalized.histogram.bin.7.153_178$side.nir.normalized.histogram.bin.8.178_204$side.nir.normalized.histogram.bin.9.204_229$side.nir.normalized.histogram.bin.10.229_255",
+ 				"side.fluo.histogram.bin.1.0_25$side.fluo.histogram.bin.2.25_51$side.fluo.histogram.bin.3.51_76$side.fluo.histogram.bin.4.76_102$side.fluo.histogram.bin.5.102_127$side.fluo.histogram.bin.6.127_153$side.fluo.histogram.bin.7.153_178$side.fluo.histogram.bin.8.178_204$side.fluo.histogram.bin.9.204_229$side.fluo.histogram.bin.10.229_255",
+ 				"top.nir.histogram.bin.1.0_25$top.nir.histogram.bin.2.25_51$top.nir.histogram.bin.3.51_76$top.nir.histogram.bin.4.76_102$top.nir.histogram.bin.5.102_127$top.nir.histogram.bin.6.127_153$top.nir.histogram.bin.7.153_178$top.nir.histogram.bin.8.178_204$top.nir.histogram.bin.9.204_229$top.nir.histogram.bin.10.229_255",
+ 				"side.fluo.histogram.phenol.bin.1.0_25$side.fluo.histogram.phenol.bin.2.25_51$side.fluo.histogram.phenol.bin.3.51_76$side.fluo.histogram.phenol.bin.4.76_102$side.fluo.histogram.phenol.bin.5.102_127$side.fluo.histogram.phenol.bin.6.127_153$side.fluo.histogram.phenol.bin.7.153_178$side.fluo.histogram.phenol.bin.8.178_204$side.fluo.histogram.phenol.bin.9.204_229$side.fluo.histogram.phenol.bin.10.229_255",
+ 				"side.fluo.histogram.ratio.bin.1.0_25$side.fluo.histogram.ratio.bin.2.25_51$side.fluo.histogram.ratio.bin.3.51_76$side.fluo.histogram.ratio.bin.4.76_102$side.fluo.histogram.ratio.bin.5.102_127$side.fluo.histogram.ratio.bin.6.127_153$side.fluo.histogram.ratio.bin.7.153_178$side.fluo.histogram.ratio.bin.8.178_204$side.fluo.histogram.ratio.bin.9.204_229$side.fluo.histogram.ratio.bin.10.229_255",
+ 				"side.nir.normalized.histogram.bin.1.0_25$side.nir.normalized.histogram.bin.2.25_51$side.nir.normalized.histogram.bin.3.51_76$side.nir.normalized.histogram.bin.4.76_102$side.nir.normalized.histogram.bin.5.102_127$side.nir.normalized.histogram.bin.6.127_153$side.nir.normalized.histogram.bin.7.153_178$side.nir.normalized.histogram.bin.8.178_204$side.nir.normalized.histogram.bin.9.204_229$side.nir.normalized.histogram.bin.10.229_255",
+ 				"side.fluo.normalized.histogram.bin.1.0_25$side.fluo.normalized.histogram.bin.2.25_51$side.fluo.normalized.histogram.bin.3.51_76$side.fluo.normalized.histogram.bin.4.76_102$side.fluo.normalized.histogram.bin.5.102_127$side.fluo.normalized.histogram.bin.6.127_153$side.fluo.normalized.histogram.bin.7.153_178$side.fluo.normalized.histogram.bin.8.178_204$side.fluo.normalized.histogram.bin.9.204_229$side.fluo.normalized.histogram.bin.10.229_255",
+ 				"side.fluo.normalized.histogram.phenol.bin.1.0_25$side.fluo.normalized.histogram.phenol.bin.2.25_51$side.fluo.normalized.histogram.phenol.bin.3.51_76$side.fluo.normalized.histogram.phenol.bin.4.76_102$side.fluo.normalized.histogram.phenol.bin.5.102_127$side.fluo.normalized.histogram.phenol.bin.6.127_153$side.fluo.normalized.histogram.phenol.bin.7.153_178$side.fluo.normalized.histogram.phenol.bin.8.178_204$side.fluo.normalized.histogram.phenol.bin.9.204_229$side.fluo.normalized.histogram.phenol.bin.10.229_255",
+ 				"side.fluo.normalized.histogram.ratio.bin.1.0_25$side.fluo.normalized.histogram.ratio.bin.2.25_51$side.fluo.normalized.histogram.ratio.bin.3.51_76$side.fluo.normalized.histogram.ratio.bin.4.76_102$side.fluo.normalized.histogram.ratio.bin.5.102_127$side.fluo.normalized.histogram.ratio.bin.6.127_153$side.fluo.normalized.histogram.ratio.bin.7.153_178$side.fluo.normalized.histogram.ratio.bin.8.178_204$side.fluo.normalized.histogram.ratio.bin.9.204_229$side.fluo.normalized.histogram.ratio.bin.10.229_255",
+ 				"side.nir.histogram.phenol.bin.1.0_25$side.nir.histogram.phenol.bin.2.25_51$side.nir.histogram.phenol.bin.3.51_76$side.nir.histogram.phenol.bin.4.76_102$side.nir.histogram.phenol.bin.5.102_127$side.nir.histogram.phenol.bin.6.127_153$side.nir.histogram.phenol.bin.7.153_178$side.nir.histogram.phenol.bin.8.178_204$side.nir.histogram.phenol.bin.9.204_229$side.nir.histogram.phenol.bin.10.229_255",
+ 				"side.nir.histogram.ratio.bin.1.0_25$side.nir.histogram.ratio.nir.2.25_51$side.nir.histogram.ratio.bin.3.51_76$side.nir.histogram.ratio.bin.4.76_102$side.nir.histogram.ratio.bin.5.102_127$side.nir.histogram.ratio.bin.6.127_153$side.nir.histogram.ratio.bin.7.153_178$side.nir.histogram.ratio.bin.8.178_204$side.nir.histogram.ratio.bin.9.204_229$side.nir.histogram.ratio.bin.10.229_255",
+ 				"side.vis.hue.histogram.ratio.bin.1.0_25$side.vis.hue.histogram.ratio.nir.2.25_51$side.vis.hue.histogram.ratio.bin.3.51_76$side.vis.hue.histogram.ratio.bin.4.76_102$side.vis.hue.histogram.ratio.bin.5.102_127$side.vis.hue.histogram.ratio.bin.6.127_153$side.vis.hue.histogram.ratio.bin.7.153_178$side.vis.hue.histogram.ratio.bin.8.178_204$side.vis.hue.histogram.ratio.bin.9.204_229$side.vis.hue.histogram.ratio.bin.10.229_255",
+ 				"side.vis.normalized.histogram.ratio.bin.1.0_25$side.vis.normalized.histogram.ratio.bin.2.25_51$side.vis.normalized.histogram.ratio.bin.3.51_76$side.vis.normalized.histogram.ratio.bin.4.76_102$side.vis.normalized.histogram.ratio.bin.5.102_127$side.vis.normalized.histogram.ratio.bin.6.127_153$side.vis.normalized.histogram.ratio.bin.7.153_178$side.vis.normalized.histogram.ratio.bin.8.178_204$side.vis.normalized.histogram.ratio.bin.9.204_229$side.vis.normalized.histogram.ratio.bin.10.229_255",
+ 				"top.fluo.histogram.bin.1.0_25$top.fluo.histogram.bin.2.25_51$top.fluo.histogram.bin.3.51_76$top.fluo.histogram.bin.4.76_102$top.fluo.histogram.bin.5.102_127$top.fluo.histogram.bin.6.127_153$top.fluo.histogram.bin.7.153_178$top.fluo.histogram.bin.8.178_204$top.fluo.histogram.bin.9.204_229$top.fluo.histogram.bin.10.229_255",
+ 				"top.fluo.histogram.phenol.bin.1.0_25$top.fluo.histogram.phenol.bin.2.25_51$top.fluo.histogram.phenol.bin.3.51_76$top.fluo.histogram.phenol.bin.4.76_102$top.fluo.histogram.phenol.bin.5.102_127$top.fluo.histogram.phenol.bin.6.127_153$top.fluo.histogram.phenol.bin.7.153_178$top.fluo.histogram.phenol.bin.8.178_204$top.fluo.histogram.phenol.bin.9.204_229$top.fluo.histogram.phenol.bin.10.229_255",
+ 				"top.fluo.histogram.ratio.bin.1.0_25$top.fluo.histogram.ratio.bin.2.25_51$top.fluo.histogram.ratio.bin.3.51_76$top.fluo.histogram.ratio.bin.4.76_102$top.fluo.histogram.ratio.bin.5.102_127$top.fluo.histogram.ratio.bin.6.127_153$top.fluo.histogram.ratio.bin.7.153_178$top.fluo.histogram.ratio.bin.8.178_204$top.fluo.histogram.ratio.bin.9.204_229$top.fluo.histogram.ratio.bin.10.229_255",
+ 				"top.nir.histogram.bin.1.0_25$top.nir.histogram.bin.2.25_51$top.nir.histogram.bin.3.51_76$top.nir.histogram.bin.4.76_102$top.nir.histogram.bin.5.102_127$top.nir.histogram.bin.6.127_153$top.nir.histogram.bin.7.153_178$top.nir.histogram.bin.8.178_204$top.nir.histogram.bin.9.204_229$top.nir.histogram.bin.10.229_255",
+ 				"top.nir.histogram.phenol.bin.1.0_25$top.nir.histogram.phenol.bin.2.25_51$top.nir.histogram.phenol.bin.3.51_76$top.nir.histogram.phenol.bin.4.76_102$top.nir.histogram.phenol.bin.5.102_127$top.nir.histogram.phenol.bin.6.127_153$top.nir.histogram.phenol.bin.7.153_178$top.nir.histogram.phenol.bin.8.178_204$top.nir.histogram.phenol.bin.9.204_229$top.nir.histogram.phenol.bin.10.229_255",
+ 				"top.nir.histogram.ratio.bin.1.0_25$top.nir.histogram.ratio.bin.2.25_51$top.nir.histogram.ratio.bin.3.51_76$top.nir.histogram.ratio.bin.4.76_102$top.nir.histogram.ratio.bin.5.102_127$top.nir.histogram.ratio.bin.6.127_153$top.nir.histogram.ratio.bin.7.153_178$top.nir.histogram.ratio.bin.8.178_204$top.nir.histogram.ratio.bin.9.204_229$top.nir.histogram.ratio.bin.10.229_255",
+ 				"top.vis.hue.histogram.ratio.bin.1.0_25$top.vis.hue.histogram.ratio.nir.2.25_51$top.vis.hue.histogram.ratio.bin.3.51_76$top.vis.hue.histogram.ratio.bin.4.76_102$top.vis.hue.histogram.ratio.bin.5.102_127$top.vis.hue.histogram.ratio.bin.6.127_153$top.vis.hue.histogram.ratio.bin.7.153_178$top.vis.hue.histogram.ratio.bin.8.178_204$top.vis.hue.histogram.ratio.bin.9.204_229$top.vis.hue.histogram.ratio.bin.10.229_255")
+ 		
+ 		
+ 		
+ 		
+ 		descriptorSetName_boxplotStacked <- c("NIR side (%)", "red side fluorescence histogram (%)", "NIR top (%)", "yellow side fluorescence histogram (%)", "fluo side ratio histogramm (%)",
+ 				"NIR side normalized (%)", "red side normalized fluo histogramm (%)", "yellow side normalized fluo histogramm (%)", "fluo side normalized ratio histogramm (%)",
+ 				"NIR side phenol (%)", "NIR side ratio histogramm (%)", "VIS HUE side ratio histogramm (%)", "VIS side normalized ratio histogramm (%)",
+ 				"red top fluorescence histogram (%)", "yellow top fluorescence histogram (%)","fluo top ratio histogramm (%)",
+ 				"NIR top (%)", "NIR top phenol histogram (%)","NIR top ratio histogramm (%)",
+ 				"VIS HUE top ratio histogramm (%)")
+ 		
+ 		stackedBarOptions = list(typOfGeomBar=c("fill", "stack", "dodge"))
+ 		#diagramTypVector <- c(diagramTypVector, "boxplotStacked", "boxplotStacked")
+ 		} else {
+ 
+ 			descriptorSet_nBoxplot <- c("side.area.norm (mm^2)", "Weight A (g)","side.height.norm (mm)")
+ 			descriptorSetName_nBoxplot <- c("Area", "Gewicht", "Heigh")
+ 	
+ 			descriptorSet_boxplot <- c("side.area.norm (mm^2)", "side.height.norm (mm)")
+ 			descriptorSetName_boxplot <- c("Area Boxplot", "Heigh Boxplot")
+ 			
+ 	#		descriptorSet_boxplotStacked <- c("side.nir.normalized.histogram.bin.1.0_25$side.nir.normalized.histogram.bin.2.25_51$side.nir.normalized.histogram.bin.3.51_76$side.nir.normalized.histogram.bin.4.76_102$side.nir.normalized.histogram.bin.5.102_127$side.nir.normalized.histogram.bin.6.127_153$side.nir.normalized.histogram.bin.7.153_178$side.nir.normalized.histogram.bin.8.178_204$side.nir.normalized.histogram.bin.9.204_229$side.nir.normalized.histogram.bin.10.229_255",
+ 	#										  "side.fluo.normalized.histogram.bin.1.0_25$side.fluo.normalized.histogram.bin.2.25_51$side.fluo.normalized.histogram.bin.3.51_76$side.fluo.normalized.histogram.bin.4.76_102$side.fluo.normalized.histogram.bin.5.102_127$side.fluo.normalized.histogram.bin.6.127_153$side.fluo.normalized.histogram.bin.7.153_178$side.fluo.normalized.histogram.bin.8.178_204$side.fluo.normalized.histogram.bin.9.204_229$side.fluo.normalized.histogram.bin.10.229_255")
+ 			
+ 			descriptorSet_boxplotStacked <- c("side.fluo.normalized.histogram.bin.1.0_25$side.fluo.normalized.histogram.bin.2.25_51$side.fluo.normalized.histogram.bin.3.51_76$side.fluo.normalized.histogram.bin.4.76_102$side.fluo.normalized.histogram.bin.5.102_127$side.fluo.normalized.histogram.bin.6.127_153$side.fluo.normalized.histogram.bin.7.153_178$side.fluo.normalized.histogram.bin.8.178_204$side.fluo.normalized.histogram.bin.9.204_229$side.fluo.normalized.histogram.bin.10.229_255",
+ 									  "side.nir.normalized.histogram.bin.1.0_25$side.nir.normalized.histogram.bin.2.25_51$side.nir.normalized.histogram.bin.3.51_76$side.nir.normalized.histogram.bin.4.76_102$side.nir.normalized.histogram.bin.5.102_127$side.nir.normalized.histogram.bin.6.127_153$side.nir.normalized.histogram.bin.7.153_178$side.nir.normalized.histogram.bin.8.178_204$side.nir.normalized.histogram.bin.9.204_229$side.nir.normalized.histogram.bin.10.229_255",
+ 									  "top.nir.histogram.bin.1.0_25$top.nir.histogram.bin.2.25_51$top.nir.histogram.bin.3.51_76$top.nir.histogram.bin.4.76_102$top.nir.histogram.bin.5.102_127$top.nir.histogram.bin.6.127_153$top.nir.histogram.bin.7.153_178$top.nir.histogram.bin.8.178_204$top.nir.histogram.bin.9.204_229$top.nir.histogram.bin.10.229_255")
+ 			
+ 			descriptorSetName_boxplotStacked <- c("red fluorescence histogram (%)", "NIR absorption class (%)", "NIR Top")
+ 		
+ 			
+ 			nBoxOptions= NULL
+ 			boxOptions= NULL
+ 			stackedBarOptions = list(typOfGeomBar=c("fill", "stack", "dodge"))
+ 		}	
+ 	
+ 		
+ 		#descriptorSet <- c("Plant ID$Treatment$Hallo$Wert1$Repl ID")
+ 		#diagramTypVector <- diagramTyp
+ 		#diagramTypVector <- rep.int(diagramTyp, times=length(descriptorSetName))
+ 		
+ 		
+ 
+ 		nBoxDes = descriptorSet_nBoxplot
+ 		boxDes = descriptorSet_boxplot
+ 		boxStackDes = descriptorSet_boxplotStacked
+ 		SaveName_nBoxDes = nBoxDes
+ 		SaveName_boxDes = boxDes
+ 		SaveName_boxStackDes = boxStackDes
+ 		nBoxDesName = descriptorSetName_nBoxplot
+ 		boxDesName = descriptorSetName_boxplot
+ 		boxStackDesName = descriptorSetName_boxplotStacked
+ 
+ 		saveName <- "test2"
+ 		yAxisName <- "test2"
+ 		debug <- TRUE
+ 		iniDataSet = workingDataSet
+ 		#descriptor <- c("Plant ID$Treatment$Hallo$Wert1$Repl ID")
+ 		#descriptor <- c("side.area.norm (mm^2)")
+ 		#descriptorSet <- c("side.fluo.bloom.area.size (mm^2)")
+ 		#descriptor <- c("side.fluo.bloom.area.size (mm^2)")
+ 		descriptor <- descriptorSet
+ 		#descriptor <- c("Repl ID")
+ 		#descriptor <- c("side.nir.normalized.histogram.bin.1.0_25$side.nir.normalized.histogram.bin.2.25_51$side.nir.normalized.histogram.bin.3.51_76$side.nir.normalized.histogram.bin.4.76_102$side.nir.normalized.histogram.bin.5.102_127$side.nir.normalized.histogram.bin.6.127_153$side.nir.normalized.histogram.bin.7.153_178$side.nir.normalized.histogram.bin.8.178_204$side.nir.normalized.histogram.bin.9.204_229$side.nir.normalized.histogram.bin.10.229_255")
+ 		appendix <- FALSE
+ 		stoppTheCalculation <- FALSE
+ 		
+ }
[1] "... Read input file"
Read 2 items
[1] "... english Version"
> overallList <- list(iniDataSet=iniDataSet, saveFormat=saveFormat, dpi=dpi, isGray=isGray, 
+ 						nBoxDes = nBoxDes, boxDes = boxDes, boxStackDes = boxStackDes,
+ 						saveName_nBoxDes = nBoxDes, saveName_boxDes = boxDes, saveName_boxStackDes = boxStackDes,
+ 						nBoxDesName = nBoxDesName, boxDesName = boxDesName, boxStackDesName = boxStackDesName,
+ 						nBoxOptions= nBoxOptions, boxOptions= boxOptions, stackedBarOptions = stackedBarOptions, 
+ 						treatment=treatment, filterTreatment=filterTreatment,
+ 						secondTreatment=secondTreatment, filterSecondTreatment=filterSecondTreatment, filterXaxis=filterXaxis, xAxis=xAxis,
+ 						showResultInR=showResultInR, xAxisName=xAxisName, debug=debug, 
+ 						appendix=appendix, stoppTheCalculation=stoppTheCalculation,
+ 						overallResult_nBoxDes=data.frame(), overallResult_boxDes=data.frame(), overallResult_boxStackDes=data.frame(),
+ 						color_nBox = list(), color_box=list(), color_boxStack=list())	
> 				
> 	#install.packages(c("Cairo"), repos="http://cran.r-project.org", dependencies = TRUE)
> 	library("Cairo")
> 	#install.packages(c("RColorBrewer"), repos="http://cran.r-project.org", dependencies = TRUE)
> 	library("RColorBrewer")
> 	#install.packages(c("data.table"), repos="http://cran.r-project.org", dependencies = TRUE)
> 	library(data.table)
> 	#install.packages(c("ggplot2"), repos="http://cran.r-project.org", dependencies = TRUE)
> 	library(ggplot2)
> 	#install.packages(c("Hmisc"), repos="http://cran.r-project.org", dependencies = TRUE)
> 	#library("Hmisc")
> 	
> 	overallList$debug %debug% "Start"
[1] "DebugBreakPoint:  Start"
> 	
> 	overallList <- overallChangeName(overallList)
[1] "DebugBreakPoint:  overallChangeSaveName()"
[1] "... nBoxplot"
[1] "... Boxplot"
[1] "... stackedBoxplot"
> 	overallList <- overallPreprocessingOfDescriptor(overallList)
[1] "DebugBreakPoint:  overallPreprocessingOfDescriptor()"
[1] "... nBoxplot"
[1] "No plotting, because the descriptor(s) (top.area.norm..mm.2.) don't exists!"
[1] "No plotting, because the descriptor(s) (side.nir.wetness.av) don't exists!"
[1] "No plotting, because the descriptor(s) (top.nir.wetness.av) don't exists!"
[1] "... Boxplot"
[1] "No plotting, because the descriptor(s) (top.area.norm..mm.2.) don't exists!"
[1] "... stackedBoxplot"
[1] "No plotting, because the descriptor(s) (side.nir.histogram.ratio.nir.2.25_51) don't exists!"
[1] "No plotting, because the descriptor(s) (side.vis.hue.histogram.ratio.nir.2.25_51) don't exists!"
[1] "No plotting, because the descriptor(s) (top.vis.hue.histogram.ratio.nir.2.25_51) don't exists!"
> 	
> 	
> ###############################	
> 	overallList <- preprocessingOfxAxisValue(overallList)
[1] "DebugBreakPoint:  preprocessingOfxAxisValue()"
> 	overallList <- preprocessingOfTreatment(overallList)
[1] "DebugBreakPoint:  preprocessingOfTheTreatment()"
> 	overallList <- preprocessingOfSecondTreatment(overallList)
[1] "DebugBreakPoint:  preprocessingOfTheSecondTreatment()"
[1] "... set 'filterSecondTreatment' and 'secondTreatment' to 'none'!"
> 	overallList <- overallCheckIfDescriptorIsNaOrAllZero(overallList)
[1] "DebugBreakPoint:  overallCheckIfDescriptorIsNaOrAllZero()"
[1] "... nBoxplot"
[1] "Dummy plotting for this descriptor(s) ((side.bloom.count..tassel.), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((side.nir.wetness.plant_weight_drought_loss), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((top.nir.wetness.plant_weight_drought_loss), because all zero or not numeric!"
[1] "... Boxplot"
[1] "... stackedBoxplot"
[1] "Dummy plotting for this descriptor(s) ((side.nir.normalized.histogram.bin.1.0_25), because all zero or not numeric!"    
[2] "Dummy plotting for this descriptor(s) ((side.nir.normalized.histogram.bin.2.25_51), because all zero or not numeric!"   
[3] "Dummy plotting for this descriptor(s) ((side.nir.normalized.histogram.bin.8.178_204), because all zero or not numeric!" 
[4] "Dummy plotting for this descriptor(s) ((side.nir.normalized.histogram.bin.9.204_229), because all zero or not numeric!" 
[5] "Dummy plotting for this descriptor(s) ((side.nir.normalized.histogram.bin.10.229_255), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((side.fluo.histogram.bin.9.204_229), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((top.nir.histogram.bin.1.0_25), because all zero or not numeric!"    
[2] "Dummy plotting for this descriptor(s) ((top.nir.histogram.bin.10.229_255), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((side.fluo.histogram.phenol.bin.8.178_204), because all zero or not numeric!"
[2] "Dummy plotting for this descriptor(s) ((side.fluo.histogram.phenol.bin.9.204_229), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((side.fluo.histogram.ratio.bin.2.25_51), because all zero or not numeric!"  
[2] "Dummy plotting for this descriptor(s) ((side.fluo.histogram.ratio.bin.3.51_76), because all zero or not numeric!"  
[3] "Dummy plotting for this descriptor(s) ((side.fluo.histogram.ratio.bin.9.204_229), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((side.nir.normalized.histogram.bin.1.0_25), because all zero or not numeric!"    
[2] "Dummy plotting for this descriptor(s) ((side.nir.normalized.histogram.bin.2.25_51), because all zero or not numeric!"   
[3] "Dummy plotting for this descriptor(s) ((side.nir.normalized.histogram.bin.8.178_204), because all zero or not numeric!" 
[4] "Dummy plotting for this descriptor(s) ((side.nir.normalized.histogram.bin.9.204_229), because all zero or not numeric!" 
[5] "Dummy plotting for this descriptor(s) ((side.nir.normalized.histogram.bin.10.229_255), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((side.fluo.normalized.histogram.bin.9.204_229), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((side.fluo.normalized.histogram.phenol.bin.8.178_204), because all zero or not numeric!"
[2] "Dummy plotting for this descriptor(s) ((side.fluo.normalized.histogram.phenol.bin.9.204_229), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((side.fluo.normalized.histogram.ratio.bin.2.25_51), because all zero or not numeric!"  
[2] "Dummy plotting for this descriptor(s) ((side.fluo.normalized.histogram.ratio.bin.3.51_76), because all zero or not numeric!"  
[3] "Dummy plotting for this descriptor(s) ((side.fluo.normalized.histogram.ratio.bin.9.204_229), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((side.nir.histogram.phenol.bin.1.0_25), because all zero or not numeric!"    
[2] "Dummy plotting for this descriptor(s) ((side.nir.histogram.phenol.bin.2.25_51), because all zero or not numeric!"   
[3] "Dummy plotting for this descriptor(s) ((side.nir.histogram.phenol.bin.8.178_204), because all zero or not numeric!" 
[4] "Dummy plotting for this descriptor(s) ((side.nir.histogram.phenol.bin.9.204_229), because all zero or not numeric!" 
[5] "Dummy plotting for this descriptor(s) ((side.nir.histogram.phenol.bin.10.229_255), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((side.nir.histogram.ratio.bin.1.0_25), because all zero or not numeric!"    
[2] "Dummy plotting for this descriptor(s) ((side.nir.histogram.ratio.bin.3.51_76), because all zero or not numeric!"   
[3] "Dummy plotting for this descriptor(s) ((side.nir.histogram.ratio.bin.4.76_102), because all zero or not numeric!"  
[4] "Dummy plotting for this descriptor(s) ((side.nir.histogram.ratio.bin.6.127_153), because all zero or not numeric!" 
[5] "Dummy plotting for this descriptor(s) ((side.nir.histogram.ratio.bin.7.153_178), because all zero or not numeric!" 
[6] "Dummy plotting for this descriptor(s) ((side.nir.histogram.ratio.bin.8.178_204), because all zero or not numeric!" 
[7] "Dummy plotting for this descriptor(s) ((side.nir.histogram.ratio.bin.9.204_229), because all zero or not numeric!" 
[8] "Dummy plotting for this descriptor(s) ((side.nir.histogram.ratio.bin.10.229_255), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((side.vis.hue.histogram.ratio.bin.1.0_25), because all zero or not numeric!"    
[2] "Dummy plotting for this descriptor(s) ((side.vis.hue.histogram.ratio.bin.3.51_76), because all zero or not numeric!"   
[3] "Dummy plotting for this descriptor(s) ((side.vis.hue.histogram.ratio.bin.4.76_102), because all zero or not numeric!"  
[4] "Dummy plotting for this descriptor(s) ((side.vis.hue.histogram.ratio.bin.5.102_127), because all zero or not numeric!" 
[5] "Dummy plotting for this descriptor(s) ((side.vis.hue.histogram.ratio.bin.6.127_153), because all zero or not numeric!" 
[6] "Dummy plotting for this descriptor(s) ((side.vis.hue.histogram.ratio.bin.7.153_178), because all zero or not numeric!" 
[7] "Dummy plotting for this descriptor(s) ((side.vis.hue.histogram.ratio.bin.8.178_204), because all zero or not numeric!" 
[8] "Dummy plotting for this descriptor(s) ((side.vis.hue.histogram.ratio.bin.9.204_229), because all zero or not numeric!" 
[9] "Dummy plotting for this descriptor(s) ((side.vis.hue.histogram.ratio.bin.10.229_255), because all zero or not numeric!"
 [1] "Dummy plotting for this descriptor(s) ((side.vis.normalized.histogram.ratio.bin.1.0_25), because all zero or not numeric!"    
 [2] "Dummy plotting for this descriptor(s) ((side.vis.normalized.histogram.ratio.bin.2.25_51), because all zero or not numeric!"   
 [3] "Dummy plotting for this descriptor(s) ((side.vis.normalized.histogram.ratio.bin.3.51_76), because all zero or not numeric!"   
 [4] "Dummy plotting for this descriptor(s) ((side.vis.normalized.histogram.ratio.bin.4.76_102), because all zero or not numeric!"  
 [5] "Dummy plotting for this descriptor(s) ((side.vis.normalized.histogram.ratio.bin.5.102_127), because all zero or not numeric!" 
 [6] "Dummy plotting for this descriptor(s) ((side.vis.normalized.histogram.ratio.bin.6.127_153), because all zero or not numeric!" 
 [7] "Dummy plotting for this descriptor(s) ((side.vis.normalized.histogram.ratio.bin.7.153_178), because all zero or not numeric!" 
 [8] "Dummy plotting for this descriptor(s) ((side.vis.normalized.histogram.ratio.bin.8.178_204), because all zero or not numeric!" 
 [9] "Dummy plotting for this descriptor(s) ((side.vis.normalized.histogram.ratio.bin.9.204_229), because all zero or not numeric!" 
[10] "Dummy plotting for this descriptor(s) ((side.vis.normalized.histogram.ratio.bin.10.229_255), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((top.fluo.histogram.bin.9.204_229), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((top.fluo.histogram.phenol.bin.8.178_204), because all zero or not numeric!"
[2] "Dummy plotting for this descriptor(s) ((top.fluo.histogram.phenol.bin.9.204_229), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((top.fluo.histogram.ratio.bin.2.25_51), because all zero or not numeric!"  
[2] "Dummy plotting for this descriptor(s) ((top.fluo.histogram.ratio.bin.3.51_76), because all zero or not numeric!"  
[3] "Dummy plotting for this descriptor(s) ((top.fluo.histogram.ratio.bin.9.204_229), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((top.nir.histogram.bin.1.0_25), because all zero or not numeric!"    
[2] "Dummy plotting for this descriptor(s) ((top.nir.histogram.bin.10.229_255), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((top.nir.histogram.phenol.bin.1.0_25), because all zero or not numeric!"    
[2] "Dummy plotting for this descriptor(s) ((top.nir.histogram.phenol.bin.10.229_255), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((top.nir.histogram.ratio.bin.1.0_25), because all zero or not numeric!"    
[2] "Dummy plotting for this descriptor(s) ((top.nir.histogram.ratio.bin.2.25_51), because all zero or not numeric!"   
[3] "Dummy plotting for this descriptor(s) ((top.nir.histogram.ratio.bin.3.51_76), because all zero or not numeric!"   
[4] "Dummy plotting for this descriptor(s) ((top.nir.histogram.ratio.bin.4.76_102), because all zero or not numeric!"  
[5] "Dummy plotting for this descriptor(s) ((top.nir.histogram.ratio.bin.6.127_153), because all zero or not numeric!" 
[6] "Dummy plotting for this descriptor(s) ((top.nir.histogram.ratio.bin.7.153_178), because all zero or not numeric!" 
[7] "Dummy plotting for this descriptor(s) ((top.nir.histogram.ratio.bin.8.178_204), because all zero or not numeric!" 
[8] "Dummy plotting for this descriptor(s) ((top.nir.histogram.ratio.bin.9.204_229), because all zero or not numeric!" 
[9] "Dummy plotting for this descriptor(s) ((top.nir.histogram.ratio.bin.10.229_255), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((top.vis.hue.histogram.ratio.bin.1.0_25), because all zero or not numeric!"    
[2] "Dummy plotting for this descriptor(s) ((top.vis.hue.histogram.ratio.bin.3.51_76), because all zero or not numeric!"   
[3] "Dummy plotting for this descriptor(s) ((top.vis.hue.histogram.ratio.bin.4.76_102), because all zero or not numeric!"  
[4] "Dummy plotting for this descriptor(s) ((top.vis.hue.histogram.ratio.bin.5.102_127), because all zero or not numeric!" 
[5] "Dummy plotting for this descriptor(s) ((top.vis.hue.histogram.ratio.bin.6.127_153), because all zero or not numeric!" 
[6] "Dummy plotting for this descriptor(s) ((top.vis.hue.histogram.ratio.bin.7.153_178), because all zero or not numeric!" 
[7] "Dummy plotting for this descriptor(s) ((top.vis.hue.histogram.ratio.bin.8.178_204), because all zero or not numeric!" 
[8] "Dummy plotting for this descriptor(s) ((top.vis.hue.histogram.ratio.bin.9.204_229), because all zero or not numeric!" 
[9] "Dummy plotting for this descriptor(s) ((top.vis.hue.histogram.ratio.bin.10.229_255), because all zero or not numeric!"
Es gab 20 Warnungen (Anzeige mit warnings())
> 	overallList <- reduceWorkingDataSize(overallList)
[1] "DebugBreakPoint:  reduceWorkingDataSize()"
> 	overallList <- setDefaultAxisNames(overallList)	
[1] "DebugBreakPoint:  setDefaultAxisNames()"
> 	overallList <- overallGetResultDataFrame(overallList)
[1] "DebugBreakPoint:  overallGetResultDataFrame()"
[1] "DebugBreakPoint:  buildList()"
[1] "... nBoxplot"
[1] "DebugBreakPoint:  getResultDataFrame()"
[1] "... Boxplot"
[1] "DebugBreakPoint:  getResultDataFrame()"
[1] "... stackedBoxplot"
[1] "DebugBreakPoint:  getResultDataFrame()"
> 	overallList <- setColor(overallList) 
[1] "DebugBreakPoint:  setColor()"
[1] "... all values are 'NA'"
[1] "... all values are 'NA'"
[1] "... all values are 'NA'"
[1] "... all values are 'NA'"
[1] "... all values are 'NA'"
[1] "... all values are 'NA'"
[1] "... all values are 'NA'"
[1] "... all values are 'NA'"
[1] "... all values are 'NA'"
[1] "... all values are 'NA'"
Es gab 15 Warnungen (Anzeige mit warnings())
> 	makeDiagrams(overallList)
[1] "DebugBreakPoint:  makeDiagrams()"
[1] "... nBoxplot"
[1] "DebugBreakPoint:  makeLinearDiagram()"
[1] "... images 1"
[1] "DebugBreakPoint:  reduceWholeOverallResultToOneValue()"
Saving 5.45" x 3.92" image
[1] "... images 2"
[1] "DebugBreakPoint:  reduceWholeOverallResultToOneValue()"
Saving 5.45" x 3.92" image
[1] "... images 3"
[1] "DebugBreakPoint:  reduceWholeOverallResultToOneValue()"
Saving 5.45" x 3.92" image
[1] "... images 4"
[1] "DebugBreakPoint:  reduceWholeOverallResultToOneValue()"
Saving 5.45" x 3.92" image
[1] "... images 5"
[1] "DebugBreakPoint:  reduceWholeOverallResultToOneValue()"
Saving 5.45" x 3.92" image
[1] "... images 6"
[1] "DebugBreakPoint:  reduceWholeOverallResultToOneValue()"
Saving 5.45" x 3.92" image
[1] "... images 8"
[1] "DebugBreakPoint:  reduceWholeOverallResultToOneValue()"
Saving 5.45" x 3.92" image
[1] "... images 9"
[1] "DebugBreakPoint:  reduceWholeOverallResultToOneValue()"
Saving 5.45" x 3.92" image
[1] "... images 10"
[1] "DebugBreakPoint:  reduceWholeOverallResultToOneValue()"
Saving 5.45" x 3.92" image
[1] "... images 11"
[1] "DebugBreakPoint:  reduceWholeOverallResultToOneValue()"
Saving 5.45" x 3.92" image
[1] "... images 13"
[1] "DebugBreakPoint:  reduceWholeOverallResultToOneValue()"
Saving 5.45" x 3.92" image
[1] "... images 14"
[1] "DebugBreakPoint:  reduceWholeOverallResultToOneValue()"
Saving 5.45" x 3.92" image
[1] "... images 15"
[1] "DebugBreakPoint:  reduceWholeOverallResultToOneValue()"
Saving 5.45" x 3.92" image
[1] "... images 16"
[1] "DebugBreakPoint:  reduceWholeOverallResultToOneValue()"
Saving 5.45" x 3.92" image
[1] "... images 17"
[1] "DebugBreakPoint:  reduceWholeOverallResultToOneValue()"
Saving 5.45" x 3.92" image
[1] "... images 18"
[1] "DebugBreakPoint:  reduceWholeOverallResultToOneValue()"
Saving 5.45" x 3.92" image
[1] "... images 23"
[1] "DebugBreakPoint:  reduceWholeOverallResultToOneValue()"
Saving 5.45" x 3.92" image
[1] "... images 24"
[1] "DebugBreakPoint:  reduceWholeOverallResultToOneValue()"
Saving 5.45" x 3.92" image
[1] "... images 25"
[1] "DebugBreakPoint:  reduceWholeOverallResultToOneValue()"
Saving 5.45" x 3.92" image
[1] "... images 26"
[1] "DebugBreakPoint:  reduceWholeOverallResultToOneValue()"
Saving 5.45" x 3.92" image
[1] "... images 27"
[1] "DebugBreakPoint:  reduceWholeOverallResultToOneValue()"
Saving 5.45" x 3.92" image
[1] "... images 28"
[1] "DebugBreakPoint:  reduceWholeOverallResultToOneValue()"
Saving 5.45" x 3.92" image
[1] "... images 29"
[1] "DebugBreakPoint:  reduceWholeOverallResultToOneValue()"
Saving 5.45" x 3.92" image
[1] "... images 30"
[1] "DebugBreakPoint:  reduceWholeOverallResultToOneValue()"
Saving 5.45" x 3.92" image
[1] "... images 31"
[1] "DebugBreakPoint:  reduceWholeOverallResultToOneValue()"
Saving 5.45" x 3.92" image
[1] "... images 32"
[1] "DebugBreakPoint:  reduceWholeOverallResultToOneValue()"
Saving 5.45" x 3.92" image
[1] "... Boxplot"
[1] "DebugBreakPoint:  makeBoxplotDiagram()"
[1] "DebugBreakPoint:  reduceWholeOverallResultToOneValue()"
Saving 5.45" x 3.92" image
[1] "DebugBreakPoint:  reduceWholeOverallResultToOneValue()"
Saving 5.45" x 3.92" image
[1] "DebugBreakPoint:  reduceWholeOverallResultToOneValue()"
Saving 5.45" x 3.92" image
[1] "DebugBreakPoint:  reduceWholeOverallResultToOneValue()"
Saving 5.45" x 3.92" image
[1] "DebugBreakPoint:  reduceWholeOverallResultToOneValue()"
Saving 5.45" x 3.92" image
[1] "DebugBreakPoint:  reduceWholeOverallResultToOneValue()"
Saving 5.45" x 3.92" image
[1] "DebugBreakPoint:  reduceWholeOverallResultToOneValue()"
Saving 5.45" x 3.92" image
[1] "DebugBreakPoint:  reduceWholeOverallResultToOneValue()"
Saving 5.45" x 3.92" image
[1] "DebugBreakPoint:  reduceWholeOverallResultToOneValue()"
Saving 5.45" x 3.92" image
[1] "DebugBreakPoint:  reduceWholeOverallResultToOneValue()"
Saving 5.45" x 3.92" image
[1] "DebugBreakPoint:  reduceWholeOverallResultToOneValue()"
Saving 5.45" x 3.92" image
[1] "... stacked Boxplot"
[1] "DebugBreakPoint:  makeBoxplotStackedDiagram()"
[1] "DebugBreakPoint:  reduceWholeOverallResultToOneValue()"
[1] "DebugBreakPoint:  PreWorkForMakeBigOverallImage()"
[1] "DebugBreakPoint:  plotStackedImage()"
Saving 5.45" x 3.92" image
Saving 5.45" x 3.92" image
Saving 5.45" x 3.92" image
[1] "DebugBreakPoint:  reduceWholeOverallResultToOneValue()"
[1] "DebugBreakPoint:  PreWorkForMakeBigOverallImage()"
[1] "DebugBreakPoint:  plotStackedImage()"
Saving 5.45" x 3.92" image
Saving 5.45" x 3.92" image
Saving 5.45" x 3.92" image
[1] "DebugBreakPoint:  reduceWholeOverallResultToOneValue()"
[1] "DebugBreakPoint:  PreWorkForMakeBigOverallImage()"
[1] "DebugBreakPoint:  plotStackedImage()"
Saving 5.45" x 3.92" image
Saving 5.45" x 3.92" image
Saving 5.45" x 3.92" image
[1] "DebugBreakPoint:  reduceWholeOverallResultToOneValue()"
[1] "DebugBreakPoint:  PreWorkForMakeBigOverallImage()"
[1] "DebugBreakPoint:  plotStackedImage()"
Saving 5.45" x 3.92" image
Saving 5.45" x 3.92" image
Saving 5.45" x 3.92" image
[1] "DebugBreakPoint:  reduceWholeOverallResultToOneValue()"
[1] "DebugBreakPoint:  PreWorkForMakeBigOverallImage()"
[1] "DebugBreakPoint:  plotStackedImage()"
Saving 5.45" x 3.92" image
Saving 5.45" x 3.92" image
Saving 5.45" x 3.92" image
[1] "DebugBreakPoint:  reduceWholeOverallResultToOneValue()"
[1] "DebugBreakPoint:  PreWorkForMakeBigOverallImage()"
[1] "DebugBreakPoint:  plotStackedImage()"
[1] "DebugBreakPoint:  reduceWholeOverallResultToOneValue()"
[1] "DebugBreakPoint:  PreWorkForMakeBigOverallImage()"
[1] "DebugBreakPoint:  plotStackedImage()"
Saving 5.45" x 3.92" image
Saving 5.45" x 3.92" image
Saving 5.45" x 3.92" image
[1] "DebugBreakPoint:  reduceWholeOverallResultToOneValue()"
[1] "DebugBreakPoint:  PreWorkForMakeBigOverallImage()"
[1] "DebugBreakPoint:  plotStackedImage()"
Saving 5.45" x 3.92" image
Saving 5.45" x 3.92" image
Saving 5.45" x 3.92" image
[1] "DebugBreakPoint:  reduceWholeOverallResultToOneValue()"
[1] "DebugBreakPoint:  PreWorkForMakeBigOverallImage()"
[1] "DebugBreakPoint:  plotStackedImage()"
Saving 5.45" x 3.92" image
Saving 5.45" x 3.92" image
Saving 5.45" x 3.92" image
[1] "DebugBreakPoint:  reduceWholeOverallResultToOneValue()"
[1] "DebugBreakPoint:  PreWorkForMakeBigOverallImage()"
[1] "DebugBreakPoint:  plotStackedImage()"
Saving 5.45" x 3.92" image
Saving 5.45" x 3.92" image
Saving 5.45" x 3.92" image
[1] "DebugBreakPoint:  reduceWholeOverallResultToOneValue()"
[1] "DebugBreakPoint:  PreWorkForMakeBigOverallImage()"
[1] "DebugBreakPoint:  plotStackedImage()"
Saving 5.45" x 3.92" image
Saving 5.45" x 3.92" image
Saving 5.45" x 3.92" image
[1] "DebugBreakPoint:  reduceWholeOverallResultToOneValue()"
[1] "DebugBreakPoint:  PreWorkForMakeBigOverallImage()"
[1] "DebugBreakPoint:  plotStackedImage()"
[1] "DebugBreakPoint:  reduceWholeOverallResultToOneValue()"
[1] "DebugBreakPoint:  PreWorkForMakeBigOverallImage()"
[1] "DebugBreakPoint:  plotStackedImage()"
[1] "DebugBreakPoint:  reduceWholeOverallResultToOneValue()"
[1] "DebugBreakPoint:  PreWorkForMakeBigOverallImage()"
[1] "DebugBreakPoint:  plotStackedImage()"
Saving 5.45" x 3.92" image
Saving 5.45" x 3.92" image
Saving 5.45" x 3.92" image
[1] "DebugBreakPoint:  reduceWholeOverallResultToOneValue()"
[1] "DebugBreakPoint:  PreWorkForMakeBigOverallImage()"
[1] "DebugBreakPoint:  plotStackedImage()"
Saving 5.45" x 3.92" image
Saving 5.45" x 3.92" image
Saving 5.45" x 3.92" image
[1] "DebugBreakPoint:  reduceWholeOverallResultToOneValue()"
[1] "DebugBreakPoint:  PreWorkForMakeBigOverallImage()"
[1] "DebugBreakPoint:  plotStackedImage()"
Saving 5.45" x 3.92" image
Saving 5.45" x 3.92" image
Saving 5.45" x 3.92" image
[1] "DebugBreakPoint:  reduceWholeOverallResultToOneValue()"
[1] "DebugBreakPoint:  PreWorkForMakeBigOverallImage()"
[1] "DebugBreakPoint:  plotStackedImage()"
[1] "DebugBreakPoint:  reduceWholeOverallResultToOneValue()"
[1] "DebugBreakPoint:  PreWorkForMakeBigOverallImage()"
[1] "DebugBreakPoint:  plotStackedImage()"
Saving 5.45" x 3.92" image
Saving 5.45" x 3.92" image
Saving 5.45" x 3.92" image
[1] "DebugBreakPoint:  reduceWholeOverallResultToOneValue()"
[1] "DebugBreakPoint:  PreWorkForMakeBigOverallImage()"
[1] "DebugBreakPoint:  plotStackedImage()"
Saving 5.45" x 3.92" image
Saving 5.45" x 3.92" image
Saving 5.45" x 3.92" image
[1] "DebugBreakPoint:  reduceWholeOverallResultToOneValue()"
[1] "DebugBreakPoint:  PreWorkForMakeBigOverallImage()"
[1] "DebugBreakPoint:  plotStackedImage()"
Es gab 50 oder mehr Warnungen (Anzeige der ersten 50 mit warnings())
> rm(list=ls(all=TRUE))
> # TODO: Add comment
> # 
> # Author: Entzian
> ###############################################################################
> 
> "%debug%" <- function(debug, debugNumber) {
+ 	if (debug) {
+ 		print(paste("DebugBreakPoint: ", debugNumber))
+ 	}
+ }
> 
> "%checkEqual%" <- function(treat, seconTreat) {
+ 	if(treat == seconTreat) {
+ 		print("SecondTreatment are the same value as Treatment so it set to \"none\"")
+ 		return("none")
+ 	} else {
+ 		return(seconTreat)
+ 	}
+ }
> 
> "%errorReport%" <- function(errorDescriptor, typOfError="notExists") {
+ 	#overallList$debug %debug% "%errorReport%"
+ 	if (length(errorDescriptor) > 0) {
+ 		if (tolower(typOfError) == "notexists"){
+ 			print(paste("No plotting, because the descriptor(s) (",errorDescriptor,") don't exists!", sep=""))
+ 			
+ 		} else if (tolower(typOfError) == "notnumericorallzero") {
+ 			#plotDummy(overallList)
+ 			print(paste("Dummy plotting for this descriptor(s) ((",errorDescriptor,"), because all zero or not numeric!", sep=""))
+ 		}
+ 	}
+ }
> 
> "%exists%" <- function(standardValue, argsValue){
+ 	
+ 	if(!is.na(argsValue) & argsValue != "")	{
+ 		return(argsValue)
+ 	} else {
+ 		return(standardValue)
+ 	}
+ }
> 
> "%getData%" <- function(separation, fileName){	
+ 	#separation <- ";"
+ 	print("... Read input file")
+ 	
+ 	if(file.exists(fileName)) {
+ 		preScanForPointOrComma <- scan(file=fileName, what=character(0), nlines=2, sep="\n")
+ 		preScanForPointOrComma <- paste(preScanForPointOrComma[2],",.", sep="")
+ 		allCharacterSeparated <- table(strsplit(toupper(preScanForPointOrComma), '')[[1]])
+ 		
+ 		if(allCharacterSeparated["."] > allCharacterSeparated[","]) {
+ 			print("... english Version")
+ 			return(read.csv(fileName, header=TRUE, sep=separation, fileEncoding="ISO-8859-1", encoding="UTF-8"))
+ 		} else {
+ 			print("... german Version")
+ 			return(read.csv2(fileName, header=TRUE, sep=separation, fileEncoding="ISO-8859-1", encoding="UTF-8"))
+ 		}
+ 	} else {
+ 		return("error")
+ 	}
+ 	
+ #	if (englischVersion) {
+ #		return(read.csv(fileName, header=TRUE, sep=separation, fileEncoding="ISO-8859-1", encoding="UTF-8"))
+ #	} else {
+ #		return(read.csv2(fileName, header=TRUE, sep=separation, fileEncoding="ISO-8859-1", encoding="UTF-8"))
+ #	}
+ }
> 
> "%checkIfDescriptorExists%" <- function(descriptor, dataSet) {
+ 	if (is.data.frame(dataSet)) {
+ 		return(descriptor %in% colnames(dataSet))
+ 	} else {
+ 		return(descriptor %in% dataSet)
+ 	}	
+ }
> 
> "%GetDescriptorsAfterCheckIfDescriptorExists%" <- function(descriptor, dataSet) {
+ 	return(descriptor[descriptor %checkIfDescriptorExists% dataSet])
+ 	
+ }
> 
> "%GetDescriptorAfterCheckIfDescriptorNotExists%" <- function(descriptor, dataSet) {
+ 	return(descriptor[!descriptor %checkIfDescriptorExists% dataSet])
+ 	
+ }
> 
> "%contactAllWithAll%" <- function(vector1, vector2) {
+ 	vectorTemp <- character(0)
+ 	for(k in vector2) {
+ 		if(k=="none") {
+ 			vectorTemp <- c(vectorTemp,vector1)
+ 		} else {
+ 			vectorTemp <- c(vectorTemp,paste(vector1,k, sep = "#"))
+ 		}
+ 	}
+ 	return(vectorTemp)
+ }
> 
> "%allColnamesWithoutThisOnes%" <- function(dataSet, withoutColNamesVector) {
+ 	return(colnames(dataSet)[!colnames(dataSet) %in% withoutColNamesVector])
+ }
> 
> buildDataSet <- function(workingDataSet, overallResult, colname, index) {
+ 	
+ 	if(length(colname) > 0) {
+ 		for(n in 1:length(colname)) {
+ 			workingDataSet <- cbind(workingDataSet, overallResult[paste(colname[n],index, sep="")])
+ 		}	
+ 		return(workingDataSet)
+ 	}
+ }
> 
> 
> reNameHist <-  function(colNameWichMustBind) {
+ 	colNameWichMustBind <- as.character(colNameWichMustBind)
+ 	positions <- which(strsplit(colNameWichMustBind, '')[[1]]=='.')
+ 	colNameWichMustBind <- substr(colNameWichMustBind,positions[length(positions)]+1,nchar(colNameWichMustBind))
+ 	
+ 	regExpressionSpezialCharacter <- "\\_"
+ 	colNameWichMustBind <- gsub(regExpressionSpezialCharacter,"..",colNameWichMustBind)
+ 	
+ 	return(colNameWichMustBind)	
+ }
> 
> reNameColumn <-  function(plotThisValues, columnNameReplace="name", columnNameWhichUsedToReplace="primaerTreatment") {
+ 	if(!is.null(plotThisValues[columnNameWhichUsedToReplace])){
+ 		plotThisValues[columnNameReplace] <- plotThisValues[columnNameWhichUsedToReplace]
+ 	}
+ 	
+ 	return(plotThisValues)
+ }
> 
> swap <- function(listWithTwoParameter) {
+ 	temp <- listWithTwoParameter[[1]]
+ 	listWithTwoParameter[[1]] <- listWithTwoParameter[[2]]
+ 	listWithTwoParameter[[2]] <- temp
+ 	return(listWithTwoParameter)
+ }
> 
> changeWhenTreatmentNoneAndSecondTreatmentNotNone <- function(listOfTreat, listOfFilterTreat) {
+ 	if(listOfTreat[[1]] == "none" & listOfTreat[[2]] != "none") {
+ 		print("The values of Treatment and SecondTreamt are changed (filter values also)")
+ 		return(list(swap(listOfTreat),swap(listOfFilterTreat)))	
+ 	} else {
+ 		return(list(listOfTreat,listOfFilterTreat))
+ 	}
+ }
> 
> checkOfTreatments <- function(args, treatment, filterTreatment, secondTreatment, filterSecondTreatment, workingDataSet, debug) {
+ 	debug %debug% "Start of checkOfTreatments()"
+ 	
+ 	treatment <- treatment %exists% args[4]
+ 	secondTreatment <- secondTreatment %exists% args[5]
+ 	secondTreatment <- treatment %checkEqual% secondTreatment
+ 	
+ 	listOfTreat <- list(treatment=treatment, secondTreatment=secondTreatment)
+ 	listOfFilterTreat <- list(filterTreatment=filterTreatment, filterSecondTreatment=filterSecondTreatment)	## wird erstmal noch nichts weiter mit gemacht! nur geswapt falls notwendig
+ 
+ 	for(k in names(listOfTreat)){
+ 		if(listOfTreat[[k]] != "none") {
+ 			#overallTreat <- list(iniDataSet=workingDataSet, descriptor=listOfTreat[[k]], debug=debug, stoppTheCalculation = FALSE, errorDescriptor=character())
+ 			#overallTreat <- list(iniDataSet=workingDataSet, descriptor=listOfTreat[[k]], debug=debug, stoppTheCalculation = FALSE)
+ 			descriptorVector <- getVector(preprocessingOfDescriptor(listOfTreat[[k]], workingDataSet))
+ 			
+ 			if(!is.null(descriptorVector)) {
+ 				descriptorVector <- getVector(checkIfDescriptorIsNaOrAllZero(descriptorVector, workingDataSet, FALSE))
+ 				
+ 				if(!is.null(descriptorVector)) {
+ 					listOfTreat[[k]] <- descriptorVector
+ 				} 
+ 			} 
+ 			
+ 			if(is.null(descriptorVector)) {
+ 				print(paste(k, "set to \"none\""))
+ 				listOfTreat[[k]] <- "none"
+ 			}
+ 		}
+ 	}
+ 	
+ 	listOfTreatAndFilterTreat <- changeWhenTreatmentNoneAndSecondTreatmentNotNone(listOfTreat, listOfFilterTreat)
+ 	debug %debug% "End of checkOfTreatments()"
+ 	return(listOfTreatAndFilterTreat)
+ }
> 
> overallCheckIfDescriptorIsNaOrAllZero <- function(overallList) {
+ 	overallList$debug %debug% "overallCheckIfDescriptorIsNaOrAllZero()"	
+ 	
+ 	if(sum(!is.na(overallList$nBoxDes)) > 0) {
+ 		if(overallList$debug) {print("... nBoxplot")}
+ 		for(n in 1:length(overallList$nBoxDes)) {
+ 			if(!is.na(overallList$nBoxDes[[n]])) {
+ 				overallList$nBoxDes[n] <- checkIfDescriptorIsNaOrAllZero(overallList$nBoxDes[[n]], overallList$iniDataSet)
+ 			}
+ 		}
+ 		names(overallList$nBoxDes) <- c(1:length(overallList$nBoxDes))
+ 	} else {
+ 		print("... all in nBoxplot is 'NA'")
+ 	}
+ 	
+ 	if(sum(!is.na(overallList$boxDes)) > 0) {
+ 		if(overallList$debug) {print("... Boxplot")}
+ 		for(n in 1:length(overallList$boxDes)) {
+ 			if(!is.na(overallList$boxDes[[n]])) {
+ 				overallList$boxDes[[n]] <- checkIfDescriptorIsNaOrAllZero(overallList$boxDes[[n]], overallList$iniDataSet)
+ 			}
+ 		}
+ 		names(overallList$boxDes) <- c(1:length(overallList$boxDes))
+ 	} else {
+ 		print("... all in Boxplot is 'NA'")
+ 	}
+ 
+ 	if(sum(!is.na(overallList$boxStackDes)) > 0) {
+ 		if(overallList$debug) {print("... stackedBoxplot")}
+ 		for(n in 1:length(overallList$boxStackDes)) {
+ 			if(!is.na(overallList$boxStackDes[[n]])) {
+ 				overallList$boxStackDes[[n]] <- checkIfDescriptorIsNaOrAllZero(overallList$boxStackDes[[n]], overallList$iniDataSet)
+ 			}
+ 		}
+ 		names(overallList$boxStackDes) <- c(1:length(overallList$boxStackDes))
+ 	} else {
+ 		print("... all in stackedBoxplot is 'NA'")
+ 	}
+ 	
+ 	if(!sum(!is.na(overallList$boxStackDes)) > 0 && !sum(!is.na(overallList$boxDes)) > 0 && !sum(!is.na(overallList$nBoxDes)) > 0) {
+ 		print("... no descriptor set (all descriptors are zero or NA) - the program stopp!")
+ 		overallList$stoppTheCalculation <- TRUE 
+ 	}
+ 	
+ 	return(overallList)
+ }
> 
> checkIfDescriptorIsNaOrAllZero <- function(descriptorVector, iniDataSet, isDescriptor = TRUE){
+ 	#overallList$debug %debug% "checkIfDescriptorIsNaOrAllZero()"
+ 	descriptorVector <- as.vector(descriptorVector)
+ 	#descriptorVector <- getVector(descriptorVector)
+ 	tempDescriptor <- descriptorVector 
+ 	if(isDescriptor) {
+ 		descriptorVector <- descriptorVector[colSums(!is.na(iniDataSet[descriptorVector])) != 0 & colSums(iniDataSet[descriptorVector] *1, na.rm = TRUE) > 0]
+ 	} else {
+ 		descriptorVector <- descriptorVector[colSums(!is.na(iniDataSet[descriptorVector])) != 0]
+ 	}
+ 	errorDescriptor <- tempDescriptor %GetDescriptorAfterCheckIfDescriptorNotExists% descriptorVector
+ 
+ 	if (length(errorDescriptor) > 0) {
+ 		errorDescriptor %errorReport% "NotNumericOrAllZero"	
+ 	}
+ 	
+ 	if(length(descriptorVector) > 0) {
+ 		return(as.data.frame(descriptorVector))
+ 	} else {
+ 		return(NA)
+ 	}
+ }
> 
> overallChangeName <- function(overallList) {
+ 	overallList$debug %debug% "overallChangeSaveName()"	
+ 	
+ 	if(!is.null(overallList$saveName_nBoxDes)) {
+ 		if(overallList$debug) {print("... nBoxplot")}
+ 		overallList$saveName_nBoxDes <- changeSaveName(overallList$saveName_nBoxDes)
+ 		names(overallList$saveName_nBoxDes) <- c(1:length(overallList$saveName_nBoxDes))
+ 		
+ 		overallList$nBoxDesName <- as.list(overallList$nBoxDesName)
+ 		names(overallList$nBoxDesName) <- c(1:length(overallList$nBoxDesName))
+ 	}
+ 	
+ 	if(!is.null(overallList$saveName_boxDes)) {
+ 		if(overallList$debug) {print("... Boxplot")}
+ 		overallList$saveName_boxDes <- changeSaveName(overallList$saveName_boxDes)
+ 		names(overallList$saveName_boxDes) <- c(1:length(overallList$saveName_boxDes))
+ 		
+ 		overallList$boxDesName <- as.list(overallList$boxDesName)
+ 		names(overallList$boxDesName) <- c(1:length(overallList$boxDesName))
+ 	}
+ 	
+ 	if(!is.null(overallList$saveName_boxStackDes)) {
+ 		if(overallList$debug) {print("... stackedBoxplot")}
+ 		overallList$saveName_boxStackDes <- changeSaveName(overallList$saveName_boxStackDes)
+ 		names(overallList$saveName_boxStackDes) <- c(1:length(overallList$saveName_boxStackDes))
+ 		
+ 		overallList$boxStackDesName <- as.list(overallList$boxStackDesName)
+ 		names(overallList$boxStackDesName) <- c(1:length(overallList$boxStackDesName))
+ 	}
+ 	
+ 	return(overallList)
+ }
> 
> changeSaveName <- function(saveNameVector) {
+ 	#Sollte hier nicht noch die Leerzeichen durch Punkte ersetzt werden?
+ 	saveNameVector <- gsub("\\$",";",substr(saveNameVector,1,70))
+ 	saveNameVector <- gsub("\\^", "", saveNameVector);
+ 	
+ 	return(as.list(saveNameVector))
+ }
> 
> preprocessingOfValues <- function(value, isColValue=FALSE, replaceString=".") {
+ 
+ 	if (!is.null(value)) {
+ 		regExpressionCol <- "[^[:alnum:]|^_]|[[:space:]|\\^]"
+ 		if(isColValue) {
+ 			value <- strsplit(value, "$", fixed=TRUE)
+ 		}
+ 		
+ 		for(n in 1:length(value)) {
+ 			value[[n]] <- gsub(regExpressionCol,replaceString,value[[n]])
+ 		}
+ 	} else {
+ 			return("none")
+ 		}
+ 	return(value)
+ }
> 
> overallPreprocessingOfDescriptor <- function(overallList) {
+ 	overallList$debug %debug% "overallPreprocessingOfDescriptor()"	
+ 	
+ 	if(!is.null(overallList$nBoxDes)) {
+ 		if(overallList$debug) {print("... nBoxplot")}
+ 		for(n in 1:length(overallList$nBoxDes)) {
+ 			overallList$nBoxDes[n] <- preprocessingOfDescriptor(overallList$nBoxDes[[n]], overallList$iniDataSet)
+ 		}
+ 	} else {
+ 		print("... nBoxplot is NULL")
+ 	} 
+ 	
+ 	if(!is.null(overallList$boxDes)) {
+ 		if(overallList$debug) {print("... Boxplot")}
+ 		for(n in 1:length(overallList$boxDes)) {
+ 			overallList$boxDes[n] <- preprocessingOfDescriptor(overallList$boxDes[[n]], overallList$iniDataSet)
+ 		}
+ 	} else {
+ 		print("... Boxplot is NULL")
+ 	} 
+ 	
+ 	if(!is.null(overallList$boxStackDes)) {
+ 		if(overallList$debug) {print("... stackedBoxplot")}
+ 		for(n in 1:length(overallList$boxStackDes)) {
+ 			overallList$boxStackDes[n] <- preprocessingOfDescriptor(overallList$boxStackDes[[n]], overallList$iniDataSet)
+ 		}
+ 	} else {
+ 		print("... stackedBoxplot is NULL")
+ 	} 
+ 	
+ 	if(!sum(!is.na(overallList$boxStackDes)) > 0 && !sum(!is.na(overallList$boxDes)) > 0 && !sum(!is.na(overallList$nBoxDes)) > 0) {
+ 		print("... no descriptor set - this pass stopped!")
+ 		overallList$stoppTheCalculation <- TRUE
+ 	}
+ 	
+ 	return(overallList)
+ }
> 
> preprocessingOfDescriptor <- function(descriptorVector, iniDataSet) {
+ 	#overallList$debug %debug% "preprocessingOfDescriptor()"
+ 	descriptorVector <- unlist(preprocessingOfValues(descriptorVector, TRUE))	#descriptor is value for yAxis
+ 	
+ 	errorDescriptor <- descriptorVector %GetDescriptorAfterCheckIfDescriptorNotExists% iniDataSet 
+ 	descriptorVector <- descriptorVector %GetDescriptorsAfterCheckIfDescriptorExists% iniDataSet
+ 	if (length(errorDescriptor)>0) {
+ 		errorDescriptor %errorReport% "notExists"
+ 	} 
+ 	
+ 	if(length(descriptorVector) > 0) {
+ 		return(as.data.frame(descriptorVector))
+ 	} else {
+ 		return(NA)
+ 	}	
+ }
> 
> preprocessingOfxAxisValue <- function(overallList) {
+ 	overallList$debug %debug% "preprocessingOfxAxisValue()"
+ 	overallList$xAxis <- unlist(preprocessingOfValues(overallList$xAxis, TRUE))
+ 	
+ 	if (overallList$filterXaxis != "none") {
+ 		overallList$filterXaxis <- as.numeric(strsplit(overallList$filterXaxis, "$", fixed=TRUE)[[1]])
+ 	} else {
+ 		overallList$filterXaxis <- as.numeric(unique(overallList$iniDataSet[overallList$xAxis])[[1]])	#xAxis muss einen Wert enthalten ansonsten Bricht das Program weiter oben ab
+ 	}
+ 	
+ 	return(overallList)
+ }
> 
> getSingelFilter <- function(filter, treatment, dataSet) {
+ 	if(filter != "none") {
+ 		return(strsplit(filter, "$", fixed=TRUE)[[1]])
+ 	} else {
+ 		return(as.character(unique(dataSet[treatment])[[1]]))
+ 	}
+ }
> 
> preprocessingOfTreatment <- function(overallList) {
+ 	overallList$debug %debug% "preprocessingOfTheTreatment()"
+ 	
+ 	if(!is.null(overallList$treatment)){
+ 		overallList$treatment <- preprocessingOfValues(overallList$treatment)
+ 		
+ 		if(overallList$treatment != "none" & (overallList$treatment %checkIfDescriptorExists% overallList$iniDataSet)) {	
+ 			overallList$filterTreatment <- getSingelFilter(overallList$filterTreatment, overallList$treatment, overallList$iniDataSet)
+ 
+ 		} else {
+ 			overallList$treatment <- "none"
+ 			overallList$filterTreatment <- "none"
+ 			print("... set 'filterTreatment' and 'treatment' to 'none'!")		
+ 		}
+ 			
+ 	} else {
+ 		overallList$treatment <- "none"
+ 		overallList$filterTreatment <- "none"
+ 		print("... set 'filterTreatment' and 'treatment' to 'none'!")
+ 	}
+ 
+ 	return(overallList)
+ }
> 
> preprocessingOfSecondTreatment <- function(overallList) {
+ 	overallList$debug %debug% "preprocessingOfTheSecondTreatment()"
+ 	
+ 	if(!is.null(overallList$secondTreatment)){
+ 		overallList$secondTreatment <- preprocessingOfValues(overallList$secondTreatment)
+ 
+ 		if (overallList$secondTreatment != "none" & (overallList$secondTreatment %checkIfDescriptorExists% overallList$iniDataSet)) {
+ 			overallList$filterSecondTreatment <- getSingelFilter(overallList$filterSecondTreatment, overallList$secondTreatment, overallList$iniDataSet)
+ 			
+ 		} else {
+ 			overallList$secondTreatment <- "none"
+ 			overallList$filterSecondTreatment <- "none"
+ 			print("... set 'filterSecondTreatment' and 'secondTreatment' to 'none'!")
+ 		}	
+ 	} else {
+ 		overallList$secondTreatment <- "none"
+ 		overallList$filterSecondTreatment <- "none"
+ 		print("... set 'filterSecondTreatment' and 'secondTreatment' to 'none'!")
+ 	}
+ 	return(overallList)
+ }
> 
> check <- function(value, checkValue=c("none", NA)){
+ 	if(!is.null(value)){
+ 		return(value %GetDescriptorAfterCheckIfDescriptorNotExists% checkValue)
+ 	} else {
+ 		return(character(0))
+ 	}
+ }
> 
> getVector <- function(descriptorSet) {
+ 	if(!is.null(descriptorSet)) {
+ 		vector <-  vector()
+ 		for(n in 1:length(descriptorSet)) {
+ 			vector <- c(vector, as.vector(unlist(descriptorSet[[n]])))
+ 		}
+ 		return(vector)
+ 	}
+ 	return(character(0))
+ }
> 
> reduceWorkingDataSize <- function(overallList){
+ 	overallList$debug %debug% "reduceWorkingDataSize()"
+ 	overallList$iniDataSet <- overallList$iniDataSet[unique(c(check(getVector(overallList$nBoxDes)), check(getVector(overallList$boxDes)), check(getVector(overallList$boxStackDes)), check(overallList$xAxis), check(overallList$treatment), check(overallList$secondTreatment)))]
+ 	return(overallList)
+ }
> 
> setRowAndColNameOfFinalDataFrame <- function(overallList) {
+ 	overallList$debug %debug% "setRowAndColNameOfFinalDataFrame()"
+ 
+ 	overallList$rowName <- (overallList$descriptor %contactAllWithAll% overallList$filterTreatment) %contactAllWithAll% overallList$filterSecondTreatment
+ 	overallList$colName <- as.character(overallList$filterXaxis)
+ 	
+ 	return(overallList)
+ }
> 
> groupByFunction <- function(groupByList) {
+ 	
+ 	groupByList <- unlist(groupByList)
+ 	return(unlist(groupByList[ifelse(groupByList != "none",TRUE,FALSE)]))
+ 	
+ }
> 
> getBooleanVectorForFilterValues <- function(groupedDataFrame, listOfValues) {
+ 	
+ 	tempVector <- rep.int(TRUE,times=length(groupedDataFrame[,1]))
+ 	for(h in names(listOfValues)) {
+ 		if(h != "none" & !is.null(groupedDataFrame[[h]])) {
+ 			tempVector <- tempVector & groupedDataFrame[[h]] %in% listOfValues[[h]]
+ 		}
+ 	}
+ 	return(tempVector)
+ }
> 
> buildRowForOverallList <- function(i, des, listOfValues, dataSet, day) {
+ 	rowString <- list(row=des, day=numeric())
+ 	for(k in listOfValues){
+ 		if(k != "none") {
+ 			rowString$row <- paste(rowString$row,dataSet[i,k])
+ 		}
+ 	}
+ 	return(rowString)
+ } 
> 
> fillOverallResult <- function(overallList, preErrorBars) {
+ 	overallList$debug %debug% "fillOverallResult()"
+ 	if(length(overallList$iniDataSet[,1]) > 0){
+ 		for(i in 1:length(overallList$iniDataSet[,1])) {
+ 			for(des in overallList$descriptor) {
+ 				rowAndColumn <- buildRowForOverallList(i,des, c(overallList$treatment, overallList$secondTreatment),overallList$iniDataSet, overallList$xAxis)
+ 				overallList$overallResult[rowAndColumn$row, as.character(overallList$iniDataSet[i,overallList$xAxis])] <- overallList$iniDataSet[i,des]
+ 				if(tolower(overallList$diagramTyp) != "boxplotstacked")
+ 					overallList$errorBars[rowAndColumn$row, as.character(overallList$iniDataSet[i,overallList$xAxis])] <- preErrorBars[i,des]
+ 			}
+ 		}
+ 	} else {
+ 		print("... no Value for the OverallResult-DataFrame - Wrong filter!")
+ 		overallList$stoppTheCalculation <- TRUE
+ 	}
+ 	return(overallList)
+ }
> 
> buildList <- function(overallList, colOfXaxis) {
+ 	overallList$debug %debug% "buildList()"
+ 	newList <- list()
+ 	
+ 	newList[[overallList$treatment]] <- overallList$filterTreatment
+ 	newList[[overallList$secondTreatment]] <- overallList$filterSecondTreatment
+ 	newList[[colOfXaxis]] <- overallList$filterXaxis
+ 	
+ 	return(newList)
+ }
> 
> conactAllWithAll <- function(value1, value2) {
+ 	
+ 	conactRow <- character()
+ 	for(k1 in value1){
+ 		if(k1 != "none") {
+ 			for(k2 in value2){
+ 				if(k2 != "none") {
+ 					conactRow <- c(conactRow, paste(k1,k2,sep = "#"))
+ 				}
+ 			}
+ 		}
+ 	}
+ 	return(conactRow)
+ }
> 
> buildRowName <- function(mergeDataSet,groupBy, yName = "value") {
+ 	
+ 	if(length(groupBy) == 0) {
+ 		return(data.frame(name=rep.int(yName, length(mergeDataSet[,1])), mergeDataSet))
+ 	} else if (length(groupBy) == 1) {
+ 		return(data.frame(name=mergeDataSet[,groupBy], mergeDataSet[,!(colnames(mergeDataSet) %in% groupBy)]))
+ 	} else {		
+ 		temp <- mergeDataSet[,groupBy[1]]
+ 		for(h in 2:length(groupBy)) {
+ 			temp <- paste(temp, mergeDataSet[,groupBy[h]], sep = "#")
+ 		}
+ 		return(data.frame(name=temp, primaerTreatment= mergeDataSet[,groupBy[1]], mergeDataSet[,mergeDataSet %allColnamesWithoutThisOnes% groupBy]))
+ 	}	
+ }
> 
> overallGetResultDataFrame <- function(overallList) {
+ 	overallList$debug %debug% "overallGetResultDataFrame()"	
+ 	groupBy <- groupByFunction(list(overallList$treatment, overallList$secondTreatment))
+ 	colNames <- list(colOfXaxis="xAxis", colOfMean="mean", colOfSD="se", colName="name", xAxis=overallList$xAxis)
+ 	booleanVectorList <- buildList(overallList, colNames$colOfXaxis)
+ 	columnsStandard <- c(check(overallList$xAxis), check(overallList$treatment), check(overallList$secondTreatment))
+ 		
+ 	if(sum(!is.na(overallList$nBoxDes)) > 0) {
+ 		if(overallList$debug) {print("... nBoxplot")}
+ 		columns <- c(columnsStandard, check(getVector(overallList$nBoxDes)))
+ 		overallList$overallResult_nBoxDes <- getResultDataFrame("nboxplot", overallList$nBoxDes, overallList$iniDataSet[columns], groupBy, colNames, booleanVectorList, overallList$debug)
+ 	} else {
+ 		print("... all in nBoxplot is 'NA'")
+ 	}
+ 	
+ 	if(sum(!is.na(overallList$boxDes)) > 0) {
+ 		if(overallList$debug) {print("... Boxplot")}
+ 		colNames$colOfMean <- "value"
+ 		columns <- c(columnsStandard, check(getVector(overallList$boxDes)))
+ 		overallList$overallResult_boxDes <- getResultDataFrame("boxplot", overallList$boxDes, overallList$iniDataSet[columns], groupBy, colNames, booleanVectorList, overallList$debug)
+ 	} else {
+ 		print("... all in Boxplot is 'NA'")
+ 	}
+ 	
+ 	if(sum(!is.na(overallList$boxStackDes)) > 0) {
+ 		if(overallList$debug) {print("... stackedBoxplot")}
+ 		colNames$colOfMean <- check(getVector(overallList$boxStackDes))
+ 		colNames$colOfXaxis <- overallList$xAxis
+ 		columns <- c(columnsStandard, check(getVector(overallList$boxStackDes)))
+ 		overallList$overallResult_boxStackDes <- getResultDataFrame("boxplotStacked", overallList$boxStackDes, overallList$iniDataSet[columns], groupBy, colNames, booleanVectorList,overallList$debug)
+ 	} else {
+ 		print("... all in stackedBoxplot is 'NA'")
+ 	}
+ 	
+ 	if(is.null(overallList$boxStackDes) && is.null(overallList$boxDes) && is.null(overallList$nBoxDes)) {
+ 		print("... no descriptor set - this pass stopped!")
+ 		overallList$stoppTheCalculation <- TRUE
+ 	}
+ 	
+ 	return(overallList)
+ }
> 
> getPlotNumber <- function(colNameWichMustBind, descriptorList) {
+ 	
+ 	for(n in names(descriptorList)) {
+ 		if(colNameWichMustBind %in% as.vector(unlist(descriptorList[[n]]))) {
+ 			return(n)
+ 		}
+ 	}
+ 	return(-1)
+ }
> #descriptorName kann entfernt werden
> getResultDataFrame <- function(diagramTyp, descriptorList, iniDataSet, groupBy, colNames, booleanVectorList, debug) {	
+ 	debug %debug% "getResultDataFrame()"
+ 
+ ################################
+ #	diagramTyp = "boxplotStacked"
+ #	descriptorList = overallList$boxStackDes
+ #	iniDataSet = overallList$iniDataSet[columns]
+ #	groupBy = groupBy 
+ #	colNames = colNames 
+ #	booleanVectorList= booleanVectorList
+ #	descriptorName=overallList$boxStackDesName
+ #	debug = overallList$debug
+ #	diagramTyp = "nboxplot"
+ #	descriptor = getVector(overallList$nBoxDes)
+ #	iniDataSet = overallList$iniDataSet[columns]
+ #	groupBy = groupBy 
+ #	colNames = colNames 
+ #	booleanVectorList= booleanVectorList
+ #	descriptorName=overallList$boxDesName
+ ##########################
+ 
+ 	descriptor <- getVector(descriptorList)
+ 	descriptorName <- seq(1:length(descriptor))
+ 	
+ 	descriptorName <- descriptorName[!is.na(descriptor)]
+ 	descriptor <- descriptor[!is.na(descriptor)]
+ 	
+ 	if(diagramTyp != "boxplot") {
+ 		groupedDataFrame <- data.table(iniDataSet)
+ 		key(groupedDataFrame) <- c(groupBy, colNames$xAxis)		
+ 	}
+ 	
+ 	if(diagramTyp == "boxplot") {
+ 		groupedDataFrameMean <- iniDataSet[groupBy[1]]
+ 		
+ 		groupByReduce <- groupBy[groupBy!=groupBy[1]]
+ 		for(n in c(groupByReduce,  colNames$xAxis, descriptor)) {
+ 			groupedDataFrameMean <- cbind(groupedDataFrameMean,  iniDataSet[n])
+ 		}	
+ 		
+ ####################
+ #		Alternative, den Boxplot selber zu bauen!!
+ #		test <- overallList$iniDataSet %allColnamesWithoutThisOnes% c(groupBy, overallList$xAxis)
+ #		myQuantile <- as.data.frame(groupedDataFrame[,lapply(.SD,quantile, probs=c(0,0.25,0.5,0.75,1), na.rm=TRUE), by=groupBy])
+ #		numberOfGroubingElements <- length(myQuantile[,1]) / 5
+ #		
+ #		testData <- data.frame()
+ #		for(n in seq(1, length(myQuantile[,1]), by=5)) {
+ #			testData <- rbind(testData, myQuantile[n:(n+4),test])
+ #		}
+ #		colnames(testData) <- c("q0", "q25", "q50", "q75", "q100")
+ #		rownames(testData) <- unique(myQuantile[,1])
+ #		
+ #		ggplot(overallList$iniDataSet, aes(x=rownames(testData), ymin=testData[,1], lower=testData[,2], middle=testData[,3], upper=testData[,4], ymax=testData[,5])) + 
+ #				geom_boxplot(stat="identity")
+ #####################		
+ 			
+ 		
+ 	} else {
+ 		groupedDataFrameMean <- as.data.frame(groupedDataFrame[,lapply(.SD, mean, na.rm=TRUE), by=c(groupBy,colNames$xAxis)])
+ 	}
+ 	
+ 	if(diagramTyp == "nboxplot" || diagramTyp == "boxplot") {
+ 		#colNamesOfTheRest <- paste(colNames$colOfMean,seq(1:length(descriptor)), sep="")	
+ 		colNamesOfTheRest <- paste(colNames$colOfMean,descriptorName, sep="")	
+ 	} else {
+ 		colNamesOfTheRest <- groupedDataFrameMean %allColnamesWithoutThisOnes% c(groupBy, colNames$xAxis)
+ 	}
+ 		
+ #alt wenn nur ein Deskriptor übergeben wird
+ #		if(tolower(overallList$diagramTyp) == "nboxplot" || tolower(overallList$diagramTyp) == "boxplot") {
+ #			colNamesOfTheRest <- colOfMean
+ #		} else {
+ #			colNamesOfTheRest <- groupedDataFrameMean %allColnamesWithoutThisOnes% c(groupBy, overallList$xAxis)
+ #		}
+ 		
+ 	colnames(groupedDataFrameMean) <- c(groupBy, colNames$colOfXaxis, colNamesOfTheRest)
+ 	
+ 	if(diagramTyp == "nboxplot") {
+ 		groupedDataFrameSD <- as.data.frame(groupedDataFrame[,lapply(.SD, sd, na.rm=TRUE), by=c(groupBy,colNames$xAxis)])
+ 		colnames(groupedDataFrameSD) <- c(groupBy, colNames$colOfXaxis, paste(colNames$colOfSD,descriptorName, sep=""))
+ 	}
+ 	
+ 	booleanVector <- getBooleanVectorForFilterValues(groupedDataFrameMean, booleanVectorList)
+ 	
+ 	if(diagramTyp == "nboxplot") {
+ 		iniDataSet <- merge(sort=FALSE, groupedDataFrameMean[booleanVector,], groupedDataFrameSD[booleanVector,], by = c(groupBy, colNames$colOfXaxis))
+ 		#overallResult <- buildRowName(iniDataSet,groupBy, descriptorName)
+ 		overallResult <- buildRowName(iniDataSet,groupBy)
+ 		
+ 	} else if(diagramTyp == "boxplot") {
+ 		iniDataSet <- groupedDataFrameMean[booleanVector,]
+ 		#overallResult <- buildRowName(iniDataSet,groupBy, descriptorName)
+ 		overallResult <- buildRowName(iniDataSet,groupBy)
+ 		
+ 	} else {
+ 		iniDataSet <- groupedDataFrameMean[booleanVector,]		
+ 		#buildRowNameDataSet <- buildRowName(iniDataSet, groupBy, descriptorName)
+ 		buildRowNameDataSet <- buildRowName(iniDataSet, groupBy)
+ 		temp <- data.frame()
+ #		count <- 0
+ 		
+ 		for(colNameWichMustBind in buildRowNameDataSet %allColnamesWithoutThisOnes% c(colNames$xAxis, colNames$colName, "primaerTreatment")) {
+ #			count <- count+1
+ 			plot = getPlotNumber(colNameWichMustBind, descriptorList)
+ 		
+ 			if(plot!=-1) {
+ 				colNameWichMustBindReNamed <- reNameHist(colNameWichMustBind)
+ 		
+ 				if(is.null(buildRowNameDataSet$primaerTreatment)){	
+ 					temp <- rbind(temp,data.frame(hist=rep.int(x=colNameWichMustBindReNamed, times=length(buildRowNameDataSet[,colNameWichMustBind])), values=buildRowNameDataSet[,colNameWichMustBind], xAxis=buildRowNameDataSet[,colNames$colOfXaxis], name=buildRowNameDataSet[,colNames$colName], plot=plot))			
+ 				} else {
+ 					temp <- rbind(temp,data.frame(hist=rep.int(x=colNameWichMustBindReNamed, times=length(buildRowNameDataSet[,colNameWichMustBind])), primaerTreatment=buildRowNameDataSet[,"primaerTreatment"], values=buildRowNameDataSet[,colNameWichMustBind], xAxis=buildRowNameDataSet[,colNames$colOfXaxis], name=buildRowNameDataSet[,colNames$colName], plot = plot))			
+ 				}
+ 			}
+ 		}
+ 		overallResult <- temp		
+ 	}	
+ 
+ 	return(overallResult)
+ }
> 
> setDefaultAxisNames <- function(overallList) {
+ 	overallList$debug %debug% "setDefaultAxisNames()"
+ 	
+ 	if (overallList$xAxisName == "none") {
+ 		overallList$xAxisName <- gsub('[[:punct:]]'," ",overallList$xAxis)
+ 	}
+ #	if (overallList$yAxisName == "none") {
+ #		overallList$yAxisName <- gsub('[[:punct:]]'," ",overallList$descriptor)
+ #	}
+ 	return(overallList)
+ }
> 
> setColorListHist <- function(descriptorList) {
+ 	interval <- seq(0.05,0.95, by=0.1)
+ 	intervalSat <- rep.int(c(0.8,1.0), 5)
+ 	intervalFluo <- seq(0,0.166666666666, by=0.01666666)
+ 	
+ 	if(length(grep("fluo",getVector(descriptorList), ignore.case=TRUE)) > 0) { #rot			
+ 		#colorList <- as.list(rgb(255, seq(256/10/2,255,by=255/10), 255, max = 255))
+ 		#colorList <- as.list(rgb(1, interval, 0, max = 1))
+ 		colorList <- as.list(hsv(h=rev(intervalFluo), s=intervalSat, v=1))
+ 		
+ 	} else if(length(grep("phenol",getVector(descriptorList), ignore.case=TRUE)) > 0) { #gelb
+ 		#colorList <- as.list(rgb(255, rev(seq(256/10/2,255,by=255/10)), 255, max = 255))
+ 		#colorList <- as.list(rgb(1, rev(interval), 0, max = 1))
+ 		colorList <- as.list(hsv(h=intervalFluo, s=intervalSat, v=1))
+ 		
+ 	} else if(length(grep("vis",getVector(descriptorList), ignore.case=TRUE)) > 0) {
+ 		colorList <- as.list(hsv(h=interval, s=1, v=intervalSat))
+ 		
+ 	} else if(length(grep("nir",getVector(descriptorList), ignore.case=TRUE)) > 0) {
+ 		colorList <- as.list(rgb(rev(interval), rev(interval), rev(interval), max = 1))		
+ 	} else {
+ 		return(list(0))
+ 	}
+ 	names(colorList) <- c("0..25", "25..51", "51..76", "76..102", "102..127", "127..153", "153..178", "178..204", "204..229", "229..255")
+ 	return(colorList)
+ }
> 
> setColorList <- function(diagramTyp, descriptorList, overallResult, isGray) {
+ #################	
+ #diagramTyp = "boxplotStacked"
+ #descriptorList = overallList$boxStackDes
+ #isGrey = overallList$isGray
+ #	overallResult=overallList$overallResult_nBoxDes
+ #	diagramTyp = "boxplotStacked"
+ #	descriptorList = overallList$nBoxDes	
+ ##################
+ 	
+ 	if(!as.logical(isGray)) {
+ 		colorVector <- c(brewer.pal(11, "Spectral"))
+ 	} else {
+ 		colorVector <- c(brewer.pal(9, "Greys"))
+ 	}
+ 	
+ 	colorList <- list()
+ 	if(diagramTyp == "nboxplot" || diagramTyp == "boxplot") {
+ 		for(n in names(descriptorList)) {
+ 			if(!is.na(descriptorList[[n]])) {
+ 				colorList[[n]] <- colorRampPalette(colorVector)(length(unique(overallResult$name)))
+ 			} else {
+ 				print("... all values are 'NA'")
+ 			}
+ 		}
+ 	} else {
+ 		for(n in names(descriptorList)) {
+ 			if(!is.na(descriptorList[[n]])) {
+ 				colorList[[n]] <- setColorListHist(descriptorList[n])
+ 			} else {
+ 				print("... all values are 'NA'")
+ 			}
+ 		}
+ 	}
+ 	return(colorList)
+ }
> 
> setColor <- function(overallList) {
+ 	overallList$debug %debug% "setColor()"
+ 	  
+ 	overallList$color_nBox <- setColorList("nboxplot", overallList$nBoxDes, overallList$overallResult_nBoxDes, overallList$isGray)
+ 	overallList$color_box <- setColorList("boxplot", overallList$boxDes, overallList$overallResult_boxDes, overallList$isGray)
+ 	overallList$color_boxStack <- setColorList("boxplotStacked", overallList$boxStackDes, overallList$overallResult_boxStackDes, overallList$isGray)
+ 	return(overallList)
+ }
> 
> normalizeToHundredPercent <-  function(whichRows, overallResult) {
+ 	return(t(apply(overallResult[whichRows,], 1, function(x,y){(100*x)/y}, y=colSums(overallResult[whichRows,]))))
+ }
> 
> writeLatexFile <- function(saveNameLatexFile, saveNameImageFile="", o="") {
+ 	
+ 	saveNameImageFile <- preprocessingOfValues(saveNameImageFile, FALSE, "_")
+ 	saveNameLatexFile <- preprocessingOfValues(saveNameLatexFile, FALSE, "_")
+ 	o <- gsub('[[:punct:]]',"_",o)
+ 	
+ 	latexText <- paste("\\loadImage{",
+ 					   ifelse(saveNameImageFile=="",saveNameLatexFile,saveNameImageFile),
+ 					   ifelse(o=="", "", paste("_",o ,sep="")),
+ 					   ".pdf}", sep="")
+ 	
+ 	write(x=latexText, append=TRUE, file=paste(saveNameLatexFile,"tex",sep="."))
+ 	
+ }
> 
> saveImageFile <- function(overallList, plot, saveName, extraString="") {
+ 	filename <- preprocessingOfValues(paste(saveName,extraString,sep=""), FALSE,replaceString = "_")	
+ 	ggsave (filename=paste(filename,overallList$saveFormat,sep="."), plot = plot, dpi=as.numeric(overallList$dpi))
+ 
+ }
> 
> makeDepthBoxplotDiagram <- function(h, overallList) {
+ 
+ 	overallList$debug %debug% "makeDepthBoxplotDiagram()"
+ 	overallList$symbolParameter <- 15
+ 	
+ 	if (h==1) {
+ 		openImageFile(overallList)
+ 	}
+ 	par(mar=c(4.1,4.1,2.1,2.1))
+ 	plot.depth(as.matrix(overallList$overallResult), plot.type=h, xlabel=overallList$xAxisName, l.width=12, lp.color=overallList$color)
+ 	
+ 	grid()
+ 	if (h==1) {
+ 		dev.off()
+ 	}
+ 	if(overallList$appendix) {
+ 		writeLatexFile("appendixImage", overallList$saveName)
+ 	}
+ 	
+ 	return(overallList)
+ }
> 
> CheckIfOneColumnHasOnlyValues <- function(overallResult, descriptor="", diagramTyp="nboxplot") {	
+ 	
+ 	max <- -1	
+ 	for(index in levels(overallResult$name)){
+ 		if(diagramTyp == "nboxplot" || diagramTyp == "boxplot") {
+ 			temp <- sum(!is.na(overallResult$mean[overallResult$name == index]))
+ 		} else {
+ 			boolVec <- overallResult$name == index
+ 			temp <- sum(!is.na(overallResult[boolVec,descriptor]))
+ 		}
+ 		max <- ifelse(temp > max, temp, max)
+ 	}
+ 		
+ 	return(ifelse(max == 1,TRUE, FALSE))
+ }
> 
> 
> buildMyStats <- function(values, means, se) {
+ 	means <- as.data.frame(as.vector(means))
+ 	colnames(means) <- "means"
+ 	
+ 	se <- as.data.frame(as.vector(se))
+ 	colnames(se) <- "se"
+ 
+ 	return(data.frame(value=values,means=means, se=se))
+ }
> 
> buildMyStats2 <- function(values, means, se, rowName) {
+ 	means <- as.data.frame(as.vector(means))
+ 	colnames(means) <- "means"
+ 	
+ 	rowName <- as.data.frame(as.vector(rowName))
+ 	colnames(rowName) <- Name
+ 	
+ 	se <- as.data.frame(as.vector(se))
+ 	colnames(se) <- "se"
+ 	
+ 	return(data.frame(value=values,means=means, se=se, rowName=rowName))
+ }
> 
> reduceOverallResult <- function(tempOverallList, imagesIndex) {
+ 	tempOverallList$debug %debug% "reduceOverallResult()"
+ 
+ 	workingDataSet <- buildDataSet(tempOverallList$overallResult[,1:2], tempOverallList, c("mean", "se"), imagesIndex)
+ 	colnames(workingDataSet) <- c(colnames(workingDataSet)[1:2], "mean", "se")
+ 	return(workingDataSet)	
+ }
> 
> 
> reduceWholeOverallResultToOneValue <- function(tempOverallResult, imagesIndex, debug, diagramTyp="nboxplot") {
+ 	debug %debug% "reduceWholeOverallResultToOneValue()"
+ 	
+ 	if(diagramTyp == "boxplotstacked") {
+ 		
+ 		workingDataSet <- tempOverallResult[tempOverallResult$plot == imagesIndex,]
+ 		workingDataSet$hist <- factor(workingDataSet$hist, unique(workingDataSet$hist))
+ 		
+ 	} else {
+ 		colNames <- vector()
+ 		if(diagramTyp == "nboxplot" || diagramTyp == "barplot") {
+ 			colNames <- c("mean", "se")
+ 		} else if(diagramTyp == "boxplot") {
+ 			colNames <- c("value")
+ 		} 
+ 		
+ 		if("primaerTreatment" %in% tempOverallResult) {
+ 			standardColumnName <- c("name", "primaerTreatment", "xAxis")
+ 		} else {
+ 			standardColumnName <- c("name", "xAxis")
+ 		}
+ 		
+ 		workingDataSet <- buildDataSet(tempOverallResult[,standardColumnName], tempOverallResult, colNames, imagesIndex)
+ 		colnames(workingDataSet) <- c(standardColumnName, colNames)
+ 	}
+ 	return(workingDataSet)	
+ }
> 
> 
> makeLinearDiagram <- function(h, overallResult, overallDescriptor, overallColor, overallDesName, overallSaveName, overallList) {
+ ########################		
+ #	h=h 
+ #	overallResult = overallList$overallResult_nBoxDes
+ #	overallColor=overallList$color_nBox
+ ##	debug = overallList$debug
+ #	overallDescriptor = overallList$nBoxDes
+ #	overallDesName = overallList$nBoxDesName
+ #########################
+ 	
+ 	overallList$debug %debug% "makeLinearDiagram()"	
+ 	print("... nBoxplot")
+ 	
+ 	tempOverallResult <-  overallResult
+ 	
+ 	for(imagesIndex in names(overallDescriptor)) {
+ 		if(!is.na(overallDescriptor[[imagesIndex]])) {
+ 			print(paste("... image",imagesIndex))
+ 			overallResult <- reduceWholeOverallResultToOneValue(tempOverallResult, imagesIndex, overallList$debug, "nboxplot")
+ 			
+ 			if(!CheckIfOneColumnHasOnlyValues(overallResult)) {	
+ 		
+ 	#			myDataSet <- data.frame(name=c("normal","wet","dry","normal","wet","dry","normal","wet","dry"), 
+ 	#									xAxis=c(6,6,6,8,8,8,10,10,10),		
+ 	#									mean=c(4883,6224,4630,6047,5790,7758,7349,7778,9725), 
+ 	#									se=c(1515,1190,1670,1831,2013,1318,2387,2182,1499))
+ 						
+ 				plot <-	ggplot(data=overallResult, aes(x=xAxis, y=mean, shape=name)) +
+ 						#geom_smooth(aes(ymin=mean-se, ymax=mean+se, colour=name, fill=name), stat="identity", alpha=0.1) +
+ 						geom_ribbon(aes(ymin=mean-se, ymax=mean+se, fill=name), stat="identity", alpha=0.1) +
+ 						geom_line(aes(color=name), alpha=0.2) +
+ 						geom_point(aes(color=name), size=3) +
+ 						scale_x_continuous(name=overallList$xAxisName, minor_breaks = min(overallResult$xAxis):max(overallResult$xAxis)) +
+ 						ylab(overallDesName[[imagesIndex]]) +
+ 						scale_fill_manual(values = overallColor[[imagesIndex]]) +
+ 						scale_colour_manual(values= overallColor[[imagesIndex]]) +
+ 						scale_shape_manual(values = c(1:length(overallColor[[imagesIndex]]))) +
+ 						theme_bw() +
+ 						opts(axis.title.x = theme_text(face="bold", size=11),
+ 								axis.title.y = theme_text(face="bold", size=11, angle=90),
+ 								#panel.grid.major = theme_blank(), # switch off major gridlines
+ 								#panel.grid.minor = theme_blank(), # switch off minor gridlines
+ 								legend.position = "right", # manually position the legend (numbers being from 0,0 at bottom left of whole plot to 1,1 at top right)
+ 								legend.title = theme_blank(), # switch off the legend title						
+ 								#legend.key.size = unit(1.5, "lines"),
+ 								legend.key = theme_blank(), # switch off the rectangle around symbols in the legend
+ 								panel.border = theme_rect(colour="Grey", size=0.1)
+ 						)
+ 				
+ 				if(length(overallColor[[imagesIndex]]) > 25) {
+ 					plot <- plot + opts(legend.text = theme_text(size=6),
+ 										legend.key.size = unit(0.7, "lines")
+ 										)
+ 				} else {
+ 					plot <- plot + opts(legend.text = theme_text(size=11))
+ 				}
+ 								
+ 	#			print(plot)
+ 		
+ 		##!# nicht löschen, ist die interpolation (alles in dieser if Abfrage mit #!# makiert)
+ 		##!#				newCoords <- seq(min(overallList$filterXaxis,na.rm=TRUE),max(overallList$filterXaxis,na.rm=TRUE),1)
+ 		##!#				newValue <- approx(overallList$filterXaxis, overallList$overallResult[y,],xout=newCoords,method="linear")
+ 		##!#				
+ 		##!#				naVector <- is.na(overallList$overallResult[y,])
+ 		##!#				overallResultWithNaValues <- overallList$overallResult[y,]
+ 		##!#				overallList$overallResult[y,naVector] <- newValue$y[overallList$filterXaxis[naVector]]
+ 		#				
+ 		#				if (firstPlot) {
+ 		#					firstPlot <- FALSE
+ 		##!#				plot(overallList$filterXaxis, overallList$overallResult[y,], main="", type="c", xlab=overallList$xAxisName, col=overallList$color[y], ylab=overallList$yAxisName, pch=y, lty=1, lwd=3, ylim=c(min(overallList$overallResult,na.rm=TRUE),max(overallList$overallResult,na.rm=TRUE)))
+ 		#					plot(overallList$filterXaxis, overallList$overallResult[y,], main="", type="b", xlab=overallList$xAxisName, col=overallList$color[y], ylab=overallList$yAxisName, pch=y, lty=1, lwd=3, ylim=c(min(overallList$overallResult,na.rm=TRUE),max(overallList$overallResult,na.rm=TRUE)))
+ 		#				} else {
+ 		##!#				points(overallList$filterXaxis, overallList$overallResult[y,], type="c", col=overallList$color[y], pch=y, lty=1, lwd=3 )	
+ 		#					points(overallList$filterXaxis, overallList$overallResult[y,], type="b", col=overallList$color[y], pch=y, lty=1, lwd=3 )
+ 		#				}
+ 		##!#				points(overallList$filterXaxis, overallResultWithNaValues, type="p", col=overallList$color[y], pch=y, lty=1, lwd=3 )
+ 		#			} 
+ 		
+ 				if(h==1) {
+ 					saveImageFile(overallList, plot, overallSaveName[[imagesIndex]], "nboxplot")
+ 				} else {
+ 					print(plot)
+ 				}
+ 				if(overallList$appendix) {
+ 					writeLatexFile("appendixImage", overallSaveName[[imagesIndex]], "nboxplot")
+ 				}
+ 			
+ 			} else {
+ 				print("... only one column has values, so it will be plot as barplot!")
+ 		
+ 				day <- overallResult$xAxis[!is.na(overallResult$mean)][1]
+ 				overallList$xAxisName <- paste(overallList$xAxisName,day)
+ 				#overallList$overallResult <- overallList$overallResult[!is.na(overallList$overallResult$mean),]
+ 				overallList <- makeBarDiagram(h, overallResult, overallDescriptor, overallColor, overallDesName, overallSaveName, overallList, TRUE)
+ 			}
+ 		}
+ 	}
+ 	#return(overallList)
+ }
> 
> getColor <- function(overallColorIndex, overallResult) {
+ 	input <- as.vector(unique(overallResult$hist))
+ 	
+ 	color <- vector()
+ 	for(n in input) {
+ 		color <- c(color, overallColorIndex[[n]])
+ 	}
+ 	return(color)
+ }
> 
> 
> plotStackedImage <- function(h, overallList, overallResult, title = "", makeOverallImage = FALSE, legende=TRUE, minor_breaks=TRUE, overallColor, overallDesName, imagesIndex, overallSaveName) {
+ 	overallList$debug %debug% "plotStackedImage()"	
+ 		
+ 	if(length(overallResult[,1]) > 0) {
+ 
+ 		if(length(overallList$stackedBarOptions$typOfGeomBar) == 0) {
+ 			overallList$stackedBarOptions$typOfGeomBar <- c("fill")
+ 		}
+ 		
+ 		for(positionTyp in overallList$stackedBarOptions$typOfGeomBar) {
+ 		
+ 		
+ 			plot <- ggplot(overallResult, aes(xAxis, values, fill=hist)) + 
+ 					geom_bar(stat="identity", position = positionTyp) +
+ 				 	ylab(overallDesName[[imagesIndex]]) 
+ 					#coord_cartesian(ylim=c(0,1)) +
+ 				
+ 			if(minor_breaks) {
+ 				plot <- plot + scale_x_continuous(name=overallList$xAxisName, minor_breaks = min(overallResult$xAxis):max(overallResult$xAxis))
+ 			} else {
+ 				plot <- plot + xlab(overallList$xAxisName)
+ 			}
+ 					
+ 			plot <- plot +		
+ 					scale_fill_manual(values = getColor(overallColor[[imagesIndex]], overallResult), name="") +
+ 					theme_bw() +
+ 					opts(axis.title.x = theme_text(face="bold", size=11),
+ 							axis.title.y = theme_text(face="bold", size=11, angle=90),
+ 							plot.margin = unit(c(0.1, 0.1, 0, 0), "cm"),
+ 							#panel.background = theme_rect(linetype = "dotted"),
+ 							panel.border = theme_rect(colour="Grey", size=0.1),
+ 							strip.background = theme_rect(colour=NA)
+ 	#						plot.title = theme_text(size=10),
+ 	#						plot.title = theme_rect(colour="Pink", size=0.1),
+ 					) 
+ 			
+ 			if(!legende) {
+ 				plot <- plot + opts(legend.position="none")
+ 			} else {
+ 				plot <- plot + opts(legend.position="right", 
+ 									legend.title = theme_blank(),
+ 									legend.text = theme_text(size=11),
+ 									legend.key = theme_blank())
+ 			}
+ 			
+ 			if(title != "") {
+ 				plot <- plot + opts(title = title)
+ 			}
+ 			
+ 			if(!minor_breaks) {
+ 				plot <- plot + opts(panel.grid.minor = theme_blank())
+ 			}
+ 			
+ 			if(makeOverallImage) {
+ 				#plot <- plot + facet_wrap(~ name, drop=TRUE)
+ 				plot <- plot + facet_wrap(~ name)
+ 			}
+ 			
+ 			if (h==1) {
+ 				saveImageFile(overallList, plot, overallSaveName[[imagesIndex]], paste("overall", title, positionTyp, sep=""))
+ 				if(makeOverallImage) {
+ 					writeLatexFile(paste(overallSaveName[[imagesIndex]], "stackedOverallImage", sep=""), paste(overallSaveName[[imagesIndex]],"overall",title, positionTyp, sep=""))	
+ 				} else {
+ 					writeLatexFile(overallSaveName[[imagesIndex]], paste(overallSaveName[[imagesIndex]],"overall",title,positionTyp, sep=""))	
+ 				}
+ 			} else {
+ 				print(plot)
+ 			}
+ 		}
+ 	}
+ }
> 
> PreWorkForMakeBigOverallImage <- function(h, overallResult, overallDescriptor, overallColor, overallDesName, overallSaveName, overallList, imagesIndex) {
+ 	overallList$debug %debug% "PreWorkForMakeBigOverallImage()"	
+ 	
+ 	groupBy <- groupByFunction(list(overallList$treatment, overallList$secondTreatment))
+ 	if(length(groupBy) == 0 || length(groupBy) == 1) {
+ 		plotStackedImage(h = h, overallList = overallList, overallResult = overallResult, makeOverallImage = TRUE, legende=TRUE, minor_breaks=FALSE, overallColor = overallColor, overallDesName = overallDesName, imagesIndex= imagesIndex, overallSaveName =overallSaveName)
+ 		
+ 	} else {
+ 		for(value in overallList$filterSecondTreatment) {
+ 			title <- value
+ 			plottedName <- overallList$filterTreatment %contactAllWithAll% value
+ 			booleanVector <- getBooleanVectorForFilterValues(overallResult, list(name = plottedName))
+ 			plotThisValues <- overallResult[booleanVector,]
+ 			plotThisValues <- reNameColumn(plotThisValues, "name", "primaerTreatment")
+ 			plotStackedImage(h, overallList, plotThisValues, title = title, makeOverallImage = TRUE,  legende=TRUE, minor_breaks=FALSE, overallColor = overallColor, overallDesName = overallDesName, imagesIndex=imagesIndex, overallSaveName=overallSaveName)
+ 		}	 
+ 	}
+ }
> 
> PreWorkForMakeNormalImages <- function(h, overallList) {
+ 	overallList$debug %debug% "PreWorkForMakeNormalImages()"
+ 	stackedImages <- unlist(unique(overallList$overallResult["name"]))
+ 	
+ 	for(o in stackedImages) {
+ 		overallList$debug %debug% paste("makeBoxplotStackedDiagram with the descriptor: ",overallList$saveName,o)
+ 		plotThisValues <- overallList$overallResult[overallList$overallResult["name"] == o,]
+ 		plotStackedImage(h, overallList, plotThisValues, o, FALSE, TRUE, TRUE)
+ 	}
+ }
> 
> 
> makeBoxplotStackedDiagram <- function(h, overallResult, overallDescriptor, overallColor, overallDesName, overallSaveName, overallList) {
+ 	########################		
+ #	h=h
+ #	overallResult=overallList$overallResult_boxStackDes
+ #	overallDescriptor=overallList$boxStackDes
+ #	overallColor=overallList$color_boxStack
+ #	overallDesName=overallList$boxStackDesName
+ #	overallList=overallList
+ #	overallSaveName = overallList$saveName_nBoxDes
+ 	#########################
+ 
+ 
+ 	
+ 	
+ 	overallList$debug %debug% "makeBoxplotStackedDiagram()"
+ 	print("... stacked Bockplot")
+ 	overallResult[is.na(overallResult)] <- 0
+ 	tempOverallResult <- overallResult
+ 	
+ 	for(imagesIndex in names(overallDescriptor)) {
+ 		print(paste("... image",imagesIndex))
+ 		overallResult <- reduceWholeOverallResultToOneValue(tempOverallResult, imagesIndex, overallList$debug, "boxplotstacked")
+ 	
+ 		PreWorkForMakeBigOverallImage(h, overallResult, overallDescriptor, overallColor, overallDesName, overallSaveName, overallList, imagesIndex)
+ 		#PreWorkForMakeNormalImages(h,overallList)
+ 	}
+ 	#return(overallList)
+ }	
> 
> makeBarDiagram <- function(h, overallResult, overallDescriptor, overallColor, overallDesName, overallSaveName, overallList, isOnlyOneValue = FALSE) {
+ 	########################		
+ #	h=h 
+ #	overallResult = overallList$overallResult_nBoxDes
+ #	overallColor=overallList$color_nBox
+ ##	debug = overallList$debug
+ #	overallDescriptor = overallList$nBoxDes
+ #	overallDesName = overallList$nBoxDesName
+ #	isOnlyOneValue = FALSE
+ 	#########################
+ 
+ 	overallList$debug %debug% "makeBarDiagram()"
+ 
+ 	tempOverallResult <-  overallResult
+ 	
+ 	for(imagesIndex in names(overallDescriptor)) {
+ 		if(!is.na(overallDescriptor[[imagesIndex]])) {
+ 			overallResult <- reduceWholeOverallResultToOneValue(tempOverallResult, imagesIndex, overallList$debug, "barplot")
+ 			overallResult <- overallResult[!is.na(overallResult$mean),]
+ 			
+ 			if(isOnlyOneValue) {
+ 				myPlot <- ggplot(data=overallResult, aes(x=name, y=mean))
+ 			} else {
+ 				myPlot <- ggplot(data=overallResult, aes(x=xAxis, y=mean))
+ 			}
+ 			
+ 			myPlot <- myPlot + 						
+ 					geom_bar(stat="identity", aes(fill=name), colour="Grey", size=0.1) +
+ 					geom_errorbar(aes(ymax=mean+se, ymin=mean-se), width=0.2, colour="black")+
+ 					#geom_errorbar(aes(ymax=mean+se, ymin=mean-se), width=0.5, colour="Pink")+
+ 					ylab(overallDesName[[imagesIndex]]) +
+ 					coord_cartesian(ylim=c(0,max(overallResult$mean + overallResult$se + 10,na.rm=TRUE))) +
+ 					xlab(overallList$xAxisName) +
+ 					scale_fill_manual(values = overallColor[[imagesIndex]]) +
+ 					theme_bw() +
+ 					opts(legend.position="none",
+ 							plot.margin = unit(c(0.1, 0.1, 0, 0), "cm"),
+ 							axis.title.x = theme_text(face="bold", size=11),
+ 							axis.title.y = theme_text(face="bold", size=11, angle=90),
+ 							panel.grid.minor = theme_blank(),
+ 							panel.border = theme_rect(colour="Grey", size=0.1)
+ 					)
+ 			
+ 			if(length(overallColor[[imagesIndex]]) > 10) {
+ 				myPlot <- myPlot + opts(axis.text.x = theme_text(size=6, angle=90))
+ 			}
+ 			print(myPlot)
+ 			
+ 			if (h==1) {
+ 				saveImageFile(overallList, myPlot, overallSaveName[[imagesIndex]], "barplot")
+ 			} else {
+ 				print(myPlot)
+ 			}
+ 			if(overallList$appendix) {
+ 				writeLatexFile("appendixImage", overallSaveName[[imagesIndex]], "barplot")
+ 			}
+ 		}
+ 	}
+ 	#return(overallList)
+ }
> 
> ##Problem: der median wird nicht angezeigt!
> makeBoxplotDiagram <- function(h, overallResult, overallDescriptor, overallColor, overallDesName, overallSaveName, overallList) {
+ 	########################		
+ #	h=h 
+ #	overallResult = overallList$overallResult_boxDes
+ #	overallColor=overallList$color_box
+ ##	debug = overallList$debug
+ #	overallDescriptor = overallList$boxDes
+ #	overallDesName = overallList$boxDesName
+ 	#########################
+ 	
+ 	overallList$debug %debug% "makeBoxplotDiagram()"
+ 	#overallList$overallResult <- overallList$overallResult[!is.na(overallList$overallResult$mean),]
+ 	print("... Boxplot")
+ 	
+ 	tempOverallResult <-  overallResult
+ 	
+ 	for(imagesIndex in names(overallDescriptor)) {
+ 		if(!is.na(overallDescriptor[[imagesIndex]])) {
+ 			print(paste("... image",imagesIndex))
+ 			overallResult <- reduceWholeOverallResultToOneValue(tempOverallResult, imagesIndex, overallList$debug, "boxplot")
+ 			
+ 			
+ 			#myPlot <- ggplot(overallList$overallResult, aes(factor(name), value, fill=name, colour=name)) + 
+ 			myPlot <- ggplot(overallResult, aes(factor(name), value, fill=name)) +
+ 					geom_boxplot() +
+ 					ylab(overallDesName[[imagesIndex]]) +
+ 					#coord_cartesian(ylim=c(0,max(overallList$overallResult$mean + overallList$overallResult$se + 10,na.rm=TRUE))) +
+ 					xlab(overallList$xAxisName) +
+ 					scale_fill_manual(values = overallColor[[imagesIndex]]) +
+ 					#stat_summary(fun.data = f, geom = "crossbar", height = 0.1,	colour = NA, fill = "skyblue", width = 0.8, alpha = 0.5) +
+ 					theme_bw() +
+ 					opts(legend.position="none",
+ 							plot.margin = unit(c(0.1, 0.1, 0, 0), "cm"),
+ 							axis.title.x = theme_text(face="bold", size=11),
+ 							axis.title.y = theme_text(face="bold", size=11, angle=90),
+ 							panel.grid.minor = theme_blank(),
+ 							panel.border = theme_rect(colour="Grey", size=0.1)
+ 					)
+ 		
+ 			if(length(overallColor[[imagesIndex]]) > 10) {
+ 				myPlot <- myPlot + opts(axis.text.x = theme_text(size=6, angle=90))
+ 			}	
+ 			
+ 		#	print(myPlot)
+ 
+ 			if (h==1) {
+ 				saveImageFile(overallList, myPlot, overallSaveName[[imagesIndex]], "boxplot")
+ 			} else {
+ 				print(myPlot)
+ 			}
+ 			if(overallList$appendix) {
+ 				writeLatexFile("appendixImage", overallSaveName[[imagesIndex]], "boxplot")
+ 			}
+ 		}
+ 	}
+ 	#return(overallList)
+ }
> 
> makeDiagrams <- function(overallList) {
+ 	overallList$debug %debug% "makeDiagrams()"
+ 	durchlauf <- ifelse(overallList$showResultInR, 2, 1)
+ 	
+ 	for(h in 1:durchlauf) {
+ 
+ 		if(sum(!is.na(overallList$nBoxDes)) > 0) {
+ 			if(overallList$debug) {print("... nBoxplot")}	
+ 			makeLinearDiagram(h, overallList$overallResult_nBoxDes, overallList$nBoxDes, overallList$color_nBox, overallDesName=overallList$nBoxDesName, overallList$saveName_nBoxDes ,overallList)
+ 		} else {
+ 			print("... all in nBoxplot is 'NA'")
+ 		}
+ 		
+ 		if(sum(!is.na(overallList$boxDes)) > 0) {
+ 			if(overallList$debug) {print("... Boxplot")}
+ 			makeBoxplotDiagram(h, overallList$overallResult_boxDes, overallList$boxDes, overallList$color_box, overallDesName=overallList$boxDesName, overallList$saveName_boxDes, overallList)
+ 		} else {
+ 			print("... all in Boxplot is 'NA'")
+ 		}
+ 		
+ 		if(sum(!is.na(overallList$boxStackDes)) > 0) {
+ 			if(overallList$debug) {print("... stacked Boxplot")}
+ 			makeBoxplotStackedDiagram(h, overallList$overallResult_boxStackDes, overallList$boxStackDes, overallList$color_boxStack, overallDesName=overallList$boxStackDesName, overallList$saveName_boxStackDes, overallList)
+ 		} else {
+ 			print("... all in stacked Boxplot is 'NA'")
+ 		}
+ 		
+ 		if(FALSE) {	# falls auch mal barplots erstellt werden sollen (ausser wenn nur ein Tag vorhanden ist!)
+ 			if(overallList$debug) {print("... Barplot")}
+ 			makeBarDiagram(h, overallList$overallResult_nBoxDes, overallList$nBoxDes, overallList$color_nBox, overallDesName=overallList$nBoxDesName, overallList$saveName_nBoxDes, overallList)
+ 		}
+ 	}
+ }
> 
> #makeDiagrams <- function(overallList) {
> #	overallList$debug %debug% "makeDiagrams()"
> #	durchlauf <- ifelse(overallList$showResultInR, 2, 1)
> #	
> #	for(h in 1:durchlauf) {
> #						
> #		if (tolower(overallList$diagramTyp) == "boxplot") {
> #			overallList <- makeBoxplotDiagram(h, overallList)
> #			
> #		} else if (tolower(overallList$diagramTyp) == "boxplotstacked") {
> #			overallList <- makeBoxplotStackedDiagram(h, overallList)
> #			
> #		} else if(tolower(overallList$diagramTyp) == "nboxplot"){
> #			overallList <- makeLinearDiagram(h, overallList)
> #			
> #		}  else if (tolower(overallList$diagramTyp) == "barplot") {
> #			overallList <- makeBarDiagram(h, overallList)
> #		} else {
> #			print("Error - overallList$diagramTyp is undefined!")
> #		}
> #	}
> #}
> 
> checkIfAllNecessaryFilesAreThere <- function() {
+ 		print("... check if the noValues-Image is there")
+ 		file <- "noValues.pdf"
+ 		if(!file.exists(file)){
+ 			library("Cairo")
+ 			print(paste("... create defaultImage '",file,"'",sep=""))
+ 			Cairo(width=900, height=70,file=file,type="pdf",bg="transparent",units="px",dpi=90)
+ 			par(mar = c(0,0,0,0))
+ 			plot.new()
+ 			legend("left", "no values", col= c("black"), pch=1, bty="n")
+ 			dev.off()
+ 		}	
+ }
> 
> buildBlacklist <- function(workingDataSet, descriptorSet) {
+ 	
+ 	searchString <- ".histogram."
+ 	searchString <- paste(searchString,"mark",sep = "|")	
+ 	additionalDescriptors <- c(descriptorSet, "Day (Int)","Day","Time", "Plant ID", "vis.side", "fluo.side", "nir.side", "vis.top", "fluo.top", "nir.top")
+ 	
+ 	return(c(colnames(workingDataSet)[grep(searchString,colnames(workingDataSet), ignore.case = TRUE)], preprocessingOfValues(additionalDescriptors, TRUE)))
+ }
> 
> initRfunction <- function(DEBUG = FALSE){
+ 	
+ 	if(DEBUG) {
+ 		
+ 		options(error = quote({
+ 			#sink(file="error.txt", split = TRUE);
+ 			dump.frames();
+ 			print(attr(last.dump,"error.message"));
+ 			#x <- attr(last.dump,"error.message")
+ 			traceback();
+ 			#sink(file=NULL);		
+ 			#q()
+ 		}))
+ 	} else {	
+ 		options(error = NULL)
+ 	}
+ 	memory.limit(size=3500)
+ 
+ 	while(!is.null(dev.list())) {
+ 		dev.off()
+ 	}
+ }
> typOfStartOptions = "test"
> 	typOfStartOptions <- tolower(typOfStartOptions)
> 	
> 	args <- commandArgs(TRUE)
> 	print("#### Arguments")
[1] "#### Arguments"
> 	print(args)
character(0)
> 	print("####")
[1] "####"
> 	
> 	saveFormat <- "pdf"	
> 	dpi <- "150" ##90
> 	
> 	isGray <- FALSE
> 	showResultInR <- FALSE
> 	
> 	treatment <- "Treatment"
> 	filterTreatment <- "none"
> 	
> 	secondTreatment <- "none"
> 	filterSecondTreatment <- "none"
> 	
> 	xAxis <- "Day (Int)" 
> 	xAxisName <- "DAS"
> 	filterXaxis <- "none"
> 	
> #	diagramTypVector <- vector()
> 	descriptorSet <- vector()
> 	descriptorSetName <- vector()
> 	
> 	fileName <- "error"
> 
> 	appendix <- FALSE
> 	#appendix <- TRUE
> 	
> 	separation <- ";"
> #	if (length(args) < 1) {
> #		englischVersion <- FALSE
> #		#englischVersion <- TRUE
> #	} else {
> #		englischVersion <- TRUE
> #	}
> 
> 	if (typOfStartOptions == "all" | typOfStartOptions == "report" | typOfStartOptions == "allmanual") {
+ 
+ 		if (typOfStartOptions != "allmanual") {
+ 			fileName <- fileName %exists% args[1]
+ 		} else {
+ 			fileName <- "numeric_data.MaizeAnalysisAction_ 1116BA_new3.csv"
+ 			#fileName <- "report.csv" ## englischVersion <- TRUE setzen!!
+ 			#fileName <- "testDataset3.csv"
+ 		}
+ 		
+ 		if (fileName != "error") {
+ 			workingDataSet <- separation %getData% fileName
+ 			
+ 			if(workingDataSet != "error") {
+ 				#nboxplot
+ 				if (typOfStartOptions == "all") {
+ 					descriptorSet_nBoxplot <- colnames(workingDataSet)
+ 					descriptorSetName_nBoxplot <- descriptorSet
+ 					
+ 				} else { #Report	
+ 					descriptorSet_nBoxplot <- c("Weight A (g)","Weight B (g)","Water (weight-diff)","side.height.norm (mm)","side.width.norm (mm)","side.area.norm (mm^2)", "top.area.norm (mm^2)",
+ 							"side.fluo.intensity.chlorophyl.average (relative)","side.fluo.intensity.phenol.average (relative)",
+ 							"side.nir.intensity.average (relative)","side.leaf.count.median (leafs)","side.bloom.count (tassel)",
+ 							"side.leaf.length.sum.norm.max (mm)", "volume.fluo.iap","volume.iap (px^3)", "volume.iap_max", "volume.lt (px^3)",
+ 							"volume.iap.wue", "side.nir.wetness.plant_weight_drought_loss", "top.nir.wetness.plant_weight_drought_loss", "side.nir.wetness.av", "top.nir.wetness.av",
+ 							"side.area.relative", "side.height.norm.relative", "side.width.norm.relative", "top.area.relative", "side.area.relative", "volume.iap.relative",
+ 							"side.height (mm)","side.width (mm)","side.area (px)", "top.area (px)")
+ 				
+ 					descriptorSetName_nBoxplot <- c("weight before watering (g)","weight after watering (g)", "water weight (g)", "normalized height (mm)", "normalized width (mm)", "normalized side area (mm^2)", "normalized top area (mm^2)",
+ 							"chlorophyl intensity (relative intensity/pixel)", "fluorescence intensity (relative intensity/pixel)", "nir intensity (relative intensity/pixel)",
+ 							"number of leafs (leaf)", "number of tassels (tassel)", "length of leafs plus stem (mm)", "volume based on FLUO (IAP) (px^3)", "volume based on RGB (IAP) (px^3)", "volume based on max RGB-image (IAP) (px^3)", "volume based on RGB (LemnaTec) (px^3)",
+ 							"volume based water use efficiency", "weighted loss through drought stress (side)", "weighted loss through drought stress (top)", "Average wetness of side image", "Average wetness of top image",
+ 							"relative projected side area (%)", "relative plant height (%)", "relative plant width (%)", "relative projected top area (%)", "relative projected side area (%)", "relative volume (IAP based formular - RGB) (%)",
+ 							"height (px)", "width (px)", "side area (px)", "top area (px)")		
+ 				}
+ 	
+ 				nBoxOptions= NULL
+ 				#diagramTypVector <- rep.int("nboxplot", times=length(descriptorSetName))
+ 		
+ 		
+ 				#boxplot
+ 				descriptorSet_boxplot <- c("side.height.norm (mm)","side.width.norm (mm)","side.area.norm (mm^2)", "top.area.norm (mm^2)",
+ 						"volume.fluo.iap","volume.iap (px^3)", "volume.iap_max", "volume.lt (px^3)",
+ 						"side.height (mm)","side.width (mm)","side.area (px)", "top.area (px)")
+ 				
+ 				descriptorSetName_boxplot <- c("normalized height (mm)", "normalized width (mm)", "normalized side area (mm^2)", "normalized top area (mm^2)",
+ 						"volume based on FLUO (IAP) (px^3)", "volume based on RGB (IAP) (px^3)", "volume based on max RGB-image (IAP) (px^3)", "volume based on RGB (LemnaTec) (px^3)",
+ 						"height (px)", "width (px)", "side area (px)", "top area (px)")	
+ 				
+ 				boxOptions= NULL
+ 				#diagramTypVectorBox <- rep.int("boxplot", times=length(descriptorSetBox))
+ 				
+ 				#descriptorSet <- c(descriptorSet, descriptorSetBox)
+ 				#descriptorSetName <- c(descriptorSetName, descriptorSetNameBox)
+ 				#diagramTypVector <- c(diagramTypVector, diagramTypVectorBox)
+ 				
+ 				#boxplotStacked
+ 				descriptorSet_boxplotStacked <- c("side.nir.normalized.histogram.bin.1.0_25$side.nir.normalized.histogram.bin.2.25_51$side.nir.normalized.histogram.bin.3.51_76$side.nir.normalized.histogram.bin.4.76_102$side.nir.normalized.histogram.bin.5.102_127$side.nir.normalized.histogram.bin.6.127_153$side.nir.normalized.histogram.bin.7.153_178$side.nir.normalized.histogram.bin.8.178_204$side.nir.normalized.histogram.bin.9.204_229$side.nir.normalized.histogram.bin.10.229_255",
+ 								   				  "side.fluo.histogram.bin.1.0_25$side.fluo.histogram.bin.2.25_51$side.fluo.histogram.bin.3.51_76$side.fluo.histogram.bin.4.76_102$side.fluo.histogram.bin.5.102_127$side.fluo.histogram.bin.6.127_153$side.fluo.histogram.bin.7.153_178$side.fluo.histogram.bin.8.178_204$side.fluo.histogram.bin.9.204_229$side.fluo.histogram.bin.10.229_255",
+ 										  		  "top.nir.histogram.bin.1.0_25$top.nir.histogram.bin.2.25_51$top.nir.histogram.bin.3.51_76$top.nir.histogram.bin.4.76_102$top.nir.histogram.bin.5.102_127$top.nir.histogram.bin.6.127_153$top.nir.histogram.bin.7.153_178$top.nir.histogram.bin.8.178_204$top.nir.histogram.bin.9.204_229$top.nir.histogram.bin.10.229_255",
+ 												  "side.fluo.histogram.phenol.bin.1.0_25$side.fluo.histogram.phenol.bin.2.25_51$side.fluo.histogram.phenol.bin.3.51_76$side.fluo.histogram.phenol.bin.4.76_102$side.fluo.histogram.phenol.bin.5.102_127$side.fluo.histogram.phenol.bin.6.127_153$side.fluo.histogram.phenol.bin.7.153_178$side.fluo.histogram.phenol.bin.8.178_204$side.fluo.histogram.phenol.bin.9.204_229$side.fluo.histogram.phenol.bin.10.229_255",
+ 												  "side.fluo.histogram.ratio.bin.1.0_25$side.fluo.histogram.ratio.bin.2.25_51$side.fluo.histogram.ratio.bin.3.51_76$side.fluo.histogram.ratio.bin.4.76_102$side.fluo.histogram.ratio.bin.5.102_127$side.fluo.histogram.ratio.bin.6.127_153$side.fluo.histogram.ratio.bin.7.153_178$side.fluo.histogram.ratio.bin.8.178_204$side.fluo.histogram.ratio.bin.9.204_229$side.fluo.histogram.ratio.bin.10.229_255",
+ 												  "side.nir.normalized.histogram.bin.1.0_25$side.nir.normalized.histogram.bin.2.25_51$side.nir.normalized.histogram.bin.3.51_76$side.nir.normalized.histogram.bin.4.76_102$side.nir.normalized.histogram.bin.5.102_127$side.nir.normalized.histogram.bin.6.127_153$side.nir.normalized.histogram.bin.7.153_178$side.nir.normalized.histogram.bin.8.178_204$side.nir.normalized.histogram.bin.9.204_229$side.nir.normalized.histogram.bin.10.229_255",
+ 												  "side.fluo.normalized.histogram.bin.1.0_25$side.fluo.normalized.histogram.bin.2.25_51$side.fluo.normalized.histogram.bin.3.51_76$side.fluo.normalized.histogram.bin.4.76_102$side.fluo.normalized.histogram.bin.5.102_127$side.fluo.normalized.histogram.bin.6.127_153$side.fluo.normalized.histogram.bin.7.153_178$side.fluo.normalized.histogram.bin.8.178_204$side.fluo.normalized.histogram.bin.9.204_229$side.fluo.normalized.histogram.bin.10.229_255",
+ 												  "side.fluo.normalized.histogram.phenol.bin.1.0_25$side.fluo.normalized.histogram.phenol.bin.2.25_51$side.fluo.normalized.histogram.phenol.bin.3.51_76$side.fluo.normalized.histogram.phenol.bin.4.76_102$side.fluo.normalized.histogram.phenol.bin.5.102_127$side.fluo.normalized.histogram.phenol.bin.6.127_153$side.fluo.normalized.histogram.phenol.bin.7.153_178$side.fluo.normalized.histogram.phenol.bin.8.178_204$side.fluo.normalized.histogram.phenol.bin.9.204_229$side.fluo.normalized.histogram.phenol.bin.10.229_255",
+ 												  "side.fluo.normalized.histogram.ratio.bin.1.0_25$side.fluo.normalized.histogram.ratio.bin.2.25_51$side.fluo.normalized.histogram.ratio.bin.3.51_76$side.fluo.normalized.histogram.ratio.bin.4.76_102$side.fluo.normalized.histogram.ratio.bin.5.102_127$side.fluo.normalized.histogram.ratio.bin.6.127_153$side.fluo.normalized.histogram.ratio.bin.7.153_178$side.fluo.normalized.histogram.ratio.bin.8.178_204$side.fluo.normalized.histogram.ratio.bin.9.204_229$side.fluo.normalized.histogram.ratio.bin.10.229_255",
+ 												  "side.nir.histogram.phenol.bin.1.0_25$side.nir.histogram.phenol.bin.2.25_51$side.nir.histogram.phenol.bin.3.51_76$side.nir.histogram.phenol.bin.4.76_102$side.nir.histogram.phenol.bin.5.102_127$side.nir.histogram.phenol.bin.6.127_153$side.nir.histogram.phenol.bin.7.153_178$side.nir.histogram.phenol.bin.8.178_204$side.nir.histogram.phenol.bin.9.204_229$side.nir.histogram.phenol.bin.10.229_255",
+ 												  "side.nir.histogram.ratio.bin.1.0_25$side.nir.histogram.ratio.nir.2.25_51$side.nir.histogram.ratio.bin.3.51_76$side.nir.histogram.ratio.bin.4.76_102$side.nir.histogram.ratio.bin.5.102_127$side.nir.histogram.ratio.bin.6.127_153$side.nir.histogram.ratio.bin.7.153_178$side.nir.histogram.ratio.bin.8.178_204$side.nir.histogram.ratio.bin.9.204_229$side.nir.histogram.ratio.bin.10.229_255",
+ 												  "side.vis.hue.histogram.ratio.bin.1.0_25$side.vis.hue.histogram.ratio.nir.2.25_51$side.vis.hue.histogram.ratio.bin.3.51_76$side.vis.hue.histogram.ratio.bin.4.76_102$side.vis.hue.histogram.ratio.bin.5.102_127$side.vis.hue.histogram.ratio.bin.6.127_153$side.vis.hue.histogram.ratio.bin.7.153_178$side.vis.hue.histogram.ratio.bin.8.178_204$side.vis.hue.histogram.ratio.bin.9.204_229$side.vis.hue.histogram.ratio.bin.10.229_255",
+ 												  "side.vis.normalized.histogram.ratio.bin.1.0_25$side.vis.normalized.histogram.ratio.bin.2.25_51$side.vis.normalized.histogram.ratio.bin.3.51_76$side.vis.normalized.histogram.ratio.bin.4.76_102$side.vis.normalized.histogram.ratio.bin.5.102_127$side.vis.normalized.histogram.ratio.bin.6.127_153$side.vis.normalized.histogram.ratio.bin.7.153_178$side.vis.normalized.histogram.ratio.bin.8.178_204$side.vis.normalized.histogram.ratio.bin.9.204_229$side.vis.normalized.histogram.ratio.bin.10.229_255",
+ 												  "top.fluo.histogram.bin.1.0_25$top.fluo.histogram.bin.2.25_51$top.fluo.histogram.bin.3.51_76$top.fluo.histogram.bin.4.76_102$top.fluo.histogram.bin.5.102_127$top.fluo.histogram.bin.6.127_153$top.fluo.histogram.bin.7.153_178$top.fluo.histogram.bin.8.178_204$top.fluo.histogram.bin.9.204_229$top.fluo.histogram.bin.10.229_255",
+ 												  "top.fluo.histogram.phenol.bin.1.0_25$top.fluo.histogram.phenol.bin.2.25_51$top.fluo.histogram.phenol.bin.3.51_76$top.fluo.histogram.phenol.bin.4.76_102$top.fluo.histogram.phenol.bin.5.102_127$top.fluo.histogram.phenol.bin.6.127_153$top.fluo.histogram.phenol.bin.7.153_178$top.fluo.histogram.phenol.bin.8.178_204$top.fluo.histogram.phenol.bin.9.204_229$top.fluo.histogram.phenol.bin.10.229_255",
+ 												  "top.fluo.histogram.ratio.bin.1.0_25$top.fluo.histogram.ratio.bin.2.25_51$top.fluo.histogram.ratio.bin.3.51_76$top.fluo.histogram.ratio.bin.4.76_102$top.fluo.histogram.ratio.bin.5.102_127$top.fluo.histogram.ratio.bin.6.127_153$top.fluo.histogram.ratio.bin.7.153_178$top.fluo.histogram.ratio.bin.8.178_204$top.fluo.histogram.ratio.bin.9.204_229$top.fluo.histogram.ratio.bin.10.229_255",
+ 												  "top.nir.histogram.bin.1.0_25$top.nir.histogram.bin.2.25_51$top.nir.histogram.bin.3.51_76$top.nir.histogram.bin.4.76_102$top.nir.histogram.bin.5.102_127$top.nir.histogram.bin.6.127_153$top.nir.histogram.bin.7.153_178$top.nir.histogram.bin.8.178_204$top.nir.histogram.bin.9.204_229$top.nir.histogram.bin.10.229_255",
+ 												  "top.nir.histogram.phenol.bin.1.0_25$top.nir.histogram.phenol.bin.2.25_51$top.nir.histogram.phenol.bin.3.51_76$top.nir.histogram.phenol.bin.4.76_102$top.nir.histogram.phenol.bin.5.102_127$top.nir.histogram.phenol.bin.6.127_153$top.nir.histogram.phenol.bin.7.153_178$top.nir.histogram.phenol.bin.8.178_204$top.nir.histogram.phenol.bin.9.204_229$top.nir.histogram.phenol.bin.10.229_255",
+ 												  "top.nir.histogram.ratio.bin.1.0_25$top.nir.histogram.ratio.bin.2.25_51$top.nir.histogram.ratio.bin.3.51_76$top.nir.histogram.ratio.bin.4.76_102$top.nir.histogram.ratio.bin.5.102_127$top.nir.histogram.ratio.bin.6.127_153$top.nir.histogram.ratio.bin.7.153_178$top.nir.histogram.ratio.bin.8.178_204$top.nir.histogram.ratio.bin.9.204_229$top.nir.histogram.ratio.bin.10.229_255",
+ 												  "top.vis.hue.histogram.ratio.bin.1.0_25$top.vis.hue.histogram.ratio.nir.2.25_51$top.vis.hue.histogram.ratio.bin.3.51_76$top.vis.hue.histogram.ratio.bin.4.76_102$top.vis.hue.histogram.ratio.bin.5.102_127$top.vis.hue.histogram.ratio.bin.6.127_153$top.vis.hue.histogram.ratio.bin.7.153_178$top.vis.hue.histogram.ratio.bin.8.178_204$top.vis.hue.histogram.ratio.bin.9.204_229$top.vis.hue.histogram.ratio.bin.10.229_255")
+ 												  
+ 										  
+ 										  
+ 										  
+ 				descriptorSetName_boxplotStacked <- c("NIR side (%)", "red side fluorescence histogram (%)", "NIR top (%)", "yellow side fluorescence histogram (%)", "fluo side ratio histogramm (%)",
+ 													  "NIR side normalized (%)", "red side normalized fluo histogramm (%)", "yellow side normalized fluo histogramm (%)", "fluo side normalized ratio histogramm (%)",
+ 													  "NIR side phenol (%)", "NIR side ratio histogramm (%)", "VIS HUE side ratio histogramm (%)", "VIS side normalized ratio histogramm (%)",
+ 													  "red top fluorescence histogram (%)", "yellow top fluorescence histogram (%)","fluo top ratio histogramm (%)",
+ 													  "NIR top (%)", "NIR top phenol histogram (%)","NIR top ratio histogramm (%)",
+ 													  "VIS HUE top ratio histogramm (%)")
+ 											  
+ 				stackedBarOptions = list(typOfGeomBar=c("fill", "stack", "dodge"))
+ 				#diagramTypVector <- c(diagramTypVector, "boxplotStacked", "boxplotStacked")
+ 				
+ 				appendix <- appendix %exists% args[3]
+ 				
+ 				if(appendix) {
+ 					blacklist <- buildBlacklist(workingDataSet, descriptorSet)
+ 					descriptorSetAppendix <- colnames(workingDataSet[!as.data.frame(sapply(colnames(workingDataSet),'%in%', blacklist))[,1]])
+ 					descriptorSetNameAppendix <- descriptorSetAppendix
+ 					#diagramTypVectorAppendix <- rep.int("nboxplot", times=length(descriptorSetNameAppendix))
+ 				}
+ 			
+ 				saveFormat <- saveFormat %exists% args[2]
+ 							
+ 				listOfTreatAndFilterTreat <- checkOfTreatments(args, treatment, filterTreatment, secondTreatment, filterSecondTreatment, workingDataSet, debug)
+ 				treatment <- listOfTreatAndFilterTreat[[1]][[1]]
+ 				secondTreatment <- listOfTreatAndFilterTreat[[1]][[2]]
+ 				filterTreatment <- listOfTreatAndFilterTreat[[2]][[1]]
+ 				filterSecondTreatment <- listOfTreatAndFilterTreat[[2]][[2]]
+ 			} else {
+ 				fileName = "error"
+ 			}
+ 		}
+ 		
+ 	} else if (typOfStartOptions == "test"){
+ 		
+ 		
+ 		#fileName <- "1107BA_Corn_new2.csv"
+ 			
+ 		#workingDataSet <- read.csv2(fileName, header=TRUE, sep=";", fileEncoding="ISO-8859-1", encoding="UTF-8")                   
+ 		#descriptorSet <- c("side.nir.intensity.average.norm","side.nir.intensity.average","side.hull.area.norm","side.height.norm","Gewicht.B","water.consumption")                   
+ 		#descriptorSetName <- c("nir intensity (rel. intensity/px)","nir intensity (rel. intensity/px)","convex hull area (mm^2)","height (mm)","target weight (g)","water consumption")
+ 			
+ 		#descriptorSet <- c("side.nir.intensity.average.norm","Gewicht.B")                   
+ 		#descriptorSetName <- c("nir intensity (rel. intensity/px)","target weight (g)")
+ 				
+ 		#descriptorSet <- c("digital.biomass.unnormal","digital.biomass.normal","mark3.y")                   
+ 		#descriptorSetName <- c("digital biomass (mm^3)","digital biomass (mm^3)","mark (% from image height)")
+ 			
+ 		#descriptorSet <- c("digital.biomass.keygene.norm","side.area","top.area")                   
+ 		#descriptorSetName <- c("digital biomass (mm^3)","test1", "test2")
+ 			
+ #		descriptorSet <- c("side.nir.normalized.histogram.bin.1.0_25$side.nir.normalized.histogram.bin.2.25_51$side.nir.normalized.histogram.bin.3.51_76$side.nir.normalized.histogram.bin.4.76_102$side.nir.normalized.histogram.bin.5.102_127$side.nir.normalized.histogram.bin.6.127_153$side.nir.normalized.histogram.bin.7.153_178$side.nir.normalized.histogram.bin.8.178_204$side.nir.normalized.histogram.bin.9.204_229$side.nir.normalized.histogram.bin.10.229_255",
+ #					"side.fluo.normalized.histogram.bin.1.0_25$side.fluo.normalized.histogram.bin.2.25_51$side.fluo.normalized.histogram.bin.3.51_76$side.fluo.normalized.histogram.bin.4.76_102$side.fluo.normalized.histogram.bin.5.102_127$side.fluo.normalized.histogram.bin.6.127_153$side.fluo.normalized.histogram.bin.7.153_178$side.fluo.normalized.histogram.bin.8.178_204$side.fluo.normalized.histogram.bin.9.204_229$side.fluo.normalized.histogram.bin.10.229_255")
+ #		descriptorSetName <- c("NIR absorption class (%)", "chlorophyll fluorescence histogram (%)")
+ 			
+ #		descriptorSet <- c("side.nir.normalized.histogram.bin.1.0_25$side.nir.normalized.histogram.bin.2.25_51$side.nir.normalized.histogram.bin.3.51_76$side.nir.normalized.histogram.bin.4.76_102$side.nir.normalized.histogram.bin.5.102_127$side.nir.normalized.histogram.bin.6.127_153$side.nir.normalized.histogram.bin.7.153_178$side.nir.normalized.histogram.bin.8.178_204$side.nir.normalized.histogram.bin.9.204_229$side.nir.normalized.histogram.bin.10.229_255")
+ #		descriptorSetName <- c("NIR absorption class (%)")
+ 			
+ 		#descriptorSet <- c("Plant ID$Treatment$Hallo$Wert1$Repl ID")
+ 		#descriptorSetName <- c("VariableMix")
+ 	
+ #		descriptorSet <- c("side.fluo.normalized.histogram.bin.1.0_25$side.fluo.normalized.histogram.bin.2.25_51$side.fluo.normalized.histogram.bin.3.51_76$side.fluo.normalized.histogram.bin.4.76_102$side.fluo.normalized.histogram.bin.5.102_127$side.fluo.normalized.histogram.bin.6.127_153$side.fluo.normalized.histogram.bin.7.153_178$side.fluo.normalized.histogram.bin.8.178_204$side.fluo.normalized.histogram.bin.9.204_229$side.fluo.normalized.histogram.bin.10.229_255")
+ #		#descriptorSet <- c("side.fluo.normalized.histogram.bin.2.25_51$side.fluo.normalized.histogram.bin.1.0_25$side.fluo.normalized.histogram.bin.3.51_76$side.fluo.normalized.histogram.bin.4.76_102$side.fluo.normalized.histogram.bin.5.102_127$side.fluo.normalized.histogram.bin.6.127_153$side.fluo.normalized.histogram.bin.7.153_178$side.fluo.normalized.histogram.bin.8.178_204$side.fluo.normalized.histogram.bin.9.204_229$side.fluo.normalized.histogram.bin.10.229_255")
+ #		descriptorSetName <- c("red fluorescence histogram (%)")
+ 	
+ 	
+ 		#descriptorSet <- c("Weight B (g)","side.height.norm (mm)","side.width.norm (mm)","side.area.norm (mm^2)",
+ 		#		"side.fluo.intensity.chlorophyl.average (relative)","side.fluo.intensity.phenol.average (relative)",
+ 		#		"side.nir.intensity.average (relative)",
+ 		#		"side.leaf.count.median (leafs)","side.bloom.count (tassel)","side.leaf.length.sum.norm.max (mm)")
+ 			
+ 		# "digital biomass IAP (pixel^3)","digital biomass KeyGene (pixel^3)", 
+ 		#descriptorSetName <- c("weight (g)","height (mm)", "width (mm)", "side area (pixel^2)",
+ 		#		"chlorophyl intensity (relative intensity/pixel)", "fluorescence intensity (relative intensity/pixel)", "nir intensity (relative intensity/pixel)",
+ 		#		"number of leafs (leaf)", "number of tassels (tassel)", "length of leafs plus stem (mm)")
+ 		
+ #		descriptorSet <- c("side.area (px)","side.area.norm (mm^2)")
+ #		descriptorSetName <- c("side area uncorrected (mm^2)", "side area corrected (mm^2)")
+ 		
+ 		#descriptorSet <- c("Hallo2")
+ 		#descriptorSetName <- c("Test")
+ 		
+ 		#descriptorSet <- colnames(workingDataSet)
+ 		#descriptorSetName <- colnames(workingDataSet)
+ 		
+ 		#treatment <- "none"
+ 		treatment <- "Genotype"
+ 		#treatment <- "Treatment"
+ 		#treatment <- "Condition"
+ 		#filterTreatment <- "dry$normal$wet"
+ 		#filterTreatment <- "dry$normal"
+ 		#filterTreatment <- "normal bewaessert$Trockentress"
+ 		#filterTreatment <- "ganz"
+ 		filterTreatment <- "none"
+ 		##filterTreatment <- "Deutschland$Spanien$Italien$China"
+ 		
+ 		#secondTreatment <- "Genotype"
+ 		secondTreatment <- "none"
+ 		#secondTreatment <- "Species"
+ 		#secondTreatment <- "Variety"
+ 		filterSecondTreatment <- "none"
+ 		
+ 		#secondTreatment <- "secondTreatment"
+ 		#filterSecondTreatment <- "a$c"
+ 		
+ 		###1116BA#########6 8 10 12 13 14 15 16 17 19 20 21 22 23 24 25 26 27 28 29 30 31 33 34 35 36 37 38 39 40
+ 		#filterXaxis <- c("6$8$10$12$13$14$15$16$20$21$22$23$26$27$28$29$30$31$33$34$35$36$37$38")
+ 		#filterXaxis <- c("6$8$13")
+ 		###1107BA#########2$4$6$8$10$12$13$15$16$21$22$25$27$29$30$31$33$35$36$37$39$41$42$43$45$47$49$50$51$55$57$59$61$63$64
+ 		#filterXaxis <- c("2$4$6$8$10$12$13$15$16$21$22$25$27$29$30$31$33$35$36$37$39$41$43$45$47$49$50$51$55$57$59$61$63$64")
+ 		#filterXaxis <- c("6$8$10")
+ 		filterXaxis <- "none"
+ 		#filterXaxis <- c("6$8$10$12$13$14$15$16$20$21$22$23$26$27$28$29$30$31$33$34$35$36$37$38")
+ 		
+ 		#treatment <- "Treatment"
+ 		##treatment <- "Variety"
+ 		#treatment <- "none"
+ 		
+ 		#diagramTyp="boxplotStacked"
+ 		#diagramTyp="nboxplot"
+ 		#diagramTyp="boxplot"
+ 		
+ 		bgColor <- "transparent"
+ 		isGray="FALSE"
+ 		#transparent <- "TRUE"
+ 		#legendUnderImage <- "TRUE"
+ 		#showResultInR <- TRUE
+ 		showResultInR <- FALSE
+ 		
+ 		#fileName <- "numeric_data.MaizeAnalysisAction_ 1116BA_new3.csv"
+ 		#fileName <- "testDataset2.csv"
+ 		fileName <- "report.csv"
+ 		#fileName <- "testDataset3.csv"
+ 		#englischVersion <- FALSE
+ 		#englischVersion <- TRUE
+ 		separation <- ";"
+ 		workingDataSet <- separation %getData% fileName
+ 		
+ 		#descriptor <- c("Hallo2")
+ 		#descriptor <- c("Plant ID","Treatment","Hallo","Wert1", "Repl ID")
+ 		#descriptor <- c("Repl ID")		
+ 		#descriptorSet <- c("nir.top")
+ 		#descriptorSet <- c("Plant ID")
+ 		#descriptorSet <- c("side.height.norm (mm)")
+ 
+ 		#descriptorSet <- c("side.area.norm (mm^2)")
+ 		#descriptorSetName <- c("Das ist ein Testname")
+ 		if(TRUE) {
+ 			
+ 			descriptorSet_nBoxplot <- c("Weight A (g)","Weight B (g)","Water (weight-diff)","side.height.norm (mm)","side.width.norm (mm)","side.area.norm (mm^2)", "top.area.norm (mm^2)",
+ 					"side.fluo.intensity.chlorophyl.average (relative)","side.fluo.intensity.phenol.average (relative)",
+ 					"side.nir.intensity.average (relative)","side.leaf.count.median (leafs)","side.bloom.count (tassel)",
+ 					"side.leaf.length.sum.norm.max (mm)", "volume.fluo.iap","volume.iap (px^3)", "volume.iap_max", "volume.lt (px^3)",
+ 					"volume.iap.wue", "side.nir.wetness.plant_weight_drought_loss", "top.nir.wetness.plant_weight_drought_loss", "side.nir.wetness.av", "top.nir.wetness.av",
+ 					"side.area.relative", "side.height.norm.relative", "side.width.norm.relative", "top.area.relative", "side.area.relative", "volume.iap.relative",
+ 					"side.height (mm)","side.width (mm)","side.area (px)", "top.area (px)")
+ 			
+ 			descriptorSetName_nBoxplot <- c("weight before watering (g)","weight after watering (g)", "water weight (g)", "normalized height (mm)", "normalized width (mm)", "normalized side area (mm^2)", "normalized top area (mm^2)",
+ 					"chlorophyl intensity (relative intensity/pixel)", "fluorescence intensity (relative intensity/pixel)", "nir intensity (relative intensity/pixel)",
+ 					"number of leafs (leaf)", "number of tassels (tassel)", "length of leafs plus stem (mm)", "volume based on FLUO (IAP) (px^3)", "volume based on RGB (IAP) (px^3)", "volume based on max RGB-image (IAP) (px^3)", "volume based on RGB (LemnaTec) (px^3)",
+ 					"volume based water use efficiency", "weighted loss through drought stress (side)", "weighted loss through drought stress (top)", "Average wetness of side image", "Average wetness of top image",
+ 					"relative projected side area (%)", "relative plant height (%)", "relative plant width (%)", "relative projected top area (%)", "relative projected side area (%)", "relative volume (IAP based formular - RGB) (%)",
+ 					"height (px)", "width (px)", "side area (px)", "top area (px)")		
+ 		
+ 		nBoxOptions= NULL
+ 		#diagramTypVector <- rep.int("nboxplot", times=length(descriptorSetName))
+ 		
+ 		
+ 		#boxplot
+ 		descriptorSet_boxplot <- c("side.height.norm (mm)","side.width.norm (mm)","side.area.norm (mm^2)", "top.area.norm (mm^2)",
+ 				"volume.fluo.iap","volume.iap (px^3)", "volume.iap_max", "volume.lt (px^3)",
+ 				"side.height (mm)","side.width (mm)","side.area (px)", "top.area (px)")
+ 		
+ 		descriptorSetName_boxplot <- c("normalized height (mm)", "normalized width (mm)", "normalized side area (mm^2)", "normalized top area (mm^2)",
+ 				"volume based on FLUO (IAP) (px^3)", "volume based on RGB (IAP) (px^3)", "volume based on max RGB-image (IAP) (px^3)", "volume based on RGB (LemnaTec) (px^3)",
+ 				"height (px)", "width (px)", "side area (px)", "top area (px)")	
+ 		
+ 		boxOptions= NULL
+ 		#diagramTypVectorBox <- rep.int("boxplot", times=length(descriptorSetBox))
+ 		
+ 		#descriptorSet <- c(descriptorSet, descriptorSetBox)
+ 		#descriptorSetName <- c(descriptorSetName, descriptorSetNameBox)
+ 		#diagramTypVector <- c(diagramTypVector, diagramTypVectorBox)
+ 		
+ 		#boxplotStacked
+ 		descriptorSet_boxplotStacked <- c("side.nir.normalized.histogram.bin.1.0_25$side.nir.normalized.histogram.bin.2.25_51$side.nir.normalized.histogram.bin.3.51_76$side.nir.normalized.histogram.bin.4.76_102$side.nir.normalized.histogram.bin.5.102_127$side.nir.normalized.histogram.bin.6.127_153$side.nir.normalized.histogram.bin.7.153_178$side.nir.normalized.histogram.bin.8.178_204$side.nir.normalized.histogram.bin.9.204_229$side.nir.normalized.histogram.bin.10.229_255",
+ 				"side.fluo.histogram.bin.1.0_25$side.fluo.histogram.bin.2.25_51$side.fluo.histogram.bin.3.51_76$side.fluo.histogram.bin.4.76_102$side.fluo.histogram.bin.5.102_127$side.fluo.histogram.bin.6.127_153$side.fluo.histogram.bin.7.153_178$side.fluo.histogram.bin.8.178_204$side.fluo.histogram.bin.9.204_229$side.fluo.histogram.bin.10.229_255",
+ 				"top.nir.histogram.bin.1.0_25$top.nir.histogram.bin.2.25_51$top.nir.histogram.bin.3.51_76$top.nir.histogram.bin.4.76_102$top.nir.histogram.bin.5.102_127$top.nir.histogram.bin.6.127_153$top.nir.histogram.bin.7.153_178$top.nir.histogram.bin.8.178_204$top.nir.histogram.bin.9.204_229$top.nir.histogram.bin.10.229_255",
+ 				"side.fluo.histogram.phenol.bin.1.0_25$side.fluo.histogram.phenol.bin.2.25_51$side.fluo.histogram.phenol.bin.3.51_76$side.fluo.histogram.phenol.bin.4.76_102$side.fluo.histogram.phenol.bin.5.102_127$side.fluo.histogram.phenol.bin.6.127_153$side.fluo.histogram.phenol.bin.7.153_178$side.fluo.histogram.phenol.bin.8.178_204$side.fluo.histogram.phenol.bin.9.204_229$side.fluo.histogram.phenol.bin.10.229_255",
+ 				"side.fluo.histogram.ratio.bin.1.0_25$side.fluo.histogram.ratio.bin.2.25_51$side.fluo.histogram.ratio.bin.3.51_76$side.fluo.histogram.ratio.bin.4.76_102$side.fluo.histogram.ratio.bin.5.102_127$side.fluo.histogram.ratio.bin.6.127_153$side.fluo.histogram.ratio.bin.7.153_178$side.fluo.histogram.ratio.bin.8.178_204$side.fluo.histogram.ratio.bin.9.204_229$side.fluo.histogram.ratio.bin.10.229_255",
+ 				"side.nir.normalized.histogram.bin.1.0_25$side.nir.normalized.histogram.bin.2.25_51$side.nir.normalized.histogram.bin.3.51_76$side.nir.normalized.histogram.bin.4.76_102$side.nir.normalized.histogram.bin.5.102_127$side.nir.normalized.histogram.bin.6.127_153$side.nir.normalized.histogram.bin.7.153_178$side.nir.normalized.histogram.bin.8.178_204$side.nir.normalized.histogram.bin.9.204_229$side.nir.normalized.histogram.bin.10.229_255",
+ 				"side.fluo.normalized.histogram.bin.1.0_25$side.fluo.normalized.histogram.bin.2.25_51$side.fluo.normalized.histogram.bin.3.51_76$side.fluo.normalized.histogram.bin.4.76_102$side.fluo.normalized.histogram.bin.5.102_127$side.fluo.normalized.histogram.bin.6.127_153$side.fluo.normalized.histogram.bin.7.153_178$side.fluo.normalized.histogram.bin.8.178_204$side.fluo.normalized.histogram.bin.9.204_229$side.fluo.normalized.histogram.bin.10.229_255",
+ 				"side.fluo.normalized.histogram.phenol.bin.1.0_25$side.fluo.normalized.histogram.phenol.bin.2.25_51$side.fluo.normalized.histogram.phenol.bin.3.51_76$side.fluo.normalized.histogram.phenol.bin.4.76_102$side.fluo.normalized.histogram.phenol.bin.5.102_127$side.fluo.normalized.histogram.phenol.bin.6.127_153$side.fluo.normalized.histogram.phenol.bin.7.153_178$side.fluo.normalized.histogram.phenol.bin.8.178_204$side.fluo.normalized.histogram.phenol.bin.9.204_229$side.fluo.normalized.histogram.phenol.bin.10.229_255",
+ 				"side.fluo.normalized.histogram.ratio.bin.1.0_25$side.fluo.normalized.histogram.ratio.bin.2.25_51$side.fluo.normalized.histogram.ratio.bin.3.51_76$side.fluo.normalized.histogram.ratio.bin.4.76_102$side.fluo.normalized.histogram.ratio.bin.5.102_127$side.fluo.normalized.histogram.ratio.bin.6.127_153$side.fluo.normalized.histogram.ratio.bin.7.153_178$side.fluo.normalized.histogram.ratio.bin.8.178_204$side.fluo.normalized.histogram.ratio.bin.9.204_229$side.fluo.normalized.histogram.ratio.bin.10.229_255",
+ 				"side.nir.histogram.phenol.bin.1.0_25$side.nir.histogram.phenol.bin.2.25_51$side.nir.histogram.phenol.bin.3.51_76$side.nir.histogram.phenol.bin.4.76_102$side.nir.histogram.phenol.bin.5.102_127$side.nir.histogram.phenol.bin.6.127_153$side.nir.histogram.phenol.bin.7.153_178$side.nir.histogram.phenol.bin.8.178_204$side.nir.histogram.phenol.bin.9.204_229$side.nir.histogram.phenol.bin.10.229_255",
+ 				"side.nir.histogram.ratio.bin.1.0_25$side.nir.histogram.ratio.nir.2.25_51$side.nir.histogram.ratio.bin.3.51_76$side.nir.histogram.ratio.bin.4.76_102$side.nir.histogram.ratio.bin.5.102_127$side.nir.histogram.ratio.bin.6.127_153$side.nir.histogram.ratio.bin.7.153_178$side.nir.histogram.ratio.bin.8.178_204$side.nir.histogram.ratio.bin.9.204_229$side.nir.histogram.ratio.bin.10.229_255",
+ 				"side.vis.hue.histogram.ratio.bin.1.0_25$side.vis.hue.histogram.ratio.nir.2.25_51$side.vis.hue.histogram.ratio.bin.3.51_76$side.vis.hue.histogram.ratio.bin.4.76_102$side.vis.hue.histogram.ratio.bin.5.102_127$side.vis.hue.histogram.ratio.bin.6.127_153$side.vis.hue.histogram.ratio.bin.7.153_178$side.vis.hue.histogram.ratio.bin.8.178_204$side.vis.hue.histogram.ratio.bin.9.204_229$side.vis.hue.histogram.ratio.bin.10.229_255",
+ 				"side.vis.normalized.histogram.ratio.bin.1.0_25$side.vis.normalized.histogram.ratio.bin.2.25_51$side.vis.normalized.histogram.ratio.bin.3.51_76$side.vis.normalized.histogram.ratio.bin.4.76_102$side.vis.normalized.histogram.ratio.bin.5.102_127$side.vis.normalized.histogram.ratio.bin.6.127_153$side.vis.normalized.histogram.ratio.bin.7.153_178$side.vis.normalized.histogram.ratio.bin.8.178_204$side.vis.normalized.histogram.ratio.bin.9.204_229$side.vis.normalized.histogram.ratio.bin.10.229_255",
+ 				"top.fluo.histogram.bin.1.0_25$top.fluo.histogram.bin.2.25_51$top.fluo.histogram.bin.3.51_76$top.fluo.histogram.bin.4.76_102$top.fluo.histogram.bin.5.102_127$top.fluo.histogram.bin.6.127_153$top.fluo.histogram.bin.7.153_178$top.fluo.histogram.bin.8.178_204$top.fluo.histogram.bin.9.204_229$top.fluo.histogram.bin.10.229_255",
+ 				"top.fluo.histogram.phenol.bin.1.0_25$top.fluo.histogram.phenol.bin.2.25_51$top.fluo.histogram.phenol.bin.3.51_76$top.fluo.histogram.phenol.bin.4.76_102$top.fluo.histogram.phenol.bin.5.102_127$top.fluo.histogram.phenol.bin.6.127_153$top.fluo.histogram.phenol.bin.7.153_178$top.fluo.histogram.phenol.bin.8.178_204$top.fluo.histogram.phenol.bin.9.204_229$top.fluo.histogram.phenol.bin.10.229_255",
+ 				"top.fluo.histogram.ratio.bin.1.0_25$top.fluo.histogram.ratio.bin.2.25_51$top.fluo.histogram.ratio.bin.3.51_76$top.fluo.histogram.ratio.bin.4.76_102$top.fluo.histogram.ratio.bin.5.102_127$top.fluo.histogram.ratio.bin.6.127_153$top.fluo.histogram.ratio.bin.7.153_178$top.fluo.histogram.ratio.bin.8.178_204$top.fluo.histogram.ratio.bin.9.204_229$top.fluo.histogram.ratio.bin.10.229_255",
+ 				"top.nir.histogram.bin.1.0_25$top.nir.histogram.bin.2.25_51$top.nir.histogram.bin.3.51_76$top.nir.histogram.bin.4.76_102$top.nir.histogram.bin.5.102_127$top.nir.histogram.bin.6.127_153$top.nir.histogram.bin.7.153_178$top.nir.histogram.bin.8.178_204$top.nir.histogram.bin.9.204_229$top.nir.histogram.bin.10.229_255",
+ 				"top.nir.histogram.phenol.bin.1.0_25$top.nir.histogram.phenol.bin.2.25_51$top.nir.histogram.phenol.bin.3.51_76$top.nir.histogram.phenol.bin.4.76_102$top.nir.histogram.phenol.bin.5.102_127$top.nir.histogram.phenol.bin.6.127_153$top.nir.histogram.phenol.bin.7.153_178$top.nir.histogram.phenol.bin.8.178_204$top.nir.histogram.phenol.bin.9.204_229$top.nir.histogram.phenol.bin.10.229_255",
+ 				"top.nir.histogram.ratio.bin.1.0_25$top.nir.histogram.ratio.bin.2.25_51$top.nir.histogram.ratio.bin.3.51_76$top.nir.histogram.ratio.bin.4.76_102$top.nir.histogram.ratio.bin.5.102_127$top.nir.histogram.ratio.bin.6.127_153$top.nir.histogram.ratio.bin.7.153_178$top.nir.histogram.ratio.bin.8.178_204$top.nir.histogram.ratio.bin.9.204_229$top.nir.histogram.ratio.bin.10.229_255",
+ 				"top.vis.hue.histogram.ratio.bin.1.0_25$top.vis.hue.histogram.ratio.nir.2.25_51$top.vis.hue.histogram.ratio.bin.3.51_76$top.vis.hue.histogram.ratio.bin.4.76_102$top.vis.hue.histogram.ratio.bin.5.102_127$top.vis.hue.histogram.ratio.bin.6.127_153$top.vis.hue.histogram.ratio.bin.7.153_178$top.vis.hue.histogram.ratio.bin.8.178_204$top.vis.hue.histogram.ratio.bin.9.204_229$top.vis.hue.histogram.ratio.bin.10.229_255")
+ 		
+ 		
+ 		
+ 		
+ 		descriptorSetName_boxplotStacked <- c("NIR side (%)", "red side fluorescence histogram (%)", "NIR top (%)", "yellow side fluorescence histogram (%)", "fluo side ratio histogramm (%)",
+ 				"NIR side normalized (%)", "red side normalized fluo histogramm (%)", "yellow side normalized fluo histogramm (%)", "fluo side normalized ratio histogramm (%)",
+ 				"NIR side phenol (%)", "NIR side ratio histogramm (%)", "VIS HUE side ratio histogramm (%)", "VIS side normalized ratio histogramm (%)",
+ 				"red top fluorescence histogram (%)", "yellow top fluorescence histogram (%)","fluo top ratio histogramm (%)",
+ 				"NIR top (%)", "NIR top phenol histogram (%)","NIR top ratio histogramm (%)",
+ 				"VIS HUE top ratio histogramm (%)")
+ 		
+ 		stackedBarOptions = list(typOfGeomBar=c("fill", "stack", "dodge"))
+ 		#diagramTypVector <- c(diagramTypVector, "boxplotStacked", "boxplotStacked")
+ 		} else {
+ 
+ 			descriptorSet_nBoxplot <- c("side.area.norm (mm^2)", "Weight A (g)","side.height.norm (mm)")
+ 			descriptorSetName_nBoxplot <- c("Area", "Gewicht", "Heigh")
+ 	
+ 			descriptorSet_boxplot <- c("side.area.norm (mm^2)", "side.height.norm (mm)")
+ 			descriptorSetName_boxplot <- c("Area Boxplot", "Heigh Boxplot")
+ 			
+ 	#		descriptorSet_boxplotStacked <- c("side.nir.normalized.histogram.bin.1.0_25$side.nir.normalized.histogram.bin.2.25_51$side.nir.normalized.histogram.bin.3.51_76$side.nir.normalized.histogram.bin.4.76_102$side.nir.normalized.histogram.bin.5.102_127$side.nir.normalized.histogram.bin.6.127_153$side.nir.normalized.histogram.bin.7.153_178$side.nir.normalized.histogram.bin.8.178_204$side.nir.normalized.histogram.bin.9.204_229$side.nir.normalized.histogram.bin.10.229_255",
+ 	#										  "side.fluo.normalized.histogram.bin.1.0_25$side.fluo.normalized.histogram.bin.2.25_51$side.fluo.normalized.histogram.bin.3.51_76$side.fluo.normalized.histogram.bin.4.76_102$side.fluo.normalized.histogram.bin.5.102_127$side.fluo.normalized.histogram.bin.6.127_153$side.fluo.normalized.histogram.bin.7.153_178$side.fluo.normalized.histogram.bin.8.178_204$side.fluo.normalized.histogram.bin.9.204_229$side.fluo.normalized.histogram.bin.10.229_255")
+ 			
+ 			descriptorSet_boxplotStacked <- c("side.fluo.normalized.histogram.bin.1.0_25$side.fluo.normalized.histogram.bin.2.25_51$side.fluo.normalized.histogram.bin.3.51_76$side.fluo.normalized.histogram.bin.4.76_102$side.fluo.normalized.histogram.bin.5.102_127$side.fluo.normalized.histogram.bin.6.127_153$side.fluo.normalized.histogram.bin.7.153_178$side.fluo.normalized.histogram.bin.8.178_204$side.fluo.normalized.histogram.bin.9.204_229$side.fluo.normalized.histogram.bin.10.229_255",
+ 									  "side.nir.normalized.histogram.bin.1.0_25$side.nir.normalized.histogram.bin.2.25_51$side.nir.normalized.histogram.bin.3.51_76$side.nir.normalized.histogram.bin.4.76_102$side.nir.normalized.histogram.bin.5.102_127$side.nir.normalized.histogram.bin.6.127_153$side.nir.normalized.histogram.bin.7.153_178$side.nir.normalized.histogram.bin.8.178_204$side.nir.normalized.histogram.bin.9.204_229$side.nir.normalized.histogram.bin.10.229_255",
+ 									  "top.nir.histogram.bin.1.0_25$top.nir.histogram.bin.2.25_51$top.nir.histogram.bin.3.51_76$top.nir.histogram.bin.4.76_102$top.nir.histogram.bin.5.102_127$top.nir.histogram.bin.6.127_153$top.nir.histogram.bin.7.153_178$top.nir.histogram.bin.8.178_204$top.nir.histogram.bin.9.204_229$top.nir.histogram.bin.10.229_255")
+ 			
+ 			descriptorSetName_boxplotStacked <- c("red fluorescence histogram (%)", "NIR absorption class (%)", "NIR Top")
+ 		
+ 			
+ 			nBoxOptions= NULL
+ 			boxOptions= NULL
+ 			stackedBarOptions = list(typOfGeomBar=c("fill", "stack", "dodge"))
+ 		}	
+ 	
+ 		
+ 		#descriptorSet <- c("Plant ID$Treatment$Hallo$Wert1$Repl ID")
+ 		#diagramTypVector <- diagramTyp
+ 		#diagramTypVector <- rep.int(diagramTyp, times=length(descriptorSetName))
+ 		
+ 		
+ 
+ 		nBoxDes = descriptorSet_nBoxplot
+ 		boxDes = descriptorSet_boxplot
+ 		boxStackDes = descriptorSet_boxplotStacked
+ 		SaveName_nBoxDes = nBoxDes
+ 		SaveName_boxDes = boxDes
+ 		SaveName_boxStackDes = boxStackDes
+ 		nBoxDesName = descriptorSetName_nBoxplot
+ 		boxDesName = descriptorSetName_boxplot
+ 		boxStackDesName = descriptorSetName_boxplotStacked
+ 
+ 		saveName <- "test2"
+ 		yAxisName <- "test2"
+ 		debug <- TRUE
+ 		iniDataSet = workingDataSet
+ 		#descriptor <- c("Plant ID$Treatment$Hallo$Wert1$Repl ID")
+ 		#descriptor <- c("side.area.norm (mm^2)")
+ 		#descriptorSet <- c("side.fluo.bloom.area.size (mm^2)")
+ 		#descriptor <- c("side.fluo.bloom.area.size (mm^2)")
+ 		descriptor <- descriptorSet
+ 		#descriptor <- c("Repl ID")
+ 		#descriptor <- c("side.nir.normalized.histogram.bin.1.0_25$side.nir.normalized.histogram.bin.2.25_51$side.nir.normalized.histogram.bin.3.51_76$side.nir.normalized.histogram.bin.4.76_102$side.nir.normalized.histogram.bin.5.102_127$side.nir.normalized.histogram.bin.6.127_153$side.nir.normalized.histogram.bin.7.153_178$side.nir.normalized.histogram.bin.8.178_204$side.nir.normalized.histogram.bin.9.204_229$side.nir.normalized.histogram.bin.10.229_255")
+ 		appendix <- FALSE
+ 		stoppTheCalculation <- FALSE
+ 		
+ }
[1] "... Read input file"
Read 2 items
[1] "... english Version"
> overallList <- list(iniDataSet=iniDataSet, saveFormat=saveFormat, dpi=dpi, isGray=isGray, 
+ 						nBoxDes = nBoxDes, boxDes = boxDes, boxStackDes = boxStackDes,
+ 						saveName_nBoxDes = nBoxDes, saveName_boxDes = boxDes, saveName_boxStackDes = boxStackDes,
+ 						nBoxDesName = nBoxDesName, boxDesName = boxDesName, boxStackDesName = boxStackDesName,
+ 						nBoxOptions= nBoxOptions, boxOptions= boxOptions, stackedBarOptions = stackedBarOptions, 
+ 						treatment=treatment, filterTreatment=filterTreatment,
+ 						secondTreatment=secondTreatment, filterSecondTreatment=filterSecondTreatment, filterXaxis=filterXaxis, xAxis=xAxis,
+ 						showResultInR=showResultInR, xAxisName=xAxisName, debug=debug, 
+ 						appendix=appendix, stoppTheCalculation=stoppTheCalculation,
+ 						overallResult_nBoxDes=data.frame(), overallResult_boxDes=data.frame(), overallResult_boxStackDes=data.frame(),
+ 						color_nBox = list(), color_box=list(), color_boxStack=list())	
> 				
> 	#install.packages(c("Cairo"), repos="http://cran.r-project.org", dependencies = TRUE)
> 	library("Cairo")
> 	#install.packages(c("RColorBrewer"), repos="http://cran.r-project.org", dependencies = TRUE)
> 	library("RColorBrewer")
> 	#install.packages(c("data.table"), repos="http://cran.r-project.org", dependencies = TRUE)
> 	library(data.table)
> 	#install.packages(c("ggplot2"), repos="http://cran.r-project.org", dependencies = TRUE)
> 	library(ggplot2)
> 	#install.packages(c("Hmisc"), repos="http://cran.r-project.org", dependencies = TRUE)
> 	#library("Hmisc")
> 	
> 	overallList$debug %debug% "Start"
[1] "DebugBreakPoint:  Start"
> 	
> 	overallList <- overallChangeName(overallList)
[1] "DebugBreakPoint:  overallChangeSaveName()"
[1] "... nBoxplot"
[1] "... Boxplot"
[1] "... stackedBoxplot"
> 	overallList <- overallPreprocessingOfDescriptor(overallList)
[1] "DebugBreakPoint:  overallPreprocessingOfDescriptor()"
[1] "... nBoxplot"
[1] "No plotting, because the descriptor(s) (top.area.norm..mm.2.) don't exists!"
[1] "No plotting, because the descriptor(s) (side.nir.wetness.av) don't exists!"
[1] "No plotting, because the descriptor(s) (top.nir.wetness.av) don't exists!"
[1] "... Boxplot"
[1] "No plotting, because the descriptor(s) (top.area.norm..mm.2.) don't exists!"
[1] "... stackedBoxplot"
[1] "No plotting, because the descriptor(s) (side.nir.histogram.ratio.nir.2.25_51) don't exists!"
[1] "No plotting, because the descriptor(s) (side.vis.hue.histogram.ratio.nir.2.25_51) don't exists!"
[1] "No plotting, because the descriptor(s) (top.vis.hue.histogram.ratio.nir.2.25_51) don't exists!"
> 	
> 	
> ###############################	
> #	overallList <- preprocessingOfxAxisValue(overallList)
> #	overallList <- preprocessingOfTreatment(overallList)
> #	overallList <- preprocessingOfSecondTreatment(overallList)
> #	overallList <- overallCheckIfDescriptorIsNaOrAllZero(overallList)
> #	overallList <- reduceWorkingDataSize(overallList)
> #	overallList <- setDefaultAxisNames(overallList)	
> #	overallList <- overallGetResultDataFrame(overallList)
> #	overallList <- setColor(overallList) 
> #	makeDiagrams(overallList)
> ###############################
> 
> 
> 	
> 	if(!overallList$stoppTheCalculation) {
+ 		overallList <- preprocessingOfxAxisValue(overallList)
+ 		overallList <- preprocessingOfTreatment(overallList)
+ 		overallList <- preprocessingOfSecondTreatment(overallList)
+ 		overallList <- overallCheckIfDescriptorIsNaOrAllZero(overallList)
+ 		if(!overallList$stoppTheCalculation) {
+ 			overallList <- reduceWorkingDataSize(overallList)
+ 			overallList <- setDefaultAxisNames(overallList)	
+ 			overallList <- overallGetResultDataFrame(overallList)
+ 			if(!overallList$stoppTheCalculation) {
+ 				overallList$color <- setColor(overallList) 
+ 				makeDiagrams(overallList)
+ 			}
+ 		}
+ 	}
[1] "DebugBreakPoint:  preprocessingOfxAxisValue()"
[1] "DebugBreakPoint:  preprocessingOfTheTreatment()"
[1] "DebugBreakPoint:  preprocessingOfTheSecondTreatment()"
[1] "... set 'filterSecondTreatment' and 'secondTreatment' to 'none'!"
[1] "DebugBreakPoint:  overallCheckIfDescriptorIsNaOrAllZero()"
[1] "... nBoxplot"
[1] "Dummy plotting for this descriptor(s) ((side.bloom.count..tassel.), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((side.nir.wetness.plant_weight_drought_loss), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((top.nir.wetness.plant_weight_drought_loss), because all zero or not numeric!"
[1] "... Boxplot"
[1] "... stackedBoxplot"
[1] "Dummy plotting for this descriptor(s) ((side.nir.normalized.histogram.bin.1.0_25), because all zero or not numeric!"    
[2] "Dummy plotting for this descriptor(s) ((side.nir.normalized.histogram.bin.2.25_51), because all zero or not numeric!"   
[3] "Dummy plotting for this descriptor(s) ((side.nir.normalized.histogram.bin.8.178_204), because all zero or not numeric!" 
[4] "Dummy plotting for this descriptor(s) ((side.nir.normalized.histogram.bin.9.204_229), because all zero or not numeric!" 
[5] "Dummy plotting for this descriptor(s) ((side.nir.normalized.histogram.bin.10.229_255), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((side.fluo.histogram.bin.9.204_229), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((top.nir.histogram.bin.1.0_25), because all zero or not numeric!"    
[2] "Dummy plotting for this descriptor(s) ((top.nir.histogram.bin.10.229_255), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((side.fluo.histogram.phenol.bin.8.178_204), because all zero or not numeric!"
[2] "Dummy plotting for this descriptor(s) ((side.fluo.histogram.phenol.bin.9.204_229), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((side.fluo.histogram.ratio.bin.2.25_51), because all zero or not numeric!"  
[2] "Dummy plotting for this descriptor(s) ((side.fluo.histogram.ratio.bin.3.51_76), because all zero or not numeric!"  
[3] "Dummy plotting for this descriptor(s) ((side.fluo.histogram.ratio.bin.9.204_229), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((side.nir.normalized.histogram.bin.1.0_25), because all zero or not numeric!"    
[2] "Dummy plotting for this descriptor(s) ((side.nir.normalized.histogram.bin.2.25_51), because all zero or not numeric!"   
[3] "Dummy plotting for this descriptor(s) ((side.nir.normalized.histogram.bin.8.178_204), because all zero or not numeric!" 
[4] "Dummy plotting for this descriptor(s) ((side.nir.normalized.histogram.bin.9.204_229), because all zero or not numeric!" 
[5] "Dummy plotting for this descriptor(s) ((side.nir.normalized.histogram.bin.10.229_255), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((side.fluo.normalized.histogram.bin.9.204_229), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((side.fluo.normalized.histogram.phenol.bin.8.178_204), because all zero or not numeric!"
[2] "Dummy plotting for this descriptor(s) ((side.fluo.normalized.histogram.phenol.bin.9.204_229), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((side.fluo.normalized.histogram.ratio.bin.2.25_51), because all zero or not numeric!"  
[2] "Dummy plotting for this descriptor(s) ((side.fluo.normalized.histogram.ratio.bin.3.51_76), because all zero or not numeric!"  
[3] "Dummy plotting for this descriptor(s) ((side.fluo.normalized.histogram.ratio.bin.9.204_229), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((side.nir.histogram.phenol.bin.1.0_25), because all zero or not numeric!"    
[2] "Dummy plotting for this descriptor(s) ((side.nir.histogram.phenol.bin.2.25_51), because all zero or not numeric!"   
[3] "Dummy plotting for this descriptor(s) ((side.nir.histogram.phenol.bin.8.178_204), because all zero or not numeric!" 
[4] "Dummy plotting for this descriptor(s) ((side.nir.histogram.phenol.bin.9.204_229), because all zero or not numeric!" 
[5] "Dummy plotting for this descriptor(s) ((side.nir.histogram.phenol.bin.10.229_255), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((side.nir.histogram.ratio.bin.1.0_25), because all zero or not numeric!"    
[2] "Dummy plotting for this descriptor(s) ((side.nir.histogram.ratio.bin.3.51_76), because all zero or not numeric!"   
[3] "Dummy plotting for this descriptor(s) ((side.nir.histogram.ratio.bin.4.76_102), because all zero or not numeric!"  
[4] "Dummy plotting for this descriptor(s) ((side.nir.histogram.ratio.bin.6.127_153), because all zero or not numeric!" 
[5] "Dummy plotting for this descriptor(s) ((side.nir.histogram.ratio.bin.7.153_178), because all zero or not numeric!" 
[6] "Dummy plotting for this descriptor(s) ((side.nir.histogram.ratio.bin.8.178_204), because all zero or not numeric!" 
[7] "Dummy plotting for this descriptor(s) ((side.nir.histogram.ratio.bin.9.204_229), because all zero or not numeric!" 
[8] "Dummy plotting for this descriptor(s) ((side.nir.histogram.ratio.bin.10.229_255), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((side.vis.hue.histogram.ratio.bin.1.0_25), because all zero or not numeric!"    
[2] "Dummy plotting for this descriptor(s) ((side.vis.hue.histogram.ratio.bin.3.51_76), because all zero or not numeric!"   
[3] "Dummy plotting for this descriptor(s) ((side.vis.hue.histogram.ratio.bin.4.76_102), because all zero or not numeric!"  
[4] "Dummy plotting for this descriptor(s) ((side.vis.hue.histogram.ratio.bin.5.102_127), because all zero or not numeric!" 
[5] "Dummy plotting for this descriptor(s) ((side.vis.hue.histogram.ratio.bin.6.127_153), because all zero or not numeric!" 
[6] "Dummy plotting for this descriptor(s) ((side.vis.hue.histogram.ratio.bin.7.153_178), because all zero or not numeric!" 
[7] "Dummy plotting for this descriptor(s) ((side.vis.hue.histogram.ratio.bin.8.178_204), because all zero or not numeric!" 
[8] "Dummy plotting for this descriptor(s) ((side.vis.hue.histogram.ratio.bin.9.204_229), because all zero or not numeric!" 
[9] "Dummy plotting for this descriptor(s) ((side.vis.hue.histogram.ratio.bin.10.229_255), because all zero or not numeric!"
 [1] "Dummy plotting for this descriptor(s) ((side.vis.normalized.histogram.ratio.bin.1.0_25), because all zero or not numeric!"    
 [2] "Dummy plotting for this descriptor(s) ((side.vis.normalized.histogram.ratio.bin.2.25_51), because all zero or not numeric!"   
 [3] "Dummy plotting for this descriptor(s) ((side.vis.normalized.histogram.ratio.bin.3.51_76), because all zero or not numeric!"   
 [4] "Dummy plotting for this descriptor(s) ((side.vis.normalized.histogram.ratio.bin.4.76_102), because all zero or not numeric!"  
 [5] "Dummy plotting for this descriptor(s) ((side.vis.normalized.histogram.ratio.bin.5.102_127), because all zero or not numeric!" 
 [6] "Dummy plotting for this descriptor(s) ((side.vis.normalized.histogram.ratio.bin.6.127_153), because all zero or not numeric!" 
 [7] "Dummy plotting for this descriptor(s) ((side.vis.normalized.histogram.ratio.bin.7.153_178), because all zero or not numeric!" 
 [8] "Dummy plotting for this descriptor(s) ((side.vis.normalized.histogram.ratio.bin.8.178_204), because all zero or not numeric!" 
 [9] "Dummy plotting for this descriptor(s) ((side.vis.normalized.histogram.ratio.bin.9.204_229), because all zero or not numeric!" 
[10] "Dummy plotting for this descriptor(s) ((side.vis.normalized.histogram.ratio.bin.10.229_255), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((top.fluo.histogram.bin.9.204_229), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((top.fluo.histogram.phenol.bin.8.178_204), because all zero or not numeric!"
[2] "Dummy plotting for this descriptor(s) ((top.fluo.histogram.phenol.bin.9.204_229), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((top.fluo.histogram.ratio.bin.2.25_51), because all zero or not numeric!"  
[2] "Dummy plotting for this descriptor(s) ((top.fluo.histogram.ratio.bin.3.51_76), because all zero or not numeric!"  
[3] "Dummy plotting for this descriptor(s) ((top.fluo.histogram.ratio.bin.9.204_229), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((top.nir.histogram.bin.1.0_25), because all zero or not numeric!"    
[2] "Dummy plotting for this descriptor(s) ((top.nir.histogram.bin.10.229_255), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((top.nir.histogram.phenol.bin.1.0_25), because all zero or not numeric!"    
[2] "Dummy plotting for this descriptor(s) ((top.nir.histogram.phenol.bin.10.229_255), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((top.nir.histogram.ratio.bin.1.0_25), because all zero or not numeric!"    
[2] "Dummy plotting for this descriptor(s) ((top.nir.histogram.ratio.bin.2.25_51), because all zero or not numeric!"   
[3] "Dummy plotting for this descriptor(s) ((top.nir.histogram.ratio.bin.3.51_76), because all zero or not numeric!"   
[4] "Dummy plotting for this descriptor(s) ((top.nir.histogram.ratio.bin.4.76_102), because all zero or not numeric!"  
[5] "Dummy plotting for this descriptor(s) ((top.nir.histogram.ratio.bin.6.127_153), because all zero or not numeric!" 
[6] "Dummy plotting for this descriptor(s) ((top.nir.histogram.ratio.bin.7.153_178), because all zero or not numeric!" 
[7] "Dummy plotting for this descriptor(s) ((top.nir.histogram.ratio.bin.8.178_204), because all zero or not numeric!" 
[8] "Dummy plotting for this descriptor(s) ((top.nir.histogram.ratio.bin.9.204_229), because all zero or not numeric!" 
[9] "Dummy plotting for this descriptor(s) ((top.nir.histogram.ratio.bin.10.229_255), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((top.vis.hue.histogram.ratio.bin.1.0_25), because all zero or not numeric!"    
[2] "Dummy plotting for this descriptor(s) ((top.vis.hue.histogram.ratio.bin.3.51_76), because all zero or not numeric!"   
[3] "Dummy plotting for this descriptor(s) ((top.vis.hue.histogram.ratio.bin.4.76_102), because all zero or not numeric!"  
[4] "Dummy plotting for this descriptor(s) ((top.vis.hue.histogram.ratio.bin.5.102_127), because all zero or not numeric!" 
[5] "Dummy plotting for this descriptor(s) ((top.vis.hue.histogram.ratio.bin.6.127_153), because all zero or not numeric!" 
[6] "Dummy plotting for this descriptor(s) ((top.vis.hue.histogram.ratio.bin.7.153_178), because all zero or not numeric!" 
[7] "Dummy plotting for this descriptor(s) ((top.vis.hue.histogram.ratio.bin.8.178_204), because all zero or not numeric!" 
[8] "Dummy plotting for this descriptor(s) ((top.vis.hue.histogram.ratio.bin.9.204_229), because all zero or not numeric!" 
[9] "Dummy plotting for this descriptor(s) ((top.vis.hue.histogram.ratio.bin.10.229_255), because all zero or not numeric!"
[1] "DebugBreakPoint:  reduceWorkingDataSize()"
[1] "DebugBreakPoint:  setDefaultAxisNames()"
[1] "DebugBreakPoint:  overallGetResultDataFrame()"
[1] "DebugBreakPoint:  buildList()"
[1] "... nBoxplot"
[1] "DebugBreakPoint:  getResultDataFrame()"
[1] "... Boxplot"
[1] "DebugBreakPoint:  getResultDataFrame()"
[1] "... stackedBoxplot"
[1] "DebugBreakPoint:  getResultDataFrame()"
[1] "DebugBreakPoint:  setColor()"
[1] "... all values are 'NA'"
[1] "... all values are 'NA'"
[1] "... all values are 'NA'"
[1] "... all values are 'NA'"
[1] "... all values are 'NA'"
[1] "... all values are 'NA'"
[1] "... all values are 'NA'"
[1] "... all values are 'NA'"
[1] "... all values are 'NA'"
[1] "... all values are 'NA'"
[1] "DebugBreakPoint:  makeDiagrams()"
[1] "... nBoxplot"
[1] "DebugBreakPoint:  makeLinearDiagram()"
[1] "... nBoxplot"
[1] "... image 1"
[1] "DebugBreakPoint:  reduceWholeOverallResultToOneValue()"
Saving 5.45" x 3.92" image
Fehler in names(output_df) <- output : 
  Attribut 'names' [1] muss dieselbe Länge haben wie der Vektor [0]
Zusätzlich: Es gab 35 Warnungen (Anzeige mit warnings())
> overallList <- list(iniDataSet=iniDataSet, saveFormat=saveFormat, dpi=dpi, isGray=isGray, 
+ 						nBoxDes = nBoxDes, boxDes = boxDes, boxStackDes = boxStackDes,
+ 						saveName_nBoxDes = nBoxDes, saveName_boxDes = boxDes, saveName_boxStackDes = boxStackDes,
+ 						nBoxDesName = nBoxDesName, boxDesName = boxDesName, boxStackDesName = boxStackDesName,
+ 						nBoxOptions= nBoxOptions, boxOptions= boxOptions, stackedBarOptions = stackedBarOptions, 
+ 						treatment=treatment, filterTreatment=filterTreatment,
+ 						secondTreatment=secondTreatment, filterSecondTreatment=filterSecondTreatment, filterXaxis=filterXaxis, xAxis=xAxis,
+ 						showResultInR=showResultInR, xAxisName=xAxisName, debug=debug, 
+ 						appendix=appendix, stoppTheCalculation=stoppTheCalculation,
+ 						overallResult_nBoxDes=data.frame(), overallResult_boxDes=data.frame(), overallResult_boxStackDes=data.frame(),
+ 						color_nBox = list(), color_box=list(), color_boxStack=list())	
> 				
> 	#install.packages(c("Cairo"), repos="http://cran.r-project.org", dependencies = TRUE)
> 	library("Cairo")
> 	#install.packages(c("RColorBrewer"), repos="http://cran.r-project.org", dependencies = TRUE)
> 	library("RColorBrewer")
> 	#install.packages(c("data.table"), repos="http://cran.r-project.org", dependencies = TRUE)
> 	library(data.table)
> 	#install.packages(c("ggplot2"), repos="http://cran.r-project.org", dependencies = TRUE)
> 	library(ggplot2)
> 	#install.packages(c("Hmisc"), repos="http://cran.r-project.org", dependencies = TRUE)
> 	#library("Hmisc")
> 	
> 	overallList$debug %debug% "Start"
[1] "DebugBreakPoint:  Start"
> 	
> 	overallList <- overallChangeName(overallList)
[1] "DebugBreakPoint:  overallChangeSaveName()"
[1] "... nBoxplot"
[1] "... Boxplot"
[1] "... stackedBoxplot"
> 	overallList <- overallPreprocessingOfDescriptor(overallList)
[1] "DebugBreakPoint:  overallPreprocessingOfDescriptor()"
[1] "... nBoxplot"
[1] "No plotting, because the descriptor(s) (top.area.norm..mm.2.) don't exists!"
[1] "No plotting, because the descriptor(s) (side.nir.wetness.av) don't exists!"
[1] "No plotting, because the descriptor(s) (top.nir.wetness.av) don't exists!"
[1] "... Boxplot"
[1] "No plotting, because the descriptor(s) (top.area.norm..mm.2.) don't exists!"
[1] "... stackedBoxplot"
[1] "No plotting, because the descriptor(s) (side.nir.histogram.ratio.nir.2.25_51) don't exists!"
[1] "No plotting, because the descriptor(s) (side.vis.hue.histogram.ratio.nir.2.25_51) don't exists!"
[1] "No plotting, because the descriptor(s) (top.vis.hue.histogram.ratio.nir.2.25_51) don't exists!"
> overallList <- preprocessingOfxAxisValue(overallList)
[1] "DebugBreakPoint:  preprocessingOfxAxisValue()"
> 	overallList <- preprocessingOfTreatment(overallList)
[1] "DebugBreakPoint:  preprocessingOfTheTreatment()"
> 	overallList <- preprocessingOfSecondTreatment(overallList)
[1] "DebugBreakPoint:  preprocessingOfTheSecondTreatment()"
[1] "... set 'filterSecondTreatment' and 'secondTreatment' to 'none'!"
> 	overallList <- overallCheckIfDescriptorIsNaOrAllZero(overallList)
[1] "DebugBreakPoint:  overallCheckIfDescriptorIsNaOrAllZero()"
[1] "... nBoxplot"
[1] "Dummy plotting for this descriptor(s) ((side.bloom.count..tassel.), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((side.nir.wetness.plant_weight_drought_loss), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((top.nir.wetness.plant_weight_drought_loss), because all zero or not numeric!"
[1] "... Boxplot"
[1] "... stackedBoxplot"
[1] "Dummy plotting for this descriptor(s) ((side.nir.normalized.histogram.bin.1.0_25), because all zero or not numeric!"    
[2] "Dummy plotting for this descriptor(s) ((side.nir.normalized.histogram.bin.2.25_51), because all zero or not numeric!"   
[3] "Dummy plotting for this descriptor(s) ((side.nir.normalized.histogram.bin.8.178_204), because all zero or not numeric!" 
[4] "Dummy plotting for this descriptor(s) ((side.nir.normalized.histogram.bin.9.204_229), because all zero or not numeric!" 
[5] "Dummy plotting for this descriptor(s) ((side.nir.normalized.histogram.bin.10.229_255), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((side.fluo.histogram.bin.9.204_229), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((top.nir.histogram.bin.1.0_25), because all zero or not numeric!"    
[2] "Dummy plotting for this descriptor(s) ((top.nir.histogram.bin.10.229_255), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((side.fluo.histogram.phenol.bin.8.178_204), because all zero or not numeric!"
[2] "Dummy plotting for this descriptor(s) ((side.fluo.histogram.phenol.bin.9.204_229), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((side.fluo.histogram.ratio.bin.2.25_51), because all zero or not numeric!"  
[2] "Dummy plotting for this descriptor(s) ((side.fluo.histogram.ratio.bin.3.51_76), because all zero or not numeric!"  
[3] "Dummy plotting for this descriptor(s) ((side.fluo.histogram.ratio.bin.9.204_229), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((side.nir.normalized.histogram.bin.1.0_25), because all zero or not numeric!"    
[2] "Dummy plotting for this descriptor(s) ((side.nir.normalized.histogram.bin.2.25_51), because all zero or not numeric!"   
[3] "Dummy plotting for this descriptor(s) ((side.nir.normalized.histogram.bin.8.178_204), because all zero or not numeric!" 
[4] "Dummy plotting for this descriptor(s) ((side.nir.normalized.histogram.bin.9.204_229), because all zero or not numeric!" 
[5] "Dummy plotting for this descriptor(s) ((side.nir.normalized.histogram.bin.10.229_255), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((side.fluo.normalized.histogram.bin.9.204_229), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((side.fluo.normalized.histogram.phenol.bin.8.178_204), because all zero or not numeric!"
[2] "Dummy plotting for this descriptor(s) ((side.fluo.normalized.histogram.phenol.bin.9.204_229), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((side.fluo.normalized.histogram.ratio.bin.2.25_51), because all zero or not numeric!"  
[2] "Dummy plotting for this descriptor(s) ((side.fluo.normalized.histogram.ratio.bin.3.51_76), because all zero or not numeric!"  
[3] "Dummy plotting for this descriptor(s) ((side.fluo.normalized.histogram.ratio.bin.9.204_229), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((side.nir.histogram.phenol.bin.1.0_25), because all zero or not numeric!"    
[2] "Dummy plotting for this descriptor(s) ((side.nir.histogram.phenol.bin.2.25_51), because all zero or not numeric!"   
[3] "Dummy plotting for this descriptor(s) ((side.nir.histogram.phenol.bin.8.178_204), because all zero or not numeric!" 
[4] "Dummy plotting for this descriptor(s) ((side.nir.histogram.phenol.bin.9.204_229), because all zero or not numeric!" 
[5] "Dummy plotting for this descriptor(s) ((side.nir.histogram.phenol.bin.10.229_255), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((side.nir.histogram.ratio.bin.1.0_25), because all zero or not numeric!"    
[2] "Dummy plotting for this descriptor(s) ((side.nir.histogram.ratio.bin.3.51_76), because all zero or not numeric!"   
[3] "Dummy plotting for this descriptor(s) ((side.nir.histogram.ratio.bin.4.76_102), because all zero or not numeric!"  
[4] "Dummy plotting for this descriptor(s) ((side.nir.histogram.ratio.bin.6.127_153), because all zero or not numeric!" 
[5] "Dummy plotting for this descriptor(s) ((side.nir.histogram.ratio.bin.7.153_178), because all zero or not numeric!" 
[6] "Dummy plotting for this descriptor(s) ((side.nir.histogram.ratio.bin.8.178_204), because all zero or not numeric!" 
[7] "Dummy plotting for this descriptor(s) ((side.nir.histogram.ratio.bin.9.204_229), because all zero or not numeric!" 
[8] "Dummy plotting for this descriptor(s) ((side.nir.histogram.ratio.bin.10.229_255), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((side.vis.hue.histogram.ratio.bin.1.0_25), because all zero or not numeric!"    
[2] "Dummy plotting for this descriptor(s) ((side.vis.hue.histogram.ratio.bin.3.51_76), because all zero or not numeric!"   
[3] "Dummy plotting for this descriptor(s) ((side.vis.hue.histogram.ratio.bin.4.76_102), because all zero or not numeric!"  
[4] "Dummy plotting for this descriptor(s) ((side.vis.hue.histogram.ratio.bin.5.102_127), because all zero or not numeric!" 
[5] "Dummy plotting for this descriptor(s) ((side.vis.hue.histogram.ratio.bin.6.127_153), because all zero or not numeric!" 
[6] "Dummy plotting for this descriptor(s) ((side.vis.hue.histogram.ratio.bin.7.153_178), because all zero or not numeric!" 
[7] "Dummy plotting for this descriptor(s) ((side.vis.hue.histogram.ratio.bin.8.178_204), because all zero or not numeric!" 
[8] "Dummy plotting for this descriptor(s) ((side.vis.hue.histogram.ratio.bin.9.204_229), because all zero or not numeric!" 
[9] "Dummy plotting for this descriptor(s) ((side.vis.hue.histogram.ratio.bin.10.229_255), because all zero or not numeric!"
 [1] "Dummy plotting for this descriptor(s) ((side.vis.normalized.histogram.ratio.bin.1.0_25), because all zero or not numeric!"    
 [2] "Dummy plotting for this descriptor(s) ((side.vis.normalized.histogram.ratio.bin.2.25_51), because all zero or not numeric!"   
 [3] "Dummy plotting for this descriptor(s) ((side.vis.normalized.histogram.ratio.bin.3.51_76), because all zero or not numeric!"   
 [4] "Dummy plotting for this descriptor(s) ((side.vis.normalized.histogram.ratio.bin.4.76_102), because all zero or not numeric!"  
 [5] "Dummy plotting for this descriptor(s) ((side.vis.normalized.histogram.ratio.bin.5.102_127), because all zero or not numeric!" 
 [6] "Dummy plotting for this descriptor(s) ((side.vis.normalized.histogram.ratio.bin.6.127_153), because all zero or not numeric!" 
 [7] "Dummy plotting for this descriptor(s) ((side.vis.normalized.histogram.ratio.bin.7.153_178), because all zero or not numeric!" 
 [8] "Dummy plotting for this descriptor(s) ((side.vis.normalized.histogram.ratio.bin.8.178_204), because all zero or not numeric!" 
 [9] "Dummy plotting for this descriptor(s) ((side.vis.normalized.histogram.ratio.bin.9.204_229), because all zero or not numeric!" 
[10] "Dummy plotting for this descriptor(s) ((side.vis.normalized.histogram.ratio.bin.10.229_255), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((top.fluo.histogram.bin.9.204_229), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((top.fluo.histogram.phenol.bin.8.178_204), because all zero or not numeric!"
[2] "Dummy plotting for this descriptor(s) ((top.fluo.histogram.phenol.bin.9.204_229), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((top.fluo.histogram.ratio.bin.2.25_51), because all zero or not numeric!"  
[2] "Dummy plotting for this descriptor(s) ((top.fluo.histogram.ratio.bin.3.51_76), because all zero or not numeric!"  
[3] "Dummy plotting for this descriptor(s) ((top.fluo.histogram.ratio.bin.9.204_229), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((top.nir.histogram.bin.1.0_25), because all zero or not numeric!"    
[2] "Dummy plotting for this descriptor(s) ((top.nir.histogram.bin.10.229_255), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((top.nir.histogram.phenol.bin.1.0_25), because all zero or not numeric!"    
[2] "Dummy plotting for this descriptor(s) ((top.nir.histogram.phenol.bin.10.229_255), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((top.nir.histogram.ratio.bin.1.0_25), because all zero or not numeric!"    
[2] "Dummy plotting for this descriptor(s) ((top.nir.histogram.ratio.bin.2.25_51), because all zero or not numeric!"   
[3] "Dummy plotting for this descriptor(s) ((top.nir.histogram.ratio.bin.3.51_76), because all zero or not numeric!"   
[4] "Dummy plotting for this descriptor(s) ((top.nir.histogram.ratio.bin.4.76_102), because all zero or not numeric!"  
[5] "Dummy plotting for this descriptor(s) ((top.nir.histogram.ratio.bin.6.127_153), because all zero or not numeric!" 
[6] "Dummy plotting for this descriptor(s) ((top.nir.histogram.ratio.bin.7.153_178), because all zero or not numeric!" 
[7] "Dummy plotting for this descriptor(s) ((top.nir.histogram.ratio.bin.8.178_204), because all zero or not numeric!" 
[8] "Dummy plotting for this descriptor(s) ((top.nir.histogram.ratio.bin.9.204_229), because all zero or not numeric!" 
[9] "Dummy plotting for this descriptor(s) ((top.nir.histogram.ratio.bin.10.229_255), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((top.vis.hue.histogram.ratio.bin.1.0_25), because all zero or not numeric!"    
[2] "Dummy plotting for this descriptor(s) ((top.vis.hue.histogram.ratio.bin.3.51_76), because all zero or not numeric!"   
[3] "Dummy plotting for this descriptor(s) ((top.vis.hue.histogram.ratio.bin.4.76_102), because all zero or not numeric!"  
[4] "Dummy plotting for this descriptor(s) ((top.vis.hue.histogram.ratio.bin.5.102_127), because all zero or not numeric!" 
[5] "Dummy plotting for this descriptor(s) ((top.vis.hue.histogram.ratio.bin.6.127_153), because all zero or not numeric!" 
[6] "Dummy plotting for this descriptor(s) ((top.vis.hue.histogram.ratio.bin.7.153_178), because all zero or not numeric!" 
[7] "Dummy plotting for this descriptor(s) ((top.vis.hue.histogram.ratio.bin.8.178_204), because all zero or not numeric!" 
[8] "Dummy plotting for this descriptor(s) ((top.vis.hue.histogram.ratio.bin.9.204_229), because all zero or not numeric!" 
[9] "Dummy plotting for this descriptor(s) ((top.vis.hue.histogram.ratio.bin.10.229_255), because all zero or not numeric!"
Es gab 20 Warnungen (Anzeige mit warnings())
> 	overallList <- reduceWorkingDataSize(overallList)
[1] "DebugBreakPoint:  reduceWorkingDataSize()"
> 	overallList <- setDefaultAxisNames(overallList)	
[1] "DebugBreakPoint:  setDefaultAxisNames()"
> 	overallList <- overallGetResultDataFrame(overallList)
[1] "DebugBreakPoint:  overallGetResultDataFrame()"
[1] "DebugBreakPoint:  buildList()"
[1] "... nBoxplot"
[1] "DebugBreakPoint:  getResultDataFrame()"
[1] "... Boxplot"
[1] "DebugBreakPoint:  getResultDataFrame()"
[1] "... stackedBoxplot"
[1] "DebugBreakPoint:  getResultDataFrame()"
> 	overallList <- setColor(overallList) 
[1] "DebugBreakPoint:  setColor()"
[1] "... all values are 'NA'"
[1] "... all values are 'NA'"
[1] "... all values are 'NA'"
[1] "... all values are 'NA'"
[1] "... all values are 'NA'"
[1] "... all values are 'NA'"
[1] "... all values are 'NA'"
[1] "... all values are 'NA'"
[1] "... all values are 'NA'"
[1] "... all values are 'NA'"
Es gab 15 Warnungen (Anzeige mit warnings())
> overallList$saveName_boxStackDes
$`1`
[1] "side.nir.normalized.histogram.bin.1.0_25;side.nir.normalized.histogram"

$`2`
[1] "side.fluo.histogram.bin.1.0_25;side.fluo.histogram.bin.2.25_51;side.fl"

$`3`
[1] "top.nir.histogram.bin.1.0_25;top.nir.histogram.bin.2.25_51;top.nir.his"

$`4`
[1] "side.fluo.histogram.phenol.bin.1.0_25;side.fluo.histogram.phenol.bin.2"

$`5`
[1] "side.fluo.histogram.ratio.bin.1.0_25;side.fluo.histogram.ratio.bin.2.2"

$`6`
[1] "side.nir.normalized.histogram.bin.1.0_25;side.nir.normalized.histogram"

$`7`
[1] "side.fluo.normalized.histogram.bin.1.0_25;side.fluo.normalized.histogr"

$`8`
[1] "side.fluo.normalized.histogram.phenol.bin.1.0_25;side.fluo.normalized."

$`9`
[1] "side.fluo.normalized.histogram.ratio.bin.1.0_25;side.fluo.normalized.h"

$`10`
[1] "side.nir.histogram.phenol.bin.1.0_25;side.nir.histogram.phenol.bin.2.2"

$`11`
[1] "side.nir.histogram.ratio.bin.1.0_25;side.nir.histogram.ratio.nir.2.25_"

$`12`
[1] "side.vis.hue.histogram.ratio.bin.1.0_25;side.vis.hue.histogram.ratio.n"

$`13`
[1] "side.vis.normalized.histogram.ratio.bin.1.0_25;side.vis.normalized.his"

$`14`
[1] "top.fluo.histogram.bin.1.0_25;top.fluo.histogram.bin.2.25_51;top.fluo."

$`15`
[1] "top.fluo.histogram.phenol.bin.1.0_25;top.fluo.histogram.phenol.bin.2.2"

$`16`
[1] "top.fluo.histogram.ratio.bin.1.0_25;top.fluo.histogram.ratio.bin.2.25_"

$`17`
[1] "top.nir.histogram.bin.1.0_25;top.nir.histogram.bin.2.25_51;top.nir.his"

$`18`
[1] "top.nir.histogram.phenol.bin.1.0_25;top.nir.histogram.phenol.bin.2.25_"

$`19`
[1] "top.nir.histogram.ratio.bin.1.0_25;top.nir.histogram.ratio.bin.2.25_51"

$`20`
[1] "top.vis.hue.histogram.ratio.bin.1.0_25;top.vis.hue.histogram.ratio.nir"

> rm(list=ls(all=TRUE))
> # TODO: Add comment
> # 
> # Author: Entzian
> ###############################################################################
> 
> "%debug%" <- function(debug, debugNumber) {
+ 	if (debug) {
+ 		print(paste("DebugBreakPoint: ", debugNumber))
+ 	}
+ }
> 
> "%checkEqual%" <- function(treat, seconTreat) {
+ 	if(treat == seconTreat) {
+ 		print("SecondTreatment are the same value as Treatment so it set to \"none\"")
+ 		return("none")
+ 	} else {
+ 		return(seconTreat)
+ 	}
+ }
> 
> "%errorReport%" <- function(errorDescriptor, typOfError="notExists") {
+ 	#overallList$debug %debug% "%errorReport%"
+ 	if (length(errorDescriptor) > 0) {
+ 		if (tolower(typOfError) == "notexists"){
+ 			print(paste("No plotting, because the descriptor(s) (",errorDescriptor,") don't exists!", sep=""))
+ 			
+ 		} else if (tolower(typOfError) == "notnumericorallzero") {
+ 			#plotDummy(overallList)
+ 			print(paste("Dummy plotting for this descriptor(s) ((",errorDescriptor,"), because all zero or not numeric!", sep=""))
+ 		}
+ 	}
+ }
> 
> "%exists%" <- function(standardValue, argsValue){
+ 	
+ 	if(!is.na(argsValue) & argsValue != "")	{
+ 		return(argsValue)
+ 	} else {
+ 		return(standardValue)
+ 	}
+ }
> 
> "%getData%" <- function(separation, fileName){	
+ 	#separation <- ";"
+ 	print("... Read input file")
+ 	
+ 	if(file.exists(fileName)) {
+ 		preScanForPointOrComma <- scan(file=fileName, what=character(0), nlines=2, sep="\n")
+ 		preScanForPointOrComma <- paste(preScanForPointOrComma[2],",.", sep="")
+ 		allCharacterSeparated <- table(strsplit(toupper(preScanForPointOrComma), '')[[1]])
+ 		
+ 		if(allCharacterSeparated["."] > allCharacterSeparated[","]) {
+ 			print("... english Version")
+ 			return(read.csv(fileName, header=TRUE, sep=separation, fileEncoding="ISO-8859-1", encoding="UTF-8"))
+ 		} else {
+ 			print("... german Version")
+ 			return(read.csv2(fileName, header=TRUE, sep=separation, fileEncoding="ISO-8859-1", encoding="UTF-8"))
+ 		}
+ 	} else {
+ 		return("error")
+ 	}
+ 	
+ #	if (englischVersion) {
+ #		return(read.csv(fileName, header=TRUE, sep=separation, fileEncoding="ISO-8859-1", encoding="UTF-8"))
+ #	} else {
+ #		return(read.csv2(fileName, header=TRUE, sep=separation, fileEncoding="ISO-8859-1", encoding="UTF-8"))
+ #	}
+ }
> 
> "%checkIfDescriptorExists%" <- function(descriptor, dataSet) {
+ 	if (is.data.frame(dataSet)) {
+ 		return(descriptor %in% colnames(dataSet))
+ 	} else {
+ 		return(descriptor %in% dataSet)
+ 	}	
+ }
> 
> "%GetDescriptorsAfterCheckIfDescriptorExists%" <- function(descriptor, dataSet) {
+ 	return(descriptor[descriptor %checkIfDescriptorExists% dataSet])
+ 	
+ }
> 
> "%GetDescriptorAfterCheckIfDescriptorNotExists%" <- function(descriptor, dataSet) {
+ 	return(descriptor[!descriptor %checkIfDescriptorExists% dataSet])
+ 	
+ }
> 
> "%contactAllWithAll%" <- function(vector1, vector2) {
+ 	vectorTemp <- character(0)
+ 	for(k in vector2) {
+ 		if(k=="none") {
+ 			vectorTemp <- c(vectorTemp,vector1)
+ 		} else {
+ 			vectorTemp <- c(vectorTemp,paste(vector1,k, sep = "#"))
+ 		}
+ 	}
+ 	return(vectorTemp)
+ }
> 
> "%allColnamesWithoutThisOnes%" <- function(dataSet, withoutColNamesVector) {
+ 	return(colnames(dataSet)[!colnames(dataSet) %in% withoutColNamesVector])
+ }
> 
> buildDataSet <- function(workingDataSet, overallResult, colname, index) {
+ 	
+ 	if(length(colname) > 0) {
+ 		for(n in 1:length(colname)) {
+ 			workingDataSet <- cbind(workingDataSet, overallResult[paste(colname[n],index, sep="")])
+ 		}	
+ 		return(workingDataSet)
+ 	}
+ }
> 
> 
> reNameHist <-  function(colNameWichMustBind) {
+ 	colNameWichMustBind <- as.character(colNameWichMustBind)
+ 	positions <- which(strsplit(colNameWichMustBind, '')[[1]]=='.')
+ 	colNameWichMustBind <- substr(colNameWichMustBind,positions[length(positions)]+1,nchar(colNameWichMustBind))
+ 	
+ 	regExpressionSpezialCharacter <- "\\_"
+ 	colNameWichMustBind <- gsub(regExpressionSpezialCharacter,"..",colNameWichMustBind)
+ 	
+ 	return(colNameWichMustBind)	
+ }
> 
> reNameColumn <-  function(plotThisValues, columnNameReplace="name", columnNameWhichUsedToReplace="primaerTreatment") {
+ 	if(!is.null(plotThisValues[columnNameWhichUsedToReplace])){
+ 		plotThisValues[columnNameReplace] <- plotThisValues[columnNameWhichUsedToReplace]
+ 	}
+ 	
+ 	return(plotThisValues)
+ }
> 
> swap <- function(listWithTwoParameter) {
+ 	temp <- listWithTwoParameter[[1]]
+ 	listWithTwoParameter[[1]] <- listWithTwoParameter[[2]]
+ 	listWithTwoParameter[[2]] <- temp
+ 	return(listWithTwoParameter)
+ }
> 
> changeWhenTreatmentNoneAndSecondTreatmentNotNone <- function(listOfTreat, listOfFilterTreat) {
+ 	if(listOfTreat[[1]] == "none" & listOfTreat[[2]] != "none") {
+ 		print("The values of Treatment and SecondTreamt are changed (filter values also)")
+ 		return(list(swap(listOfTreat),swap(listOfFilterTreat)))	
+ 	} else {
+ 		return(list(listOfTreat,listOfFilterTreat))
+ 	}
+ }
> 
> checkOfTreatments <- function(args, treatment, filterTreatment, secondTreatment, filterSecondTreatment, workingDataSet, debug) {
+ 	debug %debug% "Start of checkOfTreatments()"
+ 	
+ 	treatment <- treatment %exists% args[4]
+ 	secondTreatment <- secondTreatment %exists% args[5]
+ 	secondTreatment <- treatment %checkEqual% secondTreatment
+ 	
+ 	listOfTreat <- list(treatment=treatment, secondTreatment=secondTreatment)
+ 	listOfFilterTreat <- list(filterTreatment=filterTreatment, filterSecondTreatment=filterSecondTreatment)	## wird erstmal noch nichts weiter mit gemacht! nur geswapt falls notwendig
+ 
+ 	for(k in names(listOfTreat)){
+ 		if(listOfTreat[[k]] != "none") {
+ 			#overallTreat <- list(iniDataSet=workingDataSet, descriptor=listOfTreat[[k]], debug=debug, stoppTheCalculation = FALSE, errorDescriptor=character())
+ 			#overallTreat <- list(iniDataSet=workingDataSet, descriptor=listOfTreat[[k]], debug=debug, stoppTheCalculation = FALSE)
+ 			descriptorVector <- getVector(preprocessingOfDescriptor(listOfTreat[[k]], workingDataSet))
+ 			
+ 			if(!is.null(descriptorVector)) {
+ 				descriptorVector <- getVector(checkIfDescriptorIsNaOrAllZero(descriptorVector, workingDataSet, FALSE))
+ 				
+ 				if(!is.null(descriptorVector)) {
+ 					listOfTreat[[k]] <- descriptorVector
+ 				} 
+ 			} 
+ 			
+ 			if(is.null(descriptorVector)) {
+ 				print(paste(k, "set to \"none\""))
+ 				listOfTreat[[k]] <- "none"
+ 			}
+ 		}
+ 	}
+ 	
+ 	listOfTreatAndFilterTreat <- changeWhenTreatmentNoneAndSecondTreatmentNotNone(listOfTreat, listOfFilterTreat)
+ 	debug %debug% "End of checkOfTreatments()"
+ 	return(listOfTreatAndFilterTreat)
+ }
> 
> overallCheckIfDescriptorIsNaOrAllZero <- function(overallList) {
+ 	overallList$debug %debug% "overallCheckIfDescriptorIsNaOrAllZero()"	
+ 	
+ 	if(sum(!is.na(overallList$nBoxDes)) > 0) {
+ 		if(overallList$debug) {print("... nBoxplot")}
+ 		for(n in 1:length(overallList$nBoxDes)) {
+ 			if(!is.na(overallList$nBoxDes[[n]])) {
+ 				overallList$nBoxDes[n] <- checkIfDescriptorIsNaOrAllZero(overallList$nBoxDes[[n]], overallList$iniDataSet)
+ 			}
+ 		}
+ 		names(overallList$nBoxDes) <- c(1:length(overallList$nBoxDes))
+ 	} else {
+ 		print("... all in nBoxplot is 'NA'")
+ 	}
+ 	
+ 	if(sum(!is.na(overallList$boxDes)) > 0) {
+ 		if(overallList$debug) {print("... Boxplot")}
+ 		for(n in 1:length(overallList$boxDes)) {
+ 			if(!is.na(overallList$boxDes[[n]])) {
+ 				overallList$boxDes[[n]] <- checkIfDescriptorIsNaOrAllZero(overallList$boxDes[[n]], overallList$iniDataSet)
+ 			}
+ 		}
+ 		names(overallList$boxDes) <- c(1:length(overallList$boxDes))
+ 	} else {
+ 		print("... all in Boxplot is 'NA'")
+ 	}
+ 
+ 	if(sum(!is.na(overallList$boxStackDes)) > 0) {
+ 		if(overallList$debug) {print("... stackedBoxplot")}
+ 		for(n in 1:length(overallList$boxStackDes)) {
+ 			if(!is.na(overallList$boxStackDes[[n]])) {
+ 				overallList$boxStackDes[[n]] <- checkIfDescriptorIsNaOrAllZero(overallList$boxStackDes[[n]], overallList$iniDataSet)
+ 			}
+ 		}
+ 		names(overallList$boxStackDes) <- c(1:length(overallList$boxStackDes))
+ 	} else {
+ 		print("... all in stackedBoxplot is 'NA'")
+ 	}
+ 	
+ 	if(!sum(!is.na(overallList$boxStackDes)) > 0 && !sum(!is.na(overallList$boxDes)) > 0 && !sum(!is.na(overallList$nBoxDes)) > 0) {
+ 		print("... no descriptor set (all descriptors are zero or NA) - the program stopp!")
+ 		overallList$stoppTheCalculation <- TRUE 
+ 	}
+ 	
+ 	return(overallList)
+ }
> 
> checkIfDescriptorIsNaOrAllZero <- function(descriptorVector, iniDataSet, isDescriptor = TRUE){
+ 	#overallList$debug %debug% "checkIfDescriptorIsNaOrAllZero()"
+ 	descriptorVector <- as.vector(descriptorVector)
+ 	#descriptorVector <- getVector(descriptorVector)
+ 	tempDescriptor <- descriptorVector 
+ 	if(isDescriptor) {
+ 		descriptorVector <- descriptorVector[colSums(!is.na(iniDataSet[descriptorVector])) != 0 & colSums(iniDataSet[descriptorVector] *1, na.rm = TRUE) > 0]
+ 	} else {
+ 		descriptorVector <- descriptorVector[colSums(!is.na(iniDataSet[descriptorVector])) != 0]
+ 	}
+ 	errorDescriptor <- tempDescriptor %GetDescriptorAfterCheckIfDescriptorNotExists% descriptorVector
+ 
+ 	if (length(errorDescriptor) > 0) {
+ 		errorDescriptor %errorReport% "NotNumericOrAllZero"	
+ 	}
+ 	
+ 	if(length(descriptorVector) > 0) {
+ 		return(as.data.frame(descriptorVector))
+ 	} else {
+ 		return(NA)
+ 	}
+ }
> 
> overallChangeName <- function(overallList) {
+ 	overallList$debug %debug% "overallChangeSaveName()"	
+ 	
+ 	if(!is.null(overallList$saveName_nBoxDes)) {
+ 		if(overallList$debug) {print("... nBoxplot")}
+ 		overallList$saveName_nBoxDes <- changeSaveName(overallList$saveName_nBoxDes)
+ 		names(overallList$saveName_nBoxDes) <- c(1:length(overallList$saveName_nBoxDes))
+ 		
+ 		overallList$nBoxDesName <- as.list(overallList$nBoxDesName)
+ 		names(overallList$nBoxDesName) <- c(1:length(overallList$nBoxDesName))
+ 	}
+ 	
+ 	if(!is.null(overallList$saveName_boxDes)) {
+ 		if(overallList$debug) {print("... Boxplot")}
+ 		overallList$saveName_boxDes <- changeSaveName(overallList$saveName_boxDes)
+ 		names(overallList$saveName_boxDes) <- c(1:length(overallList$saveName_boxDes))
+ 		
+ 		overallList$boxDesName <- as.list(overallList$boxDesName)
+ 		names(overallList$boxDesName) <- c(1:length(overallList$boxDesName))
+ 	}
+ 	
+ 	if(!is.null(overallList$saveName_boxStackDes)) {
+ 		if(overallList$debug) {print("... stackedBoxplot")}
+ 		overallList$saveName_boxStackDes <- changeSaveName(overallList$saveName_boxStackDes)
+ 		names(overallList$saveName_boxStackDes) <- c(1:length(overallList$saveName_boxStackDes))
+ 		
+ 		overallList$boxStackDesName <- as.list(overallList$boxStackDesName)
+ 		names(overallList$boxStackDesName) <- c(1:length(overallList$boxStackDesName))
+ 	}
+ 	
+ 	return(overallList)
+ }
> 
> changeSaveName <- function(saveNameVector) {
+ 	#Sollte hier nicht noch die Leerzeichen durch Punkte ersetzt werden?
+ 	saveNameVector <- gsub("\\$",";",substr(saveNameVector,1,70))
+ 	saveNameVector <- gsub("\\^", "", saveNameVector);
+ 	
+ 	return(as.list(saveNameVector))
+ }
> 
> preprocessingOfValues <- function(value, isColValue=FALSE, replaceString=".") {
+ 
+ 	if (!is.null(value)) {
+ 		regExpressionCol <- "[^[:alnum:]|^_]|[[:space:]|\\^]"
+ 		if(isColValue) {
+ 			value <- strsplit(value, "$", fixed=TRUE)
+ 		}
+ 		
+ 		for(n in 1:length(value)) {
+ 			value[[n]] <- gsub(regExpressionCol,replaceString,value[[n]])
+ 		}
+ 	} else {
+ 			return("none")
+ 		}
+ 	return(value)
+ }
> 
> overallPreprocessingOfDescriptor <- function(overallList) {
+ 	overallList$debug %debug% "overallPreprocessingOfDescriptor()"	
+ 	
+ 	if(!is.null(overallList$nBoxDes)) {
+ 		if(overallList$debug) {print("... nBoxplot")}
+ 		for(n in 1:length(overallList$nBoxDes)) {
+ 			overallList$nBoxDes[n] <- preprocessingOfDescriptor(overallList$nBoxDes[[n]], overallList$iniDataSet)
+ 		}
+ 	} else {
+ 		print("... nBoxplot is NULL")
+ 	} 
+ 	
+ 	if(!is.null(overallList$boxDes)) {
+ 		if(overallList$debug) {print("... Boxplot")}
+ 		for(n in 1:length(overallList$boxDes)) {
+ 			overallList$boxDes[n] <- preprocessingOfDescriptor(overallList$boxDes[[n]], overallList$iniDataSet)
+ 		}
+ 	} else {
+ 		print("... Boxplot is NULL")
+ 	} 
+ 	
+ 	if(!is.null(overallList$boxStackDes)) {
+ 		if(overallList$debug) {print("... stackedBoxplot")}
+ 		for(n in 1:length(overallList$boxStackDes)) {
+ 			overallList$boxStackDes[n] <- preprocessingOfDescriptor(overallList$boxStackDes[[n]], overallList$iniDataSet)
+ 		}
+ 	} else {
+ 		print("... stackedBoxplot is NULL")
+ 	} 
+ 	
+ 	if(!sum(!is.na(overallList$boxStackDes)) > 0 && !sum(!is.na(overallList$boxDes)) > 0 && !sum(!is.na(overallList$nBoxDes)) > 0) {
+ 		print("... no descriptor set - this pass stopped!")
+ 		overallList$stoppTheCalculation <- TRUE
+ 	}
+ 	
+ 	return(overallList)
+ }
> 
> preprocessingOfDescriptor <- function(descriptorVector, iniDataSet) {
+ 	#overallList$debug %debug% "preprocessingOfDescriptor()"
+ 	descriptorVector <- unlist(preprocessingOfValues(descriptorVector, TRUE))	#descriptor is value for yAxis
+ 	
+ 	errorDescriptor <- descriptorVector %GetDescriptorAfterCheckIfDescriptorNotExists% iniDataSet 
+ 	descriptorVector <- descriptorVector %GetDescriptorsAfterCheckIfDescriptorExists% iniDataSet
+ 	if (length(errorDescriptor)>0) {
+ 		errorDescriptor %errorReport% "notExists"
+ 	} 
+ 	
+ 	if(length(descriptorVector) > 0) {
+ 		return(as.data.frame(descriptorVector))
+ 	} else {
+ 		return(NA)
+ 	}	
+ }
> 
> preprocessingOfxAxisValue <- function(overallList) {
+ 	overallList$debug %debug% "preprocessingOfxAxisValue()"
+ 	overallList$xAxis <- unlist(preprocessingOfValues(overallList$xAxis, TRUE))
+ 	
+ 	if (overallList$filterXaxis != "none") {
+ 		overallList$filterXaxis <- as.numeric(strsplit(overallList$filterXaxis, "$", fixed=TRUE)[[1]])
+ 	} else {
+ 		overallList$filterXaxis <- as.numeric(unique(overallList$iniDataSet[overallList$xAxis])[[1]])	#xAxis muss einen Wert enthalten ansonsten Bricht das Program weiter oben ab
+ 	}
+ 	
+ 	return(overallList)
+ }
> 
> getSingelFilter <- function(filter, treatment, dataSet) {
+ 	if(filter != "none") {
+ 		return(strsplit(filter, "$", fixed=TRUE)[[1]])
+ 	} else {
+ 		return(as.character(unique(dataSet[treatment])[[1]]))
+ 	}
+ }
> 
> preprocessingOfTreatment <- function(overallList) {
+ 	overallList$debug %debug% "preprocessingOfTheTreatment()"
+ 	
+ 	if(!is.null(overallList$treatment)){
+ 		overallList$treatment <- preprocessingOfValues(overallList$treatment)
+ 		
+ 		if(overallList$treatment != "none" & (overallList$treatment %checkIfDescriptorExists% overallList$iniDataSet)) {	
+ 			overallList$filterTreatment <- getSingelFilter(overallList$filterTreatment, overallList$treatment, overallList$iniDataSet)
+ 
+ 		} else {
+ 			overallList$treatment <- "none"
+ 			overallList$filterTreatment <- "none"
+ 			print("... set 'filterTreatment' and 'treatment' to 'none'!")		
+ 		}
+ 			
+ 	} else {
+ 		overallList$treatment <- "none"
+ 		overallList$filterTreatment <- "none"
+ 		print("... set 'filterTreatment' and 'treatment' to 'none'!")
+ 	}
+ 
+ 	return(overallList)
+ }
> 
> preprocessingOfSecondTreatment <- function(overallList) {
+ 	overallList$debug %debug% "preprocessingOfTheSecondTreatment()"
+ 	
+ 	if(!is.null(overallList$secondTreatment)){
+ 		overallList$secondTreatment <- preprocessingOfValues(overallList$secondTreatment)
+ 
+ 		if (overallList$secondTreatment != "none" & (overallList$secondTreatment %checkIfDescriptorExists% overallList$iniDataSet)) {
+ 			overallList$filterSecondTreatment <- getSingelFilter(overallList$filterSecondTreatment, overallList$secondTreatment, overallList$iniDataSet)
+ 			
+ 		} else {
+ 			overallList$secondTreatment <- "none"
+ 			overallList$filterSecondTreatment <- "none"
+ 			print("... set 'filterSecondTreatment' and 'secondTreatment' to 'none'!")
+ 		}	
+ 	} else {
+ 		overallList$secondTreatment <- "none"
+ 		overallList$filterSecondTreatment <- "none"
+ 		print("... set 'filterSecondTreatment' and 'secondTreatment' to 'none'!")
+ 	}
+ 	return(overallList)
+ }
> 
> check <- function(value, checkValue=c("none", NA)){
+ 	if(!is.null(value)){
+ 		return(value %GetDescriptorAfterCheckIfDescriptorNotExists% checkValue)
+ 	} else {
+ 		return(character(0))
+ 	}
+ }
> 
> getVector <- function(descriptorSet) {
+ 	if(!is.null(descriptorSet)) {
+ 		vector <-  vector()
+ 		for(n in 1:length(descriptorSet)) {
+ 			vector <- c(vector, as.vector(unlist(descriptorSet[[n]])))
+ 		}
+ 		return(vector)
+ 	}
+ 	return(character(0))
+ }
> 
> reduceWorkingDataSize <- function(overallList){
+ 	overallList$debug %debug% "reduceWorkingDataSize()"
+ 	overallList$iniDataSet <- overallList$iniDataSet[unique(c(check(getVector(overallList$nBoxDes)), check(getVector(overallList$boxDes)), check(getVector(overallList$boxStackDes)), check(overallList$xAxis), check(overallList$treatment), check(overallList$secondTreatment)))]
+ 	return(overallList)
+ }
> 
> setRowAndColNameOfFinalDataFrame <- function(overallList) {
+ 	overallList$debug %debug% "setRowAndColNameOfFinalDataFrame()"
+ 
+ 	overallList$rowName <- (overallList$descriptor %contactAllWithAll% overallList$filterTreatment) %contactAllWithAll% overallList$filterSecondTreatment
+ 	overallList$colName <- as.character(overallList$filterXaxis)
+ 	
+ 	return(overallList)
+ }
> 
> groupByFunction <- function(groupByList) {
+ 	
+ 	groupByList <- unlist(groupByList)
+ 	return(unlist(groupByList[ifelse(groupByList != "none",TRUE,FALSE)]))
+ 	
+ }
> 
> getBooleanVectorForFilterValues <- function(groupedDataFrame, listOfValues) {
+ 	
+ 	tempVector <- rep.int(TRUE,times=length(groupedDataFrame[,1]))
+ 	for(h in names(listOfValues)) {
+ 		if(h != "none" & !is.null(groupedDataFrame[[h]])) {
+ 			tempVector <- tempVector & groupedDataFrame[[h]] %in% listOfValues[[h]]
+ 		}
+ 	}
+ 	return(tempVector)
+ }
> 
> buildRowForOverallList <- function(i, des, listOfValues, dataSet, day) {
+ 	rowString <- list(row=des, day=numeric())
+ 	for(k in listOfValues){
+ 		if(k != "none") {
+ 			rowString$row <- paste(rowString$row,dataSet[i,k])
+ 		}
+ 	}
+ 	return(rowString)
+ } 
> 
> fillOverallResult <- function(overallList, preErrorBars) {
+ 	overallList$debug %debug% "fillOverallResult()"
+ 	if(length(overallList$iniDataSet[,1]) > 0){
+ 		for(i in 1:length(overallList$iniDataSet[,1])) {
+ 			for(des in overallList$descriptor) {
+ 				rowAndColumn <- buildRowForOverallList(i,des, c(overallList$treatment, overallList$secondTreatment),overallList$iniDataSet, overallList$xAxis)
+ 				overallList$overallResult[rowAndColumn$row, as.character(overallList$iniDataSet[i,overallList$xAxis])] <- overallList$iniDataSet[i,des]
+ 				if(tolower(overallList$diagramTyp) != "boxplotstacked")
+ 					overallList$errorBars[rowAndColumn$row, as.character(overallList$iniDataSet[i,overallList$xAxis])] <- preErrorBars[i,des]
+ 			}
+ 		}
+ 	} else {
+ 		print("... no Value for the OverallResult-DataFrame - Wrong filter!")
+ 		overallList$stoppTheCalculation <- TRUE
+ 	}
+ 	return(overallList)
+ }
> 
> buildList <- function(overallList, colOfXaxis) {
+ 	overallList$debug %debug% "buildList()"
+ 	newList <- list()
+ 	
+ 	newList[[overallList$treatment]] <- overallList$filterTreatment
+ 	newList[[overallList$secondTreatment]] <- overallList$filterSecondTreatment
+ 	newList[[colOfXaxis]] <- overallList$filterXaxis
+ 	
+ 	return(newList)
+ }
> 
> conactAllWithAll <- function(value1, value2) {
+ 	
+ 	conactRow <- character()
+ 	for(k1 in value1){
+ 		if(k1 != "none") {
+ 			for(k2 in value2){
+ 				if(k2 != "none") {
+ 					conactRow <- c(conactRow, paste(k1,k2,sep = "#"))
+ 				}
+ 			}
+ 		}
+ 	}
+ 	return(conactRow)
+ }
> 
> buildRowName <- function(mergeDataSet,groupBy, yName = "value") {
+ 	
+ 	if(length(groupBy) == 0) {
+ 		return(data.frame(name=rep.int(yName, length(mergeDataSet[,1])), mergeDataSet))
+ 	} else if (length(groupBy) == 1) {
+ 		return(data.frame(name=mergeDataSet[,groupBy], mergeDataSet[,!(colnames(mergeDataSet) %in% groupBy)]))
+ 	} else {		
+ 		temp <- mergeDataSet[,groupBy[1]]
+ 		for(h in 2:length(groupBy)) {
+ 			temp <- paste(temp, mergeDataSet[,groupBy[h]], sep = "#")
+ 		}
+ 		return(data.frame(name=temp, primaerTreatment= mergeDataSet[,groupBy[1]], mergeDataSet[,mergeDataSet %allColnamesWithoutThisOnes% groupBy]))
+ 	}	
+ }
> 
> overallGetResultDataFrame <- function(overallList) {
+ 	overallList$debug %debug% "overallGetResultDataFrame()"	
+ 	groupBy <- groupByFunction(list(overallList$treatment, overallList$secondTreatment))
+ 	colNames <- list(colOfXaxis="xAxis", colOfMean="mean", colOfSD="se", colName="name", xAxis=overallList$xAxis)
+ 	booleanVectorList <- buildList(overallList, colNames$colOfXaxis)
+ 	columnsStandard <- c(check(overallList$xAxis), check(overallList$treatment), check(overallList$secondTreatment))
+ 		
+ 	if(sum(!is.na(overallList$nBoxDes)) > 0) {
+ 		if(overallList$debug) {print("... nBoxplot")}
+ 		columns <- c(columnsStandard, check(getVector(overallList$nBoxDes)))
+ 		overallList$overallResult_nBoxDes <- getResultDataFrame("nboxplot", overallList$nBoxDes, overallList$iniDataSet[columns], groupBy, colNames, booleanVectorList, overallList$debug)
+ 	} else {
+ 		print("... all in nBoxplot is 'NA'")
+ 	}
+ 	
+ 	if(sum(!is.na(overallList$boxDes)) > 0) {
+ 		if(overallList$debug) {print("... Boxplot")}
+ 		colNames$colOfMean <- "value"
+ 		columns <- c(columnsStandard, check(getVector(overallList$boxDes)))
+ 		overallList$overallResult_boxDes <- getResultDataFrame("boxplot", overallList$boxDes, overallList$iniDataSet[columns], groupBy, colNames, booleanVectorList, overallList$debug)
+ 	} else {
+ 		print("... all in Boxplot is 'NA'")
+ 	}
+ 	
+ 	if(sum(!is.na(overallList$boxStackDes)) > 0) {
+ 		if(overallList$debug) {print("... stackedBoxplot")}
+ 		colNames$colOfMean <- check(getVector(overallList$boxStackDes))
+ 		colNames$colOfXaxis <- overallList$xAxis
+ 		columns <- c(columnsStandard, check(getVector(overallList$boxStackDes)))
+ 		overallList$overallResult_boxStackDes <- getResultDataFrame("boxplotStacked", overallList$boxStackDes, overallList$iniDataSet[columns], groupBy, colNames, booleanVectorList,overallList$debug)
+ 	} else {
+ 		print("... all in stackedBoxplot is 'NA'")
+ 	}
+ 	
+ 	if(is.null(overallList$boxStackDes) && is.null(overallList$boxDes) && is.null(overallList$nBoxDes)) {
+ 		print("... no descriptor set - this pass stopped!")
+ 		overallList$stoppTheCalculation <- TRUE
+ 	}
+ 	
+ 	return(overallList)
+ }
> 
> getPlotNumber <- function(colNameWichMustBind, descriptorList) {
+ 	
+ 	for(n in names(descriptorList)) {
+ 		if(colNameWichMustBind %in% as.vector(unlist(descriptorList[[n]]))) {
+ 			return(n)
+ 		}
+ 	}
+ 	return(-1)
+ }
> #descriptorName kann entfernt werden
> getResultDataFrame <- function(diagramTyp, descriptorList, iniDataSet, groupBy, colNames, booleanVectorList, debug) {	
+ 	debug %debug% "getResultDataFrame()"
+ 
+ ################################
+ #	diagramTyp = "boxplotStacked"
+ #	descriptorList = overallList$boxStackDes
+ #	iniDataSet = overallList$iniDataSet[columns]
+ #	groupBy = groupBy 
+ #	colNames = colNames 
+ #	booleanVectorList= booleanVectorList
+ #	descriptorName=overallList$boxStackDesName
+ #	debug = overallList$debug
+ #	diagramTyp = "nboxplot"
+ #	descriptor = getVector(overallList$nBoxDes)
+ #	iniDataSet = overallList$iniDataSet[columns]
+ #	groupBy = groupBy 
+ #	colNames = colNames 
+ #	booleanVectorList= booleanVectorList
+ #	descriptorName=overallList$boxDesName
+ ##########################
+ 
+ 	descriptor <- getVector(descriptorList)
+ 	descriptorName <- seq(1:length(descriptor))
+ 	
+ 	descriptorName <- descriptorName[!is.na(descriptor)]
+ 	descriptor <- descriptor[!is.na(descriptor)]
+ 	
+ 	if(diagramTyp != "boxplot") {
+ 		groupedDataFrame <- data.table(iniDataSet)
+ 		key(groupedDataFrame) <- c(groupBy, colNames$xAxis)		
+ 	}
+ 	
+ 	if(diagramTyp == "boxplot") {
+ 		groupedDataFrameMean <- iniDataSet[groupBy[1]]
+ 		
+ 		groupByReduce <- groupBy[groupBy!=groupBy[1]]
+ 		for(n in c(groupByReduce,  colNames$xAxis, descriptor)) {
+ 			groupedDataFrameMean <- cbind(groupedDataFrameMean,  iniDataSet[n])
+ 		}	
+ 		
+ ####################
+ #		Alternative, den Boxplot selber zu bauen!!
+ #		test <- overallList$iniDataSet %allColnamesWithoutThisOnes% c(groupBy, overallList$xAxis)
+ #		myQuantile <- as.data.frame(groupedDataFrame[,lapply(.SD,quantile, probs=c(0,0.25,0.5,0.75,1), na.rm=TRUE), by=groupBy])
+ #		numberOfGroubingElements <- length(myQuantile[,1]) / 5
+ #		
+ #		testData <- data.frame()
+ #		for(n in seq(1, length(myQuantile[,1]), by=5)) {
+ #			testData <- rbind(testData, myQuantile[n:(n+4),test])
+ #		}
+ #		colnames(testData) <- c("q0", "q25", "q50", "q75", "q100")
+ #		rownames(testData) <- unique(myQuantile[,1])
+ #		
+ #		ggplot(overallList$iniDataSet, aes(x=rownames(testData), ymin=testData[,1], lower=testData[,2], middle=testData[,3], upper=testData[,4], ymax=testData[,5])) + 
+ #				geom_boxplot(stat="identity")
+ #####################		
+ 			
+ 		
+ 	} else {
+ 		groupedDataFrameMean <- as.data.frame(groupedDataFrame[,lapply(.SD, mean, na.rm=TRUE), by=c(groupBy,colNames$xAxis)])
+ 	}
+ 	
+ 	if(diagramTyp == "nboxplot" || diagramTyp == "boxplot") {
+ 		#colNamesOfTheRest <- paste(colNames$colOfMean,seq(1:length(descriptor)), sep="")	
+ 		colNamesOfTheRest <- paste(colNames$colOfMean,descriptorName, sep="")	
+ 	} else {
+ 		colNamesOfTheRest <- groupedDataFrameMean %allColnamesWithoutThisOnes% c(groupBy, colNames$xAxis)
+ 	}
+ 		
+ #alt wenn nur ein Deskriptor übergeben wird
+ #		if(tolower(overallList$diagramTyp) == "nboxplot" || tolower(overallList$diagramTyp) == "boxplot") {
+ #			colNamesOfTheRest <- colOfMean
+ #		} else {
+ #			colNamesOfTheRest <- groupedDataFrameMean %allColnamesWithoutThisOnes% c(groupBy, overallList$xAxis)
+ #		}
+ 		
+ 	colnames(groupedDataFrameMean) <- c(groupBy, colNames$colOfXaxis, colNamesOfTheRest)
+ 	
+ 	if(diagramTyp == "nboxplot") {
+ 		groupedDataFrameSD <- as.data.frame(groupedDataFrame[,lapply(.SD, sd, na.rm=TRUE), by=c(groupBy,colNames$xAxis)])
+ 		colnames(groupedDataFrameSD) <- c(groupBy, colNames$colOfXaxis, paste(colNames$colOfSD,descriptorName, sep=""))
+ 	}
+ 	
+ 	booleanVector <- getBooleanVectorForFilterValues(groupedDataFrameMean, booleanVectorList)
+ 	
+ 	if(diagramTyp == "nboxplot") {
+ 		iniDataSet <- merge(sort=FALSE, groupedDataFrameMean[booleanVector,], groupedDataFrameSD[booleanVector,], by = c(groupBy, colNames$colOfXaxis))
+ 		#overallResult <- buildRowName(iniDataSet,groupBy, descriptorName)
+ 		overallResult <- buildRowName(iniDataSet,groupBy)
+ 		
+ 	} else if(diagramTyp == "boxplot") {
+ 		iniDataSet <- groupedDataFrameMean[booleanVector,]
+ 		#overallResult <- buildRowName(iniDataSet,groupBy, descriptorName)
+ 		overallResult <- buildRowName(iniDataSet,groupBy)
+ 		
+ 	} else {
+ 		iniDataSet <- groupedDataFrameMean[booleanVector,]		
+ 		#buildRowNameDataSet <- buildRowName(iniDataSet, groupBy, descriptorName)
+ 		buildRowNameDataSet <- buildRowName(iniDataSet, groupBy)
+ 		temp <- data.frame()
+ #		count <- 0
+ 		
+ 		for(colNameWichMustBind in buildRowNameDataSet %allColnamesWithoutThisOnes% c(colNames$xAxis, colNames$colName, "primaerTreatment")) {
+ #			count <- count+1
+ 			plot = getPlotNumber(colNameWichMustBind, descriptorList)
+ 		
+ 			if(plot!=-1) {
+ 				colNameWichMustBindReNamed <- reNameHist(colNameWichMustBind)
+ 		
+ 				if(is.null(buildRowNameDataSet$primaerTreatment)){	
+ 					temp <- rbind(temp,data.frame(hist=rep.int(x=colNameWichMustBindReNamed, times=length(buildRowNameDataSet[,colNameWichMustBind])), values=buildRowNameDataSet[,colNameWichMustBind], xAxis=buildRowNameDataSet[,colNames$colOfXaxis], name=buildRowNameDataSet[,colNames$colName], plot=plot))			
+ 				} else {
+ 					temp <- rbind(temp,data.frame(hist=rep.int(x=colNameWichMustBindReNamed, times=length(buildRowNameDataSet[,colNameWichMustBind])), primaerTreatment=buildRowNameDataSet[,"primaerTreatment"], values=buildRowNameDataSet[,colNameWichMustBind], xAxis=buildRowNameDataSet[,colNames$colOfXaxis], name=buildRowNameDataSet[,colNames$colName], plot = plot))			
+ 				}
+ 			}
+ 		}
+ 		overallResult <- temp		
+ 	}	
+ 
+ 	return(overallResult)
+ }
> 
> setDefaultAxisNames <- function(overallList) {
+ 	overallList$debug %debug% "setDefaultAxisNames()"
+ 	
+ 	if (overallList$xAxisName == "none") {
+ 		overallList$xAxisName <- gsub('[[:punct:]]'," ",overallList$xAxis)
+ 	}
+ #	if (overallList$yAxisName == "none") {
+ #		overallList$yAxisName <- gsub('[[:punct:]]'," ",overallList$descriptor)
+ #	}
+ 	return(overallList)
+ }
> 
> setColorListHist <- function(descriptorList) {
+ 	interval <- seq(0.05,0.95, by=0.1)
+ 	intervalSat <- rep.int(c(0.8,1.0), 5)
+ 	intervalFluo <- seq(0,0.166666666666, by=0.01666666)
+ 	
+ 	if(length(grep("fluo",getVector(descriptorList), ignore.case=TRUE)) > 0) { #rot			
+ 		#colorList <- as.list(rgb(255, seq(256/10/2,255,by=255/10), 255, max = 255))
+ 		#colorList <- as.list(rgb(1, interval, 0, max = 1))
+ 		colorList <- as.list(hsv(h=rev(intervalFluo), s=intervalSat, v=1))
+ 		
+ 	} else if(length(grep("phenol",getVector(descriptorList), ignore.case=TRUE)) > 0) { #gelb
+ 		#colorList <- as.list(rgb(255, rev(seq(256/10/2,255,by=255/10)), 255, max = 255))
+ 		#colorList <- as.list(rgb(1, rev(interval), 0, max = 1))
+ 		colorList <- as.list(hsv(h=intervalFluo, s=intervalSat, v=1))
+ 		
+ 	} else if(length(grep("vis",getVector(descriptorList), ignore.case=TRUE)) > 0) {
+ 		colorList <- as.list(hsv(h=interval, s=1, v=intervalSat))
+ 		
+ 	} else if(length(grep("nir",getVector(descriptorList), ignore.case=TRUE)) > 0) {
+ 		colorList <- as.list(rgb(rev(interval), rev(interval), rev(interval), max = 1))		
+ 	} else {
+ 		return(list(0))
+ 	}
+ 	names(colorList) <- c("0..25", "25..51", "51..76", "76..102", "102..127", "127..153", "153..178", "178..204", "204..229", "229..255")
+ 	return(colorList)
+ }
> 
> setColorList <- function(diagramTyp, descriptorList, overallResult, isGray) {
+ #################	
+ #diagramTyp = "boxplotStacked"
+ #descriptorList = overallList$boxStackDes
+ #isGrey = overallList$isGray
+ #	overallResult=overallList$overallResult_nBoxDes
+ #	diagramTyp = "boxplotStacked"
+ #	descriptorList = overallList$nBoxDes	
+ ##################
+ 	
+ 	if(!as.logical(isGray)) {
+ 		colorVector <- c(brewer.pal(11, "Spectral"))
+ 	} else {
+ 		colorVector <- c(brewer.pal(9, "Greys"))
+ 	}
+ 	
+ 	colorList <- list()
+ 	if(diagramTyp == "nboxplot" || diagramTyp == "boxplot") {
+ 		for(n in names(descriptorList)) {
+ 			if(!is.na(descriptorList[[n]])) {
+ 				colorList[[n]] <- colorRampPalette(colorVector)(length(unique(overallResult$name)))
+ 			} else {
+ 				print("... all values are 'NA'")
+ 			}
+ 		}
+ 	} else {
+ 		for(n in names(descriptorList)) {
+ 			if(!is.na(descriptorList[[n]])) {
+ 				colorList[[n]] <- setColorListHist(descriptorList[n])
+ 			} else {
+ 				print("... all values are 'NA'")
+ 			}
+ 		}
+ 	}
+ 	return(colorList)
+ }
> 
> setColor <- function(overallList) {
+ 	overallList$debug %debug% "setColor()"
+ 	  
+ 	overallList$color_nBox <- setColorList("nboxplot", overallList$nBoxDes, overallList$overallResult_nBoxDes, overallList$isGray)
+ 	overallList$color_box <- setColorList("boxplot", overallList$boxDes, overallList$overallResult_boxDes, overallList$isGray)
+ 	overallList$color_boxStack <- setColorList("boxplotStacked", overallList$boxStackDes, overallList$overallResult_boxStackDes, overallList$isGray)
+ 	return(overallList)
+ }
> 
> normalizeToHundredPercent <-  function(whichRows, overallResult) {
+ 	return(t(apply(overallResult[whichRows,], 1, function(x,y){(100*x)/y}, y=colSums(overallResult[whichRows,]))))
+ }
> 
> writeLatexFile <- function(saveNameLatexFile, saveNameImageFile="", o="") {
+ 	
+ 	saveNameImageFile <- preprocessingOfValues(saveNameImageFile, FALSE, "_")
+ 	saveNameLatexFile <- preprocessingOfValues(saveNameLatexFile, FALSE, "_")
+ 	o <- gsub('[[:punct:]]',"_",o)
+ 	
+ 	latexText <- paste("\\loadImage{",
+ 					   ifelse(saveNameImageFile=="",saveNameLatexFile,saveNameImageFile),
+ 					   ifelse(o=="", "", paste("_",o ,sep="")),
+ 					   ".pdf}", sep="")
+ 	
+ 	write(x=latexText, append=TRUE, file=paste(saveNameLatexFile,"tex",sep="."))
+ 	
+ }
> 
> saveImageFile <- function(overallList, plot, saveName, extraString="") {
+ 	filename <- preprocessingOfValues(paste(saveName,extraString,sep=""), FALSE,replaceString = "_")	
+ 	ggsave (filename=paste(filename,overallList$saveFormat,sep="."), plot = plot, dpi=as.numeric(overallList$dpi))
+ 
+ }
> 
> makeDepthBoxplotDiagram <- function(h, overallList) {
+ 
+ 	overallList$debug %debug% "makeDepthBoxplotDiagram()"
+ 	overallList$symbolParameter <- 15
+ 	
+ 	if (h==1) {
+ 		openImageFile(overallList)
+ 	}
+ 	par(mar=c(4.1,4.1,2.1,2.1))
+ 	plot.depth(as.matrix(overallList$overallResult), plot.type=h, xlabel=overallList$xAxisName, l.width=12, lp.color=overallList$color)
+ 	
+ 	grid()
+ 	if (h==1) {
+ 		dev.off()
+ 	}
+ 	if(overallList$appendix) {
+ 		writeLatexFile("appendixImage", overallList$saveName)
+ 	}
+ 	
+ 	return(overallList)
+ }
> 
> CheckIfOneColumnHasOnlyValues <- function(overallResult, descriptor="", diagramTyp="nboxplot") {	
+ 	
+ 	max <- -1	
+ 	for(index in levels(overallResult$name)){
+ 		if(diagramTyp == "nboxplot" || diagramTyp == "boxplot") {
+ 			temp <- sum(!is.na(overallResult$mean[overallResult$name == index]))
+ 		} else {
+ 			boolVec <- overallResult$name == index
+ 			temp <- sum(!is.na(overallResult[boolVec,descriptor]))
+ 		}
+ 		max <- ifelse(temp > max, temp, max)
+ 	}
+ 		
+ 	return(ifelse(max == 1,TRUE, FALSE))
+ }
> 
> 
> buildMyStats <- function(values, means, se) {
+ 	means <- as.data.frame(as.vector(means))
+ 	colnames(means) <- "means"
+ 	
+ 	se <- as.data.frame(as.vector(se))
+ 	colnames(se) <- "se"
+ 
+ 	return(data.frame(value=values,means=means, se=se))
+ }
> 
> buildMyStats2 <- function(values, means, se, rowName) {
+ 	means <- as.data.frame(as.vector(means))
+ 	colnames(means) <- "means"
+ 	
+ 	rowName <- as.data.frame(as.vector(rowName))
+ 	colnames(rowName) <- Name
+ 	
+ 	se <- as.data.frame(as.vector(se))
+ 	colnames(se) <- "se"
+ 	
+ 	return(data.frame(value=values,means=means, se=se, rowName=rowName))
+ }
> 
> reduceOverallResult <- function(tempOverallList, imagesIndex) {
+ 	tempOverallList$debug %debug% "reduceOverallResult()"
+ 
+ 	workingDataSet <- buildDataSet(tempOverallList$overallResult[,1:2], tempOverallList, c("mean", "se"), imagesIndex)
+ 	colnames(workingDataSet) <- c(colnames(workingDataSet)[1:2], "mean", "se")
+ 	return(workingDataSet)	
+ }
> 
> 
> reduceWholeOverallResultToOneValue <- function(tempOverallResult, imagesIndex, debug, diagramTyp="nboxplot") {
+ 	debug %debug% "reduceWholeOverallResultToOneValue()"
+ 	
+ 	if(diagramTyp == "boxplotstacked") {
+ 		
+ 		workingDataSet <- tempOverallResult[tempOverallResult$plot == imagesIndex,]
+ 		workingDataSet$hist <- factor(workingDataSet$hist, unique(workingDataSet$hist))
+ 		
+ 	} else {
+ 		colNames <- vector()
+ 		if(diagramTyp == "nboxplot" || diagramTyp == "barplot") {
+ 			colNames <- c("mean", "se")
+ 		} else if(diagramTyp == "boxplot") {
+ 			colNames <- c("value")
+ 		} 
+ 		
+ 		if("primaerTreatment" %in% tempOverallResult) {
+ 			standardColumnName <- c("name", "primaerTreatment", "xAxis")
+ 		} else {
+ 			standardColumnName <- c("name", "xAxis")
+ 		}
+ 		
+ 		workingDataSet <- buildDataSet(tempOverallResult[,standardColumnName], tempOverallResult, colNames, imagesIndex)
+ 		colnames(workingDataSet) <- c(standardColumnName, colNames)
+ 	}
+ 	return(workingDataSet)	
+ }
> 
> 
> makeLinearDiagram <- function(h, overallResult, overallDescriptor, overallColor, overallDesName, overallSaveName, overallList, diagramTypSave="nboxplot") {
+ ########################		
+ #	h=h 
+ #	overallResult = overallList$overallResult_nBoxDes
+ #	overallColor=overallList$color_nBox
+ ##	debug = overallList$debug
+ #	overallDescriptor = overallList$nBoxDes
+ #	overallDesName = overallList$nBoxDesName
+ #########################
+ 	
+ 	overallList$debug %debug% "makeLinearDiagram()"	
+ 	print("... nBoxplot")
+ 	
+ 	tempOverallResult <-  overallResult
+ 	
+ 	for(imagesIndex in names(overallDescriptor)) {
+ 		if(!is.na(overallDescriptor[[imagesIndex]])) {
+ 			print(paste("... image",imagesIndex))
+ 			overallResult <- reduceWholeOverallResultToOneValue(tempOverallResult, imagesIndex, overallList$debug, "nboxplot")
+ 			
+ 			if(!CheckIfOneColumnHasOnlyValues(overallResult)) {	
+ 		
+ 	#			myDataSet <- data.frame(name=c("normal","wet","dry","normal","wet","dry","normal","wet","dry"), 
+ 	#									xAxis=c(6,6,6,8,8,8,10,10,10),		
+ 	#									mean=c(4883,6224,4630,6047,5790,7758,7349,7778,9725), 
+ 	#									se=c(1515,1190,1670,1831,2013,1318,2387,2182,1499))
+ 						
+ 				plot <-	ggplot(data=overallResult, aes(x=xAxis, y=mean, shape=name)) +
+ 						#geom_smooth(aes(ymin=mean-se, ymax=mean+se, colour=name, fill=name), stat="identity", alpha=0.1) +
+ 						geom_ribbon(aes(ymin=mean-se, ymax=mean+se, fill=name), stat="identity", alpha=0.1) +
+ 						geom_line(aes(color=name), alpha=0.2) +
+ 						geom_point(aes(color=name), size=3) +
+ 						scale_x_continuous(name=overallList$xAxisName, minor_breaks = min(overallResult$xAxis):max(overallResult$xAxis)) +
+ 						ylab(overallDesName[[imagesIndex]]) +
+ 						scale_fill_manual(values = overallColor[[imagesIndex]]) +
+ 						scale_colour_manual(values= overallColor[[imagesIndex]]) +
+ 						scale_shape_manual(values = c(1:length(overallColor[[imagesIndex]]))) +
+ 						theme_bw() +
+ 						opts(axis.title.x = theme_text(face="bold", size=11),
+ 								axis.title.y = theme_text(face="bold", size=11, angle=90),
+ 								#panel.grid.major = theme_blank(), # switch off major gridlines
+ 								#panel.grid.minor = theme_blank(), # switch off minor gridlines
+ 								legend.position = "right", # manually position the legend (numbers being from 0,0 at bottom left of whole plot to 1,1 at top right)
+ 								legend.title = theme_blank(), # switch off the legend title						
+ 								#legend.key.size = unit(1.5, "lines"),
+ 								legend.key = theme_blank(), # switch off the rectangle around symbols in the legend
+ 								panel.border = theme_rect(colour="Grey", size=0.1)
+ 						)
+ 				
+ 				if(length(overallColor[[imagesIndex]]) > 25) {
+ 					plot <- plot + opts(legend.text = theme_text(size=6),
+ 										legend.key.size = unit(0.7, "lines")
+ 										)
+ 				} else {
+ 					plot <- plot + opts(legend.text = theme_text(size=11))
+ 				}
+ 								
+ 	#			print(plot)
+ 		
+ 		##!# nicht löschen, ist die interpolation (alles in dieser if Abfrage mit #!# makiert)
+ 		##!#				newCoords <- seq(min(overallList$filterXaxis,na.rm=TRUE),max(overallList$filterXaxis,na.rm=TRUE),1)
+ 		##!#				newValue <- approx(overallList$filterXaxis, overallList$overallResult[y,],xout=newCoords,method="linear")
+ 		##!#				
+ 		##!#				naVector <- is.na(overallList$overallResult[y,])
+ 		##!#				overallResultWithNaValues <- overallList$overallResult[y,]
+ 		##!#				overallList$overallResult[y,naVector] <- newValue$y[overallList$filterXaxis[naVector]]
+ 		#				
+ 		#				if (firstPlot) {
+ 		#					firstPlot <- FALSE
+ 		##!#				plot(overallList$filterXaxis, overallList$overallResult[y,], main="", type="c", xlab=overallList$xAxisName, col=overallList$color[y], ylab=overallList$yAxisName, pch=y, lty=1, lwd=3, ylim=c(min(overallList$overallResult,na.rm=TRUE),max(overallList$overallResult,na.rm=TRUE)))
+ 		#					plot(overallList$filterXaxis, overallList$overallResult[y,], main="", type="b", xlab=overallList$xAxisName, col=overallList$color[y], ylab=overallList$yAxisName, pch=y, lty=1, lwd=3, ylim=c(min(overallList$overallResult,na.rm=TRUE),max(overallList$overallResult,na.rm=TRUE)))
+ 		#				} else {
+ 		##!#				points(overallList$filterXaxis, overallList$overallResult[y,], type="c", col=overallList$color[y], pch=y, lty=1, lwd=3 )	
+ 		#					points(overallList$filterXaxis, overallList$overallResult[y,], type="b", col=overallList$color[y], pch=y, lty=1, lwd=3 )
+ 		#				}
+ 		##!#				points(overallList$filterXaxis, overallResultWithNaValues, type="p", col=overallList$color[y], pch=y, lty=1, lwd=3 )
+ 		#			} 
+ 		
+ 				if(h==1) {
+ 					saveImageFile(overallList, plot, overallSaveName[[imagesIndex]], diagramTypSave)
+ 				} else {
+ 					print(plot)
+ 				}
+ 				if(overallList$appendix) {
+ 					writeLatexFile("appendixImage", overallSaveName[[imagesIndex]], diagramTypSave)
+ 				}
+ 			
+ 			} else {
+ 				print("... only one column has values, so it will be plot as barplot!")
+ 		
+ 				day <- overallResult$xAxis[!is.na(overallResult$mean)][1]
+ 				overallList$xAxisName <- paste(overallList$xAxisName,day)
+ 				#overallList$overallResult <- overallList$overallResult[!is.na(overallList$overallResult$mean),]
+ 				overallList <- makeBarDiagram(h, overallResult, overallDescriptor, overallColor, overallDesName, overallSaveName, overallList, TRUE, diagramTypSave)
+ 			}
+ 		}
+ 	}
+ 	#return(overallList)
+ }
> 
> getColor <- function(overallColorIndex, overallResult) {
+ 	input <- as.vector(unique(overallResult$hist))
+ 	
+ 	color <- vector()
+ 	for(n in input) {
+ 		color <- c(color, overallColorIndex[[n]])
+ 	}
+ 	return(color)
+ }
> 
> 
> plotStackedImage <- function(h, overallList, overallResult, title = "", makeOverallImage = FALSE, legende=TRUE, minor_breaks=TRUE, overallColor, overallDesName, imagesIndex, overallSaveName) {
+ 	overallList$debug %debug% "plotStackedImage()"	
+ 		
+ 	if(length(overallResult[,1]) > 0) {
+ 
+ 		if(length(overallList$stackedBarOptions$typOfGeomBar) == 0) {
+ 			overallList$stackedBarOptions$typOfGeomBar <- c("fill")
+ 		}
+ 		
+ 		for(positionTyp in overallList$stackedBarOptions$typOfGeomBar) {
+ 		
+ 		
+ 			plot <- ggplot(overallResult, aes(xAxis, values, fill=hist)) + 
+ 					geom_bar(stat="identity", position = positionTyp) +
+ 				 	ylab(overallDesName[[imagesIndex]]) 
+ 					#coord_cartesian(ylim=c(0,1)) +
+ 				
+ 			if(minor_breaks) {
+ 				plot <- plot + scale_x_continuous(name=overallList$xAxisName, minor_breaks = min(overallResult$xAxis):max(overallResult$xAxis))
+ 			} else {
+ 				plot <- plot + xlab(overallList$xAxisName)
+ 			}
+ 					
+ 			plot <- plot +		
+ 					scale_fill_manual(values = getColor(overallColor[[imagesIndex]], overallResult), name="") +
+ 					theme_bw() +
+ 					opts(axis.title.x = theme_text(face="bold", size=11),
+ 							axis.title.y = theme_text(face="bold", size=11, angle=90),
+ 							plot.margin = unit(c(0.1, 0.1, 0, 0), "cm"),
+ 							#panel.background = theme_rect(linetype = "dotted"),
+ 							panel.border = theme_rect(colour="Grey", size=0.1),
+ 							strip.background = theme_rect(colour=NA)
+ 	#						plot.title = theme_text(size=10),
+ 	#						plot.title = theme_rect(colour="Pink", size=0.1),
+ 					) 
+ 			
+ 			if(!legende) {
+ 				plot <- plot + opts(legend.position="none")
+ 			} else {
+ 				plot <- plot + opts(legend.position="right", 
+ 									legend.title = theme_blank(),
+ 									legend.text = theme_text(size=11),
+ 									legend.key = theme_blank())
+ 			}
+ 			
+ 			if(title != "") {
+ 				plot <- plot + opts(title = title)
+ 			}
+ 			
+ 			if(!minor_breaks) {
+ 				plot <- plot + opts(panel.grid.minor = theme_blank())
+ 			}
+ 			
+ 			if(makeOverallImage) {
+ 				#plot <- plot + facet_wrap(~ name, drop=TRUE)
+ 				plot <- plot + facet_wrap(~ name)
+ 			}
+ 			
+ 			if (h==1) {
+ 				saveImageFile(overallList, plot, overallSaveName[[imagesIndex]], paste("overall", title, positionTyp, sep=""))
+ 				if(makeOverallImage) {
+ 					writeLatexFile(paste(overallSaveName[[imagesIndex]], "stackedOverallImage", sep=""), paste(overallSaveName[[imagesIndex]],"overall",title, positionTyp, sep=""))	
+ 				} else {
+ 					writeLatexFile(overallSaveName[[imagesIndex]], paste(overallSaveName[[imagesIndex]],"overall",title,positionTyp, sep=""))	
+ 				}
+ 			} else {
+ 				print(plot)
+ 			}
+ 		}
+ 	}
+ }
> 
> PreWorkForMakeBigOverallImage <- function(h, overallResult, overallDescriptor, overallColor, overallDesName, overallSaveName, overallList, imagesIndex) {
+ 	overallList$debug %debug% "PreWorkForMakeBigOverallImage()"	
+ 	
+ 	groupBy <- groupByFunction(list(overallList$treatment, overallList$secondTreatment))
+ 	if(length(groupBy) == 0 || length(groupBy) == 1) {
+ 		plotStackedImage(h = h, overallList = overallList, overallResult = overallResult, makeOverallImage = TRUE, legende=TRUE, minor_breaks=FALSE, overallColor = overallColor, overallDesName = overallDesName, imagesIndex= imagesIndex, overallSaveName =overallSaveName)
+ 		
+ 	} else {
+ 		for(value in overallList$filterSecondTreatment) {
+ 			title <- value
+ 			plottedName <- overallList$filterTreatment %contactAllWithAll% value
+ 			booleanVector <- getBooleanVectorForFilterValues(overallResult, list(name = plottedName))
+ 			plotThisValues <- overallResult[booleanVector,]
+ 			plotThisValues <- reNameColumn(plotThisValues, "name", "primaerTreatment")
+ 			plotStackedImage(h, overallList, plotThisValues, title = title, makeOverallImage = TRUE,  legende=TRUE, minor_breaks=FALSE, overallColor = overallColor, overallDesName = overallDesName, imagesIndex=imagesIndex, overallSaveName=overallSaveName)
+ 		}	 
+ 	}
+ }
> 
> PreWorkForMakeNormalImages <- function(h, overallList) {
+ 	overallList$debug %debug% "PreWorkForMakeNormalImages()"
+ 	stackedImages <- unlist(unique(overallList$overallResult["name"]))
+ 	
+ 	for(o in stackedImages) {
+ 		overallList$debug %debug% paste("makeBoxplotStackedDiagram with the descriptor: ",overallList$saveName,o)
+ 		plotThisValues <- overallList$overallResult[overallList$overallResult["name"] == o,]
+ 		plotStackedImage(h, overallList, plotThisValues, o, FALSE, TRUE, TRUE)
+ 	}
+ }
> 
> 
> makeBoxplotStackedDiagram <- function(h, overallResult, overallDescriptor, overallColor, overallDesName, overallSaveName, overallList) {
+ 	########################		
+ #	h=h
+ #	overallResult=overallList$overallResult_boxStackDes
+ #	overallDescriptor=overallList$boxStackDes
+ #	overallColor=overallList$color_boxStack
+ #	overallDesName=overallList$boxStackDesName
+ #	overallList=overallList
+ #	overallSaveName = overallList$saveName_nBoxDes
+ 	#########################
+ 
+ 
+ 	
+ 	
+ 	overallList$debug %debug% "makeBoxplotStackedDiagram()"
+ 	print("... stacked Bockplot")
+ 	overallResult[is.na(overallResult)] <- 0
+ 	tempOverallResult <- overallResult
+ 	
+ 	for(imagesIndex in names(overallDescriptor)) {
+ 		print(paste("... image",imagesIndex))
+ 		overallResult <- reduceWholeOverallResultToOneValue(tempOverallResult, imagesIndex, overallList$debug, "boxplotstacked")
+ 	
+ 		PreWorkForMakeBigOverallImage(h, overallResult, overallDescriptor, overallColor, overallDesName, overallSaveName, overallList, imagesIndex)
+ 		#PreWorkForMakeNormalImages(h,overallList)
+ 	}
+ 	#return(overallList)
+ }	
> 
> makeBarDiagram <- function(h, overallResult, overallDescriptor, overallColor, overallDesName, overallSaveName, overallList, isOnlyOneValue = FALSE, diagramTyp="barplot") {
+ 	########################		
+ #	h=h 
+ #	overallResult = overallList$overallResult_nBoxDes
+ #	overallColor=overallList$color_nBox
+ ##	debug = overallList$debug
+ #	overallDescriptor = overallList$nBoxDes
+ #	overallDesName = overallList$nBoxDesName
+ #	isOnlyOneValue = FALSE
+ 	#########################
+ 
+ 	overallList$debug %debug% "makeBarDiagram()"
+ 
+ 	tempOverallResult <-  overallResult
+ 	
+ 	for(imagesIndex in names(overallDescriptor)) {
+ 		if(!is.na(overallDescriptor[[imagesIndex]])) {
+ 			overallResult <- reduceWholeOverallResultToOneValue(tempOverallResult, imagesIndex, overallList$debug, "barplot")
+ 			overallResult <- overallResult[!is.na(overallResult$mean),]
+ 			
+ 			if(isOnlyOneValue) {
+ 				myPlot <- ggplot(data=overallResult, aes(x=name, y=mean))
+ 			} else {
+ 				myPlot <- ggplot(data=overallResult, aes(x=xAxis, y=mean))
+ 			}
+ 			
+ 			myPlot <- myPlot + 						
+ 					geom_bar(stat="identity", aes(fill=name), colour="Grey", size=0.1) +
+ 					geom_errorbar(aes(ymax=mean+se, ymin=mean-se), width=0.2, colour="black")+
+ 					#geom_errorbar(aes(ymax=mean+se, ymin=mean-se), width=0.5, colour="Pink")+
+ 					ylab(overallDesName[[imagesIndex]]) +
+ 					coord_cartesian(ylim=c(0,max(overallResult$mean + overallResult$se + 10,na.rm=TRUE))) +
+ 					xlab(overallList$xAxisName) +
+ 					scale_fill_manual(values = overallColor[[imagesIndex]]) +
+ 					theme_bw() +
+ 					opts(legend.position="none",
+ 							plot.margin = unit(c(0.1, 0.1, 0, 0), "cm"),
+ 							axis.title.x = theme_text(face="bold", size=11),
+ 							axis.title.y = theme_text(face="bold", size=11, angle=90),
+ 							panel.grid.minor = theme_blank(),
+ 							panel.border = theme_rect(colour="Grey", size=0.1)
+ 					)
+ 			
+ 			if(length(overallColor[[imagesIndex]]) > 10) {
+ 				myPlot <- myPlot + opts(axis.text.x = theme_text(size=6, angle=90))
+ 			}
+ 			print(myPlot)
+ 			
+ 			if (h==1) {
+ 				saveImageFile(overallList, myPlot, overallSaveName[[imagesIndex]], diagramTyp)
+ 			} else {
+ 				print(myPlot)
+ 			}
+ 			if(overallList$appendix) {
+ 				writeLatexFile("appendixImage", overallSaveName[[imagesIndex]], diagramTyp)
+ 			}
+ 		}
+ 	}
+ 	#return(overallList)
+ }
> 
> ##Problem: der median wird nicht angezeigt!
> makeBoxplotDiagram <- function(h, overallResult, overallDescriptor, overallColor, overallDesName, overallSaveName, overallList, diagramTypSave="boxplot") {
+ 	########################		
+ #	h=h 
+ #	overallResult = overallList$overallResult_boxDes
+ #	overallColor=overallList$color_box
+ ##	debug = overallList$debug
+ #	overallDescriptor = overallList$boxDes
+ #	overallDesName = overallList$boxDesName
+ 	#########################
+ 	
+ 	overallList$debug %debug% "makeBoxplotDiagram()"
+ 	#overallList$overallResult <- overallList$overallResult[!is.na(overallList$overallResult$mean),]
+ 	print("... Boxplot")
+ 	
+ 	tempOverallResult <-  overallResult
+ 	
+ 	for(imagesIndex in names(overallDescriptor)) {
+ 		if(!is.na(overallDescriptor[[imagesIndex]])) {
+ 			print(paste("... image",imagesIndex))
+ 			overallResult <- reduceWholeOverallResultToOneValue(tempOverallResult, imagesIndex, overallList$debug, "boxplot")
+ 			
+ 			
+ 			#myPlot <- ggplot(overallList$overallResult, aes(factor(name), value, fill=name, colour=name)) + 
+ 			myPlot <- ggplot(overallResult, aes(factor(name), value, fill=name)) +
+ 					geom_boxplot() +
+ 					ylab(overallDesName[[imagesIndex]]) +
+ 					#coord_cartesian(ylim=c(0,max(overallList$overallResult$mean + overallList$overallResult$se + 10,na.rm=TRUE))) +
+ 					xlab(overallList$xAxisName) +
+ 					scale_fill_manual(values = overallColor[[imagesIndex]]) +
+ 					#stat_summary(fun.data = f, geom = "crossbar", height = 0.1,	colour = NA, fill = "skyblue", width = 0.8, alpha = 0.5) +
+ 					theme_bw() +
+ 					opts(legend.position="none",
+ 							plot.margin = unit(c(0.1, 0.1, 0, 0), "cm"),
+ 							axis.title.x = theme_text(face="bold", size=11),
+ 							axis.title.y = theme_text(face="bold", size=11, angle=90),
+ 							panel.grid.minor = theme_blank(),
+ 							panel.border = theme_rect(colour="Grey", size=0.1)
+ 					)
+ 		
+ 			if(length(overallColor[[imagesIndex]]) > 10) {
+ 				myPlot <- myPlot + opts(axis.text.x = theme_text(size=6, angle=90))
+ 			}	
+ 			
+ 		#	print(myPlot)
+ 
+ 			if (h==1) {
+ 				saveImageFile(overallList, myPlot, overallSaveName[[imagesIndex]], diagramTypSave)
+ 			} else {
+ 				print(myPlot)
+ 			}
+ 			if(overallList$appendix) {
+ 				writeLatexFile("appendixImage", overallSaveName[[imagesIndex]], diagramTypSave)
+ 			}
+ 		}
+ 	}
+ 	#return(overallList)
+ }
> 
> makeDiagrams <- function(overallList) {
+ 	overallList$debug %debug% "makeDiagrams()"
+ 	durchlauf <- ifelse(overallList$showResultInR, 2, 1)
+ 	
+ 	for(h in 1:durchlauf) {
+ 
+ 		if(sum(!is.na(overallList$nBoxDes)) > 0) {
+ 			if(overallList$debug) {print("... nBoxplot")}	
+ 			makeLinearDiagram(h, overallList$overallResult_nBoxDes, overallList$nBoxDes, overallList$color_nBox, overallDesName=overallList$nBoxDesName, overallList$saveName_nBoxDes ,overallList)
+ 		} else {
+ 			print("... all in nBoxplot is 'NA'")
+ 		}
+ 		
+ 		if(sum(!is.na(overallList$boxDes)) > 0) {
+ 			if(overallList$debug) {print("... Boxplot")}
+ 			makeBoxplotDiagram(h, overallList$overallResult_boxDes, overallList$boxDes, overallList$color_box, overallDesName=overallList$boxDesName, overallList$saveName_boxDes, overallList)
+ 		} else {
+ 			print("... all in Boxplot is 'NA'")
+ 		}
+ 		
+ 		if(sum(!is.na(overallList$boxStackDes)) > 0) {
+ 			if(overallList$debug) {print("... stacked Boxplot")}
+ 			makeBoxplotStackedDiagram(h, overallList$overallResult_boxStackDes, overallList$boxStackDes, overallList$color_boxStack, overallDesName=overallList$boxStackDesName, overallList$saveName_boxStackDes, overallList)
+ 		} else {
+ 			print("... all in stacked Boxplot is 'NA'")
+ 		}
+ 		
+ 		if(FALSE) {	# falls auch mal barplots erstellt werden sollen (ausser wenn nur ein Tag vorhanden ist!)
+ 			if(overallList$debug) {print("... Barplot")}
+ 			makeBarDiagram(h, overallList$overallResult_nBoxDes, overallList$nBoxDes, overallList$color_nBox, overallDesName=overallList$nBoxDesName, overallList$saveName_nBoxDes, overallList)
+ 		}
+ 	}
+ }
> 
> #makeDiagrams <- function(overallList) {
> #	overallList$debug %debug% "makeDiagrams()"
> #	durchlauf <- ifelse(overallList$showResultInR, 2, 1)
> #	
> #	for(h in 1:durchlauf) {
> #						
> #		if (tolower(overallList$diagramTyp) == "boxplot") {
> #			overallList <- makeBoxplotDiagram(h, overallList)
> #			
> #		} else if (tolower(overallList$diagramTyp) == "boxplotstacked") {
> #			overallList <- makeBoxplotStackedDiagram(h, overallList)
> #			
> #		} else if(tolower(overallList$diagramTyp) == "nboxplot"){
> #			overallList <- makeLinearDiagram(h, overallList)
> #			
> #		}  else if (tolower(overallList$diagramTyp) == "barplot") {
> #			overallList <- makeBarDiagram(h, overallList)
> #		} else {
> #			print("Error - overallList$diagramTyp is undefined!")
> #		}
> #	}
> #}
> 
> checkIfAllNecessaryFilesAreThere <- function() {
+ 		print("... check if the noValues-Image is there")
+ 		file <- "noValues.pdf"
+ 		if(!file.exists(file)){
+ 			library("Cairo")
+ 			print(paste("... create defaultImage '",file,"'",sep=""))
+ 			Cairo(width=900, height=70,file=file,type="pdf",bg="transparent",units="px",dpi=90)
+ 			par(mar = c(0,0,0,0))
+ 			plot.new()
+ 			legend("left", "no values", col= c("black"), pch=1, bty="n")
+ 			dev.off()
+ 		}	
+ }
> 
> buildBlacklist <- function(workingDataSet, descriptorSet) {
+ 	
+ 	searchString <- ".histogram."
+ 	searchString <- paste(searchString,"mark",sep = "|")	
+ 	additionalDescriptors <- c(descriptorSet, "Day (Int)","Day","Time", "Plant ID", "vis.side", "fluo.side", "nir.side", "vis.top", "fluo.top", "nir.top")
+ 	
+ 	return(c(colnames(workingDataSet)[grep(searchString,colnames(workingDataSet), ignore.case = TRUE)], preprocessingOfValues(additionalDescriptors, TRUE)))
+ }
> 
> initRfunction <- function(DEBUG = FALSE){
+ 	
+ 	if(DEBUG) {
+ 		
+ 		options(error = quote({
+ 			#sink(file="error.txt", split = TRUE);
+ 			dump.frames();
+ 			print(attr(last.dump,"error.message"));
+ 			#x <- attr(last.dump,"error.message")
+ 			traceback();
+ 			#sink(file=NULL);		
+ 			#q()
+ 		}))
+ 	} else {	
+ 		options(error = NULL)
+ 	}
+ 	memory.limit(size=3500)
+ 
+ 	while(!is.null(dev.list())) {
+ 		dev.off()
+ 	}
+ }
> typOfStartOptions = "test"
> 	typOfStartOptions <- tolower(typOfStartOptions)
> 	
> 	args <- commandArgs(TRUE)
> 	print("#### Arguments")
[1] "#### Arguments"
> 	print(args)
character(0)
> 	print("####")
[1] "####"
> 	
> 	saveFormat <- "pdf"	
> 	dpi <- "150" ##90
> 	
> 	isGray <- FALSE
> 	showResultInR <- FALSE
> 	
> 	treatment <- "Treatment"
> 	filterTreatment <- "none"
> 	
> 	secondTreatment <- "none"
> 	filterSecondTreatment <- "none"
> 	
> 	xAxis <- "Day (Int)" 
> 	xAxisName <- "DAS"
> 	filterXaxis <- "none"
> 	
> #	diagramTypVector <- vector()
> 	descriptorSet <- vector()
> 	descriptorSetName <- vector()
> 	
> 	fileName <- "error"
> 
> 	appendix <- FALSE
> 	#appendix <- TRUE
> 	
> 	separation <- ";"
> #	if (length(args) < 1) {
> #		englischVersion <- FALSE
> #		#englischVersion <- TRUE
> #	} else {
> #		englischVersion <- TRUE
> #	}
> 
> 	if (typOfStartOptions == "all" | typOfStartOptions == "report" | typOfStartOptions == "allmanual") {
+ 
+ 		if (typOfStartOptions != "allmanual") {
+ 			fileName <- fileName %exists% args[1]
+ 		} else {
+ 			fileName <- "numeric_data.MaizeAnalysisAction_ 1116BA_new3.csv"
+ 			#fileName <- "report.csv" ## englischVersion <- TRUE setzen!!
+ 			#fileName <- "testDataset3.csv"
+ 		}
+ 		
+ 		if (fileName != "error") {
+ 			workingDataSet <- separation %getData% fileName
+ 			
+ 			if(workingDataSet != "error") {
+ 				#nboxplot
+ 				if (typOfStartOptions == "all") {
+ 					descriptorSet_nBoxplot <- colnames(workingDataSet)
+ 					descriptorSetName_nBoxplot <- descriptorSet
+ 					
+ 				} else { #Report	
+ 					descriptorSet_nBoxplot <- c("Weight A (g)","Weight B (g)","Water (weight-diff)","side.height.norm (mm)","side.width.norm (mm)","side.area.norm (mm^2)", "top.area.norm (mm^2)",
+ 							"side.fluo.intensity.chlorophyl.average (relative)","side.fluo.intensity.phenol.average (relative)",
+ 							"side.nir.intensity.average (relative)","side.leaf.count.median (leafs)","side.bloom.count (tassel)",
+ 							"side.leaf.length.sum.norm.max (mm)", "volume.fluo.iap","volume.iap (px^3)", "volume.iap_max", "volume.lt (px^3)",
+ 							"volume.iap.wue", "side.nir.wetness.plant_weight_drought_loss", "top.nir.wetness.plant_weight_drought_loss", "side.nir.wetness.av", "top.nir.wetness.av",
+ 							"side.area.relative", "side.height.norm.relative", "side.width.norm.relative", "top.area.relative", "side.area.relative", "volume.iap.relative",
+ 							"side.height (mm)","side.width (mm)","side.area (px)", "top.area (px)")
+ 				
+ 					descriptorSetName_nBoxplot <- c("weight before watering (g)","weight after watering (g)", "water weight (g)", "normalized height (mm)", "normalized width (mm)", "normalized side area (mm^2)", "normalized top area (mm^2)",
+ 							"chlorophyl intensity (relative intensity/pixel)", "fluorescence intensity (relative intensity/pixel)", "nir intensity (relative intensity/pixel)",
+ 							"number of leafs (leaf)", "number of tassels (tassel)", "length of leafs plus stem (mm)", "volume based on FLUO (IAP) (px^3)", "volume based on RGB (IAP) (px^3)", "volume based on max RGB-image (IAP) (px^3)", "volume based on RGB (LemnaTec) (px^3)",
+ 							"volume based water use efficiency", "weighted loss through drought stress (side)", "weighted loss through drought stress (top)", "Average wetness of side image", "Average wetness of top image",
+ 							"relative projected side area (%)", "relative plant height (%)", "relative plant width (%)", "relative projected top area (%)", "relative projected side area (%)", "relative volume (IAP based formular - RGB) (%)",
+ 							"height (px)", "width (px)", "side area (px)", "top area (px)")		
+ 				}
+ 	
+ 				nBoxOptions= NULL
+ 				#diagramTypVector <- rep.int("nboxplot", times=length(descriptorSetName))
+ 		
+ 		
+ 				#boxplot
+ 				descriptorSet_boxplot <- c("side.height.norm (mm)","side.width.norm (mm)","side.area.norm (mm^2)", "top.area.norm (mm^2)",
+ 						"volume.fluo.iap","volume.iap (px^3)", "volume.iap_max", "volume.lt (px^3)",
+ 						"side.height (mm)","side.width (mm)","side.area (px)", "top.area (px)")
+ 				
+ 				descriptorSetName_boxplot <- c("normalized height (mm)", "normalized width (mm)", "normalized side area (mm^2)", "normalized top area (mm^2)",
+ 						"volume based on FLUO (IAP) (px^3)", "volume based on RGB (IAP) (px^3)", "volume based on max RGB-image (IAP) (px^3)", "volume based on RGB (LemnaTec) (px^3)",
+ 						"height (px)", "width (px)", "side area (px)", "top area (px)")	
+ 				
+ 				boxOptions= NULL
+ 				#diagramTypVectorBox <- rep.int("boxplot", times=length(descriptorSetBox))
+ 				
+ 				#descriptorSet <- c(descriptorSet, descriptorSetBox)
+ 				#descriptorSetName <- c(descriptorSetName, descriptorSetNameBox)
+ 				#diagramTypVector <- c(diagramTypVector, diagramTypVectorBox)
+ 				
+ 				#boxplotStacked
+ 				descriptorSet_boxplotStacked <- c("side.nir.normalized.histogram.bin.1.0_25$side.nir.normalized.histogram.bin.2.25_51$side.nir.normalized.histogram.bin.3.51_76$side.nir.normalized.histogram.bin.4.76_102$side.nir.normalized.histogram.bin.5.102_127$side.nir.normalized.histogram.bin.6.127_153$side.nir.normalized.histogram.bin.7.153_178$side.nir.normalized.histogram.bin.8.178_204$side.nir.normalized.histogram.bin.9.204_229$side.nir.normalized.histogram.bin.10.229_255",
+ 								   				  "side.fluo.histogram.bin.1.0_25$side.fluo.histogram.bin.2.25_51$side.fluo.histogram.bin.3.51_76$side.fluo.histogram.bin.4.76_102$side.fluo.histogram.bin.5.102_127$side.fluo.histogram.bin.6.127_153$side.fluo.histogram.bin.7.153_178$side.fluo.histogram.bin.8.178_204$side.fluo.histogram.bin.9.204_229$side.fluo.histogram.bin.10.229_255",
+ 										  		  "top.nir.histogram.bin.1.0_25$top.nir.histogram.bin.2.25_51$top.nir.histogram.bin.3.51_76$top.nir.histogram.bin.4.76_102$top.nir.histogram.bin.5.102_127$top.nir.histogram.bin.6.127_153$top.nir.histogram.bin.7.153_178$top.nir.histogram.bin.8.178_204$top.nir.histogram.bin.9.204_229$top.nir.histogram.bin.10.229_255",
+ 												  "side.fluo.histogram.phenol.bin.1.0_25$side.fluo.histogram.phenol.bin.2.25_51$side.fluo.histogram.phenol.bin.3.51_76$side.fluo.histogram.phenol.bin.4.76_102$side.fluo.histogram.phenol.bin.5.102_127$side.fluo.histogram.phenol.bin.6.127_153$side.fluo.histogram.phenol.bin.7.153_178$side.fluo.histogram.phenol.bin.8.178_204$side.fluo.histogram.phenol.bin.9.204_229$side.fluo.histogram.phenol.bin.10.229_255",
+ 												  "side.fluo.histogram.ratio.bin.1.0_25$side.fluo.histogram.ratio.bin.2.25_51$side.fluo.histogram.ratio.bin.3.51_76$side.fluo.histogram.ratio.bin.4.76_102$side.fluo.histogram.ratio.bin.5.102_127$side.fluo.histogram.ratio.bin.6.127_153$side.fluo.histogram.ratio.bin.7.153_178$side.fluo.histogram.ratio.bin.8.178_204$side.fluo.histogram.ratio.bin.9.204_229$side.fluo.histogram.ratio.bin.10.229_255",
+ 												  "side.nir.normalized.histogram.bin.1.0_25$side.nir.normalized.histogram.bin.2.25_51$side.nir.normalized.histogram.bin.3.51_76$side.nir.normalized.histogram.bin.4.76_102$side.nir.normalized.histogram.bin.5.102_127$side.nir.normalized.histogram.bin.6.127_153$side.nir.normalized.histogram.bin.7.153_178$side.nir.normalized.histogram.bin.8.178_204$side.nir.normalized.histogram.bin.9.204_229$side.nir.normalized.histogram.bin.10.229_255",
+ 												  "side.fluo.normalized.histogram.bin.1.0_25$side.fluo.normalized.histogram.bin.2.25_51$side.fluo.normalized.histogram.bin.3.51_76$side.fluo.normalized.histogram.bin.4.76_102$side.fluo.normalized.histogram.bin.5.102_127$side.fluo.normalized.histogram.bin.6.127_153$side.fluo.normalized.histogram.bin.7.153_178$side.fluo.normalized.histogram.bin.8.178_204$side.fluo.normalized.histogram.bin.9.204_229$side.fluo.normalized.histogram.bin.10.229_255",
+ 												  "side.fluo.normalized.histogram.phenol.bin.1.0_25$side.fluo.normalized.histogram.phenol.bin.2.25_51$side.fluo.normalized.histogram.phenol.bin.3.51_76$side.fluo.normalized.histogram.phenol.bin.4.76_102$side.fluo.normalized.histogram.phenol.bin.5.102_127$side.fluo.normalized.histogram.phenol.bin.6.127_153$side.fluo.normalized.histogram.phenol.bin.7.153_178$side.fluo.normalized.histogram.phenol.bin.8.178_204$side.fluo.normalized.histogram.phenol.bin.9.204_229$side.fluo.normalized.histogram.phenol.bin.10.229_255",
+ 												  "side.fluo.normalized.histogram.ratio.bin.1.0_25$side.fluo.normalized.histogram.ratio.bin.2.25_51$side.fluo.normalized.histogram.ratio.bin.3.51_76$side.fluo.normalized.histogram.ratio.bin.4.76_102$side.fluo.normalized.histogram.ratio.bin.5.102_127$side.fluo.normalized.histogram.ratio.bin.6.127_153$side.fluo.normalized.histogram.ratio.bin.7.153_178$side.fluo.normalized.histogram.ratio.bin.8.178_204$side.fluo.normalized.histogram.ratio.bin.9.204_229$side.fluo.normalized.histogram.ratio.bin.10.229_255",
+ 												  "side.nir.histogram.phenol.bin.1.0_25$side.nir.histogram.phenol.bin.2.25_51$side.nir.histogram.phenol.bin.3.51_76$side.nir.histogram.phenol.bin.4.76_102$side.nir.histogram.phenol.bin.5.102_127$side.nir.histogram.phenol.bin.6.127_153$side.nir.histogram.phenol.bin.7.153_178$side.nir.histogram.phenol.bin.8.178_204$side.nir.histogram.phenol.bin.9.204_229$side.nir.histogram.phenol.bin.10.229_255",
+ 												  "side.nir.histogram.ratio.bin.1.0_25$side.nir.histogram.ratio.bin.2.25_51$side.nir.histogram.ratio.bin.3.51_76$side.nir.histogram.ratio.bin.4.76_102$side.nir.histogram.ratio.bin.5.102_127$side.nir.histogram.ratio.bin.6.127_153$side.nir.histogram.ratio.bin.7.153_178$side.nir.histogram.ratio.bin.8.178_204$side.nir.histogram.ratio.bin.9.204_229$side.nir.histogram.ratio.bin.10.229_255",
+ 												  "side.vis.hue.histogram.ratio.bin.1.0_25$side.vis.hue.histogram.ratio.nir.2.25_51$side.vis.hue.histogram.ratio.bin.3.51_76$side.vis.hue.histogram.ratio.bin.4.76_102$side.vis.hue.histogram.ratio.bin.5.102_127$side.vis.hue.histogram.ratio.bin.6.127_153$side.vis.hue.histogram.ratio.bin.7.153_178$side.vis.hue.histogram.ratio.bin.8.178_204$side.vis.hue.histogram.ratio.bin.9.204_229$side.vis.hue.histogram.ratio.bin.10.229_255",
+ 												  "side.vis.normalized.histogram.ratio.bin.1.0_25$side.vis.normalized.histogram.ratio.bin.2.25_51$side.vis.normalized.histogram.ratio.bin.3.51_76$side.vis.normalized.histogram.ratio.bin.4.76_102$side.vis.normalized.histogram.ratio.bin.5.102_127$side.vis.normalized.histogram.ratio.bin.6.127_153$side.vis.normalized.histogram.ratio.bin.7.153_178$side.vis.normalized.histogram.ratio.bin.8.178_204$side.vis.normalized.histogram.ratio.bin.9.204_229$side.vis.normalized.histogram.ratio.bin.10.229_255",
+ 												  "top.fluo.histogram.bin.1.0_25$top.fluo.histogram.bin.2.25_51$top.fluo.histogram.bin.3.51_76$top.fluo.histogram.bin.4.76_102$top.fluo.histogram.bin.5.102_127$top.fluo.histogram.bin.6.127_153$top.fluo.histogram.bin.7.153_178$top.fluo.histogram.bin.8.178_204$top.fluo.histogram.bin.9.204_229$top.fluo.histogram.bin.10.229_255",
+ 												  "top.fluo.histogram.phenol.bin.1.0_25$top.fluo.histogram.phenol.bin.2.25_51$top.fluo.histogram.phenol.bin.3.51_76$top.fluo.histogram.phenol.bin.4.76_102$top.fluo.histogram.phenol.bin.5.102_127$top.fluo.histogram.phenol.bin.6.127_153$top.fluo.histogram.phenol.bin.7.153_178$top.fluo.histogram.phenol.bin.8.178_204$top.fluo.histogram.phenol.bin.9.204_229$top.fluo.histogram.phenol.bin.10.229_255",
+ 												  "top.fluo.histogram.ratio.bin.1.0_25$top.fluo.histogram.ratio.bin.2.25_51$top.fluo.histogram.ratio.bin.3.51_76$top.fluo.histogram.ratio.bin.4.76_102$top.fluo.histogram.ratio.bin.5.102_127$top.fluo.histogram.ratio.bin.6.127_153$top.fluo.histogram.ratio.bin.7.153_178$top.fluo.histogram.ratio.bin.8.178_204$top.fluo.histogram.ratio.bin.9.204_229$top.fluo.histogram.ratio.bin.10.229_255",
+ 												  "top.nir.histogram.bin.1.0_25$top.nir.histogram.bin.2.25_51$top.nir.histogram.bin.3.51_76$top.nir.histogram.bin.4.76_102$top.nir.histogram.bin.5.102_127$top.nir.histogram.bin.6.127_153$top.nir.histogram.bin.7.153_178$top.nir.histogram.bin.8.178_204$top.nir.histogram.bin.9.204_229$top.nir.histogram.bin.10.229_255",
+ 												  "top.nir.histogram.phenol.bin.1.0_25$top.nir.histogram.phenol.bin.2.25_51$top.nir.histogram.phenol.bin.3.51_76$top.nir.histogram.phenol.bin.4.76_102$top.nir.histogram.phenol.bin.5.102_127$top.nir.histogram.phenol.bin.6.127_153$top.nir.histogram.phenol.bin.7.153_178$top.nir.histogram.phenol.bin.8.178_204$top.nir.histogram.phenol.bin.9.204_229$top.nir.histogram.phenol.bin.10.229_255",
+ 												  "top.nir.histogram.ratio.bin.1.0_25$top.nir.histogram.ratio.bin.2.25_51$top.nir.histogram.ratio.bin.3.51_76$top.nir.histogram.ratio.bin.4.76_102$top.nir.histogram.ratio.bin.5.102_127$top.nir.histogram.ratio.bin.6.127_153$top.nir.histogram.ratio.bin.7.153_178$top.nir.histogram.ratio.bin.8.178_204$top.nir.histogram.ratio.bin.9.204_229$top.nir.histogram.ratio.bin.10.229_255",
+ 												  "top.vis.hue.histogram.ratio.bin.1.0_25$top.vis.hue.histogram.ratio.bin.2.25_51$top.vis.hue.histogram.ratio.bin.3.51_76$top.vis.hue.histogram.ratio.bin.4.76_102$top.vis.hue.histogram.ratio.bin.5.102_127$top.vis.hue.histogram.ratio.bin.6.127_153$top.vis.hue.histogram.ratio.bin.7.153_178$top.vis.hue.histogram.ratio.bin.8.178_204$top.vis.hue.histogram.ratio.bin.9.204_229$top.vis.hue.histogram.ratio.bin.10.229_255")
+ 												  
+ 										  
+ 										  
+ 										  
+ 				descriptorSetName_boxplotStacked <- c("NIR side (%)", "red side fluorescence histogram (%)", "NIR top (%)", "yellow side fluorescence histogram (%)", "fluo side ratio histogramm (%)",
+ 													  "NIR side normalized (%)", "red side normalized fluo histogramm (%)", "yellow side normalized fluo histogramm (%)", "fluo side normalized ratio histogramm (%)",
+ 													  "NIR side phenol (%)", "NIR side ratio histogramm (%)", "VIS HUE side ratio histogramm (%)", "VIS side normalized ratio histogramm (%)",
+ 													  "red top fluorescence histogram (%)", "yellow top fluorescence histogram (%)","fluo top ratio histogramm (%)",
+ 													  "NIR top (%)", "NIR top phenol histogram (%)","NIR top ratio histogramm (%)",
+ 													  "VIS HUE top ratio histogramm (%)")
+ 											  
+ 				stackedBarOptions = list(typOfGeomBar=c("fill", "stack", "dodge"))
+ 				#diagramTypVector <- c(diagramTypVector, "boxplotStacked", "boxplotStacked")
+ 				
+ 				appendix <- appendix %exists% args[3]
+ 				
+ 				if(appendix) {
+ 					blacklist <- buildBlacklist(workingDataSet, descriptorSet)
+ 					descriptorSetAppendix <- colnames(workingDataSet[!as.data.frame(sapply(colnames(workingDataSet),'%in%', blacklist))[,1]])
+ 					descriptorSetNameAppendix <- descriptorSetAppendix
+ 					#diagramTypVectorAppendix <- rep.int("nboxplot", times=length(descriptorSetNameAppendix))
+ 				}
+ 			
+ 				saveFormat <- saveFormat %exists% args[2]
+ 							
+ 				listOfTreatAndFilterTreat <- checkOfTreatments(args, treatment, filterTreatment, secondTreatment, filterSecondTreatment, workingDataSet, debug)
+ 				treatment <- listOfTreatAndFilterTreat[[1]][[1]]
+ 				secondTreatment <- listOfTreatAndFilterTreat[[1]][[2]]
+ 				filterTreatment <- listOfTreatAndFilterTreat[[2]][[1]]
+ 				filterSecondTreatment <- listOfTreatAndFilterTreat[[2]][[2]]
+ 			} else {
+ 				fileName = "error"
+ 			}
+ 		}
+ 		
+ 	} else if (typOfStartOptions == "test"){
+ 		
+ 		
+ 		#fileName <- "1107BA_Corn_new2.csv"
+ 			
+ 		#workingDataSet <- read.csv2(fileName, header=TRUE, sep=";", fileEncoding="ISO-8859-1", encoding="UTF-8")                   
+ 		#descriptorSet <- c("side.nir.intensity.average.norm","side.nir.intensity.average","side.hull.area.norm","side.height.norm","Gewicht.B","water.consumption")                   
+ 		#descriptorSetName <- c("nir intensity (rel. intensity/px)","nir intensity (rel. intensity/px)","convex hull area (mm^2)","height (mm)","target weight (g)","water consumption")
+ 			
+ 		#descriptorSet <- c("side.nir.intensity.average.norm","Gewicht.B")                   
+ 		#descriptorSetName <- c("nir intensity (rel. intensity/px)","target weight (g)")
+ 				
+ 		#descriptorSet <- c("digital.biomass.unnormal","digital.biomass.normal","mark3.y")                   
+ 		#descriptorSetName <- c("digital biomass (mm^3)","digital biomass (mm^3)","mark (% from image height)")
+ 			
+ 		#descriptorSet <- c("digital.biomass.keygene.norm","side.area","top.area")                   
+ 		#descriptorSetName <- c("digital biomass (mm^3)","test1", "test2")
+ 			
+ #		descriptorSet <- c("side.nir.normalized.histogram.bin.1.0_25$side.nir.normalized.histogram.bin.2.25_51$side.nir.normalized.histogram.bin.3.51_76$side.nir.normalized.histogram.bin.4.76_102$side.nir.normalized.histogram.bin.5.102_127$side.nir.normalized.histogram.bin.6.127_153$side.nir.normalized.histogram.bin.7.153_178$side.nir.normalized.histogram.bin.8.178_204$side.nir.normalized.histogram.bin.9.204_229$side.nir.normalized.histogram.bin.10.229_255",
+ #					"side.fluo.normalized.histogram.bin.1.0_25$side.fluo.normalized.histogram.bin.2.25_51$side.fluo.normalized.histogram.bin.3.51_76$side.fluo.normalized.histogram.bin.4.76_102$side.fluo.normalized.histogram.bin.5.102_127$side.fluo.normalized.histogram.bin.6.127_153$side.fluo.normalized.histogram.bin.7.153_178$side.fluo.normalized.histogram.bin.8.178_204$side.fluo.normalized.histogram.bin.9.204_229$side.fluo.normalized.histogram.bin.10.229_255")
+ #		descriptorSetName <- c("NIR absorption class (%)", "chlorophyll fluorescence histogram (%)")
+ 			
+ #		descriptorSet <- c("side.nir.normalized.histogram.bin.1.0_25$side.nir.normalized.histogram.bin.2.25_51$side.nir.normalized.histogram.bin.3.51_76$side.nir.normalized.histogram.bin.4.76_102$side.nir.normalized.histogram.bin.5.102_127$side.nir.normalized.histogram.bin.6.127_153$side.nir.normalized.histogram.bin.7.153_178$side.nir.normalized.histogram.bin.8.178_204$side.nir.normalized.histogram.bin.9.204_229$side.nir.normalized.histogram.bin.10.229_255")
+ #		descriptorSetName <- c("NIR absorption class (%)")
+ 			
+ 		#descriptorSet <- c("Plant ID$Treatment$Hallo$Wert1$Repl ID")
+ 		#descriptorSetName <- c("VariableMix")
+ 	
+ #		descriptorSet <- c("side.fluo.normalized.histogram.bin.1.0_25$side.fluo.normalized.histogram.bin.2.25_51$side.fluo.normalized.histogram.bin.3.51_76$side.fluo.normalized.histogram.bin.4.76_102$side.fluo.normalized.histogram.bin.5.102_127$side.fluo.normalized.histogram.bin.6.127_153$side.fluo.normalized.histogram.bin.7.153_178$side.fluo.normalized.histogram.bin.8.178_204$side.fluo.normalized.histogram.bin.9.204_229$side.fluo.normalized.histogram.bin.10.229_255")
+ #		#descriptorSet <- c("side.fluo.normalized.histogram.bin.2.25_51$side.fluo.normalized.histogram.bin.1.0_25$side.fluo.normalized.histogram.bin.3.51_76$side.fluo.normalized.histogram.bin.4.76_102$side.fluo.normalized.histogram.bin.5.102_127$side.fluo.normalized.histogram.bin.6.127_153$side.fluo.normalized.histogram.bin.7.153_178$side.fluo.normalized.histogram.bin.8.178_204$side.fluo.normalized.histogram.bin.9.204_229$side.fluo.normalized.histogram.bin.10.229_255")
+ #		descriptorSetName <- c("red fluorescence histogram (%)")
+ 	
+ 	
+ 		#descriptorSet <- c("Weight B (g)","side.height.norm (mm)","side.width.norm (mm)","side.area.norm (mm^2)",
+ 		#		"side.fluo.intensity.chlorophyl.average (relative)","side.fluo.intensity.phenol.average (relative)",
+ 		#		"side.nir.intensity.average (relative)",
+ 		#		"side.leaf.count.median (leafs)","side.bloom.count (tassel)","side.leaf.length.sum.norm.max (mm)")
+ 			
+ 		# "digital biomass IAP (pixel^3)","digital biomass KeyGene (pixel^3)", 
+ 		#descriptorSetName <- c("weight (g)","height (mm)", "width (mm)", "side area (pixel^2)",
+ 		#		"chlorophyl intensity (relative intensity/pixel)", "fluorescence intensity (relative intensity/pixel)", "nir intensity (relative intensity/pixel)",
+ 		#		"number of leafs (leaf)", "number of tassels (tassel)", "length of leafs plus stem (mm)")
+ 		
+ #		descriptorSet <- c("side.area (px)","side.area.norm (mm^2)")
+ #		descriptorSetName <- c("side area uncorrected (mm^2)", "side area corrected (mm^2)")
+ 		
+ 		#descriptorSet <- c("Hallo2")
+ 		#descriptorSetName <- c("Test")
+ 		
+ 		#descriptorSet <- colnames(workingDataSet)
+ 		#descriptorSetName <- colnames(workingDataSet)
+ 		
+ 		#treatment <- "none"
+ 		treatment <- "Genotype"
+ 		#treatment <- "Treatment"
+ 		#treatment <- "Condition"
+ 		#filterTreatment <- "dry$normal$wet"
+ 		#filterTreatment <- "dry$normal"
+ 		#filterTreatment <- "normal bewaessert$Trockentress"
+ 		#filterTreatment <- "ganz"
+ 		filterTreatment <- "none"
+ 		##filterTreatment <- "Deutschland$Spanien$Italien$China"
+ 		
+ 		#secondTreatment <- "Genotype"
+ 		secondTreatment <- "none"
+ 		#secondTreatment <- "Species"
+ 		#secondTreatment <- "Variety"
+ 		filterSecondTreatment <- "none"
+ 		
+ 		#secondTreatment <- "secondTreatment"
+ 		#filterSecondTreatment <- "a$c"
+ 		
+ 		###1116BA#########6 8 10 12 13 14 15 16 17 19 20 21 22 23 24 25 26 27 28 29 30 31 33 34 35 36 37 38 39 40
+ 		#filterXaxis <- c("6$8$10$12$13$14$15$16$20$21$22$23$26$27$28$29$30$31$33$34$35$36$37$38")
+ 		#filterXaxis <- c("6$8$13")
+ 		###1107BA#########2$4$6$8$10$12$13$15$16$21$22$25$27$29$30$31$33$35$36$37$39$41$42$43$45$47$49$50$51$55$57$59$61$63$64
+ 		#filterXaxis <- c("2$4$6$8$10$12$13$15$16$21$22$25$27$29$30$31$33$35$36$37$39$41$43$45$47$49$50$51$55$57$59$61$63$64")
+ 		#filterXaxis <- c("6$8$10")
+ 		filterXaxis <- "none"
+ 		#filterXaxis <- c("6$8$10$12$13$14$15$16$20$21$22$23$26$27$28$29$30$31$33$34$35$36$37$38")
+ 		
+ 		#treatment <- "Treatment"
+ 		##treatment <- "Variety"
+ 		#treatment <- "none"
+ 		
+ 		#diagramTyp="boxplotStacked"
+ 		#diagramTyp="nboxplot"
+ 		#diagramTyp="boxplot"
+ 		
+ 		bgColor <- "transparent"
+ 		isGray="FALSE"
+ 		#transparent <- "TRUE"
+ 		#legendUnderImage <- "TRUE"
+ 		#showResultInR <- TRUE
+ 		showResultInR <- FALSE
+ 		
+ 		#fileName <- "numeric_data.MaizeAnalysisAction_ 1116BA_new3.csv"
+ 		#fileName <- "testDataset2.csv"
+ 		fileName <- "report.csv"
+ 		#fileName <- "testDataset3.csv"
+ 		#englischVersion <- FALSE
+ 		#englischVersion <- TRUE
+ 		separation <- ";"
+ 		workingDataSet <- separation %getData% fileName
+ 		
+ 		#descriptor <- c("Hallo2")
+ 		#descriptor <- c("Plant ID","Treatment","Hallo","Wert1", "Repl ID")
+ 		#descriptor <- c("Repl ID")		
+ 		#descriptorSet <- c("nir.top")
+ 		#descriptorSet <- c("Plant ID")
+ 		#descriptorSet <- c("side.height.norm (mm)")
+ 
+ 		#descriptorSet <- c("side.area.norm (mm^2)")
+ 		#descriptorSetName <- c("Das ist ein Testname")
+ 		if(TRUE) {
+ 			
+ 			descriptorSet_nBoxplot <- c("Weight A (g)","Weight B (g)","Water (weight-diff)","side.height.norm (mm)","side.width.norm (mm)","side.area.norm (mm^2)", "top.area.norm (mm^2)",
+ 					"side.fluo.intensity.chlorophyl.average (relative)","side.fluo.intensity.phenol.average (relative)",
+ 					"side.nir.intensity.average (relative)","side.leaf.count.median (leafs)","side.bloom.count (tassel)",
+ 					"side.leaf.length.sum.norm.max (mm)", "volume.fluo.iap","volume.iap (px^3)", "volume.iap_max", "volume.lt (px^3)",
+ 					"volume.iap.wue", "side.nir.wetness.plant_weight_drought_loss", "top.nir.wetness.plant_weight_drought_loss", "side.nir.wetness.av", "top.nir.wetness.av",
+ 					"side.area.relative", "side.height.norm.relative", "side.width.norm.relative", "top.area.relative", "side.area.relative", "volume.iap.relative",
+ 					"side.height (mm)","side.width (mm)","side.area (px)", "top.area (px)")
+ 			
+ 			descriptorSetName_nBoxplot <- c("weight before watering (g)","weight after watering (g)", "water weight (g)", "normalized height (mm)", "normalized width (mm)", "normalized side area (mm^2)", "normalized top area (mm^2)",
+ 					"chlorophyl intensity (relative intensity/pixel)", "fluorescence intensity (relative intensity/pixel)", "nir intensity (relative intensity/pixel)",
+ 					"number of leafs (leaf)", "number of tassels (tassel)", "length of leafs plus stem (mm)", "volume based on FLUO (IAP) (px^3)", "volume based on RGB (IAP) (px^3)", "volume based on max RGB-image (IAP) (px^3)", "volume based on RGB (LemnaTec) (px^3)",
+ 					"volume based water use efficiency", "weighted loss through drought stress (side)", "weighted loss through drought stress (top)", "Average wetness of side image", "Average wetness of top image",
+ 					"relative projected side area (%)", "relative plant height (%)", "relative plant width (%)", "relative projected top area (%)", "relative projected side area (%)", "relative volume (IAP based formular - RGB) (%)",
+ 					"height (px)", "width (px)", "side area (px)", "top area (px)")		
+ 		
+ 		nBoxOptions= NULL
+ 		#diagramTypVector <- rep.int("nboxplot", times=length(descriptorSetName))
+ 		
+ 		
+ 		#boxplot
+ 		descriptorSet_boxplot <- c("side.height.norm (mm)","side.width.norm (mm)","side.area.norm (mm^2)", "top.area.norm (mm^2)",
+ 				"volume.fluo.iap","volume.iap (px^3)", "volume.iap_max", "volume.lt (px^3)",
+ 				"side.height (mm)","side.width (mm)","side.area (px)", "top.area (px)")
+ 		
+ 		descriptorSetName_boxplot <- c("normalized height (mm)", "normalized width (mm)", "normalized side area (mm^2)", "normalized top area (mm^2)",
+ 				"volume based on FLUO (IAP) (px^3)", "volume based on RGB (IAP) (px^3)", "volume based on max RGB-image (IAP) (px^3)", "volume based on RGB (LemnaTec) (px^3)",
+ 				"height (px)", "width (px)", "side area (px)", "top area (px)")	
+ 		
+ 		boxOptions= NULL
+ 		#diagramTypVectorBox <- rep.int("boxplot", times=length(descriptorSetBox))
+ 		
+ 		#descriptorSet <- c(descriptorSet, descriptorSetBox)
+ 		#descriptorSetName <- c(descriptorSetName, descriptorSetNameBox)
+ 		#diagramTypVector <- c(diagramTypVector, diagramTypVectorBox)
+ 		
+ 		#boxplotStacked
+ 		descriptorSet_boxplotStacked <- c("side.nir.normalized.histogram.bin.1.0_25$side.nir.normalized.histogram.bin.2.25_51$side.nir.normalized.histogram.bin.3.51_76$side.nir.normalized.histogram.bin.4.76_102$side.nir.normalized.histogram.bin.5.102_127$side.nir.normalized.histogram.bin.6.127_153$side.nir.normalized.histogram.bin.7.153_178$side.nir.normalized.histogram.bin.8.178_204$side.nir.normalized.histogram.bin.9.204_229$side.nir.normalized.histogram.bin.10.229_255",
+ 				"side.fluo.histogram.bin.1.0_25$side.fluo.histogram.bin.2.25_51$side.fluo.histogram.bin.3.51_76$side.fluo.histogram.bin.4.76_102$side.fluo.histogram.bin.5.102_127$side.fluo.histogram.bin.6.127_153$side.fluo.histogram.bin.7.153_178$side.fluo.histogram.bin.8.178_204$side.fluo.histogram.bin.9.204_229$side.fluo.histogram.bin.10.229_255",
+ 				"top.nir.histogram.bin.1.0_25$top.nir.histogram.bin.2.25_51$top.nir.histogram.bin.3.51_76$top.nir.histogram.bin.4.76_102$top.nir.histogram.bin.5.102_127$top.nir.histogram.bin.6.127_153$top.nir.histogram.bin.7.153_178$top.nir.histogram.bin.8.178_204$top.nir.histogram.bin.9.204_229$top.nir.histogram.bin.10.229_255",
+ 				"side.fluo.histogram.phenol.bin.1.0_25$side.fluo.histogram.phenol.bin.2.25_51$side.fluo.histogram.phenol.bin.3.51_76$side.fluo.histogram.phenol.bin.4.76_102$side.fluo.histogram.phenol.bin.5.102_127$side.fluo.histogram.phenol.bin.6.127_153$side.fluo.histogram.phenol.bin.7.153_178$side.fluo.histogram.phenol.bin.8.178_204$side.fluo.histogram.phenol.bin.9.204_229$side.fluo.histogram.phenol.bin.10.229_255",
+ 				"side.fluo.histogram.ratio.bin.1.0_25$side.fluo.histogram.ratio.bin.2.25_51$side.fluo.histogram.ratio.bin.3.51_76$side.fluo.histogram.ratio.bin.4.76_102$side.fluo.histogram.ratio.bin.5.102_127$side.fluo.histogram.ratio.bin.6.127_153$side.fluo.histogram.ratio.bin.7.153_178$side.fluo.histogram.ratio.bin.8.178_204$side.fluo.histogram.ratio.bin.9.204_229$side.fluo.histogram.ratio.bin.10.229_255",
+ 				"side.nir.normalized.histogram.bin.1.0_25$side.nir.normalized.histogram.bin.2.25_51$side.nir.normalized.histogram.bin.3.51_76$side.nir.normalized.histogram.bin.4.76_102$side.nir.normalized.histogram.bin.5.102_127$side.nir.normalized.histogram.bin.6.127_153$side.nir.normalized.histogram.bin.7.153_178$side.nir.normalized.histogram.bin.8.178_204$side.nir.normalized.histogram.bin.9.204_229$side.nir.normalized.histogram.bin.10.229_255",
+ 				"side.fluo.normalized.histogram.bin.1.0_25$side.fluo.normalized.histogram.bin.2.25_51$side.fluo.normalized.histogram.bin.3.51_76$side.fluo.normalized.histogram.bin.4.76_102$side.fluo.normalized.histogram.bin.5.102_127$side.fluo.normalized.histogram.bin.6.127_153$side.fluo.normalized.histogram.bin.7.153_178$side.fluo.normalized.histogram.bin.8.178_204$side.fluo.normalized.histogram.bin.9.204_229$side.fluo.normalized.histogram.bin.10.229_255",
+ 				"side.fluo.normalized.histogram.phenol.bin.1.0_25$side.fluo.normalized.histogram.phenol.bin.2.25_51$side.fluo.normalized.histogram.phenol.bin.3.51_76$side.fluo.normalized.histogram.phenol.bin.4.76_102$side.fluo.normalized.histogram.phenol.bin.5.102_127$side.fluo.normalized.histogram.phenol.bin.6.127_153$side.fluo.normalized.histogram.phenol.bin.7.153_178$side.fluo.normalized.histogram.phenol.bin.8.178_204$side.fluo.normalized.histogram.phenol.bin.9.204_229$side.fluo.normalized.histogram.phenol.bin.10.229_255",
+ 				"side.fluo.normalized.histogram.ratio.bin.1.0_25$side.fluo.normalized.histogram.ratio.bin.2.25_51$side.fluo.normalized.histogram.ratio.bin.3.51_76$side.fluo.normalized.histogram.ratio.bin.4.76_102$side.fluo.normalized.histogram.ratio.bin.5.102_127$side.fluo.normalized.histogram.ratio.bin.6.127_153$side.fluo.normalized.histogram.ratio.bin.7.153_178$side.fluo.normalized.histogram.ratio.bin.8.178_204$side.fluo.normalized.histogram.ratio.bin.9.204_229$side.fluo.normalized.histogram.ratio.bin.10.229_255",
+ 				"side.nir.histogram.phenol.bin.1.0_25$side.nir.histogram.phenol.bin.2.25_51$side.nir.histogram.phenol.bin.3.51_76$side.nir.histogram.phenol.bin.4.76_102$side.nir.histogram.phenol.bin.5.102_127$side.nir.histogram.phenol.bin.6.127_153$side.nir.histogram.phenol.bin.7.153_178$side.nir.histogram.phenol.bin.8.178_204$side.nir.histogram.phenol.bin.9.204_229$side.nir.histogram.phenol.bin.10.229_255",
+ 				"side.nir.histogram.ratio.bin.1.0_25$side.nir.histogram.ratio.bin.2.25_51$side.nir.histogram.ratio.bin.3.51_76$side.nir.histogram.ratio.bin.4.76_102$side.nir.histogram.ratio.bin.5.102_127$side.nir.histogram.ratio.bin.6.127_153$side.nir.histogram.ratio.bin.7.153_178$side.nir.histogram.ratio.bin.8.178_204$side.nir.histogram.ratio.bin.9.204_229$side.nir.histogram.ratio.bin.10.229_255",
+ 				"side.vis.hue.histogram.ratio.bin.1.0_25$side.vis.hue.histogram.ratio.nir.2.25_51$side.vis.hue.histogram.ratio.bin.3.51_76$side.vis.hue.histogram.ratio.bin.4.76_102$side.vis.hue.histogram.ratio.bin.5.102_127$side.vis.hue.histogram.ratio.bin.6.127_153$side.vis.hue.histogram.ratio.bin.7.153_178$side.vis.hue.histogram.ratio.bin.8.178_204$side.vis.hue.histogram.ratio.bin.9.204_229$side.vis.hue.histogram.ratio.bin.10.229_255",
+ 				"side.vis.normalized.histogram.ratio.bin.1.0_25$side.vis.normalized.histogram.ratio.bin.2.25_51$side.vis.normalized.histogram.ratio.bin.3.51_76$side.vis.normalized.histogram.ratio.bin.4.76_102$side.vis.normalized.histogram.ratio.bin.5.102_127$side.vis.normalized.histogram.ratio.bin.6.127_153$side.vis.normalized.histogram.ratio.bin.7.153_178$side.vis.normalized.histogram.ratio.bin.8.178_204$side.vis.normalized.histogram.ratio.bin.9.204_229$side.vis.normalized.histogram.ratio.bin.10.229_255",
+ 				"top.fluo.histogram.bin.1.0_25$top.fluo.histogram.bin.2.25_51$top.fluo.histogram.bin.3.51_76$top.fluo.histogram.bin.4.76_102$top.fluo.histogram.bin.5.102_127$top.fluo.histogram.bin.6.127_153$top.fluo.histogram.bin.7.153_178$top.fluo.histogram.bin.8.178_204$top.fluo.histogram.bin.9.204_229$top.fluo.histogram.bin.10.229_255",
+ 				"top.fluo.histogram.phenol.bin.1.0_25$top.fluo.histogram.phenol.bin.2.25_51$top.fluo.histogram.phenol.bin.3.51_76$top.fluo.histogram.phenol.bin.4.76_102$top.fluo.histogram.phenol.bin.5.102_127$top.fluo.histogram.phenol.bin.6.127_153$top.fluo.histogram.phenol.bin.7.153_178$top.fluo.histogram.phenol.bin.8.178_204$top.fluo.histogram.phenol.bin.9.204_229$top.fluo.histogram.phenol.bin.10.229_255",
+ 				"top.fluo.histogram.ratio.bin.1.0_25$top.fluo.histogram.ratio.bin.2.25_51$top.fluo.histogram.ratio.bin.3.51_76$top.fluo.histogram.ratio.bin.4.76_102$top.fluo.histogram.ratio.bin.5.102_127$top.fluo.histogram.ratio.bin.6.127_153$top.fluo.histogram.ratio.bin.7.153_178$top.fluo.histogram.ratio.bin.8.178_204$top.fluo.histogram.ratio.bin.9.204_229$top.fluo.histogram.ratio.bin.10.229_255",
+ 				"top.nir.histogram.bin.1.0_25$top.nir.histogram.bin.2.25_51$top.nir.histogram.bin.3.51_76$top.nir.histogram.bin.4.76_102$top.nir.histogram.bin.5.102_127$top.nir.histogram.bin.6.127_153$top.nir.histogram.bin.7.153_178$top.nir.histogram.bin.8.178_204$top.nir.histogram.bin.9.204_229$top.nir.histogram.bin.10.229_255",
+ 				"top.nir.histogram.phenol.bin.1.0_25$top.nir.histogram.phenol.bin.2.25_51$top.nir.histogram.phenol.bin.3.51_76$top.nir.histogram.phenol.bin.4.76_102$top.nir.histogram.phenol.bin.5.102_127$top.nir.histogram.phenol.bin.6.127_153$top.nir.histogram.phenol.bin.7.153_178$top.nir.histogram.phenol.bin.8.178_204$top.nir.histogram.phenol.bin.9.204_229$top.nir.histogram.phenol.bin.10.229_255",
+ 				"top.nir.histogram.ratio.bin.1.0_25$top.nir.histogram.ratio.bin.2.25_51$top.nir.histogram.ratio.bin.3.51_76$top.nir.histogram.ratio.bin.4.76_102$top.nir.histogram.ratio.bin.5.102_127$top.nir.histogram.ratio.bin.6.127_153$top.nir.histogram.ratio.bin.7.153_178$top.nir.histogram.ratio.bin.8.178_204$top.nir.histogram.ratio.bin.9.204_229$top.nir.histogram.ratio.bin.10.229_255",
+ 				"top.vis.hue.histogram.ratio.bin.1.0_25$top.vis.hue.histogram.ratio.bin.2.25_51$top.vis.hue.histogram.ratio.bin.3.51_76$top.vis.hue.histogram.ratio.bin.4.76_102$top.vis.hue.histogram.ratio.bin.5.102_127$top.vis.hue.histogram.ratio.bin.6.127_153$top.vis.hue.histogram.ratio.bin.7.153_178$top.vis.hue.histogram.ratio.bin.8.178_204$top.vis.hue.histogram.ratio.bin.9.204_229$top.vis.hue.histogram.ratio.bin.10.229_255")
+ 		
+ 		
+ 		
+ 		
+ 		descriptorSetName_boxplotStacked <- c("NIR side (%)", "red side fluorescence histogram (%)", "NIR top (%)", "yellow side fluorescence histogram (%)", "fluo side ratio histogramm (%)",
+ 				"NIR side normalized (%)", "red side normalized fluo histogramm (%)", "yellow side normalized fluo histogramm (%)", "fluo side normalized ratio histogramm (%)",
+ 				"NIR side phenol (%)", "NIR side ratio histogramm (%)", "VIS HUE side ratio histogramm (%)", "VIS side normalized ratio histogramm (%)",
+ 				"red top fluorescence histogram (%)", "yellow top fluorescence histogram (%)","fluo top ratio histogramm (%)",
+ 				"NIR top (%)", "NIR top phenol histogram (%)","NIR top ratio histogramm (%)",
+ 				"VIS HUE top ratio histogramm (%)")
+ 		
+ 		stackedBarOptions = list(typOfGeomBar=c("fill", "stack", "dodge"))
+ 		#diagramTypVector <- c(diagramTypVector, "boxplotStacked", "boxplotStacked")
+ 		} else {
+ 
+ 			descriptorSet_nBoxplot <- c("side.area.norm (mm^2)", "Weight A (g)","side.height.norm (mm)")
+ 			descriptorSetName_nBoxplot <- c("Area", "Gewicht", "Heigh")
+ 	
+ 			descriptorSet_boxplot <- c("side.area.norm (mm^2)", "side.height.norm (mm)")
+ 			descriptorSetName_boxplot <- c("Area Boxplot", "Heigh Boxplot")
+ 			
+ 	#		descriptorSet_boxplotStacked <- c("side.nir.normalized.histogram.bin.1.0_25$side.nir.normalized.histogram.bin.2.25_51$side.nir.normalized.histogram.bin.3.51_76$side.nir.normalized.histogram.bin.4.76_102$side.nir.normalized.histogram.bin.5.102_127$side.nir.normalized.histogram.bin.6.127_153$side.nir.normalized.histogram.bin.7.153_178$side.nir.normalized.histogram.bin.8.178_204$side.nir.normalized.histogram.bin.9.204_229$side.nir.normalized.histogram.bin.10.229_255",
+ 	#										  "side.fluo.normalized.histogram.bin.1.0_25$side.fluo.normalized.histogram.bin.2.25_51$side.fluo.normalized.histogram.bin.3.51_76$side.fluo.normalized.histogram.bin.4.76_102$side.fluo.normalized.histogram.bin.5.102_127$side.fluo.normalized.histogram.bin.6.127_153$side.fluo.normalized.histogram.bin.7.153_178$side.fluo.normalized.histogram.bin.8.178_204$side.fluo.normalized.histogram.bin.9.204_229$side.fluo.normalized.histogram.bin.10.229_255")
+ 			
+ 			descriptorSet_boxplotStacked <- c("side.fluo.normalized.histogram.bin.1.0_25$side.fluo.normalized.histogram.bin.2.25_51$side.fluo.normalized.histogram.bin.3.51_76$side.fluo.normalized.histogram.bin.4.76_102$side.fluo.normalized.histogram.bin.5.102_127$side.fluo.normalized.histogram.bin.6.127_153$side.fluo.normalized.histogram.bin.7.153_178$side.fluo.normalized.histogram.bin.8.178_204$side.fluo.normalized.histogram.bin.9.204_229$side.fluo.normalized.histogram.bin.10.229_255",
+ 									  "side.nir.normalized.histogram.bin.1.0_25$side.nir.normalized.histogram.bin.2.25_51$side.nir.normalized.histogram.bin.3.51_76$side.nir.normalized.histogram.bin.4.76_102$side.nir.normalized.histogram.bin.5.102_127$side.nir.normalized.histogram.bin.6.127_153$side.nir.normalized.histogram.bin.7.153_178$side.nir.normalized.histogram.bin.8.178_204$side.nir.normalized.histogram.bin.9.204_229$side.nir.normalized.histogram.bin.10.229_255",
+ 									  "top.nir.histogram.bin.1.0_25$top.nir.histogram.bin.2.25_51$top.nir.histogram.bin.3.51_76$top.nir.histogram.bin.4.76_102$top.nir.histogram.bin.5.102_127$top.nir.histogram.bin.6.127_153$top.nir.histogram.bin.7.153_178$top.nir.histogram.bin.8.178_204$top.nir.histogram.bin.9.204_229$top.nir.histogram.bin.10.229_255")
+ 			
+ 			descriptorSetName_boxplotStacked <- c("red fluorescence histogram (%)", "NIR absorption class (%)", "NIR Top")
+ 		
+ 			
+ 			nBoxOptions= NULL
+ 			boxOptions= NULL
+ 			stackedBarOptions = list(typOfGeomBar=c("fill", "stack", "dodge"))
+ 		}	
+ 	
+ 		
+ 		#descriptorSet <- c("Plant ID$Treatment$Hallo$Wert1$Repl ID")
+ 		#diagramTypVector <- diagramTyp
+ 		#diagramTypVector <- rep.int(diagramTyp, times=length(descriptorSetName))
+ 		
+ 		
+ 
+ 		nBoxDes = descriptorSet_nBoxplot
+ 		boxDes = descriptorSet_boxplot
+ 		boxStackDes = descriptorSet_boxplotStacked
+ 		SaveName_nBoxDes = nBoxDes
+ 		SaveName_boxDes = boxDes
+ 		SaveName_boxStackDes = boxStackDes
+ 		nBoxDesName = descriptorSetName_nBoxplot
+ 		boxDesName = descriptorSetName_boxplot
+ 		boxStackDesName = descriptorSetName_boxplotStacked
+ 
+ 		saveName <- "test2"
+ 		yAxisName <- "test2"
+ 		debug <- TRUE
+ 		iniDataSet = workingDataSet
+ 		#descriptor <- c("Plant ID$Treatment$Hallo$Wert1$Repl ID")
+ 		#descriptor <- c("side.area.norm (mm^2)")
+ 		#descriptorSet <- c("side.fluo.bloom.area.size (mm^2)")
+ 		#descriptor <- c("side.fluo.bloom.area.size (mm^2)")
+ 		descriptor <- descriptorSet
+ 		#descriptor <- c("Repl ID")
+ 		#descriptor <- c("side.nir.normalized.histogram.bin.1.0_25$side.nir.normalized.histogram.bin.2.25_51$side.nir.normalized.histogram.bin.3.51_76$side.nir.normalized.histogram.bin.4.76_102$side.nir.normalized.histogram.bin.5.102_127$side.nir.normalized.histogram.bin.6.127_153$side.nir.normalized.histogram.bin.7.153_178$side.nir.normalized.histogram.bin.8.178_204$side.nir.normalized.histogram.bin.9.204_229$side.nir.normalized.histogram.bin.10.229_255")
+ 		appendix <- FALSE
+ 		stoppTheCalculation <- FALSE
+ 		
+ }
[1] "... Read input file"
Read 2 items
[1] "... english Version"
> overallList <- list(iniDataSet=iniDataSet, saveFormat=saveFormat, dpi=dpi, isGray=isGray, 
+ 						nBoxDes = nBoxDes, boxDes = boxDes, boxStackDes = boxStackDes,
+ 						saveName_nBoxDes = nBoxDes, saveName_boxDes = boxDes, saveName_boxStackDes = boxStackDes,
+ 						nBoxDesName = nBoxDesName, boxDesName = boxDesName, boxStackDesName = boxStackDesName,
+ 						nBoxOptions= nBoxOptions, boxOptions= boxOptions, stackedBarOptions = stackedBarOptions, 
+ 						treatment=treatment, filterTreatment=filterTreatment,
+ 						secondTreatment=secondTreatment, filterSecondTreatment=filterSecondTreatment, filterXaxis=filterXaxis, xAxis=xAxis,
+ 						showResultInR=showResultInR, xAxisName=xAxisName, debug=debug, 
+ 						appendix=appendix, stoppTheCalculation=stoppTheCalculation,
+ 						overallResult_nBoxDes=data.frame(), overallResult_boxDes=data.frame(), overallResult_boxStackDes=data.frame(),
+ 						color_nBox = list(), color_box=list(), color_boxStack=list())	
> 				
> 	#install.packages(c("Cairo"), repos="http://cran.r-project.org", dependencies = TRUE)
> 	library("Cairo")
> 	#install.packages(c("RColorBrewer"), repos="http://cran.r-project.org", dependencies = TRUE)
> 	library("RColorBrewer")
> 	#install.packages(c("data.table"), repos="http://cran.r-project.org", dependencies = TRUE)
> 	library(data.table)
> 	#install.packages(c("ggplot2"), repos="http://cran.r-project.org", dependencies = TRUE)
> 	library(ggplot2)
> 	#install.packages(c("Hmisc"), repos="http://cran.r-project.org", dependencies = TRUE)
> 	#library("Hmisc")
> 	
> 	overallList$debug %debug% "Start"
[1] "DebugBreakPoint:  Start"
> 	
> 	overallList <- overallChangeName(overallList)
[1] "DebugBreakPoint:  overallChangeSaveName()"
[1] "... nBoxplot"
[1] "... Boxplot"
[1] "... stackedBoxplot"
> 	overallList <- overallPreprocessingOfDescriptor(overallList)
[1] "DebugBreakPoint:  overallPreprocessingOfDescriptor()"
[1] "... nBoxplot"
[1] "No plotting, because the descriptor(s) (top.area.norm..mm.2.) don't exists!"
[1] "No plotting, because the descriptor(s) (side.leaf.count.median..leafs.) don't exists!"
[1] "No plotting, because the descriptor(s) (side.bloom.count..tassel.) don't exists!"
[1] "No plotting, because the descriptor(s) (side.leaf.length.sum.norm.max..mm.) don't exists!"
[1] "No plotting, because the descriptor(s) (volume.iap.wue) don't exists!"
[1] "No plotting, because the descriptor(s) (side.nir.wetness.av) don't exists!"
[1] "No plotting, because the descriptor(s) (top.nir.wetness.av) don't exists!"
[1] "No plotting, because the descriptor(s) (side.area.relative) don't exists!"
[1] "No plotting, because the descriptor(s) (side.height.norm.relative) don't exists!"
[1] "No plotting, because the descriptor(s) (side.width.norm.relative) don't exists!"
[1] "No plotting, because the descriptor(s) (top.area.relative) don't exists!"
[1] "No plotting, because the descriptor(s) (side.area.relative) don't exists!"
[1] "No plotting, because the descriptor(s) (volume.iap.relative) don't exists!"
[1] "... Boxplot"
[1] "No plotting, because the descriptor(s) (top.area.norm..mm.2.) don't exists!"
[1] "... stackedBoxplot"
[1] "No plotting, because the descriptor(s) (side.vis.hue.histogram.ratio.nir.2.25_51) don't exists!"
> 	
> 	
> ###############################	
> 	overallList <- preprocessingOfxAxisValue(overallList)
[1] "DebugBreakPoint:  preprocessingOfxAxisValue()"
> 	overallList <- preprocessingOfTreatment(overallList)
[1] "DebugBreakPoint:  preprocessingOfTheTreatment()"
> 	overallList <- preprocessingOfSecondTreatment(overallList)
[1] "DebugBreakPoint:  preprocessingOfTheSecondTreatment()"
[1] "... set 'filterSecondTreatment' and 'secondTreatment' to 'none'!"
> 	overallList <- overallCheckIfDescriptorIsNaOrAllZero(overallList)
[1] "DebugBreakPoint:  overallCheckIfDescriptorIsNaOrAllZero()"
[1] "... nBoxplot"
[1] "Dummy plotting for this descriptor(s) ((Weight.B..g.), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((Water..weight.diff.), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((side.nir.wetness.plant_weight_drought_loss), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((top.nir.wetness.plant_weight_drought_loss), because all zero or not numeric!"
[1] "... Boxplot"
[1] "... stackedBoxplot"
[1] "Dummy plotting for this descriptor(s) ((side.nir.normalized.histogram.bin.1.0_25), because all zero or not numeric!"    
[2] "Dummy plotting for this descriptor(s) ((side.nir.normalized.histogram.bin.2.25_51), because all zero or not numeric!"   
[3] "Dummy plotting for this descriptor(s) ((side.nir.normalized.histogram.bin.3.51_76), because all zero or not numeric!"   
[4] "Dummy plotting for this descriptor(s) ((side.nir.normalized.histogram.bin.8.178_204), because all zero or not numeric!" 
[5] "Dummy plotting for this descriptor(s) ((side.nir.normalized.histogram.bin.9.204_229), because all zero or not numeric!" 
[6] "Dummy plotting for this descriptor(s) ((side.nir.normalized.histogram.bin.10.229_255), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((side.fluo.histogram.bin.9.204_229), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((top.nir.histogram.bin.1.0_25), because all zero or not numeric!"    
[2] "Dummy plotting for this descriptor(s) ((top.nir.histogram.bin.2.25_51), because all zero or not numeric!"   
[3] "Dummy plotting for this descriptor(s) ((top.nir.histogram.bin.3.51_76), because all zero or not numeric!"   
[4] "Dummy plotting for this descriptor(s) ((top.nir.histogram.bin.4.76_102), because all zero or not numeric!"  
[5] "Dummy plotting for this descriptor(s) ((top.nir.histogram.bin.10.229_255), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((side.fluo.histogram.phenol.bin.8.178_204), because all zero or not numeric!"
[2] "Dummy plotting for this descriptor(s) ((side.fluo.histogram.phenol.bin.9.204_229), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((side.fluo.histogram.ratio.bin.2.25_51), because all zero or not numeric!"  
[2] "Dummy plotting for this descriptor(s) ((side.fluo.histogram.ratio.bin.3.51_76), because all zero or not numeric!"  
[3] "Dummy plotting for this descriptor(s) ((side.fluo.histogram.ratio.bin.9.204_229), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((side.nir.normalized.histogram.bin.1.0_25), because all zero or not numeric!"    
[2] "Dummy plotting for this descriptor(s) ((side.nir.normalized.histogram.bin.2.25_51), because all zero or not numeric!"   
[3] "Dummy plotting for this descriptor(s) ((side.nir.normalized.histogram.bin.3.51_76), because all zero or not numeric!"   
[4] "Dummy plotting for this descriptor(s) ((side.nir.normalized.histogram.bin.8.178_204), because all zero or not numeric!" 
[5] "Dummy plotting for this descriptor(s) ((side.nir.normalized.histogram.bin.9.204_229), because all zero or not numeric!" 
[6] "Dummy plotting for this descriptor(s) ((side.nir.normalized.histogram.bin.10.229_255), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((side.fluo.normalized.histogram.bin.9.204_229), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((side.fluo.normalized.histogram.phenol.bin.8.178_204), because all zero or not numeric!"
[2] "Dummy plotting for this descriptor(s) ((side.fluo.normalized.histogram.phenol.bin.9.204_229), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((side.fluo.normalized.histogram.ratio.bin.2.25_51), because all zero or not numeric!"  
[2] "Dummy plotting for this descriptor(s) ((side.fluo.normalized.histogram.ratio.bin.3.51_76), because all zero or not numeric!"  
[3] "Dummy plotting for this descriptor(s) ((side.fluo.normalized.histogram.ratio.bin.9.204_229), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((side.nir.histogram.phenol.bin.1.0_25), because all zero or not numeric!"    
[2] "Dummy plotting for this descriptor(s) ((side.nir.histogram.phenol.bin.2.25_51), because all zero or not numeric!"   
[3] "Dummy plotting for this descriptor(s) ((side.nir.histogram.phenol.bin.3.51_76), because all zero or not numeric!"   
[4] "Dummy plotting for this descriptor(s) ((side.nir.histogram.phenol.bin.8.178_204), because all zero or not numeric!" 
[5] "Dummy plotting for this descriptor(s) ((side.nir.histogram.phenol.bin.9.204_229), because all zero or not numeric!" 
[6] "Dummy plotting for this descriptor(s) ((side.nir.histogram.phenol.bin.10.229_255), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((side.nir.histogram.ratio.bin.1.0_25), because all zero or not numeric!"    
[2] "Dummy plotting for this descriptor(s) ((side.nir.histogram.ratio.bin.2.25_51), because all zero or not numeric!"   
[3] "Dummy plotting for this descriptor(s) ((side.nir.histogram.ratio.bin.3.51_76), because all zero or not numeric!"   
[4] "Dummy plotting for this descriptor(s) ((side.nir.histogram.ratio.bin.4.76_102), because all zero or not numeric!"  
[5] "Dummy plotting for this descriptor(s) ((side.nir.histogram.ratio.bin.6.127_153), because all zero or not numeric!" 
[6] "Dummy plotting for this descriptor(s) ((side.nir.histogram.ratio.bin.7.153_178), because all zero or not numeric!" 
[7] "Dummy plotting for this descriptor(s) ((side.nir.histogram.ratio.bin.8.178_204), because all zero or not numeric!" 
[8] "Dummy plotting for this descriptor(s) ((side.nir.histogram.ratio.bin.9.204_229), because all zero or not numeric!" 
[9] "Dummy plotting for this descriptor(s) ((side.nir.histogram.ratio.bin.10.229_255), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((side.vis.hue.histogram.ratio.bin.1.0_25), because all zero or not numeric!"    
[2] "Dummy plotting for this descriptor(s) ((side.vis.hue.histogram.ratio.bin.3.51_76), because all zero or not numeric!"   
[3] "Dummy plotting for this descriptor(s) ((side.vis.hue.histogram.ratio.bin.4.76_102), because all zero or not numeric!"  
[4] "Dummy plotting for this descriptor(s) ((side.vis.hue.histogram.ratio.bin.5.102_127), because all zero or not numeric!" 
[5] "Dummy plotting for this descriptor(s) ((side.vis.hue.histogram.ratio.bin.6.127_153), because all zero or not numeric!" 
[6] "Dummy plotting for this descriptor(s) ((side.vis.hue.histogram.ratio.bin.7.153_178), because all zero or not numeric!" 
[7] "Dummy plotting for this descriptor(s) ((side.vis.hue.histogram.ratio.bin.8.178_204), because all zero or not numeric!" 
[8] "Dummy plotting for this descriptor(s) ((side.vis.hue.histogram.ratio.bin.9.204_229), because all zero or not numeric!" 
[9] "Dummy plotting for this descriptor(s) ((side.vis.hue.histogram.ratio.bin.10.229_255), because all zero or not numeric!"
 [1] "Dummy plotting for this descriptor(s) ((side.vis.normalized.histogram.ratio.bin.1.0_25), because all zero or not numeric!"    
 [2] "Dummy plotting for this descriptor(s) ((side.vis.normalized.histogram.ratio.bin.2.25_51), because all zero or not numeric!"   
 [3] "Dummy plotting for this descriptor(s) ((side.vis.normalized.histogram.ratio.bin.3.51_76), because all zero or not numeric!"   
 [4] "Dummy plotting for this descriptor(s) ((side.vis.normalized.histogram.ratio.bin.4.76_102), because all zero or not numeric!"  
 [5] "Dummy plotting for this descriptor(s) ((side.vis.normalized.histogram.ratio.bin.5.102_127), because all zero or not numeric!" 
 [6] "Dummy plotting for this descriptor(s) ((side.vis.normalized.histogram.ratio.bin.6.127_153), because all zero or not numeric!" 
 [7] "Dummy plotting for this descriptor(s) ((side.vis.normalized.histogram.ratio.bin.7.153_178), because all zero or not numeric!" 
 [8] "Dummy plotting for this descriptor(s) ((side.vis.normalized.histogram.ratio.bin.8.178_204), because all zero or not numeric!" 
 [9] "Dummy plotting for this descriptor(s) ((side.vis.normalized.histogram.ratio.bin.9.204_229), because all zero or not numeric!" 
[10] "Dummy plotting for this descriptor(s) ((side.vis.normalized.histogram.ratio.bin.10.229_255), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((top.fluo.histogram.bin.8.178_204), because all zero or not numeric!"
[2] "Dummy plotting for this descriptor(s) ((top.fluo.histogram.bin.9.204_229), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((top.fluo.histogram.phenol.bin.7.153_178), because all zero or not numeric!"
[2] "Dummy plotting for this descriptor(s) ((top.fluo.histogram.phenol.bin.8.178_204), because all zero or not numeric!"
[3] "Dummy plotting for this descriptor(s) ((top.fluo.histogram.phenol.bin.9.204_229), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((top.fluo.histogram.ratio.bin.2.25_51), because all zero or not numeric!"  
[2] "Dummy plotting for this descriptor(s) ((top.fluo.histogram.ratio.bin.3.51_76), because all zero or not numeric!"  
[3] "Dummy plotting for this descriptor(s) ((top.fluo.histogram.ratio.bin.8.178_204), because all zero or not numeric!"
[4] "Dummy plotting for this descriptor(s) ((top.fluo.histogram.ratio.bin.9.204_229), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((top.nir.histogram.bin.1.0_25), because all zero or not numeric!"    
[2] "Dummy plotting for this descriptor(s) ((top.nir.histogram.bin.2.25_51), because all zero or not numeric!"   
[3] "Dummy plotting for this descriptor(s) ((top.nir.histogram.bin.3.51_76), because all zero or not numeric!"   
[4] "Dummy plotting for this descriptor(s) ((top.nir.histogram.bin.4.76_102), because all zero or not numeric!"  
[5] "Dummy plotting for this descriptor(s) ((top.nir.histogram.bin.10.229_255), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((top.nir.histogram.phenol.bin.1.0_25), because all zero or not numeric!"    
[2] "Dummy plotting for this descriptor(s) ((top.nir.histogram.phenol.bin.2.25_51), because all zero or not numeric!"   
[3] "Dummy plotting for this descriptor(s) ((top.nir.histogram.phenol.bin.3.51_76), because all zero or not numeric!"   
[4] "Dummy plotting for this descriptor(s) ((top.nir.histogram.phenol.bin.4.76_102), because all zero or not numeric!"  
[5] "Dummy plotting for this descriptor(s) ((top.nir.histogram.phenol.bin.10.229_255), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((top.nir.histogram.ratio.bin.1.0_25), because all zero or not numeric!"    
[2] "Dummy plotting for this descriptor(s) ((top.nir.histogram.ratio.bin.2.25_51), because all zero or not numeric!"   
[3] "Dummy plotting for this descriptor(s) ((top.nir.histogram.ratio.bin.3.51_76), because all zero or not numeric!"   
[4] "Dummy plotting for this descriptor(s) ((top.nir.histogram.ratio.bin.4.76_102), because all zero or not numeric!"  
[5] "Dummy plotting for this descriptor(s) ((top.nir.histogram.ratio.bin.6.127_153), because all zero or not numeric!" 
[6] "Dummy plotting for this descriptor(s) ((top.nir.histogram.ratio.bin.7.153_178), because all zero or not numeric!" 
[7] "Dummy plotting for this descriptor(s) ((top.nir.histogram.ratio.bin.8.178_204), because all zero or not numeric!" 
[8] "Dummy plotting for this descriptor(s) ((top.nir.histogram.ratio.bin.9.204_229), because all zero or not numeric!" 
[9] "Dummy plotting for this descriptor(s) ((top.nir.histogram.ratio.bin.10.229_255), because all zero or not numeric!"
 [1] "Dummy plotting for this descriptor(s) ((top.vis.hue.histogram.ratio.bin.1.0_25), because all zero or not numeric!"    
 [2] "Dummy plotting for this descriptor(s) ((top.vis.hue.histogram.ratio.bin.2.25_51), because all zero or not numeric!"   
 [3] "Dummy plotting for this descriptor(s) ((top.vis.hue.histogram.ratio.bin.3.51_76), because all zero or not numeric!"   
 [4] "Dummy plotting for this descriptor(s) ((top.vis.hue.histogram.ratio.bin.4.76_102), because all zero or not numeric!"  
 [5] "Dummy plotting for this descriptor(s) ((top.vis.hue.histogram.ratio.bin.5.102_127), because all zero or not numeric!" 
 [6] "Dummy plotting for this descriptor(s) ((top.vis.hue.histogram.ratio.bin.6.127_153), because all zero or not numeric!" 
 [7] "Dummy plotting for this descriptor(s) ((top.vis.hue.histogram.ratio.bin.7.153_178), because all zero or not numeric!" 
 [8] "Dummy plotting for this descriptor(s) ((top.vis.hue.histogram.ratio.bin.8.178_204), because all zero or not numeric!" 
 [9] "Dummy plotting for this descriptor(s) ((top.vis.hue.histogram.ratio.bin.9.204_229), because all zero or not numeric!" 
[10] "Dummy plotting for this descriptor(s) ((top.vis.hue.histogram.ratio.bin.10.229_255), because all zero or not numeric!"
Es gab 20 Warnungen (Anzeige mit warnings())
> 	overallList <- reduceWorkingDataSize(overallList)
[1] "DebugBreakPoint:  reduceWorkingDataSize()"
> 	overallList <- setDefaultAxisNames(overallList)	
[1] "DebugBreakPoint:  setDefaultAxisNames()"
> 	overallList <- overallGetResultDataFrame(overallList)
[1] "DebugBreakPoint:  overallGetResultDataFrame()"
[1] "DebugBreakPoint:  buildList()"
[1] "... nBoxplot"
[1] "DebugBreakPoint:  getResultDataFrame()"
[1] "... Boxplot"
[1] "DebugBreakPoint:  getResultDataFrame()"
[1] "... stackedBoxplot"
[1] "DebugBreakPoint:  getResultDataFrame()"
> 	overallList <- setColor(overallList) 
[1] "DebugBreakPoint:  setColor()"
[1] "... all values are 'NA'"
[1] "... all values are 'NA'"
[1] "... all values are 'NA'"
[1] "... all values are 'NA'"
[1] "... all values are 'NA'"
[1] "... all values are 'NA'"
[1] "... all values are 'NA'"
[1] "... all values are 'NA'"
[1] "... all values are 'NA'"
[1] "... all values are 'NA'"
[1] "... all values are 'NA'"
[1] "... all values are 'NA'"
[1] "... all values are 'NA'"
[1] "... all values are 'NA'"
[1] "... all values are 'NA'"
[1] "... all values are 'NA'"
[1] "... all values are 'NA'"
[1] "... all values are 'NA'"
[1] "... all values are 'NA'"
[1] "... all values are 'NA'"
[1] "... all values are 'NA'"
Es gab 15 Warnungen (Anzeige mit warnings())
> 	h=h 
Fehler: Objekt 'h' nicht gefunden
> 	overallResult = overallList$overallResult_nBoxDes
> 	overallColor=overallList$color_nBox
> #	debug = overallList$debug
> 	overallDescriptor = overallList$nBoxDes
> 	overallDesName = overallList$nBoxDesName
> names(overallDescriptor)
 [1] "1"  "2"  "3"  "4"  "5"  "6"  "7"  "8"  "9"  "10" "11" "12" "13" "14" "15"
[16] "16" "17" "18" "19" "20" "21" "22" "23" "24" "25" "26" "27" "28" "29" "30"
[31] "31" "32"
> imagesIndex <- "4"
> tempOverallResult <-  overallResult
> !is.na(overallDescriptor[[imagesIndex]])
[1] TRUE
> 			overallResult <- reduceWholeOverallResultToOneValue(tempOverallResult, imagesIndex, overallList$debug, "nboxplot")
[1] "DebugBreakPoint:  reduceWholeOverallResultToOneValue()"
> !CheckIfOneColumnHasOnlyValues(overallResult)
[1] FALSE
> overallResult$xAxis[!is.na(overallResult$mean)][1]
[1] 59
> 				day <- overallResult$xAxis[!is.na(overallResult$mean)][1]
> paste(overallList$xAxisName,day)
[1] "DAS 59"
> 				overallList$xAxisName <- paste(overallList$xAxisName,day)
> diagramTypSave
Fehler: Objekt 'diagramTypSave' nicht gefunden
> diagramTypSave="nboxplot"
> head(overallResult)
     name xAxis mean se
1 BarkeCS     1  NaN NA
2 BarkeCS     2  NaN NA
3 BarkeCS     3  NaN NA
4 BarkeCS     4  NaN NA
5 BarkeCS     5  NaN NA
6 BarkeCS     6  NaN NA
> tail(overallResult)
      name xAxis     mean       se
728 Wiebke    54      NaN       NA
729 Wiebke    55      NaN       NA
730 Wiebke    56      NaN       NA
731 Wiebke    57      NaN       NA
732 Wiebke    58      NaN       NA
733 Wiebke    59 965.4066 145.8345
> 	tempOverallResult <-  overallResult
> names(overallDescriptor)
 [1] "1"  "2"  "3"  "4"  "5"  "6"  "7"  "8"  "9"  "10" "11" "12" "13" "14" "15"
[16] "16" "17" "18" "19" "20" "21" "22" "23" "24" "25" "26" "27" "28" "29" "30"
[31] "31" "32"
> overallDescriptor
$`1`
[1] Weight.A..g.
Levels: Weight.A..g.

$`2`
[1] NA

$`3`
[1] NA

$`4`
[1] side.height.norm..mm.
Levels: side.height.norm..mm.

$`5`
[1] side.width.norm..mm.
Levels: side.width.norm..mm.

$`6`
[1] side.area.norm..mm.2.
Levels: side.area.norm..mm.2.

$`7`
[1] NA

$`8`
[1] side.fluo.intensity.chlorophyl.average..relative.
Levels: side.fluo.intensity.chlorophyl.average..relative.

$`9`
[1] side.fluo.intensity.phenol.average..relative.
Levels: side.fluo.intensity.phenol.average..relative.

$`10`
[1] side.nir.intensity.average..relative.
Levels: side.nir.intensity.average..relative.

$`11`
[1] NA

$`12`
[1] NA

$`13`
[1] NA

$`14`
[1] volume.fluo.iap
Levels: volume.fluo.iap

$`15`
[1] volume.iap..px.3.
Levels: volume.iap..px.3.

$`16`
[1] volume.iap_max
Levels: volume.iap_max

$`17`
[1] volume.lt..px.3.
Levels: volume.lt..px.3.

$`18`
[1] NA

$`19`
[1] NA

$`20`
[1] NA

$`21`
[1] NA

$`22`
[1] NA

$`23`
[1] NA

$`24`
[1] NA

$`25`
[1] NA

$`26`
[1] NA

$`27`
[1] NA

$`28`
[1] NA

$`29`
[1] side.height..mm.
Levels: side.height..mm.

$`30`
[1] side.width..mm.
Levels: side.width..mm.

$`31`
[1] side.area..px.
Levels: side.area..px.

$`32`
[1] top.area..px.
Levels: top.area..px.

> overallDescriptor[[imagesIndex]
+ ]
[1] side.height.norm..mm.
Levels: side.height.norm..mm.
> overallDescriptor[imagesIndex]
$`4`
[1] side.height.norm..mm.
Levels: side.height.norm..mm.

> overallColor[imagesIndex]
$`4`
 [1] "#9E0142" "#BE2449" "#DA464C" "#EC6145" "#F7834D" "#FCAA5F" "#FDC877"
 [8] "#FEE391" "#FEF5AF" "#F7FCB3" "#E8F69C" "#CAE99D" "#A6DBA4" "#7ECBA4"
[15] "#59B4AA" "#3B92B8" "#4470B1" "#5E4FA2"

> h=h
Fehler: Objekt 'h' nicht gefunden
> 	overallResult=overallResult
> 	overallDescriptor=overallDescriptor[imagesIndex]
> 	overallColor=overallColor[imagesIndex]
> 	overallDesName=overallDesName[imagesIndex]
> 	overallSaveName=overallSaveName[imagesIndex]
Fehler: Objekt 'overallSaveName' nicht gefunden
> 	overallList=overallList
> 	isOnlyOneValue=TRUE
> 	diagramTyp=diagramTypSave
> h <-1
> overallSaveName
Fehler: Objekt 'overallSaveName' nicht gefunden
> overallSaveName = overallList$saveName_nBoxDes
> overallSaveName=overallSaveName[imagesIndex]
> 	tempOverallResult <-  overallResult
> names(overallDescriptor)
[1] "4"
> !is.na(overallDescriptor[[imagesIndex]])
[1] TRUE
> 			overallResult <- reduceWholeOverallResultToOneValue(tempOverallResult, imagesIndex, overallList$debug, "barplot")
[1] "DebugBreakPoint:  reduceWholeOverallResultToOneValue()"
Fehler in `[.data.frame`(overallResult, paste(colname[n], index, sep = "")) : 
  undefined columns selected
> head(overallResult)
     name xAxis mean se
1 BarkeCS     1  NaN NA
2 BarkeCS     2  NaN NA
3 BarkeCS     3  NaN NA
4 BarkeCS     4  NaN NA
5 BarkeCS     5  NaN NA
6 BarkeCS     6  NaN NA
> reduceWholeOverallResultToOneValue <- function(tempOverallResult, imagesIndex, debug, diagramTyp="nboxplot") {
+ 	debug %debug% "reduceWholeOverallResultToOneValue()"
+ 	
+ 	if(diagramTyp == "boxplotstacked") {
+ 		
+ 		workingDataSet <- tempOverallResult[tempOverallResult$plot == imagesIndex,]
+ 		workingDataSet$hist <- factor(workingDataSet$hist, unique(workingDataSet$hist))
+ 		
+ 	} else {
+ 		colNames <- vector()
+ 		if(diagramTyp == "nboxplot" || diagramTyp == "barplot") {
+ 			colNames <- c("mean", "se")
+ 		} else if(diagramTyp == "boxplot") {
+ 			colNames <- c("value")
+ 		} 
+ 		
+ 		if("primaerTreatment" %in% tempOverallResult) {
+ 			standardColumnName <- c("name", "primaerTreatment", "xAxis")
+ 		} else {
+ 			standardColumnName <- c("name", "xAxis")
+ 		}
+ 		if(!(standardColumnName %in% tempOverallResult)) {
+ 			workingDataSet <- buildDataSet(tempOverallResult[,standardColumnName], tempOverallResult, colNames, imagesIndex)
+ 			colnames(workingDataSet) <- c(standardColumnName, colNames)
+ 		}
+ 	}
+ 	return(workingDataSet)	
+ }
> 			overallResult <- reduceWholeOverallResultToOneValue(tempOverallResult, imagesIndex, overallList$debug, "barplot")
[1] "DebugBreakPoint:  reduceWholeOverallResultToOneValue()"
Fehler in `[.data.frame`(overallResult, paste(colname[n], index, sep = "")) : 
  undefined columns selected
Zusätzlich: Warnmeldung:
In if (!(standardColumnName %in% tempOverallResult)) { :
  Bedingung hat Länge > 1 und nur das erste Element wird benutzt
> colNames <- vector()
> 		if(diagramTyp == "nboxplot" || diagramTyp == "barplot") {
+ 			colNames <- c("mean", "se")
+ 		} else if(diagramTyp == "boxplot") {
+ 			colNames <- c("value")
+ 		} 
> 		
> 		if("primaerTreatment" %in% tempOverallResult) {
+ 			standardColumnName <- c("name", "primaerTreatment", "xAxis")
+ 		} else {
+ 			standardColumnName <- c("name", "xAxis")
+ 		}
> standardColumnName
[1] "name"  "xAxis"
> colNames %in% tempOverallResult
[1] FALSE FALSE
> !(colNames %in% tempOverallResult)
[1] TRUE TRUE
> head(tempOverallResult)
     name xAxis mean se
1 BarkeCS     1  NaN NA
2 BarkeCS     2  NaN NA
3 BarkeCS     3  NaN NA
4 BarkeCS     4  NaN NA
5 BarkeCS     5  NaN NA
6 BarkeCS     6  NaN NA
> colNames
[1] "mean" "se"  
> colNames %in% colnames(tempOverallResult)
[1] TRUE TRUE
> reduceWholeOverallResultToOneValue <- function(tempOverallResult, imagesIndex, debug, diagramTyp="nboxplot") {
+ 	debug %debug% "reduceWholeOverallResultToOneValue()"
+ 	
+ 	if(diagramTyp == "boxplotstacked") {
+ 		
+ 		workingDataSet <- tempOverallResult[tempOverallResult$plot == imagesIndex,]
+ 		workingDataSet$hist <- factor(workingDataSet$hist, unique(workingDataSet$hist))
+ 		
+ 	} else {
+ 		colNames <- vector()
+ 		if(diagramTyp == "nboxplot" || diagramTyp == "barplot") {
+ 			colNames <- c("mean", "se")
+ 		} else if(diagramTyp == "boxplot") {
+ 			colNames <- c("value")
+ 		} 
+ 		
+ 		if("primaerTreatment" %in% tempOverallResult) {
+ 			standardColumnName <- c("name", "primaerTreatment", "xAxis")
+ 		} else {
+ 			standardColumnName <- c("name", "xAxis")
+ 		}
+ 		if(!(colNames %in% colnames(tempOverallResult))) {
+ 			workingDataSet <- buildDataSet(tempOverallResult[,standardColumnName], tempOverallResult, colNames, imagesIndex)
+ 			colnames(workingDataSet) <- c(standardColumnName, colNames)
+ 		}
+ 	}
+ 	return(workingDataSet)	
+ }
> 			overallResult <- reduceWholeOverallResultToOneValue(tempOverallResult, imagesIndex, overallList$debug, "barplot")
[1] "DebugBreakPoint:  reduceWholeOverallResultToOneValue()"
Warnmeldung:
In if (!(colNames %in% colnames(tempOverallResult))) { :
  Bedingung hat Länge > 1 und nur das erste Element wird benutzt
> sum(colNames %in% colnames(tempOverallResult))
[1] 2
> sum(colNames %in% colnames(tempOverallResult))>0
[1] TRUE
> sum(c(F,F))
[1] 0
> reduceWholeOverallResultToOneValue <- function(tempOverallResult, imagesIndex, debug, diagramTyp="nboxplot") {
+ 	debug %debug% "reduceWholeOverallResultToOneValue()"
+ 	
+ 	if(diagramTyp == "boxplotstacked") {
+ 		
+ 		workingDataSet <- tempOverallResult[tempOverallResult$plot == imagesIndex,]
+ 		workingDataSet$hist <- factor(workingDataSet$hist, unique(workingDataSet$hist))
+ 		
+ 	} else {
+ 		colNames <- vector()
+ 		if(diagramTyp == "nboxplot" || diagramTyp == "barplot") {
+ 			colNames <- c("mean", "se")
+ 		} else if(diagramTyp == "boxplot") {
+ 			colNames <- c("value")
+ 		} 
+ 		
+ 		if("primaerTreatment" %in% tempOverallResult) {
+ 			standardColumnName <- c("name", "primaerTreatment", "xAxis")
+ 		} else {
+ 			standardColumnName <- c("name", "xAxis")
+ 		}
+ 		if(sum(colNames %in% colnames(tempOverallResult))>0) {
+ 			workingDataSet <- buildDataSet(tempOverallResult[,standardColumnName], tempOverallResult, colNames, imagesIndex)
+ 			colnames(workingDataSet) <- c(standardColumnName, colNames)
+ 		}
+ 	}
+ 	return(workingDataSet)	
+ }
> 			overallResult <- reduceWholeOverallResultToOneValue(tempOverallResult, imagesIndex, overallList$debug, "barplot")
[1] "DebugBreakPoint:  reduceWholeOverallResultToOneValue()"
Fehler in `[.data.frame`(overallResult, paste(colname[n], index, sep = "")) : 
  undefined columns selected
> colNames <- vector()
> 		if(diagramTyp == "nboxplot" || diagramTyp == "barplot") {
+ 			colNames <- c("mean", "se")
+ 		} else if(diagramTyp == "boxplot") {
+ 			colNames <- c("value")
+ 		} 
> 		
> 		if("primaerTreatment" %in% tempOverallResult) {
+ 			standardColumnName <- c("name", "primaerTreatment", "xAxis")
+ 		} else {
+ 			standardColumnName <- c("name", "xAxis")
+ 		}
> sum(colNames %in% colnames(tempOverallResult))>0
[1] TRUE
> colNames %in% colnames(tempOverallResult)
[1] TRUE TRUE
> sum(!(colNames %in% colnames(tempOverallResult)))>0
[1] FALSE
> reduceWholeOverallResultToOneValue <- function(tempOverallResult, imagesIndex, debug, diagramTyp="nboxplot") {
+ 	debug %debug% "reduceWholeOverallResultToOneValue()"
+ 	
+ 	if(diagramTyp == "boxplotstacked") {
+ 		
+ 		workingDataSet <- tempOverallResult[tempOverallResult$plot == imagesIndex,]
+ 		workingDataSet$hist <- factor(workingDataSet$hist, unique(workingDataSet$hist))
+ 		
+ 	} else {
+ 		colNames <- vector()
+ 		if(diagramTyp == "nboxplot" || diagramTyp == "barplot") {
+ 			colNames <- c("mean", "se")
+ 		} else if(diagramTyp == "boxplot") {
+ 			colNames <- c("value")
+ 		} 
+ 		
+ 		if("primaerTreatment" %in% tempOverallResult) {
+ 			standardColumnName <- c("name", "primaerTreatment", "xAxis")
+ 		} else {
+ 			standardColumnName <- c("name", "xAxis")
+ 		}
+ 		if(sum(!(colNames %in% colnames(tempOverallResult)))>0) {
+ 			workingDataSet <- buildDataSet(tempOverallResult[,standardColumnName], tempOverallResult, colNames, imagesIndex)
+ 			colnames(workingDataSet) <- c(standardColumnName, colNames)
+ 		}
+ 	}
+ 	return(workingDataSet)	
+ }
> 			overallResult <- reduceWholeOverallResultToOneValue(tempOverallResult, imagesIndex, overallList$debug, "barplot")
[1] "DebugBreakPoint:  reduceWholeOverallResultToOneValue()"
> 			overallResult <- overallResult[!is.na(overallResult$mean),]
Warnmeldung:
In is.na(overallResult$mean) :
  is.na() auf nicht-(Liste oder Vektor) des Typs 'NULL' angewendet
> overallResult$mean
NULL
> 			overallResult <- reduceWholeOverallResultToOneValue(tempOverallResult, imagesIndex, overallList$debug, "barplot")
[1] "DebugBreakPoint:  reduceWholeOverallResultToOneValue()"
> tail(overallResult)
      Angle  Plant.ID                                                Condition
12260  -720 1121KN125         0: Barley/BCC_1441_PflugsIntensiv (Trockentress)
12261  -720 1121KN126         0: Barley/BCC_1441_PflugsIntensiv (Trockentress)
12262  -720 1121KN127         0: Barley/BCC_1524_AckermannsBavaria (Terrasoil)
12263  -720 1121KN128 0: Barley/BCC_1524_AckermannsBavaria (normal bewaessert)
12264  -720 1121KN129 0: Barley/BCC_1524_AckermannsBavaria (normal bewaessert)
12265  -720 1121KN130 0: Barley/BCC_1524_AckermannsBavaria (normal bewaessert)
      Species                   Genotype Variety GrowthCondition
12260  Barley    BCC_1441_PflugsIntensiv      NA              NA
12261  Barley    BCC_1441_PflugsIntensiv      NA              NA
12262  Barley BCC_1524_AckermannsBavaria      NA              NA
12263  Barley BCC_1524_AckermannsBavaria      NA              NA
12264  Barley BCC_1524_AckermannsBavaria      NA              NA
12265  Barley BCC_1524_AckermannsBavaria      NA              NA
              Treatment             Sequence    Day
12260      Trockentress SeedDate: 26.05.2011 das 59
12261      Trockentress SeedDate: 26.05.2011 das 59
12262         Terrasoil SeedDate: 26.05.2011 das 59
12263 normal bewaessert SeedDate: 26.05.2011 das 59
12264 normal bewaessert SeedDate: 26.05.2011 das 59
12265 normal bewaessert SeedDate: 26.05.2011 das 59
                               Time Day..Int. Weight.A..g. Weight.B..g.
12260 Sun Jul 24 14:43:21 CEST 2011        59       2724.5           NA
12261 Sun Jul 24 14:44:31 CEST 2011        59       2739.0           NA
12262 Sun Jul 24 14:45:42 CEST 2011        59       2633.0           NA
12263 Sun Jul 24 14:46:53 CEST 2011        59       2622.0           NA
12264 Sun Jul 24 14:48:04 CEST 2011        59       2631.0           NA
12265 Sun Jul 24 14:49:15 CEST 2011        59       2724.0           NA
      Water..weight.diff. Water..pumped. RGB FLUO NIR OTHER
12260                  NA             NA   8    8   8     0
12261                  NA             NA   8    8   8     0
12262                  NA             NA   8    8   8     0
12263                  NA             NA   8    8   8     0
12264                  NA             NA   8    8   8     0
12265                  NA             NA   8    8   8     0
      RESULT_VIS_MARKER_POS_1_LEFT_X RESULT_VIS_MARKER_POS_1_RIGHT_X
12260                     0.01701783                       0.9821718
12261                     0.01701783                       0.9821718
12262                     0.01701783                       0.9821718
12263                     0.01701783                       0.9821718
12264                     0.01701783                       0.9821718
12265                     0.01701783                       0.9821718
      RESULT_VIS_MARKER_POS_2_LEFT_X RESULT_VIS_MARKER_POS_2_RIGHT_X
12260                     0.01701783                       0.9821718
12261                     0.01701783                       0.9821718
12262                     0.01701783                       0.9821718
12263                     0.01701783                       0.9821718
12264                     0.01701783                       0.9821718
12265                     0.01701783                       0.9821718
      RESULT_VIS_MARKER_POS_3_LEFT_X RESULT_VIS_MARKER_POS_3_RIGHT_X fluo.side
12260                     0.01701783                       0.9821718         7
12261                     0.01701783                       0.9821718         7
12262                     0.01701783                       0.9821718         7
12263                     0.01701783                       0.9821718         7
12264                     0.01701783                       0.9821718         7
12265                     0.01701783                       0.9821718         7
      fluo.top mark1.y..percent. mark2.y..percent. mark3.y..percent. nir.side
12260        1          0.986937         0.5002639        0.01491027        7
12261        1          0.986937         0.5002639        0.01491027        7
12262        1          0.986937         0.5002639        0.01491027        7
12263        1          0.986937         0.5001895        0.01492042        7
12264        1          0.986937         0.5002639        0.01491027        7
12265        1          0.986937         0.5002639        0.01491027        7
      nir.top side.area..px. side.area.avg side.area.max side.area.median
12260       1       159717.4      159717.4        174715           160197
12261       1       143741.3      143741.3        160525           141679
12262       1       229107.7      229107.7        263287           226490
12263       1       256280.0      256280.0        264368           253977
12264       1       246145.3      246145.3        267687           245786
12265       1       123332.3      123332.3        136493           125005
      side.area.min side.area.norm..mm.2. side.border.length..px.
12260        149702              148910.2                18010.71
12261        124803              134015.1                16303.71
12262        191219              213605.2                26287.29
12263        249187              238938.9                30134.00
12264        234018              229490.0                26451.43
12265        110492              114987.1                14704.71
      side.border.length.norm..mm. side.compactness.01..relative.
12260                     17390.70                    0.006289718
12261                     15742.46                    0.007011508
12262                     25382.35                    0.004322947
12263                     29096.64                    0.003554107
12264                     25540.84                    0.004437843
12265                     14198.51                    0.007425351
      side.compactness.16..relative. side.fluo.filled.percent
12260                       2033.143                 7.969868
12261                       1854.143                 7.172662
12262                       3022.857                11.432429
12263                       3544.286                12.788321
12264                       2845.429                12.282601
12265                       1764.857                 6.154257
      side.fluo.filled.pixels side.fluo.histogram.bin.1.0_25
12260                159717.4                       32.57143
12261                143741.3                       23.71429
12262                229107.7                       36.57143
12263                256280.0                       29.28571
12264                246145.3                       30.71429
12265                123332.3                       52.71429
      side.fluo.histogram.bin.10.229_255 side.fluo.histogram.bin.2.25_51
12260                          1327.0000                        8277.286
12261                          1310.7143                        7672.571
12262                          1096.5714                       13928.429
12263                          1012.7143                       13063.429
12264                          1004.0000                       13099.571
12265                           558.7143                        8887.714
      side.fluo.histogram.bin.3.51_76 side.fluo.histogram.bin.4.76_102
12260                        28703.86                         29034.00
12261                        24102.57                         25382.00
12262                        49888.29                         40787.29
12263                        52260.29                         46743.14
12264                        51131.29                         46026.43
12265                        23420.29                         21296.29
      side.fluo.histogram.bin.5.102_127 side.fluo.histogram.bin.6.127_153
12260                          25235.57                          22293.00
12261                          22841.29                          20944.86
12262                          32720.71                          29176.14
12263                          38613.00                          33851.29
12264                          36851.57                          32293.43
12265                          18191.29                          16045.43
      side.fluo.histogram.bin.7.153_178 side.fluo.histogram.bin.8.178_204
12260                          22701.86                          22112.29
12261                          21464.57                          19999.00
12262                          30819.57                          30654.14
12263                          35536.71                          35170.14
12264                          33975.86                          31732.43
12265                          17194.43                          17685.43
      side.fluo.histogram.bin.9.204_229 side.fluo.histogram.phenol.bin.1.0_25
12260                                 0                            703.142857
12261                                 0                            725.714286
12262                                 0                            118.428571
12263                                 0                             30.714286
12264                                 0                             63.571429
12265                                 0                              7.142857
      side.fluo.histogram.phenol.bin.10.229_255
12260                                  148931.0
12261                                  135377.7
12262                                  211388.4
12263                                  236425.4
12264                                  225321.4
12265                                  120577.0
      side.fluo.histogram.phenol.bin.2.25_51
12260                              282.57143
12261                              213.14286
12262                              208.00000
12263                               65.85714
12264                              121.28571
12265                               10.42857
      side.fluo.histogram.phenol.bin.3.51_76
12260                              440.71429
12261                              319.14286
12262                              434.71429
12263                              252.28571
12264                              381.28571
12265                               26.42857
      side.fluo.histogram.phenol.bin.4.76_102
12260                               928.42857
12261                               604.28571
12262                              1106.42857
12263                              1012.85714
12264                              1295.00000
12265                                73.14286
      side.fluo.histogram.phenol.bin.5.102_127
12260                                2061.8571
12261                                1492.1429
12262                                2953.0000
12263                                3447.0000
12264                                3893.0000
12265                                 322.7143
      side.fluo.histogram.phenol.bin.6.127_153
12260                                 6114.286
12261                                 4786.714
12262                                12264.143
12263                                14246.571
12264                                14459.429
12265                                 2168.429
      side.fluo.histogram.phenol.bin.7.153_178
12260                                 255.4286
12261                                 222.4286
12262                                 634.5714
12263                                 799.2857
12264                                 610.2857
12265                                 147.0000
      side.fluo.histogram.phenol.bin.8.178_204
12260                                        0
12261                                        0
12262                                        0
12263                                        0
12264                                        0
12265                                        0
      side.fluo.histogram.phenol.bin.9.204_229
12260                                        0
12261                                        0
12262                                        0
12263                                        0
12264                                        0
12265                                        0
      side.fluo.histogram.ratio.bin.1.0_25
12260                             148587.0
12261                             135074.1
12262                             210808.6
12263                             235870.3
12264                             224781.6
12265                             120243.7
      side.fluo.histogram.ratio.bin.10.229_255
12260                                 983.0000
12261                                1007.1429
12262                                 516.7143
12263                                 457.5714
12264                                 464.1429
12265                                 225.4286
      side.fluo.histogram.ratio.bin.2.25_51
12260                                     0
12261                                     0
12262                                     0
12263                                     0
12264                                     0
12265                                     0
      side.fluo.histogram.ratio.bin.3.51_76
12260                                     0
12261                                     0
12262                                     0
12263                                     0
12264                                     0
12265                                     0
      side.fluo.histogram.ratio.bin.4.76_102
12260                               4844.714
12261                               3560.000
12262                              10483.429
12263                              12039.857
12264                              11771.429
12265                               1662.143
      side.fluo.histogram.ratio.bin.5.102_127
12260                               2494.8571
12261                               1942.1429
12262                               4085.1429
12263                               5026.8571
12264                               5565.5714
12265                                463.2857
      side.fluo.histogram.ratio.bin.6.127_153
12260                               1379.8571
12261                                993.2857
12262                               1673.7143
12263                               1650.3333
12264                               2112.0000
12265                                238.0000
      side.fluo.histogram.ratio.bin.7.153_178
12260                                774.2857
12261                                620.0000
12262                                739.4286
12263                                582.5714
12264                                760.0000
12265                                142.4286
      side.fluo.histogram.ratio.bin.8.178_204
12260                               309.71429
12261                               241.00000
12262                               220.85714
12263                                97.28571
12264                               150.71429
12265                                24.00000
      side.fluo.histogram.ratio.bin.9.204_229
12260                                       0
12261                                       0
12262                                       0
12263                                       0
12264                                       0
12265                                       0
      side.fluo.intensity.average..relative.
12260                              0.4796720
12261                              0.4753812
12262                              0.4975840
12263                              0.4890832
12264                              0.4942938
12265                              0.4903525
      side.fluo.intensity.chlorophyl.average..relative.
12260                                         0.4796720
12261                                         0.4753812
12262                                         0.4975840
12263                                         0.4890832
12264                                         0.4942938
12265                                         0.4903525
      side.fluo.intensity.chlorophyl.sum side.fluo.intensity.classic.sum
12260                           19531603                        18089470
12261                           17368726                        15883351
12262                           29035051                        27344712
12263                           31953294                        29926350
12264                           31021305                        29187964
12265                           15393120                        13807048
      side.fluo.intensity.phenol.average..relative.
12260                                   0.032617154
12261                                   0.028783557
12262                                   0.032949526
12263                                   0.031981405
12264                                   0.035591250
12265                                   0.008988331
      side.fluo.intensity.phenol.chlorophyl.ratio..c.p.
12260                                        0.06806835
12261                                        0.06048905
12262                                        0.06621224
12263                                        0.06535467
12264                                        0.07193162
12265                                        0.01827980
      side.fluo.intensity.phenol.plant_weight
12260                                155249.8
12261                                140221.2
12262                                222640.0
12263                                249838.9
12264                                238626.8
12265                                122396.9
      side.fluo.intensity.phenol.plant_weight_drought_loss
12260                                            4467.6653
12261                                            3520.0936
12262                                            6467.6922
12263                                            7018.2353
12264                                            7518.4754
12265                                             935.3431
      side.fluo.intensity.phenol.sum side.fluo.normalized.histogram.bin.1.0_25
12260                      1329130.4                                  31.45016
12261                      1047227.9                                  22.89792
12262                      1924138.4                                  35.31246
12263                      2087925.0                                  29.12818
12264                      2236746.4                                  29.65695
12265                       278264.6                                  50.89960
      side.fluo.normalized.histogram.bin.10.229_255
12260                                     1281.3182
12261                                     1265.5931
12262                                     1058.8221
12263                                      977.8517
12264                                      969.4374
12265                                      539.4806
      side.fluo.normalized.histogram.bin.2.25_51
12260                                   7992.341
12261                                   7408.444
12262                                  13448.944
12263                                  12613.722
12264                                  12648.621
12265                                   8581.756
      side.fluo.normalized.histogram.bin.3.51_76
12260                                   27715.73
12261                                   23272.84
12262                                   48170.89
12263                                   50461.23
12264                                   49371.10
12265                                   22614.05
      side.fluo.normalized.histogram.bin.4.76_102
12260                                    28034.51
12261                                    24508.23
12262                                    39383.19
12263                                    45134.02
12264                                    44441.98
12265                                    20563.16
      side.fluo.normalized.histogram.bin.5.102_127
12260                                     24366.84
12261                                     22054.98
12262                                     31594.31
12263                                     37283.75
12264                                     35582.96
12265                                     17565.05
      side.fluo.normalized.histogram.bin.6.127_153
12260                                     21525.57
12261                                     20223.83
12262                                     28171.76
12263                                     32685.96
12264                                     31181.73
12265                                     15493.07
      side.fluo.normalized.histogram.bin.7.153_178
12260                                     21920.35
12261                                     20725.66
12262                                     29758.61
12263                                     34313.37
12264                                     32806.24
12265                                     16602.51
      side.fluo.normalized.histogram.bin.8.178_204
12260                                     21351.07
12261                                     19310.54
12262                                     29598.88
12263                                     33959.42
12264                                     30640.04
12265                                     17076.61
      side.fluo.normalized.histogram.bin.9.204_229
12260                                            0
12261                                            0
12262                                            0
12263                                            0
12264                                            0
12265                                            0
      side.fluo.normalized.histogram.phenol.bin.1.0_25
12260                                       678.937268
12261                                       700.731678
12262                                       114.351685
12263                                        29.656951
12264                                        61.382991
12265                                         6.896965
      side.fluo.normalized.histogram.phenol.bin.10.229_255
12260                                             143804.1
12261                                             130717.4
12262                                             204111.4
12263                                             228286.5
12264                                             217564.8
12265                                             116426.2
      side.fluo.normalized.histogram.phenol.bin.2.25_51
12260                                         272.84395
12261                                         205.80545
12262                                         200.83963
12263                                          63.59002
12264                                         117.11047
12265                                          10.06957
      side.fluo.normalized.histogram.phenol.bin.3.51_76
12260                                         425.54276
12261                                         308.15641
12262                                         419.74931
12263                                         243.60082
12264                                         368.16001
12265                                          25.51877
      side.fluo.normalized.histogram.phenol.bin.4.76_102
12260                                          896.46755
12261                                          583.48327
12262                                         1068.33993
12263                                          977.98968
12264                                         1250.41982
12265                                           70.62493
      side.fluo.normalized.histogram.phenol.bin.5.102_127
12260                                           1990.8780
12261                                           1440.7761
12262                                           2851.3434
12263                                           3328.3375
12264                                           3758.9840
12265                                            311.6049
      side.fluo.normalized.histogram.phenol.bin.6.127_153
12260                                            5903.802
12261                                            4621.932
12262                                           11841.952
12263                                           13756.135
12264                                           13961.665
12265                                            2093.781
      side.fluo.normalized.histogram.phenol.bin.7.153_178
12260                                            246.6355
12261                                            214.7715
12262                                            612.7264
12263                                            771.7704
12264                                            589.2767
12265                                            141.9395
      side.fluo.normalized.histogram.phenol.bin.8.178_204
12260                                                   0
12261                                                   0
12262                                                   0
12263                                                   0
12264                                                   0
12265                                                   0
      side.fluo.normalized.histogram.phenol.bin.9.204_229
12260                                                   0
12261                                                   0
12262                                                   0
12263                                                   0
12264                                                   0
12265                                                   0
      side.fluo.normalized.histogram.ratio.bin.1.0_25
12260                                        143471.9
12261                                        130424.2
12262                                        203551.5
12263                                        227750.5
12264                                        217043.5
12265                                        116104.3
      side.fluo.normalized.histogram.ratio.bin.10.229_255
12260                                            949.1604
12261                                            972.4721
12262                                            498.9265
12263                                            441.8196
12264                                            448.1648
12265                                            217.6682
      side.fluo.normalized.histogram.ratio.bin.2.25_51
12260                                                0
12261                                                0
12262                                                0
12263                                                0
12264                                                0
12265                                                0
      side.fluo.normalized.histogram.ratio.bin.3.51_76
12260                                                0
12261                                                0
12262                                                0
12263                                                0
12264                                                0
12265                                                0
      side.fluo.normalized.histogram.ratio.bin.4.76_102
12260                                          4677.936
12261                                          3437.448
12262                                         10122.538
12263                                         11625.387
12264                                         11366.199
12265                                          1604.924
      side.fluo.normalized.histogram.ratio.bin.5.102_127
12260                                          2408.9721
12261                                          1875.2849
12262                                          3944.5124
12263                                          4853.8083
12264                                          5373.9774
12265                                           447.3372
      side.fluo.normalized.histogram.ratio.bin.6.127_153
12260                                          1332.3558
12261                                           959.0920
12262                                          1616.0969
12263                                          1593.5209
12264                                          2039.2947
12265                                           229.8069
      side.fluo.normalized.histogram.ratio.bin.7.153_178
12260                                           747.6310
12261                                           598.6566
12262                                           713.9739
12263                                           562.5165
12264                                           733.8371
12265                                           137.5255
      side.fluo.normalized.histogram.ratio.bin.8.178_204
12260                                          299.05242
12261                                          232.70361
12262                                          213.25417
12263                                           93.93667
12264                                          145.52597
12265                                           23.17380
      side.fluo.normalized.histogram.ratio.bin.9.204_229 side.height..mm.
12260                                                  0         910.7143
12261                                                  0         931.1429
12262                                                  0        1031.8571
12263                                                  0        1087.8571
12264                                                  0        1017.4286
12265                                                  0         754.0000
      side.height.norm..mm. side.hull.area..px. side.hull.area.norm..mm.2.
12260              879.3631            482830.3                   450159.8
12261              899.0884            441509.2                   411634.7
12262              996.3356            666629.6                   621522.4
12263             1050.4078            791038.4                   737513.0
12264              982.4037            649389.0                   605448.3
12265              728.0437            393177.1                   366573.0
      side.hull.centroid.x..px. side.hull.centroid.x.norm..mm.
12260                  607.1560                       586.2547
12261                  660.0585                       637.3360
12262                  584.6292                       564.5034
12263                  596.4824                       575.9486
12264                  637.4946                       615.5489
12265                  623.2282                       601.7736
      side.hull.centroid.y..px. side.hull.centroid.y.norm..mm.
12260                  1188.267                       1147.361
12261                  1173.745                       1133.339
12262                  1096.868                       1059.109
12263                  1047.456                       1011.397
12264                  1103.553                       1065.563
12265                  1257.195                       1213.916
      side.hull.circularity..relative. side.hull.circumcircle.d..px.
12260                        0.8822016                      955.9718
12261                        0.8089686                      991.9582
12262                        0.8741236                     1180.7325
12263                        0.8883774                     1211.9820
12264                        0.8921342                     1104.2575
12265                        0.8817575                      876.5425
      side.hull.circumcircle.d.norm..mm. side.hull.circumcircle.x..px.
12260                           923.0626                      603.3731
12261                           957.8102                      649.1070
12262                          1140.0859                      654.3798
12263                          1170.2597                      580.7764
12264                          1066.2436                      613.9038
12265                           846.3677                      620.0729
      side.hull.circumcircle.x.norm..mm. side.hull.circumcircle.y..px.
12260                           582.6021                      1174.617
12261                           626.7616                      1156.634
12262                           631.8529                      1117.966
12263                           560.7833                      1060.145
12264                           592.7703                      1113.792
12265                           598.7270                      1259.396
      side.hull.circumcircle.y.norm..mm. side.hull.fillgrade..percent.
12260                           1134.181                     0.3316964
12261                           1116.817                     0.3313958
12262                           1079.480                     0.3461273
12263                           1023.649                     0.3248534
12264                           1075.450                     0.3800041
12265                           1216.041                     0.3213425
      side.hull.points..hullpoints. side.ndvi..relative.
12260                      16.57143         0.0592170219
12261                      17.14286         0.0662895442
12262                      23.14286         0.0262710150
12263                      24.00000         0.0005079558
12264                      28.71429         0.0176436466
12265                      27.71429         0.0735611201
      side.ndvi.vis.blue.intensity.average..relative.
12260                                       0.3210338
12261                                       0.3146239
12262                                       0.3318435
12263                                       0.3393638
12264                                       0.3292640
12265                                       0.3071553
      side.ndvi.vis.green.intensity.average..relative.
12260                                        0.4273413
12261                                        0.4215851
12262                                        0.4382431
12263                                        0.4522437
12264                                        0.4412469
12265                                        0.4152762
      side.ndvi.vis.red.intensity.average..relative. side.nir.filled.percent
12260                                      0.4186089                3.742618
12261                                      0.4145282                3.604999
12262                                      0.4310393                5.129183
12263                                      0.4456985                5.264518
12264                                      0.4373678                5.102995
12265                                      0.3985238                3.389869
      side.nir.filled.pixels side.nir.histogram.bin.1.0_25
12260               3042.000                             0
12261               2930.143                             0
12262               4169.000                             0
12263               4280.000                             0
12264               4147.714                             0
12265               2755.286                             0
      side.nir.histogram.bin.10.229_255 side.nir.histogram.bin.2.25_51
12260                                 0                              0
12261                                 0                              0
12262                                 0                              0
12263                                 0                              0
12264                                 0                              0
12265                                 0                              0
      side.nir.histogram.bin.3.51_76 side.nir.histogram.bin.4.76_102
12260                              0                        82.85714
12261                              0                        80.00000
12262                              0                        69.85714
12263                              0                        17.28571
12264                              0                        17.00000
12265                              0                        35.14286
      side.nir.histogram.bin.5.102_127 side.nir.histogram.bin.6.127_153
12260                         1982.143                         967.2857
12261                         1958.143                         877.1429
12262                         2267.714                        1808.5714
12263                         2218.500                        1933.8571
12264                         2320.571                        1765.2857
12265                         1649.429                        1062.4286
      side.nir.histogram.bin.7.153_178 side.nir.histogram.bin.8.178_204
12260                         9.714286                                0
12261                        14.857143                                0
12262                        22.857143                                0
12263                        82.142857                                0
12264                        44.857143                                0
12265                         8.285714                                0
      side.nir.histogram.bin.9.204_229 side.nir.histogram.phenol.bin.1.0_25
12260                                0                                    0
12261                                0                                    0
12262                                0                                    0
12263                                0                                    0
12264                                0                                    0
12265                                0                                    0
      side.nir.histogram.phenol.bin.10.229_255
12260                                        0
12261                                        0
12262                                        0
12263                                        0
12264                                        0
12265                                        0
      side.nir.histogram.phenol.bin.2.25_51
12260                                     0
12261                                     0
12262                                     0
12263                                     0
12264                                     0
12265                                     0
      side.nir.histogram.phenol.bin.3.51_76
12260                                     0
12261                                     0
12262                                     0
12263                                     0
12264                                     0
12265                                     0
      side.nir.histogram.phenol.bin.4.76_102
12260                               82.85714
12261                               80.00000
12262                               69.85714
12263                               17.28571
12264                               17.00000
12265                               35.14286
      side.nir.histogram.phenol.bin.5.102_127
12260                                1982.143
12261                                1958.143
12262                                2267.714
12263                                2246.714
12264                                2320.571
12265                                1649.429
      side.nir.histogram.phenol.bin.6.127_153
12260                                967.2857
12261                                877.1429
12262                               1808.5714
12263                               1933.8571
12264                               1765.2857
12265                               1062.4286
      side.nir.histogram.phenol.bin.7.153_178
12260                                9.714286
12261                               14.857143
12262                               22.857143
12263                               82.142857
12264                               44.857143
12265                                8.285714
      side.nir.histogram.phenol.bin.8.178_204
12260                                       0
12261                                       0
12262                                       0
12263                                       0
12264                                       0
12265                                       0
      side.nir.histogram.phenol.bin.9.204_229
12260                                       0
12261                                       0
12262                                       0
12263                                       0
12264                                       0
12265                                       0
      side.nir.histogram.ratio.bin.1.0_25
12260                                   0
12261                                   0
12262                                   0
12263                                   0
12264                                   0
12265                                   0
      side.nir.histogram.ratio.bin.10.229_255
12260                                       0
12261                                       0
12262                                       0
12263                                       0
12264                                       0
12265                                       0
      side.nir.histogram.ratio.bin.2.25_51 side.nir.histogram.ratio.bin.3.51_76
12260                                    0                                    0
12261                                    0                                    0
12262                                    0                                    0
12263                                    0                                    0
12264                                    0                                    0
12265                                    0                                    0
      side.nir.histogram.ratio.bin.4.76_102
12260                                     0
12261                                     0
12262                                     0
12263                                     0
12264                                     0
12265                                     0
      side.nir.histogram.ratio.bin.5.102_127
12260                               3042.000
12261                               2930.143
12262                               4169.000
12263                               4280.000
12264                               4147.714
12265                               2755.286
      side.nir.histogram.ratio.bin.6.127_153
12260                                      0
12261                                      0
12262                                      0
12263                                      0
12264                                      0
12265                                      0
      side.nir.histogram.ratio.bin.7.153_178
12260                                      0
12261                                      0
12262                                      0
12263                                      0
12264                                      0
12265                                      0
      side.nir.histogram.ratio.bin.8.178_204
12260                                      0
12261                                      0
12262                                      0
12263                                      0
12264                                      0
12265                                      0
      side.nir.histogram.ratio.bin.9.204_229
12260                                      0
12261                                      0
12262                                      0
12263                                      0
12264                                      0
12265                                      0
      side.nir.intensity.average..relative. side.nir.intensity.sum
12260                             0.4712606               365441.9
12261                             0.4732376               353545.7
12262                             0.4541138               482184.6
12263                             0.4475436               487933.8
12264                             0.4530361               479084.0
12265                             0.4616478               324164.3
      side.nir.normalized.histogram.bin.1.0_25
12260                                        0
12261                                        0
12262                                        0
12263                                        0
12264                                        0
12265                                        0
      side.nir.normalized.histogram.bin.10.229_255
12260                                            0
12261                                            0
12262                                            0
12263                                            0
12264                                            0
12265                                            0
      side.nir.normalized.histogram.bin.2.25_51
12260                                         0
12261                                         0
12262                                         0
12263                                         0
12264                                         0
12265                                         0
      side.nir.normalized.histogram.bin.3.51_76
12260                                         0
12261                                         0
12262                                         0
12263                                         0
12264                                         0
12265                                         0
      side.nir.normalized.histogram.bin.4.76_102
12260                                   80.00480
12261                                   77.24601
12262                                   67.45232
12263                                   18.50686
12264                                   16.41478
12265                                   33.93307
      side.nir.normalized.histogram.bin.5.102_127
12260                                    1913.908
12261                                    1890.734
12262                                    2189.649
12263                                    2169.371
12264                                    2240.686
12265                                    1592.647
      side.nir.normalized.histogram.bin.6.127_153
12260                                    933.9870
12261                                    846.9473
12262                                   1746.3116
12263                                   1867.2844
12264                                   1704.5160
12265                                   1025.8546
      side.nir.normalized.histogram.bin.7.153_178
12260                                    9.379873
12261                                   14.345688
12262                                   22.070289
12263                                   80.786454
12264                                   43.312942
12265                                    8.000480
      side.nir.normalized.histogram.bin.8.178_204
12260                                           0
12261                                           0
12262                                           0
12263                                           0
12264                                           0
12265                                           0
      side.nir.normalized.histogram.bin.9.204_229
12260                                           0
12261                                           0
12262                                           0
12263                                           0
12264                                           0
12265                                           0
      side.nir.normalized.histogram.phenol.bin.1.0_25
12260                                               0
12261                                               0
12262                                               0
12263                                               0
12264                                               0
12265                                               0
      side.nir.normalized.histogram.phenol.bin.10.229_255
12260                                                   0
12261                                                   0
12262                                                   0
12263                                                   0
12264                                                   0
12265                                                   0
      side.nir.normalized.histogram.phenol.bin.2.25_51
12260                                                0
12261                                                0
12262                                                0
12263                                                0
12264                                                0
12265                                                0
      side.nir.normalized.histogram.phenol.bin.3.51_76
12260                                                0
12261                                                0
12262                                                0
12263                                                0
12264                                                0
12265                                                0
      side.nir.normalized.histogram.phenol.bin.4.76_102
12260                                          80.00480
12261                                          77.24601
12262                                          67.45232
12263                                          16.69066
12264                                          16.41478
12265                                          33.93307
      side.nir.normalized.histogram.phenol.bin.5.102_127
12260                                           1913.908
12261                                           1890.734
12262                                           2189.649
12263                                           2169.371
12264                                           2240.686
12265                                           1592.647
      side.nir.normalized.histogram.phenol.bin.6.127_153
12260                                           933.9870
12261                                           846.9473
12262                                          1746.3116
12263                                          1867.2844
12264                                          1704.5160
12265                                          1025.8546
      side.nir.normalized.histogram.phenol.bin.7.153_178
12260                                           9.379873
12261                                          14.345688
12262                                          22.070289
12263                                          79.315101
12264                                          43.312942
12265                                           8.000480
      side.nir.normalized.histogram.phenol.bin.8.178_204
12260                                                  0
12261                                                  0
12262                                                  0
12263                                                  0
12264                                                  0
12265                                                  0
      side.nir.normalized.histogram.phenol.bin.9.204_229
12260                                                  0
12261                                                  0
12262                                                  0
12263                                                  0
12264                                                  0
12265                                                  0
      side.nir.normalized.histogram.ratio.bin.1.0_25
12260                                              0
12261                                              0
12262                                              0
12263                                              0
12264                                              0
12265                                              0
      side.nir.normalized.histogram.ratio.bin.10.229_255
12260                                                  0
12261                                                  0
12262                                                  0
12263                                                  0
12264                                                  0
12265                                                  0
      side.nir.normalized.histogram.ratio.bin.2.25_51
12260                                               0
12261                                               0
12262                                               0
12263                                               0
12264                                               0
12265                                               0
      side.nir.normalized.histogram.ratio.bin.3.51_76
12260                                               0
12261                                               0
12262                                               0
12263                                               0
12264                                               0
12265                                               0
      side.nir.normalized.histogram.ratio.bin.4.76_102
12260                                                0
12261                                                0
12262                                                0
12263                                                0
12264                                                0
12265                                                0
      side.nir.normalized.histogram.ratio.bin.5.102_127
12260                                          2937.280
12261                                          2829.273
12262                                          4025.483
12263                                          4132.662
12264                                          4004.930
12265                                          2660.435
      side.nir.normalized.histogram.ratio.bin.6.127_153
12260                                                 0
12261                                                 0
12262                                                 0
12263                                                 0
12264                                                 0
12265                                                 0
      side.nir.normalized.histogram.ratio.bin.7.153_178
12260                                                 0
12261                                                 0
12262                                                 0
12263                                                 0
12264                                                 0
12265                                                 0
      side.nir.normalized.histogram.ratio.bin.8.178_204
12260                                                 0
12261                                                 0
12262                                                 0
12263                                                 0
12264                                                 0
12265                                                 0
      side.nir.normalized.histogram.ratio.bin.9.204_229
12260                                                 0
12261                                                 0
12262                                                 0
12263                                                 0
12264                                                 0
12265                                                 0
      side.nir.skeleton.intensity.average..relative.
12260                                      0.2891825
12261                                      0.2755703
12262                                      0.1781125
12263                                      0.1720058
12264                                      0.1836298
12265                                      0.2162021
      side.nir.wetness.average..percent. side.nir.wetness.plant_weight
12260                                100                     257614783
12261                                100                     249228686
12262                                100                     339911746
12263                                100                     344311692
12264                                100                     337726036
12265                                100                     228516656
      side.nir.wetness.plant_weight_drought_loss side.vis.hue.average
12260                                 -257611741            0.2041642
12261                                 -249225756            0.2024395
12262                                 -339907577            0.2021724
12263                                 -344307412            0.2000232
12264                                 -337721888            0.1971836
12265                                 -228513900            0.2140199
      side.vis.hue.histogram.ratio.bin.1.0_25
12260                                       0
12261                                       0
12262                                       0
12263                                       0
12264                                       0
12265                                       0
      side.vis.hue.histogram.ratio.bin.10.229_255
12260                                           0
12261                                           0
12262                                           0
12263                                           0
12264                                           0
12265                                           0
      side.vis.hue.histogram.ratio.bin.2.25_51
12260                                        0
12261                                        0
12262                                        0
12263                                        0
12264                                        0
12265                                        0
      side.vis.hue.histogram.ratio.bin.3.51_76
12260                                        0
12261                                        0
12262                                        0
12263                                        0
12264                                        0
12265                                        0
      side.vis.hue.histogram.ratio.bin.4.76_102
12260                                         0
12261                                         0
12262                                         0
12263                                         0
12264                                         0
12265                                         0
      side.vis.hue.histogram.ratio.bin.5.102_127
12260                                          0
12261                                          0
12262                                          0
12263                                          0
12264                                          0
12265                                          0
      side.vis.hue.histogram.ratio.bin.6.127_153
12260                                          0
12261                                          0
12262                                          0
12263                                          0
12264                                          0
12265                                          0
      side.vis.hue.histogram.ratio.bin.7.153_178
12260                                          0
12261                                          0
12262                                          0
12263                                          0
12264                                          0
12265                                          0
      side.vis.hue.histogram.ratio.bin.8.178_204
12260                                          0
12261                                          0
12262                                          0
12263                                          0
12264                                          0
12265                                          0
      side.vis.hue.histogram.ratio.bin.9.204_229 side.vis.hue.max
12260                                          0        0.9958349
12261                                          0        0.9965120
12262                                          0        0.9967792
12263                                          0        0.9965643
12264                                          0        0.9970270
12265                                          0        0.9963119
      side.vis.hue.min side.vis.normalized.histogram.ratio.bin.1.0_25
12260                0                                              0
12261                0                                              0
12262                0                                              0
12263                0                                              0
12264                0                                              0
12265                0                                              0
      side.vis.normalized.histogram.ratio.bin.10.229_255
12260                                                  0
12261                                                  0
12262                                                  0
12263                                                  0
12264                                                  0
12265                                                  0
      side.vis.normalized.histogram.ratio.bin.2.25_51
12260                                               0
12261                                               0
12262                                               0
12263                                               0
12264                                               0
12265                                               0
      side.vis.normalized.histogram.ratio.bin.3.51_76
12260                                               0
12261                                               0
12262                                               0
12263                                               0
12264                                               0
12265                                               0
      side.vis.normalized.histogram.ratio.bin.4.76_102
12260                                                0
12261                                                0
12262                                                0
12263                                                0
12264                                                0
12265                                                0
      side.vis.normalized.histogram.ratio.bin.5.102_127
12260                                                 0
12261                                                 0
12262                                                 0
12263                                                 0
12264                                                 0
12265                                                 0
      side.vis.normalized.histogram.ratio.bin.6.127_153
12260                                                 0
12261                                                 0
12262                                                 0
12263                                                 0
12264                                                 0
12265                                                 0
      side.vis.normalized.histogram.ratio.bin.7.153_178
12260                                                 0
12261                                                 0
12262                                                 0
12263                                                 0
12264                                                 0
12265                                                 0
      side.vis.normalized.histogram.ratio.bin.8.178_204
12260                                                 0
12261                                                 0
12262                                                 0
12263                                                 0
12264                                                 0
12265                                                 0
      side.vis.normalized.histogram.ratio.bin.9.204_229 side.width..mm.
12260                                                 0        720.4286
12261                                                 0        568.7143
12262                                                 0        727.5714
12263                                                 0        801.0000
12264                                                 0        774.8571
12265                                                 0        694.4286
      side.width.norm..mm. top.area..px. top.border.length..px.
12260             695.6279        282643                  28577
12261             549.1364        226319                  20529
12262             702.5249        492584                  32914
12263             773.4257        493497                  37996
12264             748.1828        511414                  40227
12265             670.5230        252116                  20081
      top.compactness.01..relative. top.compactness.16..relative.
12260                   0.004349730                          2889
12261                   0.006748856                          1862
12262                   0.005714584                          2199
12263                   0.004296195                          2925
12264                   0.003971672                          3164
12265                   0.007858893                          1599
      top.fluo.filled.percent top.fluo.filled.pixels
12260                14.10383                 282643
12261                11.29327                 226319
12262                24.57984                 492584
12263                24.62540                 493497
12264                25.51946                 511414
12265                12.58054                 252116
      top.fluo.histogram.bin.1.0_25 top.fluo.histogram.bin.10.229_255
12260                             0                              5769
12261                             0                              5444
12262                             4                              3022
12263                             0                              3185
12264                             0                              3734
12265                             0                              1314
      top.fluo.histogram.bin.2.25_51 top.fluo.histogram.bin.3.51_76
12260                          10184                         103898
12261                           8976                          77155
12262                          18377                         208523
12263                          14704                         215035
12264                          26736                         195467
12265                          18410                         117380
      top.fluo.histogram.bin.4.76_102 top.fluo.histogram.bin.5.102_127
12260                           75164                            41292
12261                           64190                            34883
12262                          133339                            63548
12263                          132757                            63582
12264                          142089                            71383
12265                           60367                            26158
      top.fluo.histogram.bin.6.127_153 top.fluo.histogram.bin.7.153_178
12260                            28612                            17724
12261                            22864                            12807
12262                            42001                            23770
12263                            40920                            23314
12264                            46412                            25593
12265                            17416                            11071
      top.fluo.histogram.bin.8.178_204 top.fluo.histogram.bin.9.204_229
12260                                0                                0
12261                                0                                0
12262                                0                                0
12263                                0                                0
12264                                0                                0
12265                                0                                0
      top.fluo.histogram.phenol.bin.1.0_25
12260                                 1893
12261                                 1938
12262                                  156
12263                                  151
12264                                  291
12265                                   73
      top.fluo.histogram.phenol.bin.10.229_255
12260                                   259095
12261                                   206223
12262                                   462670
12263                                   459701
12264                                   467783
12265                                   242440
      top.fluo.histogram.phenol.bin.2.25_51
12260                                   753
12261                                   645
12262                                   329
12263                                   261
12264                                   509
12265                                    85
      top.fluo.histogram.phenol.bin.3.51_76
12260                                  1182
12261                                  1014
12262                                  1159
12263                                   924
12264                                  1770
12265                                   226
      top.fluo.histogram.phenol.bin.4.76_102
12260                                   3148
12261                                   2381
12262                                   3916
12263                                   3473
12264                                   5747
12265                                    822
      top.fluo.histogram.phenol.bin.5.102_127
12260                                   10103
12261                                    8234
12262                                   13774
12263                                   16238
12264                                   20023
12265                                    4429
      top.fluo.histogram.phenol.bin.6.127_153
12260                                    6469
12261                                    5884
12262                                   10580
12263                                   12749
12264                                   15291
12265                                    4041
      top.fluo.histogram.phenol.bin.7.153_178
12260                                       0
12261                                       0
12262                                       0
12263                                       0
12264                                       0
12265                                       0
      top.fluo.histogram.phenol.bin.8.178_204
12260                                       0
12261                                       0
12262                                       0
12263                                       0
12264                                       0
12265                                       0
      top.fluo.histogram.phenol.bin.9.204_229
12260                                       0
12261                                       0
12262                                       0
12263                                       0
12264                                       0
12265                                       0
      top.fluo.histogram.ratio.bin.1.0_25
12260                              257330
12261                              204594
12262                              460957
12263                              457656
12264                              465772
12265                              241618
      top.fluo.histogram.ratio.bin.10.229_255
12260                                    4004
12261                                    3815
12262                                    1309
12263                                    1140
12264                                    1723
12265                                     492
      top.fluo.histogram.ratio.bin.2.25_51 top.fluo.histogram.ratio.bin.3.51_76
12260                                    0                                    0
12261                                    0                                    0
12262                                    0                                    0
12263                                    0                                    0
12264                                    0                                    0
12265                                    0                                    0
      top.fluo.histogram.ratio.bin.4.76_102
12260                                  5499
12261                                  4992
12262                                  9161
12263                                 11213
12264                                 13401
12265                                  3703
      top.fluo.histogram.ratio.bin.5.102_127
12260                                   9529
12261                                   7706
12262                                  13930
12263                                  16711
12264                                  20585
12265                                   4355
      top.fluo.histogram.ratio.bin.6.127_153
12260                                   3530
12261                                   2783
12262                                   4480
12263                                   3895
12264                                   6299
12265                                    926
      top.fluo.histogram.ratio.bin.7.153_178
12260                                    986
12261                                    800
12262                                   1034
12263                                    837
12264                                   1623
12265                                    200
      top.fluo.histogram.ratio.bin.8.178_204
12260                                      0
12261                                      0
12262                                      0
12263                                      0
12264                                      0
12265                                      0
      top.fluo.histogram.ratio.bin.9.204_229
12260                                      0
12261                                      0
12262                                      0
12263                                      0
12264                                      0
12265                                      0
      top.fluo.intensity.average..relative...pix.
12260                                   0.5895605
12261                                   0.5861899
12262                                   0.6146405
12263                                   0.6146177
12264                                   0.6087415
12265                                   0.6363844
      top.fluo.intensity.chlorophyl.average..relative.
12260                                        0.5895605
12261                                        0.5861899
12262                                        0.6146405
12263                                        0.6146177
12264                                        0.6087415
12265                                        0.6363844
      top.fluo.intensity.chlorophyl.sum top.fluo.intensity.classic.sum
12260                          42491965                       43313043
12261                          33829810                       34554189
12262                          77204324                       78167277
12263                          77344553                       78659158
12264                          79386325                       80738503
12265                          40912883                       41080721
      top.fluo.intensity.phenol.average..relative.
12260                                   0.04568944
12261                                   0.04909955
12262                                   0.03005293
12263                                   0.03334677
12264                                   0.04242694
12265                                   0.01845206
      top.fluo.intensity.phenol.chlorophyl.ratio..relative.
12260                                            0.07749745
12261                                            0.08376048
12262                                            0.04889514
12263                                            0.05425612
12264                                            0.06969615
12265                                            0.02899515
      top.fluo.intensity.phenol.plant_weight
12260                               271574.0
12261                               216794.3
12262                               479895.2
12263                               479391.4
12264                               492815.9
12265                               248128.5
      top.fluo.intensity.phenol.plant_weight_drought_loss
12260                                           11068.971
12261                                            9524.709
12262                                           12688.793
12263                                           14105.597
12264                                           18598.054
12265                                            3987.479
      top.fluo.intensity.phenol.sum top.hull.area..px. top.hull.centroid.x..px.
12260                       3293019          1374605.5                 538.8103
12261                       2833601           729077.5                 456.2148
12262                       3774916          1535223.0                 532.6598
12263                       4196415          1696985.0                 607.5981
12264                       5532921          1722049.0                 652.9051
12265                       1186275          1101327.0                 801.9537
      top.hull.centroid.y..px. top.hull.circularity..relative.
12260                 860.3644                       0.8754490
12261                 632.1512                       0.7742241
12262                 920.1733                       0.8518241
12263                 829.7331                       0.8943642
12264                 742.3184                       0.8611126
12265                 724.0003                       0.8454237
      top.hull.circumcircle.d..px. top.hull.circumcircle.x..px.
12260                     1607.864                     539.3286
12261                     1421.561                     527.6111
12262                     1717.242                     510.0000
12263                     1720.438                     653.8165
12264                     1864.809                     664.7294
12265                     1505.548                     791.4304
      top.hull.circumcircle.y..px. top.hull.fillgrade..percent.
12260                     786.4738                    0.2056175
12261                     672.9445                    0.3104183
12262                     928.7818                    0.3208550
12263                     818.6516                    0.2908081
12264                     826.0501                    0.2969799
12265                     774.6329                    0.2289202
      top.hull.points..hullpoints. top.main.axis.normalized.distance.avg..mm.
12260                           13                               0.0006266216
12261                           14                               0.0005467851
12262                           18                               0.0003551910
12263                           13                               0.0004947741
12264                           23                               0.0004436227
12265                           20                               0.0006186063
      top.main.axis.rotation..degree. top.ndvi..relative.
12260                              80         -0.03436808
12261                              80         -0.02088228
12262                              60         -0.04103441
12263                              60         -0.04994562
12264                              60         -0.04998614
12265                             100         -0.02197749
      top.ndvi.vis.blue.intensity.average..relative.
12260                                      0.2418899
12261                                      0.2318228
12262                                      0.2293342
12263                                      0.2318153
12264                                      0.2410637
12265                                      0.2260971
      top.ndvi.vis.green.intensity.average..relative.
12260                                       0.3486621
12261                                       0.3344654
12262                                       0.3361714
12263                                       0.3445839
12264                                       0.3549485
12265                                       0.3372572
      top.ndvi.vis.red.intensity.average..relative. top.nir.filled.percent
12260                                     0.3102685              11.087598
12261                                     0.2976277               8.091781
12262                                     0.3024470              20.919045
12263                                     0.3100558              17.926919
12264                                     0.3182278              19.980315
12265                                     0.2898319              11.257382
      top.nir.filled.pixels top.nir.histogram.bin.1.0_25
12260                  9012                            0
12261                  6577                            0
12262                 17003                            0
12263                 14571                            0
12264                 16240                            0
12265                  9150                            0
      top.nir.histogram.bin.10.229_255 top.nir.histogram.bin.2.25_51
12260                                0                             0
12261                                0                             0
12262                                0                             0
12263                                0                             0
12264                                0                             0
12265                                0                             0
      top.nir.histogram.bin.3.51_76 top.nir.histogram.bin.4.76_102
12260                             0                              0
12261                             0                              0
12262                             0                              0
12263                             0                              0
12264                             0                              0
12265                             0                              0
      top.nir.histogram.bin.5.102_127 top.nir.histogram.bin.6.127_153
12260                               0                            2525
12261                               1                            1812
12262                               0                            3161
12263                               0                            2869
12264                               4                            3882
12265                               0                            1808
      top.nir.histogram.bin.7.153_178 top.nir.histogram.bin.8.178_204
12260                            5088                            1135
12261                            3623                             678
12262                           10843                            2556
12263                            9299                            2106
12264                           10090                            1927
12265                            5722                            1255
      top.nir.histogram.bin.9.204_229 top.nir.histogram.phenol.bin.1.0_25
12260                             264                                   0
12261                             463                                   0
12262                             443                                   0
12263                             297                                   0
12264                             337                                   0
12265                             365                                   0
      top.nir.histogram.phenol.bin.10.229_255
12260                                       0
12261                                       0
12262                                       0
12263                                       0
12264                                       0
12265                                       0
      top.nir.histogram.phenol.bin.2.25_51 top.nir.histogram.phenol.bin.3.51_76
12260                                    0                                    0
12261                                    0                                    0
12262                                    0                                    0
12263                                    0                                    0
12264                                    0                                    0
12265                                    0                                    0
      top.nir.histogram.phenol.bin.4.76_102
12260                                     0
12261                                     0
12262                                     0
12263                                     0
12264                                     0
12265                                     0
      top.nir.histogram.phenol.bin.5.102_127
12260                                      0
12261                                      1
12262                                      0
12263                                      0
12264                                      4
12265                                      0
      top.nir.histogram.phenol.bin.6.127_153
12260                                   2525
12261                                   1812
12262                                   3161
12263                                   2869
12264                                   3882
12265                                   1808
      top.nir.histogram.phenol.bin.7.153_178
12260                                   5088
12261                                   3623
12262                                  10843
12263                                   9299
12264                                  10090
12265                                   5722
      top.nir.histogram.phenol.bin.8.178_204
12260                                   1135
12261                                    678
12262                                   2556
12263                                   2106
12264                                   1927
12265                                   1255
      top.nir.histogram.phenol.bin.9.204_229 top.nir.histogram.ratio.bin.1.0_25
12260                                    264                                  0
12261                                    463                                  0
12262                                    443                                  0
12263                                    297                                  0
12264                                    337                                  0
12265                                    365                                  0
      top.nir.histogram.ratio.bin.10.229_255
12260                                      0
12261                                      0
12262                                      0
12263                                      0
12264                                      0
12265                                      0
      top.nir.histogram.ratio.bin.2.25_51 top.nir.histogram.ratio.bin.3.51_76
12260                                   0                                   0
12261                                   0                                   0
12262                                   0                                   0
12263                                   0                                   0
12264                                   0                                   0
12265                                   0                                   0
      top.nir.histogram.ratio.bin.4.76_102
12260                                    0
12261                                    0
12262                                    0
12263                                    0
12264                                    0
12265                                    0
      top.nir.histogram.ratio.bin.5.102_127
12260                                  9012
12261                                  6577
12262                                 17003
12263                                 14571
12264                                 16240
12265                                  9150
      top.nir.histogram.ratio.bin.6.127_153
12260                                     0
12261                                     0
12262                                     0
12263                                     0
12264                                     0
12265                                     0
      top.nir.histogram.ratio.bin.7.153_178
12260                                     0
12261                                     0
12262                                     0
12263                                     0
12264                                     0
12265                                     0
      top.nir.histogram.ratio.bin.8.178_204
12260                                     0
12261                                     0
12262                                     0
12263                                     0
12264                                     0
12265                                     0
      top.nir.histogram.ratio.bin.9.204_229
12260                                     0
12261                                     0
12262                                     0
12263                                     0
12264                                     0
12265                                     0
      top.nir.intensity.average..relative...pix. top.nir.intensity.sum
12260                                  0.2896504                665634
12261                                  0.2854517                478741
12262                                  0.2786039               1207961
12263                                  0.2805573               1042440
12264                                  0.2879284               1192369
12265                                  0.2773663                647165
      top.nir.wetness.average..percent. top.nir.wetness.plant_weight
12260                               100                    469238881
12261                               100                    337488784
12262                               100                    851553667
12263                               100                    734869234
12264                               100                    840561051
12265                               100                    456219879
      top.nir.wetness.plant_weight_drought_loss top.vis.hue.average
12260                                -469229869           0.2391635
12261                                -337482207           0.2412159
12262                                -851536664           0.2319555
12263                                -734854663           0.2285163
12264                                -840544811           0.2312813
12265                                -456210729           0.2475562
      top.vis.hue.histogram.ratio.bin.1.0_25
12260                                      0
12261                                      0
12262                                      0
12263                                      0
12264                                      0
12265                                      0
      top.vis.hue.histogram.ratio.bin.10.229_255
12260                                          0
12261                                          0
12262                                          0
12263                                          0
12264                                          0
12265                                          0
      top.vis.hue.histogram.ratio.bin.2.25_51
12260                                       0
12261                                       0
12262                                       0
12263                                       0
12264                                       0
12265                                       0
      top.vis.hue.histogram.ratio.bin.3.51_76
12260                                       0
12261                                       0
12262                                       0
12263                                       0
12264                                       0
12265                                       0
      top.vis.hue.histogram.ratio.bin.4.76_102
12260                                        0
12261                                        0
12262                                        0
12263                                        0
12264                                        0
12265                                        0
      top.vis.hue.histogram.ratio.bin.5.102_127
12260                                         0
12261                                         0
12262                                         0
12263                                         0
12264                                         0
12265                                         0
      top.vis.hue.histogram.ratio.bin.6.127_153
12260                                         0
12261                                         0
12262                                         0
12263                                         0
12264                                         0
12265                                         0
      top.vis.hue.histogram.ratio.bin.7.153_178
12260                                         0
12261                                         0
12262                                         0
12263                                         0
12264                                         0
12265                                         0
      top.vis.hue.histogram.ratio.bin.8.178_204
12260                                         0
12261                                         0
12262                                         0
12263                                         0
12264                                         0
12265                                         0
      top.vis.hue.histogram.ratio.bin.9.204_229 top.vis.hue.max top.vis.hue.min
12260                                         0       0.9938272               0
12261                                         0       0.9958333               0
12262                                         0       0.9954955               0
12263                                         0       0.9942529               0
12264                                         0       0.9953704               0
12265                                         0       0.9962963               0
      vis.side vis.top volume.fluo.iap volume.fluo.plant_weight.iap
12260        7       1        84912461                     80904944
12261        7       1        68382037                     65288633
12262        7       1       160797711                    154232693
12263        7       1       180035013                    172584102
12264        7       1       176026409                    167518051
12265        7       1        61926564                     60968978
      volume.iap..px.3. volume.iap_max volume.lt..px.3. weight.dry.real..mm.
12260          84912461       92885797         86079992                11.81
12261          68382037       76366553         67624319                11.44
12262         160797711      184786214        154539085                19.59
12263         180035013      185716779        179151231                20.30
12264         176026409      191431581        171510025                21.03
12265          61926564       68534711         65925852                 8.94
      weight.fresh.real..mm.
12260                  78.81
12261                  74.44
12262                 126.16
12263                 128.98
12264                 128.59
12265                  64.39
> 	h=h
> 	overallResult=overallResult
> 	overallDescriptor=overallDescriptor[imagesIndex]
> 	overallColor=overallColor[imagesIndex]
> 	overallDesName=overallDesName[imagesIndex]
> 	overallSaveName=overallSaveName[imagesIndex]
> 	overallList=overallList
> 	isOnlyOneValue=TRUE
> 	diagramTyp=diagramTypSave
> colnames(overallResult)
  [1] "Angle"                                                
  [2] "Plant.ID"                                             
  [3] "Condition"                                            
  [4] "Species"                                              
  [5] "Genotype"                                             
  [6] "Variety"                                              
  [7] "GrowthCondition"                                      
  [8] "Treatment"                                            
  [9] "Sequence"                                             
 [10] "Day"                                                  
 [11] "Time"                                                 
 [12] "Day..Int."                                            
 [13] "Weight.A..g."                                         
 [14] "Weight.B..g."                                         
 [15] "Water..weight.diff."                                  
 [16] "Water..pumped."                                       
 [17] "RGB"                                                  
 [18] "FLUO"                                                 
 [19] "NIR"                                                  
 [20] "OTHER"                                                
 [21] "RESULT_VIS_MARKER_POS_1_LEFT_X"                       
 [22] "RESULT_VIS_MARKER_POS_1_RIGHT_X"                      
 [23] "RESULT_VIS_MARKER_POS_2_LEFT_X"                       
 [24] "RESULT_VIS_MARKER_POS_2_RIGHT_X"                      
 [25] "RESULT_VIS_MARKER_POS_3_LEFT_X"                       
 [26] "RESULT_VIS_MARKER_POS_3_RIGHT_X"                      
 [27] "fluo.side"                                            
 [28] "fluo.top"                                             
 [29] "mark1.y..percent."                                    
 [30] "mark2.y..percent."                                    
 [31] "mark3.y..percent."                                    
 [32] "nir.side"                                             
 [33] "nir.top"                                              
 [34] "side.area..px."                                       
 [35] "side.area.avg"                                        
 [36] "side.area.max"                                        
 [37] "side.area.median"                                     
 [38] "side.area.min"                                        
 [39] "side.area.norm..mm.2."                                
 [40] "side.border.length..px."                              
 [41] "side.border.length.norm..mm."                         
 [42] "side.compactness.01..relative."                       
 [43] "side.compactness.16..relative."                       
 [44] "side.fluo.filled.percent"                             
 [45] "side.fluo.filled.pixels"                              
 [46] "side.fluo.histogram.bin.1.0_25"                       
 [47] "side.fluo.histogram.bin.10.229_255"                   
 [48] "side.fluo.histogram.bin.2.25_51"                      
 [49] "side.fluo.histogram.bin.3.51_76"                      
 [50] "side.fluo.histogram.bin.4.76_102"                     
 [51] "side.fluo.histogram.bin.5.102_127"                    
 [52] "side.fluo.histogram.bin.6.127_153"                    
 [53] "side.fluo.histogram.bin.7.153_178"                    
 [54] "side.fluo.histogram.bin.8.178_204"                    
 [55] "side.fluo.histogram.bin.9.204_229"                    
 [56] "side.fluo.histogram.phenol.bin.1.0_25"                
 [57] "side.fluo.histogram.phenol.bin.10.229_255"            
 [58] "side.fluo.histogram.phenol.bin.2.25_51"               
 [59] "side.fluo.histogram.phenol.bin.3.51_76"               
 [60] "side.fluo.histogram.phenol.bin.4.76_102"              
 [61] "side.fluo.histogram.phenol.bin.5.102_127"             
 [62] "side.fluo.histogram.phenol.bin.6.127_153"             
 [63] "side.fluo.histogram.phenol.bin.7.153_178"             
 [64] "side.fluo.histogram.phenol.bin.8.178_204"             
 [65] "side.fluo.histogram.phenol.bin.9.204_229"             
 [66] "side.fluo.histogram.ratio.bin.1.0_25"                 
 [67] "side.fluo.histogram.ratio.bin.10.229_255"             
 [68] "side.fluo.histogram.ratio.bin.2.25_51"                
 [69] "side.fluo.histogram.ratio.bin.3.51_76"                
 [70] "side.fluo.histogram.ratio.bin.4.76_102"               
 [71] "side.fluo.histogram.ratio.bin.5.102_127"              
 [72] "side.fluo.histogram.ratio.bin.6.127_153"              
 [73] "side.fluo.histogram.ratio.bin.7.153_178"              
 [74] "side.fluo.histogram.ratio.bin.8.178_204"              
 [75] "side.fluo.histogram.ratio.bin.9.204_229"              
 [76] "side.fluo.intensity.average..relative."               
 [77] "side.fluo.intensity.chlorophyl.average..relative."    
 [78] "side.fluo.intensity.chlorophyl.sum"                   
 [79] "side.fluo.intensity.classic.sum"                      
 [80] "side.fluo.intensity.phenol.average..relative."        
 [81] "side.fluo.intensity.phenol.chlorophyl.ratio..c.p."    
 [82] "side.fluo.intensity.phenol.plant_weight"              
 [83] "side.fluo.intensity.phenol.plant_weight_drought_loss" 
 [84] "side.fluo.intensity.phenol.sum"                       
 [85] "side.fluo.normalized.histogram.bin.1.0_25"            
 [86] "side.fluo.normalized.histogram.bin.10.229_255"        
 [87] "side.fluo.normalized.histogram.bin.2.25_51"           
 [88] "side.fluo.normalized.histogram.bin.3.51_76"           
 [89] "side.fluo.normalized.histogram.bin.4.76_102"          
 [90] "side.fluo.normalized.histogram.bin.5.102_127"         
 [91] "side.fluo.normalized.histogram.bin.6.127_153"         
 [92] "side.fluo.normalized.histogram.bin.7.153_178"         
 [93] "side.fluo.normalized.histogram.bin.8.178_204"         
 [94] "side.fluo.normalized.histogram.bin.9.204_229"         
 [95] "side.fluo.normalized.histogram.phenol.bin.1.0_25"     
 [96] "side.fluo.normalized.histogram.phenol.bin.10.229_255" 
 [97] "side.fluo.normalized.histogram.phenol.bin.2.25_51"    
 [98] "side.fluo.normalized.histogram.phenol.bin.3.51_76"    
 [99] "side.fluo.normalized.histogram.phenol.bin.4.76_102"   
[100] "side.fluo.normalized.histogram.phenol.bin.5.102_127"  
[101] "side.fluo.normalized.histogram.phenol.bin.6.127_153"  
[102] "side.fluo.normalized.histogram.phenol.bin.7.153_178"  
[103] "side.fluo.normalized.histogram.phenol.bin.8.178_204"  
[104] "side.fluo.normalized.histogram.phenol.bin.9.204_229"  
[105] "side.fluo.normalized.histogram.ratio.bin.1.0_25"      
[106] "side.fluo.normalized.histogram.ratio.bin.10.229_255"  
[107] "side.fluo.normalized.histogram.ratio.bin.2.25_51"     
[108] "side.fluo.normalized.histogram.ratio.bin.3.51_76"     
[109] "side.fluo.normalized.histogram.ratio.bin.4.76_102"    
[110] "side.fluo.normalized.histogram.ratio.bin.5.102_127"   
[111] "side.fluo.normalized.histogram.ratio.bin.6.127_153"   
[112] "side.fluo.normalized.histogram.ratio.bin.7.153_178"   
[113] "side.fluo.normalized.histogram.ratio.bin.8.178_204"   
[114] "side.fluo.normalized.histogram.ratio.bin.9.204_229"   
[115] "side.height..mm."                                     
[116] "side.height.norm..mm."                                
[117] "side.hull.area..px."                                  
[118] "side.hull.area.norm..mm.2."                           
[119] "side.hull.centroid.x..px."                            
[120] "side.hull.centroid.x.norm..mm."                       
[121] "side.hull.centroid.y..px."                            
[122] "side.hull.centroid.y.norm..mm."                       
[123] "side.hull.circularity..relative."                     
[124] "side.hull.circumcircle.d..px."                        
[125] "side.hull.circumcircle.d.norm..mm."                   
[126] "side.hull.circumcircle.x..px."                        
[127] "side.hull.circumcircle.x.norm..mm."                   
[128] "side.hull.circumcircle.y..px."                        
[129] "side.hull.circumcircle.y.norm..mm."                   
[130] "side.hull.fillgrade..percent."                        
[131] "side.hull.points..hullpoints."                        
[132] "side.ndvi..relative."                                 
[133] "side.ndvi.vis.blue.intensity.average..relative."      
[134] "side.ndvi.vis.green.intensity.average..relative."     
[135] "side.ndvi.vis.red.intensity.average..relative."       
[136] "side.nir.filled.percent"                              
[137] "side.nir.filled.pixels"                               
[138] "side.nir.histogram.bin.1.0_25"                        
[139] "side.nir.histogram.bin.10.229_255"                    
[140] "side.nir.histogram.bin.2.25_51"                       
[141] "side.nir.histogram.bin.3.51_76"                       
[142] "side.nir.histogram.bin.4.76_102"                      
[143] "side.nir.histogram.bin.5.102_127"                     
[144] "side.nir.histogram.bin.6.127_153"                     
[145] "side.nir.histogram.bin.7.153_178"                     
[146] "side.nir.histogram.bin.8.178_204"                     
[147] "side.nir.histogram.bin.9.204_229"                     
[148] "side.nir.histogram.phenol.bin.1.0_25"                 
[149] "side.nir.histogram.phenol.bin.10.229_255"             
[150] "side.nir.histogram.phenol.bin.2.25_51"                
[151] "side.nir.histogram.phenol.bin.3.51_76"                
[152] "side.nir.histogram.phenol.bin.4.76_102"               
[153] "side.nir.histogram.phenol.bin.5.102_127"              
[154] "side.nir.histogram.phenol.bin.6.127_153"              
[155] "side.nir.histogram.phenol.bin.7.153_178"              
[156] "side.nir.histogram.phenol.bin.8.178_204"              
[157] "side.nir.histogram.phenol.bin.9.204_229"              
[158] "side.nir.histogram.ratio.bin.1.0_25"                  
[159] "side.nir.histogram.ratio.bin.10.229_255"              
[160] "side.nir.histogram.ratio.bin.2.25_51"                 
[161] "side.nir.histogram.ratio.bin.3.51_76"                 
[162] "side.nir.histogram.ratio.bin.4.76_102"                
[163] "side.nir.histogram.ratio.bin.5.102_127"               
[164] "side.nir.histogram.ratio.bin.6.127_153"               
[165] "side.nir.histogram.ratio.bin.7.153_178"               
[166] "side.nir.histogram.ratio.bin.8.178_204"               
[167] "side.nir.histogram.ratio.bin.9.204_229"               
[168] "side.nir.intensity.average..relative."                
[169] "side.nir.intensity.sum"                               
[170] "side.nir.normalized.histogram.bin.1.0_25"             
[171] "side.nir.normalized.histogram.bin.10.229_255"         
[172] "side.nir.normalized.histogram.bin.2.25_51"            
[173] "side.nir.normalized.histogram.bin.3.51_76"            
[174] "side.nir.normalized.histogram.bin.4.76_102"           
[175] "side.nir.normalized.histogram.bin.5.102_127"          
[176] "side.nir.normalized.histogram.bin.6.127_153"          
[177] "side.nir.normalized.histogram.bin.7.153_178"          
[178] "side.nir.normalized.histogram.bin.8.178_204"          
[179] "side.nir.normalized.histogram.bin.9.204_229"          
[180] "side.nir.normalized.histogram.phenol.bin.1.0_25"      
[181] "side.nir.normalized.histogram.phenol.bin.10.229_255"  
[182] "side.nir.normalized.histogram.phenol.bin.2.25_51"     
[183] "side.nir.normalized.histogram.phenol.bin.3.51_76"     
[184] "side.nir.normalized.histogram.phenol.bin.4.76_102"    
[185] "side.nir.normalized.histogram.phenol.bin.5.102_127"   
[186] "side.nir.normalized.histogram.phenol.bin.6.127_153"   
[187] "side.nir.normalized.histogram.phenol.bin.7.153_178"   
[188] "side.nir.normalized.histogram.phenol.bin.8.178_204"   
[189] "side.nir.normalized.histogram.phenol.bin.9.204_229"   
[190] "side.nir.normalized.histogram.ratio.bin.1.0_25"       
[191] "side.nir.normalized.histogram.ratio.bin.10.229_255"   
[192] "side.nir.normalized.histogram.ratio.bin.2.25_51"      
[193] "side.nir.normalized.histogram.ratio.bin.3.51_76"      
[194] "side.nir.normalized.histogram.ratio.bin.4.76_102"     
[195] "side.nir.normalized.histogram.ratio.bin.5.102_127"    
[196] "side.nir.normalized.histogram.ratio.bin.6.127_153"    
[197] "side.nir.normalized.histogram.ratio.bin.7.153_178"    
[198] "side.nir.normalized.histogram.ratio.bin.8.178_204"    
[199] "side.nir.normalized.histogram.ratio.bin.9.204_229"    
[200] "side.nir.skeleton.intensity.average..relative."       
[201] "side.nir.wetness.average..percent."                   
[202] "side.nir.wetness.plant_weight"                        
[203] "side.nir.wetness.plant_weight_drought_loss"           
[204] "side.vis.hue.average"                                 
[205] "side.vis.hue.histogram.ratio.bin.1.0_25"              
[206] "side.vis.hue.histogram.ratio.bin.10.229_255"          
[207] "side.vis.hue.histogram.ratio.bin.2.25_51"             
[208] "side.vis.hue.histogram.ratio.bin.3.51_76"             
[209] "side.vis.hue.histogram.ratio.bin.4.76_102"            
[210] "side.vis.hue.histogram.ratio.bin.5.102_127"           
[211] "side.vis.hue.histogram.ratio.bin.6.127_153"           
[212] "side.vis.hue.histogram.ratio.bin.7.153_178"           
[213] "side.vis.hue.histogram.ratio.bin.8.178_204"           
[214] "side.vis.hue.histogram.ratio.bin.9.204_229"           
[215] "side.vis.hue.max"                                     
[216] "side.vis.hue.min"                                     
[217] "side.vis.normalized.histogram.ratio.bin.1.0_25"       
[218] "side.vis.normalized.histogram.ratio.bin.10.229_255"   
[219] "side.vis.normalized.histogram.ratio.bin.2.25_51"      
[220] "side.vis.normalized.histogram.ratio.bin.3.51_76"      
[221] "side.vis.normalized.histogram.ratio.bin.4.76_102"     
[222] "side.vis.normalized.histogram.ratio.bin.5.102_127"    
[223] "side.vis.normalized.histogram.ratio.bin.6.127_153"    
[224] "side.vis.normalized.histogram.ratio.bin.7.153_178"    
[225] "side.vis.normalized.histogram.ratio.bin.8.178_204"    
[226] "side.vis.normalized.histogram.ratio.bin.9.204_229"    
[227] "side.width..mm."                                      
[228] "side.width.norm..mm."                                 
[229] "top.area..px."                                        
[230] "top.border.length..px."                               
[231] "top.compactness.01..relative."                        
[232] "top.compactness.16..relative."                        
[233] "top.fluo.filled.percent"                              
[234] "top.fluo.filled.pixels"                               
[235] "top.fluo.histogram.bin.1.0_25"                        
[236] "top.fluo.histogram.bin.10.229_255"                    
[237] "top.fluo.histogram.bin.2.25_51"                       
[238] "top.fluo.histogram.bin.3.51_76"                       
[239] "top.fluo.histogram.bin.4.76_102"                      
[240] "top.fluo.histogram.bin.5.102_127"                     
[241] "top.fluo.histogram.bin.6.127_153"                     
[242] "top.fluo.histogram.bin.7.153_178"                     
[243] "top.fluo.histogram.bin.8.178_204"                     
[244] "top.fluo.histogram.bin.9.204_229"                     
[245] "top.fluo.histogram.phenol.bin.1.0_25"                 
[246] "top.fluo.histogram.phenol.bin.10.229_255"             
[247] "top.fluo.histogram.phenol.bin.2.25_51"                
[248] "top.fluo.histogram.phenol.bin.3.51_76"                
[249] "top.fluo.histogram.phenol.bin.4.76_102"               
[250] "top.fluo.histogram.phenol.bin.5.102_127"              
[251] "top.fluo.histogram.phenol.bin.6.127_153"              
[252] "top.fluo.histogram.phenol.bin.7.153_178"              
[253] "top.fluo.histogram.phenol.bin.8.178_204"              
[254] "top.fluo.histogram.phenol.bin.9.204_229"              
[255] "top.fluo.histogram.ratio.bin.1.0_25"                  
[256] "top.fluo.histogram.ratio.bin.10.229_255"              
[257] "top.fluo.histogram.ratio.bin.2.25_51"                 
[258] "top.fluo.histogram.ratio.bin.3.51_76"                 
[259] "top.fluo.histogram.ratio.bin.4.76_102"                
[260] "top.fluo.histogram.ratio.bin.5.102_127"               
[261] "top.fluo.histogram.ratio.bin.6.127_153"               
[262] "top.fluo.histogram.ratio.bin.7.153_178"               
[263] "top.fluo.histogram.ratio.bin.8.178_204"               
[264] "top.fluo.histogram.ratio.bin.9.204_229"               
[265] "top.fluo.intensity.average..relative...pix."          
[266] "top.fluo.intensity.chlorophyl.average..relative."     
[267] "top.fluo.intensity.chlorophyl.sum"                    
[268] "top.fluo.intensity.classic.sum"                       
[269] "top.fluo.intensity.phenol.average..relative."         
[270] "top.fluo.intensity.phenol.chlorophyl.ratio..relative."
[271] "top.fluo.intensity.phenol.plant_weight"               
[272] "top.fluo.intensity.phenol.plant_weight_drought_loss"  
[273] "top.fluo.intensity.phenol.sum"                        
[274] "top.hull.area..px."                                   
[275] "top.hull.centroid.x..px."                             
[276] "top.hull.centroid.y..px."                             
[277] "top.hull.circularity..relative."                      
[278] "top.hull.circumcircle.d..px."                         
[279] "top.hull.circumcircle.x..px."                         
[280] "top.hull.circumcircle.y..px."                         
[281] "top.hull.fillgrade..percent."                         
[282] "top.hull.points..hullpoints."                         
[283] "top.main.axis.normalized.distance.avg..mm."           
[284] "top.main.axis.rotation..degree."                      
[285] "top.ndvi..relative."                                  
[286] "top.ndvi.vis.blue.intensity.average..relative."       
[287] "top.ndvi.vis.green.intensity.average..relative."      
[288] "top.ndvi.vis.red.intensity.average..relative."        
[289] "top.nir.filled.percent"                               
[290] "top.nir.filled.pixels"                                
[291] "top.nir.histogram.bin.1.0_25"                         
[292] "top.nir.histogram.bin.10.229_255"                     
[293] "top.nir.histogram.bin.2.25_51"                        
[294] "top.nir.histogram.bin.3.51_76"                        
[295] "top.nir.histogram.bin.4.76_102"                       
[296] "top.nir.histogram.bin.5.102_127"                      
[297] "top.nir.histogram.bin.6.127_153"                      
[298] "top.nir.histogram.bin.7.153_178"                      
[299] "top.nir.histogram.bin.8.178_204"                      
[300] "top.nir.histogram.bin.9.204_229"                      
[301] "top.nir.histogram.phenol.bin.1.0_25"                  
[302] "top.nir.histogram.phenol.bin.10.229_255"              
[303] "top.nir.histogram.phenol.bin.2.25_51"                 
[304] "top.nir.histogram.phenol.bin.3.51_76"                 
[305] "top.nir.histogram.phenol.bin.4.76_102"                
[306] "top.nir.histogram.phenol.bin.5.102_127"               
[307] "top.nir.histogram.phenol.bin.6.127_153"               
[308] "top.nir.histogram.phenol.bin.7.153_178"               
[309] "top.nir.histogram.phenol.bin.8.178_204"               
[310] "top.nir.histogram.phenol.bin.9.204_229"               
[311] "top.nir.histogram.ratio.bin.1.0_25"                   
[312] "top.nir.histogram.ratio.bin.10.229_255"               
[313] "top.nir.histogram.ratio.bin.2.25_51"                  
[314] "top.nir.histogram.ratio.bin.3.51_76"                  
[315] "top.nir.histogram.ratio.bin.4.76_102"                 
[316] "top.nir.histogram.ratio.bin.5.102_127"                
[317] "top.nir.histogram.ratio.bin.6.127_153"                
[318] "top.nir.histogram.ratio.bin.7.153_178"                
[319] "top.nir.histogram.ratio.bin.8.178_204"                
[320] "top.nir.histogram.ratio.bin.9.204_229"                
[321] "top.nir.intensity.average..relative...pix."           
[322] "top.nir.intensity.sum"                                
[323] "top.nir.wetness.average..percent."                    
[324] "top.nir.wetness.plant_weight"                         
[325] "top.nir.wetness.plant_weight_drought_loss"            
[326] "top.vis.hue.average"                                  
[327] "top.vis.hue.histogram.ratio.bin.1.0_25"               
[328] "top.vis.hue.histogram.ratio.bin.10.229_255"           
[329] "top.vis.hue.histogram.ratio.bin.2.25_51"              
[330] "top.vis.hue.histogram.ratio.bin.3.51_76"              
[331] "top.vis.hue.histogram.ratio.bin.4.76_102"             
[332] "top.vis.hue.histogram.ratio.bin.5.102_127"            
[333] "top.vis.hue.histogram.ratio.bin.6.127_153"            
[334] "top.vis.hue.histogram.ratio.bin.7.153_178"            
[335] "top.vis.hue.histogram.ratio.bin.8.178_204"            
[336] "top.vis.hue.histogram.ratio.bin.9.204_229"            
[337] "top.vis.hue.max"                                      
[338] "top.vis.hue.min"                                      
[339] "vis.side"                                             
[340] "vis.top"                                              
[341] "volume.fluo.iap"                                      
[342] "volume.fluo.plant_weight.iap"                         
[343] "volume.iap..px.3."                                    
[344] "volume.iap_max"                                       
[345] "volume.lt..px.3."                                     
[346] "weight.dry.real..mm."                                 
[347] "weight.fresh.real..mm."                               
> rm(list=ls(all=TRUE))
> # TODO: Add comment
> # 
> # Author: Entzian
> ###############################################################################
> 
> "%debug%" <- function(debug, debugNumber) {
+ 	if (debug) {
+ 		print(paste("DebugBreakPoint: ", debugNumber))
+ 	}
+ }
> 
> "%checkEqual%" <- function(treat, seconTreat) {
+ 	if(treat == seconTreat) {
+ 		print("SecondTreatment are the same value as Treatment so it set to \"none\"")
+ 		return("none")
+ 	} else {
+ 		return(seconTreat)
+ 	}
+ }
> 
> "%errorReport%" <- function(errorDescriptor, typOfError="notExists") {
+ 	#overallList$debug %debug% "%errorReport%"
+ 	if (length(errorDescriptor) > 0) {
+ 		if (tolower(typOfError) == "notexists"){
+ 			print(paste("No plotting, because the descriptor(s) (",errorDescriptor,") don't exists!", sep=""))
+ 			
+ 		} else if (tolower(typOfError) == "notnumericorallzero") {
+ 			#plotDummy(overallList)
+ 			print(paste("Dummy plotting for this descriptor(s) ((",errorDescriptor,"), because all zero or not numeric!", sep=""))
+ 		}
+ 	}
+ }
> 
> "%exists%" <- function(standardValue, argsValue){
+ 	
+ 	if(!is.na(argsValue) & argsValue != "")	{
+ 		return(argsValue)
+ 	} else {
+ 		return(standardValue)
+ 	}
+ }
> 
> "%getData%" <- function(separation, fileName){	
+ 	#separation <- ";"
+ 	print("... Read input file")
+ 	
+ 	if(file.exists(fileName)) {
+ 		preScanForPointOrComma <- scan(file=fileName, what=character(0), nlines=2, sep="\n")
+ 		preScanForPointOrComma <- paste(preScanForPointOrComma[2],",.", sep="")
+ 		allCharacterSeparated <- table(strsplit(toupper(preScanForPointOrComma), '')[[1]])
+ 		
+ 		if(allCharacterSeparated["."] > allCharacterSeparated[","]) {
+ 			print("... english Version")
+ 			return(read.csv(fileName, header=TRUE, sep=separation, fileEncoding="ISO-8859-1", encoding="UTF-8"))
+ 		} else {
+ 			print("... german Version")
+ 			return(read.csv2(fileName, header=TRUE, sep=separation, fileEncoding="ISO-8859-1", encoding="UTF-8"))
+ 		}
+ 	} else {
+ 		return("error")
+ 	}
+ 	
+ #	if (englischVersion) {
+ #		return(read.csv(fileName, header=TRUE, sep=separation, fileEncoding="ISO-8859-1", encoding="UTF-8"))
+ #	} else {
+ #		return(read.csv2(fileName, header=TRUE, sep=separation, fileEncoding="ISO-8859-1", encoding="UTF-8"))
+ #	}
+ }
> 
> "%checkIfDescriptorExists%" <- function(descriptor, dataSet) {
+ 	if (is.data.frame(dataSet)) {
+ 		return(descriptor %in% colnames(dataSet))
+ 	} else {
+ 		return(descriptor %in% dataSet)
+ 	}	
+ }
> 
> "%GetDescriptorsAfterCheckIfDescriptorExists%" <- function(descriptor, dataSet) {
+ 	return(descriptor[descriptor %checkIfDescriptorExists% dataSet])
+ 	
+ }
> 
> "%GetDescriptorAfterCheckIfDescriptorNotExists%" <- function(descriptor, dataSet) {
+ 	return(descriptor[!descriptor %checkIfDescriptorExists% dataSet])
+ 	
+ }
> 
> "%contactAllWithAll%" <- function(vector1, vector2) {
+ 	vectorTemp <- character(0)
+ 	for(k in vector2) {
+ 		if(k=="none") {
+ 			vectorTemp <- c(vectorTemp,vector1)
+ 		} else {
+ 			vectorTemp <- c(vectorTemp,paste(vector1,k, sep = "#"))
+ 		}
+ 	}
+ 	return(vectorTemp)
+ }
> 
> "%allColnamesWithoutThisOnes%" <- function(dataSet, withoutColNamesVector) {
+ 	return(colnames(dataSet)[!colnames(dataSet) %in% withoutColNamesVector])
+ }
> 
> buildDataSet <- function(workingDataSet, overallResult, colname, index) {
+ 	
+ 	if(length(colname) > 0) {
+ 		for(n in 1:length(colname)) {
+ 			workingDataSet <- cbind(workingDataSet, overallResult[paste(colname[n],index, sep="")])
+ 		}	
+ 		return(workingDataSet)
+ 	}
+ }
> 
> 
> reNameHist <-  function(colNameWichMustBind) {
+ 	colNameWichMustBind <- as.character(colNameWichMustBind)
+ 	positions <- which(strsplit(colNameWichMustBind, '')[[1]]=='.')
+ 	colNameWichMustBind <- substr(colNameWichMustBind,positions[length(positions)]+1,nchar(colNameWichMustBind))
+ 	
+ 	regExpressionSpezialCharacter <- "\\_"
+ 	colNameWichMustBind <- gsub(regExpressionSpezialCharacter,"..",colNameWichMustBind)
+ 	
+ 	return(colNameWichMustBind)	
+ }
> 
> reNameColumn <-  function(plotThisValues, columnNameReplace="name", columnNameWhichUsedToReplace="primaerTreatment") {
+ 	if(!is.null(plotThisValues[columnNameWhichUsedToReplace])){
+ 		plotThisValues[columnNameReplace] <- plotThisValues[columnNameWhichUsedToReplace]
+ 	}
+ 	
+ 	return(plotThisValues)
+ }
> 
> swap <- function(listWithTwoParameter) {
+ 	temp <- listWithTwoParameter[[1]]
+ 	listWithTwoParameter[[1]] <- listWithTwoParameter[[2]]
+ 	listWithTwoParameter[[2]] <- temp
+ 	return(listWithTwoParameter)
+ }
> 
> changeWhenTreatmentNoneAndSecondTreatmentNotNone <- function(listOfTreat, listOfFilterTreat) {
+ 	if(listOfTreat[[1]] == "none" & listOfTreat[[2]] != "none") {
+ 		print("The values of Treatment and SecondTreamt are changed (filter values also)")
+ 		return(list(swap(listOfTreat),swap(listOfFilterTreat)))	
+ 	} else {
+ 		return(list(listOfTreat,listOfFilterTreat))
+ 	}
+ }
> 
> checkOfTreatments <- function(args, treatment, filterTreatment, secondTreatment, filterSecondTreatment, workingDataSet, debug) {
+ 	debug %debug% "Start of checkOfTreatments()"
+ 	
+ 	treatment <- treatment %exists% args[4]
+ 	secondTreatment <- secondTreatment %exists% args[5]
+ 	secondTreatment <- treatment %checkEqual% secondTreatment
+ 	
+ 	listOfTreat <- list(treatment=treatment, secondTreatment=secondTreatment)
+ 	listOfFilterTreat <- list(filterTreatment=filterTreatment, filterSecondTreatment=filterSecondTreatment)	## wird erstmal noch nichts weiter mit gemacht! nur geswapt falls notwendig
+ 
+ 	for(k in names(listOfTreat)){
+ 		if(listOfTreat[[k]] != "none") {
+ 			#overallTreat <- list(iniDataSet=workingDataSet, descriptor=listOfTreat[[k]], debug=debug, stoppTheCalculation = FALSE, errorDescriptor=character())
+ 			#overallTreat <- list(iniDataSet=workingDataSet, descriptor=listOfTreat[[k]], debug=debug, stoppTheCalculation = FALSE)
+ 			descriptorVector <- getVector(preprocessingOfDescriptor(listOfTreat[[k]], workingDataSet))
+ 			
+ 			if(!is.null(descriptorVector)) {
+ 				descriptorVector <- getVector(checkIfDescriptorIsNaOrAllZero(descriptorVector, workingDataSet, FALSE))
+ 				
+ 				if(!is.null(descriptorVector)) {
+ 					listOfTreat[[k]] <- descriptorVector
+ 				} 
+ 			} 
+ 			
+ 			if(is.null(descriptorVector)) {
+ 				print(paste(k, "set to \"none\""))
+ 				listOfTreat[[k]] <- "none"
+ 			}
+ 		}
+ 	}
+ 	
+ 	listOfTreatAndFilterTreat <- changeWhenTreatmentNoneAndSecondTreatmentNotNone(listOfTreat, listOfFilterTreat)
+ 	debug %debug% "End of checkOfTreatments()"
+ 	return(listOfTreatAndFilterTreat)
+ }
> 
> overallCheckIfDescriptorIsNaOrAllZero <- function(overallList) {
+ 	overallList$debug %debug% "overallCheckIfDescriptorIsNaOrAllZero()"	
+ 	
+ 	if(sum(!is.na(overallList$nBoxDes)) > 0) {
+ 		if(overallList$debug) {print("... nBoxplot")}
+ 		for(n in 1:length(overallList$nBoxDes)) {
+ 			if(!is.na(overallList$nBoxDes[[n]])) {
+ 				overallList$nBoxDes[n] <- checkIfDescriptorIsNaOrAllZero(overallList$nBoxDes[[n]], overallList$iniDataSet)
+ 			}
+ 		}
+ 		names(overallList$nBoxDes) <- c(1:length(overallList$nBoxDes))
+ 	} else {
+ 		print("... all in nBoxplot is 'NA'")
+ 	}
+ 	
+ 	if(sum(!is.na(overallList$boxDes)) > 0) {
+ 		if(overallList$debug) {print("... Boxplot")}
+ 		for(n in 1:length(overallList$boxDes)) {
+ 			if(!is.na(overallList$boxDes[[n]])) {
+ 				overallList$boxDes[[n]] <- checkIfDescriptorIsNaOrAllZero(overallList$boxDes[[n]], overallList$iniDataSet)
+ 			}
+ 		}
+ 		names(overallList$boxDes) <- c(1:length(overallList$boxDes))
+ 	} else {
+ 		print("... all in Boxplot is 'NA'")
+ 	}
+ 
+ 	if(sum(!is.na(overallList$boxStackDes)) > 0) {
+ 		if(overallList$debug) {print("... stackedBoxplot")}
+ 		for(n in 1:length(overallList$boxStackDes)) {
+ 			if(!is.na(overallList$boxStackDes[[n]])) {
+ 				overallList$boxStackDes[[n]] <- checkIfDescriptorIsNaOrAllZero(overallList$boxStackDes[[n]], overallList$iniDataSet)
+ 			}
+ 		}
+ 		names(overallList$boxStackDes) <- c(1:length(overallList$boxStackDes))
+ 	} else {
+ 		print("... all in stackedBoxplot is 'NA'")
+ 	}
+ 	
+ 	if(!sum(!is.na(overallList$boxStackDes)) > 0 && !sum(!is.na(overallList$boxDes)) > 0 && !sum(!is.na(overallList$nBoxDes)) > 0) {
+ 		print("... no descriptor set (all descriptors are zero or NA) - the program stopp!")
+ 		overallList$stoppTheCalculation <- TRUE 
+ 	}
+ 	
+ 	return(overallList)
+ }
> 
> checkIfDescriptorIsNaOrAllZero <- function(descriptorVector, iniDataSet, isDescriptor = TRUE){
+ 	#overallList$debug %debug% "checkIfDescriptorIsNaOrAllZero()"
+ 	descriptorVector <- as.vector(descriptorVector)
+ 	#descriptorVector <- getVector(descriptorVector)
+ 	tempDescriptor <- descriptorVector 
+ 	if(isDescriptor) {
+ 		descriptorVector <- descriptorVector[colSums(!is.na(iniDataSet[descriptorVector])) != 0 & colSums(iniDataSet[descriptorVector] *1, na.rm = TRUE) > 0]
+ 	} else {
+ 		descriptorVector <- descriptorVector[colSums(!is.na(iniDataSet[descriptorVector])) != 0]
+ 	}
+ 	errorDescriptor <- tempDescriptor %GetDescriptorAfterCheckIfDescriptorNotExists% descriptorVector
+ 
+ 	if (length(errorDescriptor) > 0) {
+ 		errorDescriptor %errorReport% "NotNumericOrAllZero"	
+ 	}
+ 	
+ 	if(length(descriptorVector) > 0) {
+ 		return(as.data.frame(descriptorVector))
+ 	} else {
+ 		return(NA)
+ 	}
+ }
> 
> overallChangeName <- function(overallList) {
+ 	overallList$debug %debug% "overallChangeSaveName()"	
+ 	
+ 	if(!is.null(overallList$saveName_nBoxDes)) {
+ 		if(overallList$debug) {print("... nBoxplot")}
+ 		overallList$saveName_nBoxDes <- changeSaveName(overallList$saveName_nBoxDes)
+ 		names(overallList$saveName_nBoxDes) <- c(1:length(overallList$saveName_nBoxDes))
+ 		
+ 		overallList$nBoxDesName <- as.list(overallList$nBoxDesName)
+ 		names(overallList$nBoxDesName) <- c(1:length(overallList$nBoxDesName))
+ 	}
+ 	
+ 	if(!is.null(overallList$saveName_boxDes)) {
+ 		if(overallList$debug) {print("... Boxplot")}
+ 		overallList$saveName_boxDes <- changeSaveName(overallList$saveName_boxDes)
+ 		names(overallList$saveName_boxDes) <- c(1:length(overallList$saveName_boxDes))
+ 		
+ 		overallList$boxDesName <- as.list(overallList$boxDesName)
+ 		names(overallList$boxDesName) <- c(1:length(overallList$boxDesName))
+ 	}
+ 	
+ 	if(!is.null(overallList$saveName_boxStackDes)) {
+ 		if(overallList$debug) {print("... stackedBoxplot")}
+ 		overallList$saveName_boxStackDes <- changeSaveName(overallList$saveName_boxStackDes)
+ 		names(overallList$saveName_boxStackDes) <- c(1:length(overallList$saveName_boxStackDes))
+ 		
+ 		overallList$boxStackDesName <- as.list(overallList$boxStackDesName)
+ 		names(overallList$boxStackDesName) <- c(1:length(overallList$boxStackDesName))
+ 	}
+ 	
+ 	return(overallList)
+ }
> 
> changeSaveName <- function(saveNameVector) {
+ 	#Sollte hier nicht noch die Leerzeichen durch Punkte ersetzt werden?
+ 	saveNameVector <- gsub("\\$",";",substr(saveNameVector,1,70))
+ 	saveNameVector <- gsub("\\^", "", saveNameVector);
+ 	
+ 	return(as.list(saveNameVector))
+ }
> 
> preprocessingOfValues <- function(value, isColValue=FALSE, replaceString=".") {
+ 
+ 	if (!is.null(value)) {
+ 		regExpressionCol <- "[^[:alnum:]|^_]|[[:space:]|\\^]"
+ 		if(isColValue) {
+ 			value <- strsplit(value, "$", fixed=TRUE)
+ 		}
+ 		
+ 		for(n in 1:length(value)) {
+ 			value[[n]] <- gsub(regExpressionCol,replaceString,value[[n]])
+ 		}
+ 	} else {
+ 			return("none")
+ 		}
+ 	return(value)
+ }
> 
> overallPreprocessingOfDescriptor <- function(overallList) {
+ 	overallList$debug %debug% "overallPreprocessingOfDescriptor()"	
+ 	
+ 	if(!is.null(overallList$nBoxDes)) {
+ 		if(overallList$debug) {print("... nBoxplot")}
+ 		for(n in 1:length(overallList$nBoxDes)) {
+ 			overallList$nBoxDes[n] <- preprocessingOfDescriptor(overallList$nBoxDes[[n]], overallList$iniDataSet)
+ 		}
+ 	} else {
+ 		print("... nBoxplot is NULL")
+ 	} 
+ 	
+ 	if(!is.null(overallList$boxDes)) {
+ 		if(overallList$debug) {print("... Boxplot")}
+ 		for(n in 1:length(overallList$boxDes)) {
+ 			overallList$boxDes[n] <- preprocessingOfDescriptor(overallList$boxDes[[n]], overallList$iniDataSet)
+ 		}
+ 	} else {
+ 		print("... Boxplot is NULL")
+ 	} 
+ 	
+ 	if(!is.null(overallList$boxStackDes)) {
+ 		if(overallList$debug) {print("... stackedBoxplot")}
+ 		for(n in 1:length(overallList$boxStackDes)) {
+ 			overallList$boxStackDes[n] <- preprocessingOfDescriptor(overallList$boxStackDes[[n]], overallList$iniDataSet)
+ 		}
+ 	} else {
+ 		print("... stackedBoxplot is NULL")
+ 	} 
+ 	
+ 	if(!sum(!is.na(overallList$boxStackDes)) > 0 && !sum(!is.na(overallList$boxDes)) > 0 && !sum(!is.na(overallList$nBoxDes)) > 0) {
+ 		print("... no descriptor set - this pass stopped!")
+ 		overallList$stoppTheCalculation <- TRUE
+ 	}
+ 	
+ 	return(overallList)
+ }
> 
> preprocessingOfDescriptor <- function(descriptorVector, iniDataSet) {
+ 	#overallList$debug %debug% "preprocessingOfDescriptor()"
+ 	descriptorVector <- unlist(preprocessingOfValues(descriptorVector, TRUE))	#descriptor is value for yAxis
+ 	
+ 	errorDescriptor <- descriptorVector %GetDescriptorAfterCheckIfDescriptorNotExists% iniDataSet 
+ 	descriptorVector <- descriptorVector %GetDescriptorsAfterCheckIfDescriptorExists% iniDataSet
+ 	if (length(errorDescriptor)>0) {
+ 		errorDescriptor %errorReport% "notExists"
+ 	} 
+ 	
+ 	if(length(descriptorVector) > 0) {
+ 		return(as.data.frame(descriptorVector))
+ 	} else {
+ 		return(NA)
+ 	}	
+ }
> 
> preprocessingOfxAxisValue <- function(overallList) {
+ 	overallList$debug %debug% "preprocessingOfxAxisValue()"
+ 	overallList$xAxis <- unlist(preprocessingOfValues(overallList$xAxis, TRUE))
+ 	
+ 	if (overallList$filterXaxis != "none") {
+ 		overallList$filterXaxis <- as.numeric(strsplit(overallList$filterXaxis, "$", fixed=TRUE)[[1]])
+ 	} else {
+ 		overallList$filterXaxis <- as.numeric(unique(overallList$iniDataSet[overallList$xAxis])[[1]])	#xAxis muss einen Wert enthalten ansonsten Bricht das Program weiter oben ab
+ 	}
+ 	
+ 	return(overallList)
+ }
> 
> getSingelFilter <- function(filter, treatment, dataSet) {
+ 	if(filter != "none") {
+ 		return(strsplit(filter, "$", fixed=TRUE)[[1]])
+ 	} else {
+ 		return(as.character(unique(dataSet[treatment])[[1]]))
+ 	}
+ }
> 
> preprocessingOfTreatment <- function(overallList) {
+ 	overallList$debug %debug% "preprocessingOfTheTreatment()"
+ 	
+ 	if(!is.null(overallList$treatment)){
+ 		overallList$treatment <- preprocessingOfValues(overallList$treatment)
+ 		
+ 		if(overallList$treatment != "none" & (overallList$treatment %checkIfDescriptorExists% overallList$iniDataSet)) {	
+ 			overallList$filterTreatment <- getSingelFilter(overallList$filterTreatment, overallList$treatment, overallList$iniDataSet)
+ 
+ 		} else {
+ 			overallList$treatment <- "none"
+ 			overallList$filterTreatment <- "none"
+ 			print("... set 'filterTreatment' and 'treatment' to 'none'!")		
+ 		}
+ 			
+ 	} else {
+ 		overallList$treatment <- "none"
+ 		overallList$filterTreatment <- "none"
+ 		print("... set 'filterTreatment' and 'treatment' to 'none'!")
+ 	}
+ 
+ 	return(overallList)
+ }
> 
> preprocessingOfSecondTreatment <- function(overallList) {
+ 	overallList$debug %debug% "preprocessingOfTheSecondTreatment()"
+ 	
+ 	if(!is.null(overallList$secondTreatment)){
+ 		overallList$secondTreatment <- preprocessingOfValues(overallList$secondTreatment)
+ 
+ 		if (overallList$secondTreatment != "none" & (overallList$secondTreatment %checkIfDescriptorExists% overallList$iniDataSet)) {
+ 			overallList$filterSecondTreatment <- getSingelFilter(overallList$filterSecondTreatment, overallList$secondTreatment, overallList$iniDataSet)
+ 			
+ 		} else {
+ 			overallList$secondTreatment <- "none"
+ 			overallList$filterSecondTreatment <- "none"
+ 			print("... set 'filterSecondTreatment' and 'secondTreatment' to 'none'!")
+ 		}	
+ 	} else {
+ 		overallList$secondTreatment <- "none"
+ 		overallList$filterSecondTreatment <- "none"
+ 		print("... set 'filterSecondTreatment' and 'secondTreatment' to 'none'!")
+ 	}
+ 	return(overallList)
+ }
> 
> check <- function(value, checkValue=c("none", NA)){
+ 	if(!is.null(value)){
+ 		return(value %GetDescriptorAfterCheckIfDescriptorNotExists% checkValue)
+ 	} else {
+ 		return(character(0))
+ 	}
+ }
> 
> getVector <- function(descriptorSet) {
+ 	if(!is.null(descriptorSet)) {
+ 		vector <-  vector()
+ 		for(n in 1:length(descriptorSet)) {
+ 			vector <- c(vector, as.vector(unlist(descriptorSet[[n]])))
+ 		}
+ 		return(vector)
+ 	}
+ 	return(character(0))
+ }
> 
> reduceWorkingDataSize <- function(overallList){
+ 	overallList$debug %debug% "reduceWorkingDataSize()"
+ 	overallList$iniDataSet <- overallList$iniDataSet[unique(c(check(getVector(overallList$nBoxDes)), check(getVector(overallList$boxDes)), check(getVector(overallList$boxStackDes)), check(overallList$xAxis), check(overallList$treatment), check(overallList$secondTreatment)))]
+ 	return(overallList)
+ }
> 
> setRowAndColNameOfFinalDataFrame <- function(overallList) {
+ 	overallList$debug %debug% "setRowAndColNameOfFinalDataFrame()"
+ 
+ 	overallList$rowName <- (overallList$descriptor %contactAllWithAll% overallList$filterTreatment) %contactAllWithAll% overallList$filterSecondTreatment
+ 	overallList$colName <- as.character(overallList$filterXaxis)
+ 	
+ 	return(overallList)
+ }
> 
> groupByFunction <- function(groupByList) {
+ 	
+ 	groupByList <- unlist(groupByList)
+ 	return(unlist(groupByList[ifelse(groupByList != "none",TRUE,FALSE)]))
+ 	
+ }
> 
> getBooleanVectorForFilterValues <- function(groupedDataFrame, listOfValues) {
+ 	
+ 	tempVector <- rep.int(TRUE,times=length(groupedDataFrame[,1]))
+ 	for(h in names(listOfValues)) {
+ 		if(h != "none" & !is.null(groupedDataFrame[[h]])) {
+ 			tempVector <- tempVector & groupedDataFrame[[h]] %in% listOfValues[[h]]
+ 		}
+ 	}
+ 	return(tempVector)
+ }
> 
> buildRowForOverallList <- function(i, des, listOfValues, dataSet, day) {
+ 	rowString <- list(row=des, day=numeric())
+ 	for(k in listOfValues){
+ 		if(k != "none") {
+ 			rowString$row <- paste(rowString$row,dataSet[i,k])
+ 		}
+ 	}
+ 	return(rowString)
+ } 
> 
> fillOverallResult <- function(overallList, preErrorBars) {
+ 	overallList$debug %debug% "fillOverallResult()"
+ 	if(length(overallList$iniDataSet[,1]) > 0){
+ 		for(i in 1:length(overallList$iniDataSet[,1])) {
+ 			for(des in overallList$descriptor) {
+ 				rowAndColumn <- buildRowForOverallList(i,des, c(overallList$treatment, overallList$secondTreatment),overallList$iniDataSet, overallList$xAxis)
+ 				overallList$overallResult[rowAndColumn$row, as.character(overallList$iniDataSet[i,overallList$xAxis])] <- overallList$iniDataSet[i,des]
+ 				if(tolower(overallList$diagramTyp) != "boxplotstacked")
+ 					overallList$errorBars[rowAndColumn$row, as.character(overallList$iniDataSet[i,overallList$xAxis])] <- preErrorBars[i,des]
+ 			}
+ 		}
+ 	} else {
+ 		print("... no Value for the OverallResult-DataFrame - Wrong filter!")
+ 		overallList$stoppTheCalculation <- TRUE
+ 	}
+ 	return(overallList)
+ }
> 
> buildList <- function(overallList, colOfXaxis) {
+ 	overallList$debug %debug% "buildList()"
+ 	newList <- list()
+ 	
+ 	newList[[overallList$treatment]] <- overallList$filterTreatment
+ 	newList[[overallList$secondTreatment]] <- overallList$filterSecondTreatment
+ 	newList[[colOfXaxis]] <- overallList$filterXaxis
+ 	
+ 	return(newList)
+ }
> 
> conactAllWithAll <- function(value1, value2) {
+ 	
+ 	conactRow <- character()
+ 	for(k1 in value1){
+ 		if(k1 != "none") {
+ 			for(k2 in value2){
+ 				if(k2 != "none") {
+ 					conactRow <- c(conactRow, paste(k1,k2,sep = "#"))
+ 				}
+ 			}
+ 		}
+ 	}
+ 	return(conactRow)
+ }
> 
> buildRowName <- function(mergeDataSet,groupBy, yName = "value") {
+ 	
+ 	if(length(groupBy) == 0) {
+ 		return(data.frame(name=rep.int(yName, length(mergeDataSet[,1])), mergeDataSet))
+ 	} else if (length(groupBy) == 1) {
+ 		return(data.frame(name=mergeDataSet[,groupBy], mergeDataSet[,!(colnames(mergeDataSet) %in% groupBy)]))
+ 	} else {		
+ 		temp <- mergeDataSet[,groupBy[1]]
+ 		for(h in 2:length(groupBy)) {
+ 			temp <- paste(temp, mergeDataSet[,groupBy[h]], sep = "#")
+ 		}
+ 		return(data.frame(name=temp, primaerTreatment= mergeDataSet[,groupBy[1]], mergeDataSet[,mergeDataSet %allColnamesWithoutThisOnes% groupBy]))
+ 	}	
+ }
> 
> overallGetResultDataFrame <- function(overallList) {
+ 	overallList$debug %debug% "overallGetResultDataFrame()"	
+ 	groupBy <- groupByFunction(list(overallList$treatment, overallList$secondTreatment))
+ 	colNames <- list(colOfXaxis="xAxis", colOfMean="mean", colOfSD="se", colName="name", xAxis=overallList$xAxis)
+ 	booleanVectorList <- buildList(overallList, colNames$colOfXaxis)
+ 	columnsStandard <- c(check(overallList$xAxis), check(overallList$treatment), check(overallList$secondTreatment))
+ 		
+ 	if(sum(!is.na(overallList$nBoxDes)) > 0) {
+ 		if(overallList$debug) {print("... nBoxplot")}
+ 		columns <- c(columnsStandard, check(getVector(overallList$nBoxDes)))
+ 		overallList$overallResult_nBoxDes <- getResultDataFrame("nboxplot", overallList$nBoxDes, overallList$iniDataSet[columns], groupBy, colNames, booleanVectorList, overallList$debug)
+ 	} else {
+ 		print("... all in nBoxplot is 'NA'")
+ 	}
+ 	
+ 	if(sum(!is.na(overallList$boxDes)) > 0) {
+ 		if(overallList$debug) {print("... Boxplot")}
+ 		colNames$colOfMean <- "value"
+ 		columns <- c(columnsStandard, check(getVector(overallList$boxDes)))
+ 		overallList$overallResult_boxDes <- getResultDataFrame("boxplot", overallList$boxDes, overallList$iniDataSet[columns], groupBy, colNames, booleanVectorList, overallList$debug)
+ 	} else {
+ 		print("... all in Boxplot is 'NA'")
+ 	}
+ 	
+ 	if(sum(!is.na(overallList$boxStackDes)) > 0) {
+ 		if(overallList$debug) {print("... stackedBoxplot")}
+ 		colNames$colOfMean <- check(getVector(overallList$boxStackDes))
+ 		colNames$colOfXaxis <- overallList$xAxis
+ 		columns <- c(columnsStandard, check(getVector(overallList$boxStackDes)))
+ 		overallList$overallResult_boxStackDes <- getResultDataFrame("boxplotStacked", overallList$boxStackDes, overallList$iniDataSet[columns], groupBy, colNames, booleanVectorList,overallList$debug)
+ 	} else {
+ 		print("... all in stackedBoxplot is 'NA'")
+ 	}
+ 	
+ 	if(is.null(overallList$boxStackDes) && is.null(overallList$boxDes) && is.null(overallList$nBoxDes)) {
+ 		print("... no descriptor set - this pass stopped!")
+ 		overallList$stoppTheCalculation <- TRUE
+ 	}
+ 	
+ 	return(overallList)
+ }
> 
> getPlotNumber <- function(colNameWichMustBind, descriptorList) {
+ 	
+ 	for(n in names(descriptorList)) {
+ 		if(colNameWichMustBind %in% as.vector(unlist(descriptorList[[n]]))) {
+ 			return(n)
+ 		}
+ 	}
+ 	return(-1)
+ }
> #descriptorName kann entfernt werden
> getResultDataFrame <- function(diagramTyp, descriptorList, iniDataSet, groupBy, colNames, booleanVectorList, debug) {	
+ 	debug %debug% "getResultDataFrame()"
+ 
+ ################################
+ #	diagramTyp = "boxplotStacked"
+ #	descriptorList = overallList$boxStackDes
+ #	iniDataSet = overallList$iniDataSet[columns]
+ #	groupBy = groupBy 
+ #	colNames = colNames 
+ #	booleanVectorList= booleanVectorList
+ #	descriptorName=overallList$boxStackDesName
+ #	debug = overallList$debug
+ #	diagramTyp = "nboxplot"
+ #	descriptor = getVector(overallList$nBoxDes)
+ #	iniDataSet = overallList$iniDataSet[columns]
+ #	groupBy = groupBy 
+ #	colNames = colNames 
+ #	booleanVectorList= booleanVectorList
+ #	descriptorName=overallList$boxDesName
+ ##########################
+ 
+ 	descriptor <- getVector(descriptorList)
+ 	descriptorName <- seq(1:length(descriptor))
+ 	
+ 	descriptorName <- descriptorName[!is.na(descriptor)]
+ 	descriptor <- descriptor[!is.na(descriptor)]
+ 	
+ 	if(diagramTyp != "boxplot") {
+ 		groupedDataFrame <- data.table(iniDataSet)
+ 		key(groupedDataFrame) <- c(groupBy, colNames$xAxis)		
+ 	}
+ 	
+ 	if(diagramTyp == "boxplot") {
+ 		groupedDataFrameMean <- iniDataSet[groupBy[1]]
+ 		
+ 		groupByReduce <- groupBy[groupBy!=groupBy[1]]
+ 		for(n in c(groupByReduce,  colNames$xAxis, descriptor)) {
+ 			groupedDataFrameMean <- cbind(groupedDataFrameMean,  iniDataSet[n])
+ 		}	
+ 		
+ ####################
+ #		Alternative, den Boxplot selber zu bauen!!
+ #		test <- overallList$iniDataSet %allColnamesWithoutThisOnes% c(groupBy, overallList$xAxis)
+ #		myQuantile <- as.data.frame(groupedDataFrame[,lapply(.SD,quantile, probs=c(0,0.25,0.5,0.75,1), na.rm=TRUE), by=groupBy])
+ #		numberOfGroubingElements <- length(myQuantile[,1]) / 5
+ #		
+ #		testData <- data.frame()
+ #		for(n in seq(1, length(myQuantile[,1]), by=5)) {
+ #			testData <- rbind(testData, myQuantile[n:(n+4),test])
+ #		}
+ #		colnames(testData) <- c("q0", "q25", "q50", "q75", "q100")
+ #		rownames(testData) <- unique(myQuantile[,1])
+ #		
+ #		ggplot(overallList$iniDataSet, aes(x=rownames(testData), ymin=testData[,1], lower=testData[,2], middle=testData[,3], upper=testData[,4], ymax=testData[,5])) + 
+ #				geom_boxplot(stat="identity")
+ #####################		
+ 			
+ 		
+ 	} else {
+ 		groupedDataFrameMean <- as.data.frame(groupedDataFrame[,lapply(.SD, mean, na.rm=TRUE), by=c(groupBy,colNames$xAxis)])
+ 	}
+ 	
+ 	if(diagramTyp == "nboxplot" || diagramTyp == "boxplot") {
+ 		#colNamesOfTheRest <- paste(colNames$colOfMean,seq(1:length(descriptor)), sep="")	
+ 		colNamesOfTheRest <- paste(colNames$colOfMean,descriptorName, sep="")	
+ 	} else {
+ 		colNamesOfTheRest <- groupedDataFrameMean %allColnamesWithoutThisOnes% c(groupBy, colNames$xAxis)
+ 	}
+ 		
+ #alt wenn nur ein Deskriptor übergeben wird
+ #		if(tolower(overallList$diagramTyp) == "nboxplot" || tolower(overallList$diagramTyp) == "boxplot") {
+ #			colNamesOfTheRest <- colOfMean
+ #		} else {
+ #			colNamesOfTheRest <- groupedDataFrameMean %allColnamesWithoutThisOnes% c(groupBy, overallList$xAxis)
+ #		}
+ 		
+ 	colnames(groupedDataFrameMean) <- c(groupBy, colNames$colOfXaxis, colNamesOfTheRest)
+ 	
+ 	if(diagramTyp == "nboxplot") {
+ 		groupedDataFrameSD <- as.data.frame(groupedDataFrame[,lapply(.SD, sd, na.rm=TRUE), by=c(groupBy,colNames$xAxis)])
+ 		colnames(groupedDataFrameSD) <- c(groupBy, colNames$colOfXaxis, paste(colNames$colOfSD,descriptorName, sep=""))
+ 	}
+ 	
+ 	booleanVector <- getBooleanVectorForFilterValues(groupedDataFrameMean, booleanVectorList)
+ 	
+ 	if(diagramTyp == "nboxplot") {
+ 		iniDataSet <- merge(sort=FALSE, groupedDataFrameMean[booleanVector,], groupedDataFrameSD[booleanVector,], by = c(groupBy, colNames$colOfXaxis))
+ 		#overallResult <- buildRowName(iniDataSet,groupBy, descriptorName)
+ 		overallResult <- buildRowName(iniDataSet,groupBy)
+ 		
+ 	} else if(diagramTyp == "boxplot") {
+ 		iniDataSet <- groupedDataFrameMean[booleanVector,]
+ 		#overallResult <- buildRowName(iniDataSet,groupBy, descriptorName)
+ 		overallResult <- buildRowName(iniDataSet,groupBy)
+ 		
+ 	} else {
+ 		iniDataSet <- groupedDataFrameMean[booleanVector,]		
+ 		#buildRowNameDataSet <- buildRowName(iniDataSet, groupBy, descriptorName)
+ 		buildRowNameDataSet <- buildRowName(iniDataSet, groupBy)
+ 		temp <- data.frame()
+ #		count <- 0
+ 		
+ 		for(colNameWichMustBind in buildRowNameDataSet %allColnamesWithoutThisOnes% c(colNames$xAxis, colNames$colName, "primaerTreatment")) {
+ #			count <- count+1
+ 			plot = getPlotNumber(colNameWichMustBind, descriptorList)
+ 		
+ 			if(plot!=-1) {
+ 				colNameWichMustBindReNamed <- reNameHist(colNameWichMustBind)
+ 		
+ 				if(is.null(buildRowNameDataSet$primaerTreatment)){	
+ 					temp <- rbind(temp,data.frame(hist=rep.int(x=colNameWichMustBindReNamed, times=length(buildRowNameDataSet[,colNameWichMustBind])), values=buildRowNameDataSet[,colNameWichMustBind], xAxis=buildRowNameDataSet[,colNames$colOfXaxis], name=buildRowNameDataSet[,colNames$colName], plot=plot))			
+ 				} else {
+ 					temp <- rbind(temp,data.frame(hist=rep.int(x=colNameWichMustBindReNamed, times=length(buildRowNameDataSet[,colNameWichMustBind])), primaerTreatment=buildRowNameDataSet[,"primaerTreatment"], values=buildRowNameDataSet[,colNameWichMustBind], xAxis=buildRowNameDataSet[,colNames$colOfXaxis], name=buildRowNameDataSet[,colNames$colName], plot = plot))			
+ 				}
+ 			}
+ 		}
+ 		overallResult <- temp		
+ 	}	
+ 
+ 	return(overallResult)
+ }
> 
> setDefaultAxisNames <- function(overallList) {
+ 	overallList$debug %debug% "setDefaultAxisNames()"
+ 	
+ 	if (overallList$xAxisName == "none") {
+ 		overallList$xAxisName <- gsub('[[:punct:]]'," ",overallList$xAxis)
+ 	}
+ #	if (overallList$yAxisName == "none") {
+ #		overallList$yAxisName <- gsub('[[:punct:]]'," ",overallList$descriptor)
+ #	}
+ 	return(overallList)
+ }
> 
> setColorListHist <- function(descriptorList) {
+ 	interval <- seq(0.05,0.95, by=0.1)
+ 	intervalSat <- rep.int(c(0.8,1.0), 5)
+ 	intervalFluo <- seq(0,0.166666666666, by=0.01666666)
+ 	
+ 	if(length(grep("fluo",getVector(descriptorList), ignore.case=TRUE)) > 0) { #rot			
+ 		#colorList <- as.list(rgb(255, seq(256/10/2,255,by=255/10), 255, max = 255))
+ 		#colorList <- as.list(rgb(1, interval, 0, max = 1))
+ 		colorList <- as.list(hsv(h=rev(intervalFluo), s=intervalSat, v=1))
+ 		
+ 	} else if(length(grep("phenol",getVector(descriptorList), ignore.case=TRUE)) > 0) { #gelb
+ 		#colorList <- as.list(rgb(255, rev(seq(256/10/2,255,by=255/10)), 255, max = 255))
+ 		#colorList <- as.list(rgb(1, rev(interval), 0, max = 1))
+ 		colorList <- as.list(hsv(h=intervalFluo, s=intervalSat, v=1))
+ 		
+ 	} else if(length(grep("vis",getVector(descriptorList), ignore.case=TRUE)) > 0) {
+ 		colorList <- as.list(hsv(h=interval, s=1, v=intervalSat))
+ 		
+ 	} else if(length(grep("nir",getVector(descriptorList), ignore.case=TRUE)) > 0) {
+ 		colorList <- as.list(rgb(rev(interval), rev(interval), rev(interval), max = 1))		
+ 	} else {
+ 		return(list(0))
+ 	}
+ 	names(colorList) <- c("0..25", "25..51", "51..76", "76..102", "102..127", "127..153", "153..178", "178..204", "204..229", "229..255")
+ 	return(colorList)
+ }
> 
> setColorList <- function(diagramTyp, descriptorList, overallResult, isGray) {
+ #################	
+ #diagramTyp = "boxplotStacked"
+ #descriptorList = overallList$boxStackDes
+ #isGrey = overallList$isGray
+ #	overallResult=overallList$overallResult_nBoxDes
+ #	diagramTyp = "boxplotStacked"
+ #	descriptorList = overallList$nBoxDes	
+ ##################
+ 	
+ 	if(!as.logical(isGray)) {
+ 		colorVector <- c(brewer.pal(11, "Spectral"))
+ 	} else {
+ 		colorVector <- c(brewer.pal(9, "Greys"))
+ 	}
+ 	
+ 	colorList <- list()
+ 	if(diagramTyp == "nboxplot" || diagramTyp == "boxplot") {
+ 		for(n in names(descriptorList)) {
+ 			if(!is.na(descriptorList[[n]])) {
+ 				colorList[[n]] <- colorRampPalette(colorVector)(length(unique(overallResult$name)))
+ 			} else {
+ 				print("... all values are 'NA'")
+ 			}
+ 		}
+ 	} else {
+ 		for(n in names(descriptorList)) {
+ 			if(!is.na(descriptorList[[n]])) {
+ 				colorList[[n]] <- setColorListHist(descriptorList[n])
+ 			} else {
+ 				print("... all values are 'NA'")
+ 			}
+ 		}
+ 	}
+ 	return(colorList)
+ }
> 
> setColor <- function(overallList) {
+ 	overallList$debug %debug% "setColor()"
+ 	  
+ 	overallList$color_nBox <- setColorList("nboxplot", overallList$nBoxDes, overallList$overallResult_nBoxDes, overallList$isGray)
+ 	overallList$color_box <- setColorList("boxplot", overallList$boxDes, overallList$overallResult_boxDes, overallList$isGray)
+ 	overallList$color_boxStack <- setColorList("boxplotStacked", overallList$boxStackDes, overallList$overallResult_boxStackDes, overallList$isGray)
+ 	return(overallList)
+ }
> 
> normalizeToHundredPercent <-  function(whichRows, overallResult) {
+ 	return(t(apply(overallResult[whichRows,], 1, function(x,y){(100*x)/y}, y=colSums(overallResult[whichRows,]))))
+ }
> 
> writeLatexFile <- function(saveNameLatexFile, saveNameImageFile="", o="") {
+ 	
+ 	saveNameImageFile <- preprocessingOfValues(saveNameImageFile, FALSE, "_")
+ 	saveNameLatexFile <- preprocessingOfValues(saveNameLatexFile, FALSE, "_")
+ 	o <- gsub('[[:punct:]]',"_",o)
+ 	
+ 	latexText <- paste("\\loadImage{",
+ 					   ifelse(saveNameImageFile=="",saveNameLatexFile,saveNameImageFile),
+ 					   ifelse(o=="", "", paste("_",o ,sep="")),
+ 					   ".pdf}", sep="")
+ 	
+ 	write(x=latexText, append=TRUE, file=paste(saveNameLatexFile,"tex",sep="."))
+ 	
+ }
> 
> saveImageFile <- function(overallList, plot, saveName, extraString="") {
+ 	filename <- preprocessingOfValues(paste(saveName,extraString,sep=""), FALSE,replaceString = "_")	
+ 	ggsave (filename=paste(filename,overallList$saveFormat,sep="."), plot = plot, dpi=as.numeric(overallList$dpi))
+ 
+ }
> 
> makeDepthBoxplotDiagram <- function(h, overallList) {
+ 
+ 	overallList$debug %debug% "makeDepthBoxplotDiagram()"
+ 	overallList$symbolParameter <- 15
+ 	
+ 	if (h==1) {
+ 		openImageFile(overallList)
+ 	}
+ 	par(mar=c(4.1,4.1,2.1,2.1))
+ 	plot.depth(as.matrix(overallList$overallResult), plot.type=h, xlabel=overallList$xAxisName, l.width=12, lp.color=overallList$color)
+ 	
+ 	grid()
+ 	if (h==1) {
+ 		dev.off()
+ 	}
+ 	if(overallList$appendix) {
+ 		writeLatexFile("appendixImage", overallList$saveName)
+ 	}
+ 	
+ 	return(overallList)
+ }
> 
> CheckIfOneColumnHasOnlyValues <- function(overallResult, descriptor="", diagramTyp="nboxplot") {	
+ 	
+ 	max <- -1	
+ 	for(index in levels(overallResult$name)){
+ 		if(diagramTyp == "nboxplot" || diagramTyp == "boxplot") {
+ 			temp <- sum(!is.na(overallResult$mean[overallResult$name == index]))
+ 		} else {
+ 			boolVec <- overallResult$name == index
+ 			temp <- sum(!is.na(overallResult[boolVec,descriptor]))
+ 		}
+ 		max <- ifelse(temp > max, temp, max)
+ 	}
+ 		
+ 	return(ifelse(max == 1,TRUE, FALSE))
+ }
> 
> 
> buildMyStats <- function(values, means, se) {
+ 	means <- as.data.frame(as.vector(means))
+ 	colnames(means) <- "means"
+ 	
+ 	se <- as.data.frame(as.vector(se))
+ 	colnames(se) <- "se"
+ 
+ 	return(data.frame(value=values,means=means, se=se))
+ }
> 
> buildMyStats2 <- function(values, means, se, rowName) {
+ 	means <- as.data.frame(as.vector(means))
+ 	colnames(means) <- "means"
+ 	
+ 	rowName <- as.data.frame(as.vector(rowName))
+ 	colnames(rowName) <- Name
+ 	
+ 	se <- as.data.frame(as.vector(se))
+ 	colnames(se) <- "se"
+ 	
+ 	return(data.frame(value=values,means=means, se=se, rowName=rowName))
+ }
> 
> reduceOverallResult <- function(tempOverallList, imagesIndex) {
+ 	tempOverallList$debug %debug% "reduceOverallResult()"
+ 
+ 	workingDataSet <- buildDataSet(tempOverallList$overallResult[,1:2], tempOverallList, c("mean", "se"), imagesIndex)
+ 	colnames(workingDataSet) <- c(colnames(workingDataSet)[1:2], "mean", "se")
+ 	return(workingDataSet)	
+ }
> 
> 
> reduceWholeOverallResultToOneValue <- function(tempOverallResult, imagesIndex, debug, diagramTyp="nboxplot") {
+ 	debug %debug% "reduceWholeOverallResultToOneValue()"
+ 	
+ 	if(diagramTyp == "boxplotstacked") {
+ 		
+ 		workingDataSet <- tempOverallResult[tempOverallResult$plot == imagesIndex,]
+ 		workingDataSet$hist <- factor(workingDataSet$hist, unique(workingDataSet$hist))
+ 		
+ 	} else {
+ 		colNames <- vector()
+ 		if(diagramTyp == "nboxplot" || diagramTyp == "barplot") {
+ 			colNames <- c("mean", "se")
+ 		} else if(diagramTyp == "boxplot") {
+ 			colNames <- c("value")
+ 		} 
+ 		
+ 		if("primaerTreatment" %in% tempOverallResult) {
+ 			standardColumnName <- c("name", "primaerTreatment", "xAxis")
+ 		} else {
+ 			standardColumnName <- c("name", "xAxis")
+ 		}
+ 		if(sum(!(colNames %in% colnames(tempOverallResult)))>0) {
+ 			workingDataSet <- buildDataSet(tempOverallResult[,standardColumnName], tempOverallResult, colNames, imagesIndex)
+ 			colnames(workingDataSet) <- c(standardColumnName, colNames)
+ 		}
+ 	}
+ 	return(workingDataSet)	
+ }
> 
> 
> makeLinearDiagram <- function(h, overallResult, overallDescriptor, overallColor, overallDesName, overallSaveName, overallList, diagramTypSave="nboxplot") {
+ ########################		
+ 	h=h 
+ 	overallResult = overallList$overallResult_nBoxDes
+ 	overallColor=overallList$color_nBox
+ #	debug = overallList$debug
+ 	overallDescriptor = overallList$nBoxDes
+ 	overallDesName = overallList$nBoxDesName
+ 	overallSaveName = overallList$saveName_nBoxDes
+ #########################
+ 	
+ 	overallList$debug %debug% "makeLinearDiagram()"	
+ 	print("... nBoxplot")
+ 	
+ 	tempOverallResult <-  overallResult
+ 	
+ 	for(imagesIndex in names(overallDescriptor)) {
+ 		if(!is.na(overallDescriptor[[imagesIndex]])) {
+ 			print(paste("... image",imagesIndex))
+ 			overallResult <- reduceWholeOverallResultToOneValue(tempOverallResult, imagesIndex, overallList$debug, "nboxplot")
+ 			
+ 			if(!CheckIfOneColumnHasOnlyValues(overallResult)) {	
+ 		
+ 	#			myDataSet <- data.frame(name=c("normal","wet","dry","normal","wet","dry","normal","wet","dry"), 
+ 	#									xAxis=c(6,6,6,8,8,8,10,10,10),		
+ 	#									mean=c(4883,6224,4630,6047,5790,7758,7349,7778,9725), 
+ 	#									se=c(1515,1190,1670,1831,2013,1318,2387,2182,1499))
+ 						
+ 				plot <-	ggplot(data=overallResult, aes(x=xAxis, y=mean, shape=name)) +
+ 						#geom_smooth(aes(ymin=mean-se, ymax=mean+se, colour=name, fill=name), stat="identity", alpha=0.1) +
+ 						geom_ribbon(aes(ymin=mean-se, ymax=mean+se, fill=name), stat="identity", alpha=0.1) +
+ 						geom_line(aes(color=name), alpha=0.2) +
+ 						geom_point(aes(color=name), size=3) +
+ 						scale_x_continuous(name=overallList$xAxisName, minor_breaks = min(overallResult$xAxis):max(overallResult$xAxis)) +
+ 						ylab(overallDesName[[imagesIndex]]) +
+ 						scale_fill_manual(values = overallColor[[imagesIndex]]) +
+ 						scale_colour_manual(values= overallColor[[imagesIndex]]) +
+ 						scale_shape_manual(values = c(1:length(overallColor[[imagesIndex]]))) +
+ 						theme_bw() +
+ 						opts(axis.title.x = theme_text(face="bold", size=11),
+ 								axis.title.y = theme_text(face="bold", size=11, angle=90),
+ 								#panel.grid.major = theme_blank(), # switch off major gridlines
+ 								#panel.grid.minor = theme_blank(), # switch off minor gridlines
+ 								legend.position = "right", # manually position the legend (numbers being from 0,0 at bottom left of whole plot to 1,1 at top right)
+ 								legend.title = theme_blank(), # switch off the legend title						
+ 								#legend.key.size = unit(1.5, "lines"),
+ 								legend.key = theme_blank(), # switch off the rectangle around symbols in the legend
+ 								panel.border = theme_rect(colour="Grey", size=0.1)
+ 						)
+ 				
+ 				if(length(overallColor[[imagesIndex]]) > 25) {
+ 					plot <- plot + opts(legend.text = theme_text(size=6),
+ 										legend.key.size = unit(0.7, "lines")
+ 										)
+ 				} else {
+ 					plot <- plot + opts(legend.text = theme_text(size=11))
+ 				}
+ 								
+ 	#			print(plot)
+ 		
+ 		##!# nicht löschen, ist die interpolation (alles in dieser if Abfrage mit #!# makiert)
+ 		##!#				newCoords <- seq(min(overallList$filterXaxis,na.rm=TRUE),max(overallList$filterXaxis,na.rm=TRUE),1)
+ 		##!#				newValue <- approx(overallList$filterXaxis, overallList$overallResult[y,],xout=newCoords,method="linear")
+ 		##!#				
+ 		##!#				naVector <- is.na(overallList$overallResult[y,])
+ 		##!#				overallResultWithNaValues <- overallList$overallResult[y,]
+ 		##!#				overallList$overallResult[y,naVector] <- newValue$y[overallList$filterXaxis[naVector]]
+ 		#				
+ 		#				if (firstPlot) {
+ 		#					firstPlot <- FALSE
+ 		##!#				plot(overallList$filterXaxis, overallList$overallResult[y,], main="", type="c", xlab=overallList$xAxisName, col=overallList$color[y], ylab=overallList$yAxisName, pch=y, lty=1, lwd=3, ylim=c(min(overallList$overallResult,na.rm=TRUE),max(overallList$overallResult,na.rm=TRUE)))
+ 		#					plot(overallList$filterXaxis, overallList$overallResult[y,], main="", type="b", xlab=overallList$xAxisName, col=overallList$color[y], ylab=overallList$yAxisName, pch=y, lty=1, lwd=3, ylim=c(min(overallList$overallResult,na.rm=TRUE),max(overallList$overallResult,na.rm=TRUE)))
+ 		#				} else {
+ 		##!#				points(overallList$filterXaxis, overallList$overallResult[y,], type="c", col=overallList$color[y], pch=y, lty=1, lwd=3 )	
+ 		#					points(overallList$filterXaxis, overallList$overallResult[y,], type="b", col=overallList$color[y], pch=y, lty=1, lwd=3 )
+ 		#				}
+ 		##!#				points(overallList$filterXaxis, overallResultWithNaValues, type="p", col=overallList$color[y], pch=y, lty=1, lwd=3 )
+ 		#			} 
+ 		
+ 				if(h==1) {
+ 					saveImageFile(overallList, plot, overallSaveName[[imagesIndex]], diagramTypSave)
+ 				} else {
+ 					print(plot)
+ 				}
+ 				if(overallList$appendix) {
+ 					writeLatexFile("appendixImage", overallSaveName[[imagesIndex]], diagramTypSave)
+ 				}
+ 			
+ 			} else {
+ 				print("... only one column has values, so it will be plot as barplot!")
+ 		
+ 				day <- overallResult$xAxis[!is.na(overallResult$mean)][1]
+ 				overallList$xAxisName <- paste(overallList$xAxisName,day)
+ 				#overallList$overallResult <- overallList$overallResult[!is.na(overallList$overallResult$mean),]
+ 				overallList <- makeBarDiagram(h, overallResult, overallDescriptor[imagesIndex], overallColor[imagesIndex], overallDesName[imagesIndex], overallSaveName[imagesIndex], overallList, TRUE, diagramTypSave)
+ 			}
+ 		}
+ 	}
+ 	#return(overallList)
+ }
> 
> getColor <- function(overallColorIndex, overallResult) {
+ 	input <- as.vector(unique(overallResult$hist))
+ 	
+ 	color <- vector()
+ 	for(n in input) {
+ 		color <- c(color, overallColorIndex[[n]])
+ 	}
+ 	return(color)
+ }
> 
> 
> plotStackedImage <- function(h, overallList, overallResult, title = "", makeOverallImage = FALSE, legende=TRUE, minor_breaks=TRUE, overallColor, overallDesName, imagesIndex, overallSaveName) {
+ 	overallList$debug %debug% "plotStackedImage()"	
+ 		
+ 	if(length(overallResult[,1]) > 0) {
+ 
+ 		if(length(overallList$stackedBarOptions$typOfGeomBar) == 0) {
+ 			overallList$stackedBarOptions$typOfGeomBar <- c("fill")
+ 		}
+ 		
+ 		for(positionTyp in overallList$stackedBarOptions$typOfGeomBar) {
+ 		
+ 		
+ 			plot <- ggplot(overallResult, aes(xAxis, values, fill=hist)) + 
+ 					geom_bar(stat="identity", position = positionTyp) +
+ 				 	ylab(overallDesName[[imagesIndex]]) 
+ 					#coord_cartesian(ylim=c(0,1)) +
+ 				
+ 			if(minor_breaks) {
+ 				plot <- plot + scale_x_continuous(name=overallList$xAxisName, minor_breaks = min(overallResult$xAxis):max(overallResult$xAxis))
+ 			} else {
+ 				plot <- plot + xlab(overallList$xAxisName)
+ 			}
+ 					
+ 			plot <- plot +		
+ 					scale_fill_manual(values = getColor(overallColor[[imagesIndex]], overallResult), name="") +
+ 					theme_bw() +
+ 					opts(axis.title.x = theme_text(face="bold", size=11),
+ 							axis.title.y = theme_text(face="bold", size=11, angle=90),
+ 							plot.margin = unit(c(0.1, 0.1, 0, 0), "cm"),
+ 							#panel.background = theme_rect(linetype = "dotted"),
+ 							panel.border = theme_rect(colour="Grey", size=0.1),
+ 							strip.background = theme_rect(colour=NA)
+ 	#						plot.title = theme_text(size=10),
+ 	#						plot.title = theme_rect(colour="Pink", size=0.1),
+ 					) 
+ 			
+ 			if(!legende) {
+ 				plot <- plot + opts(legend.position="none")
+ 			} else {
+ 				plot <- plot + opts(legend.position="right", 
+ 									legend.title = theme_blank(),
+ 									legend.text = theme_text(size=11),
+ 									legend.key = theme_blank())
+ 			}
+ 			
+ 			if(title != "") {
+ 				plot <- plot + opts(title = title)
+ 			}
+ 			
+ 			if(!minor_breaks) {
+ 				plot <- plot + opts(panel.grid.minor = theme_blank())
+ 			}
+ 			
+ 			if(makeOverallImage) {
+ 				#plot <- plot + facet_wrap(~ name, drop=TRUE)
+ 				plot <- plot + facet_wrap(~ name)
+ 			}
+ 			
+ 			if (h==1) {
+ 				saveImageFile(overallList, plot, overallSaveName[[imagesIndex]], paste("overall", title, positionTyp, sep=""))
+ 				if(makeOverallImage) {
+ 					writeLatexFile(paste(overallSaveName[[imagesIndex]], "stackedOverallImage", sep=""), paste(overallSaveName[[imagesIndex]],"overall",title, positionTyp, sep=""))	
+ 				} else {
+ 					writeLatexFile(overallSaveName[[imagesIndex]], paste(overallSaveName[[imagesIndex]],"overall",title,positionTyp, sep=""))	
+ 				}
+ 			} else {
+ 				print(plot)
+ 			}
+ 		}
+ 	}
+ }
> 
> PreWorkForMakeBigOverallImage <- function(h, overallResult, overallDescriptor, overallColor, overallDesName, overallSaveName, overallList, imagesIndex) {
+ 	overallList$debug %debug% "PreWorkForMakeBigOverallImage()"	
+ 	
+ 	groupBy <- groupByFunction(list(overallList$treatment, overallList$secondTreatment))
+ 	if(length(groupBy) == 0 || length(groupBy) == 1) {
+ 		plotStackedImage(h = h, overallList = overallList, overallResult = overallResult, makeOverallImage = TRUE, legende=TRUE, minor_breaks=FALSE, overallColor = overallColor, overallDesName = overallDesName, imagesIndex= imagesIndex, overallSaveName =overallSaveName)
+ 		
+ 	} else {
+ 		for(value in overallList$filterSecondTreatment) {
+ 			title <- value
+ 			plottedName <- overallList$filterTreatment %contactAllWithAll% value
+ 			booleanVector <- getBooleanVectorForFilterValues(overallResult, list(name = plottedName))
+ 			plotThisValues <- overallResult[booleanVector,]
+ 			plotThisValues <- reNameColumn(plotThisValues, "name", "primaerTreatment")
+ 			plotStackedImage(h, overallList, plotThisValues, title = title, makeOverallImage = TRUE,  legende=TRUE, minor_breaks=FALSE, overallColor = overallColor, overallDesName = overallDesName, imagesIndex=imagesIndex, overallSaveName=overallSaveName)
+ 		}	 
+ 	}
+ }
> 
> PreWorkForMakeNormalImages <- function(h, overallList) {
+ 	overallList$debug %debug% "PreWorkForMakeNormalImages()"
+ 	stackedImages <- unlist(unique(overallList$overallResult["name"]))
+ 	
+ 	for(o in stackedImages) {
+ 		overallList$debug %debug% paste("makeBoxplotStackedDiagram with the descriptor: ",overallList$saveName,o)
+ 		plotThisValues <- overallList$overallResult[overallList$overallResult["name"] == o,]
+ 		plotStackedImage(h, overallList, plotThisValues, o, FALSE, TRUE, TRUE)
+ 	}
+ }
> 
> 
> makeBoxplotStackedDiagram <- function(h, overallResult, overallDescriptor, overallColor, overallDesName, overallSaveName, overallList) {
+ 	########################		
+ #	h=h
+ #	overallResult=overallList$overallResult_boxStackDes
+ #	overallDescriptor=overallList$boxStackDes
+ #	overallColor=overallList$color_boxStack
+ #	overallDesName=overallList$boxStackDesName
+ #	overallList=overallList
+ #	overallSaveName = overallList$saveName_nBoxDes
+ 	#########################
+ 
+ 
+ 	
+ 	
+ 	overallList$debug %debug% "makeBoxplotStackedDiagram()"
+ 	print("... stacked Bockplot")
+ 	overallResult[is.na(overallResult)] <- 0
+ 	tempOverallResult <- overallResult
+ 	
+ 	for(imagesIndex in names(overallDescriptor)) {
+ 		print(paste("... image",imagesIndex))
+ 		overallResult <- reduceWholeOverallResultToOneValue(tempOverallResult, imagesIndex, overallList$debug, "boxplotstacked")
+ 	
+ 		PreWorkForMakeBigOverallImage(h, overallResult, overallDescriptor, overallColor, overallDesName, overallSaveName, overallList, imagesIndex)
+ 		#PreWorkForMakeNormalImages(h,overallList)
+ 	}
+ 	#return(overallList)
+ }	
> 
> makeBarDiagram <- function(h, overallResult, overallDescriptor, overallColor, overallDesName, overallSaveName, overallList, isOnlyOneValue = FALSE, diagramTyp="barplot") {
+ ###############################		
+ #	h=h 
+ #	overallResult = overallList$overallResult_nBoxDes
+ #	overallColor=overallList$color_nBox
+ ##	debug = overallList$debug
+ #	overallDescriptor = overallList$nBoxDes
+ #	overallDesName = overallList$nBoxDesName
+ #	isOnlyOneValue = FALSE
+ ################################	
+ 	h=h
+ 	overallResult=overallResult
+ 	overallDescriptor=overallDescriptor[imagesIndex]
+ 	overallColor=overallColor[imagesIndex]
+ 	overallDesName=overallDesName[imagesIndex]
+ 	overallSaveName=overallSaveName[imagesIndex]
+ 	overallList=overallList
+ 	isOnlyOneValue=TRUE
+ 	diagramTyp=diagramTypSave
+ ################################
+ 
+ 	overallList$debug %debug% "makeBarDiagram()"
+ 
+ 	tempOverallResult <-  overallResult
+ 	
+ 	for(imagesIndex in names(overallDescriptor)) {
+ 		if(!is.na(overallDescriptor[[imagesIndex]])) {
+ 			
+ 			overallResult <- reduceWholeOverallResultToOneValue(tempOverallResult, imagesIndex, overallList$debug, "barplot")
+ 			overallResult <- overallResult[!is.na(overallResult$mean),]
+ 			
+ 			if(isOnlyOneValue) {
+ 				myPlot <- ggplot(data=overallResult, aes(x=name, y=mean))
+ 			} else {
+ 				myPlot <- ggplot(data=overallResult, aes(x=xAxis, y=mean))
+ 			}
+ 			
+ 			myPlot <- myPlot + 						
+ 					geom_bar(stat="identity", aes(fill=name), colour="Grey", size=0.1) +
+ 					geom_errorbar(aes(ymax=mean+se, ymin=mean-se), width=0.2, colour="black")+
+ 					#geom_errorbar(aes(ymax=mean+se, ymin=mean-se), width=0.5, colour="Pink")+
+ 					ylab(overallDesName[[imagesIndex]]) +
+ 					coord_cartesian(ylim=c(0,max(overallResult$mean + overallResult$se + 10,na.rm=TRUE))) +
+ 					xlab(overallList$xAxisName) +
+ 					scale_fill_manual(values = overallColor[[imagesIndex]]) +
+ 					theme_bw() +
+ 					opts(legend.position="none",
+ 							plot.margin = unit(c(0.1, 0.1, 0, 0), "cm"),
+ 							axis.title.x = theme_text(face="bold", size=11),
+ 							axis.title.y = theme_text(face="bold", size=11, angle=90),
+ 							panel.grid.minor = theme_blank(),
+ 							panel.border = theme_rect(colour="Grey", size=0.1)
+ 					)
+ 			
+ 			if(length(overallColor[[imagesIndex]]) > 10) {
+ 				myPlot <- myPlot + opts(axis.text.x = theme_text(size=6, angle=90))
+ 			}
+ 			print(myPlot)
+ 			
+ 			if (h==1) {
+ 				saveImageFile(overallList, myPlot, overallSaveName[[imagesIndex]], diagramTyp)
+ 			} else {
+ 				print(myPlot)
+ 			}
+ 			if(overallList$appendix) {
+ 				writeLatexFile("appendixImage", overallSaveName[[imagesIndex]], diagramTyp)
+ 			}
+ 		}
+ 	}
+ 	#return(overallList)
+ }
> 
> ##Problem: der median wird nicht angezeigt!
> makeBoxplotDiagram <- function(h, overallResult, overallDescriptor, overallColor, overallDesName, overallSaveName, overallList, diagramTypSave="boxplot") {
+ 	########################		
+ #	h=h 
+ #	overallResult = overallList$overallResult_boxDes
+ #	overallColor=overallList$color_box
+ ##	debug = overallList$debug
+ #	overallDescriptor = overallList$boxDes
+ #	overallDesName = overallList$boxDesName
+ 	#########################
+ 	
+ 	overallList$debug %debug% "makeBoxplotDiagram()"
+ 	#overallList$overallResult <- overallList$overallResult[!is.na(overallList$overallResult$mean),]
+ 	print("... Boxplot")
+ 	
+ 	tempOverallResult <-  overallResult
+ 	
+ 	for(imagesIndex in names(overallDescriptor)) {
+ 		if(!is.na(overallDescriptor[[imagesIndex]])) {
+ 			print(paste("... image",imagesIndex))
+ 			overallResult <- reduceWholeOverallResultToOneValue(tempOverallResult, imagesIndex, overallList$debug, "boxplot")
+ 			
+ 			
+ 			#myPlot <- ggplot(overallList$overallResult, aes(factor(name), value, fill=name, colour=name)) + 
+ 			myPlot <- ggplot(overallResult, aes(factor(name), value, fill=name)) +
+ 					geom_boxplot() +
+ 					ylab(overallDesName[[imagesIndex]]) +
+ 					#coord_cartesian(ylim=c(0,max(overallList$overallResult$mean + overallList$overallResult$se + 10,na.rm=TRUE))) +
+ 					xlab(overallList$xAxisName) +
+ 					scale_fill_manual(values = overallColor[[imagesIndex]]) +
+ 					#stat_summary(fun.data = f, geom = "crossbar", height = 0.1,	colour = NA, fill = "skyblue", width = 0.8, alpha = 0.5) +
+ 					theme_bw() +
+ 					opts(legend.position="none",
+ 							plot.margin = unit(c(0.1, 0.1, 0, 0), "cm"),
+ 							axis.title.x = theme_text(face="bold", size=11),
+ 							axis.title.y = theme_text(face="bold", size=11, angle=90),
+ 							panel.grid.minor = theme_blank(),
+ 							panel.border = theme_rect(colour="Grey", size=0.1)
+ 					)
+ 		
+ 			if(length(overallColor[[imagesIndex]]) > 10) {
+ 				myPlot <- myPlot + opts(axis.text.x = theme_text(size=6, angle=90))
+ 			}	
+ 			
+ 		#	print(myPlot)
+ 
+ 			if (h==1) {
+ 				saveImageFile(overallList, myPlot, overallSaveName[[imagesIndex]], diagramTypSave)
+ 			} else {
+ 				print(myPlot)
+ 			}
+ 			if(overallList$appendix) {
+ 				writeLatexFile("appendixImage", overallSaveName[[imagesIndex]], diagramTypSave)
+ 			}
+ 		}
+ 	}
+ 	#return(overallList)
+ }
> 
> makeDiagrams <- function(overallList) {
+ 	overallList$debug %debug% "makeDiagrams()"
+ 	durchlauf <- ifelse(overallList$showResultInR, 2, 1)
+ 	
+ 	for(h in 1:durchlauf) {
+ 
+ 		if(sum(!is.na(overallList$nBoxDes)) > 0) {
+ 			if(overallList$debug) {print("... nBoxplot")}	
+ 			makeLinearDiagram(h, overallList$overallResult_nBoxDes, overallList$nBoxDes, overallList$color_nBox, overallDesName=overallList$nBoxDesName, overallList$saveName_nBoxDes ,overallList)
+ 		} else {
+ 			print("... all in nBoxplot is 'NA'")
+ 		}
+ 		
+ 		if(sum(!is.na(overallList$boxDes)) > 0) {
+ 			if(overallList$debug) {print("... Boxplot")}
+ 			makeBoxplotDiagram(h, overallList$overallResult_boxDes, overallList$boxDes, overallList$color_box, overallDesName=overallList$boxDesName, overallList$saveName_boxDes, overallList)
+ 		} else {
+ 			print("... all in Boxplot is 'NA'")
+ 		}
+ 		
+ 		if(sum(!is.na(overallList$boxStackDes)) > 0) {
+ 			if(overallList$debug) {print("... stacked Boxplot")}
+ 			makeBoxplotStackedDiagram(h, overallList$overallResult_boxStackDes, overallList$boxStackDes, overallList$color_boxStack, overallDesName=overallList$boxStackDesName, overallList$saveName_boxStackDes, overallList)
+ 		} else {
+ 			print("... all in stacked Boxplot is 'NA'")
+ 		}
+ 		
+ 		if(FALSE) {	# falls auch mal barplots erstellt werden sollen (ausser wenn nur ein Tag vorhanden ist!)
+ 			if(overallList$debug) {print("... Barplot")}
+ 			makeBarDiagram(h, overallList$overallResult_nBoxDes, overallList$nBoxDes, overallList$color_nBox, overallDesName=overallList$nBoxDesName, overallList$saveName_nBoxDes, overallList)
+ 		}
+ 	}
+ }
> 
> #makeDiagrams <- function(overallList) {
> #	overallList$debug %debug% "makeDiagrams()"
> #	durchlauf <- ifelse(overallList$showResultInR, 2, 1)
> #	
> #	for(h in 1:durchlauf) {
> #						
> #		if (tolower(overallList$diagramTyp) == "boxplot") {
> #			overallList <- makeBoxplotDiagram(h, overallList)
> #			
> #		} else if (tolower(overallList$diagramTyp) == "boxplotstacked") {
> #			overallList <- makeBoxplotStackedDiagram(h, overallList)
> #			
> #		} else if(tolower(overallList$diagramTyp) == "nboxplot"){
> #			overallList <- makeLinearDiagram(h, overallList)
> #			
> #		}  else if (tolower(overallList$diagramTyp) == "barplot") {
> #			overallList <- makeBarDiagram(h, overallList)
> #		} else {
> #			print("Error - overallList$diagramTyp is undefined!")
> #		}
> #	}
> #}
> 
> checkIfAllNecessaryFilesAreThere <- function() {
+ 		print("... check if the noValues-Image is there")
+ 		file <- "noValues.pdf"
+ 		if(!file.exists(file)){
+ 			library("Cairo")
+ 			print(paste("... create defaultImage '",file,"'",sep=""))
+ 			Cairo(width=900, height=70,file=file,type="pdf",bg="transparent",units="px",dpi=90)
+ 			par(mar = c(0,0,0,0))
+ 			plot.new()
+ 			legend("left", "no values", col= c("black"), pch=1, bty="n")
+ 			dev.off()
+ 		}	
+ }
> 
> buildBlacklist <- function(workingDataSet, descriptorSet) {
+ 	
+ 	searchString <- ".histogram."
+ 	searchString <- paste(searchString,"mark",sep = "|")	
+ 	additionalDescriptors <- c(descriptorSet, "Day (Int)","Day","Time", "Plant ID", "vis.side", "fluo.side", "nir.side", "vis.top", "fluo.top", "nir.top")
+ 	
+ 	return(c(colnames(workingDataSet)[grep(searchString,colnames(workingDataSet), ignore.case = TRUE)], preprocessingOfValues(additionalDescriptors, TRUE)))
+ }
> 
> initRfunction <- function(DEBUG = FALSE){
+ 	
+ 	if(DEBUG) {
+ 		
+ 		options(error = quote({
+ 			#sink(file="error.txt", split = TRUE);
+ 			dump.frames();
+ 			print(attr(last.dump,"error.message"));
+ 			#x <- attr(last.dump,"error.message")
+ 			traceback();
+ 			#sink(file=NULL);		
+ 			#q()
+ 		}))
+ 	} else {	
+ 		options(error = NULL)
+ 	}
+ 	memory.limit(size=3500)
+ 
+ 	while(!is.null(dev.list())) {
+ 		dev.off()
+ 	}
+ }
> typOfStartOptions = "test"
> 	typOfStartOptions <- tolower(typOfStartOptions)
> 	
> 	args <- commandArgs(TRUE)
> 	print("#### Arguments")
[1] "#### Arguments"
> 	print(args)
character(0)
> 	print("####")
[1] "####"
> 	
> 	saveFormat <- "pdf"	
> 	dpi <- "150" ##90
> 	
> 	isGray <- FALSE
> 	showResultInR <- FALSE
> 	
> 	treatment <- "Treatment"
> 	filterTreatment <- "none"
> 	
> 	secondTreatment <- "none"
> 	filterSecondTreatment <- "none"
> 	
> 	xAxis <- "Day (Int)" 
> 	xAxisName <- "DAS"
> 	filterXaxis <- "none"
> 	
> #	diagramTypVector <- vector()
> 	descriptorSet <- vector()
> 	descriptorSetName <- vector()
> 	
> 	fileName <- "error"
> 
> 	appendix <- FALSE
> 	#appendix <- TRUE
> 	
> 	separation <- ";"
> #	if (length(args) < 1) {
> #		englischVersion <- FALSE
> #		#englischVersion <- TRUE
> #	} else {
> #		englischVersion <- TRUE
> #	}
> 
> 	if (typOfStartOptions == "all" | typOfStartOptions == "report" | typOfStartOptions == "allmanual") {
+ 
+ 		if (typOfStartOptions != "allmanual") {
+ 			fileName <- fileName %exists% args[1]
+ 		} else {
+ 			fileName <- "numeric_data.MaizeAnalysisAction_ 1116BA_new3.csv"
+ 			#fileName <- "report.csv" ## englischVersion <- TRUE setzen!!
+ 			#fileName <- "testDataset3.csv"
+ 		}
+ 		
+ 		if (fileName != "error") {
+ 			workingDataSet <- separation %getData% fileName
+ 			
+ 			if(workingDataSet != "error") {
+ 				#nboxplot
+ 				if (typOfStartOptions == "all") {
+ 					descriptorSet_nBoxplot <- colnames(workingDataSet)
+ 					descriptorSetName_nBoxplot <- descriptorSet
+ 					
+ 				} else { #Report	
+ 					descriptorSet_nBoxplot <- c("Weight A (g)","Weight B (g)","Water (weight-diff)","side.height.norm (mm)","side.width.norm (mm)","side.area.norm (mm^2)", "top.area.norm (mm^2)",
+ 							"side.fluo.intensity.chlorophyl.average (relative)","side.fluo.intensity.phenol.average (relative)",
+ 							"side.nir.intensity.average (relative)","side.leaf.count.median (leafs)","side.bloom.count (tassel)",
+ 							"side.leaf.length.sum.norm.max (mm)", "volume.fluo.iap","volume.iap (px^3)", "volume.iap_max", "volume.lt (px^3)",
+ 							"volume.iap.wue", "side.nir.wetness.plant_weight_drought_loss", "top.nir.wetness.plant_weight_drought_loss", "side.nir.wetness.av", "top.nir.wetness.av",
+ 							"side.area.relative", "side.height.norm.relative", "side.width.norm.relative", "top.area.relative", "side.area.relative", "volume.iap.relative",
+ 							"side.height (mm)","side.width (mm)","side.area (px)", "top.area (px)")
+ 				
+ 					descriptorSetName_nBoxplot <- c("weight before watering (g)","weight after watering (g)", "water weight (g)", "normalized height (mm)", "normalized width (mm)", "normalized side area (mm^2)", "normalized top area (mm^2)",
+ 							"chlorophyl intensity (relative intensity/pixel)", "fluorescence intensity (relative intensity/pixel)", "nir intensity (relative intensity/pixel)",
+ 							"number of leafs (leaf)", "number of tassels (tassel)", "length of leafs plus stem (mm)", "volume based on FLUO (IAP) (px^3)", "volume based on RGB (IAP) (px^3)", "volume based on max RGB-image (IAP) (px^3)", "volume based on RGB (LemnaTec) (px^3)",
+ 							"volume based water use efficiency", "weighted loss through drought stress (side)", "weighted loss through drought stress (top)", "Average wetness of side image", "Average wetness of top image",
+ 							"relative projected side area (%)", "relative plant height (%)", "relative plant width (%)", "relative projected top area (%)", "relative projected side area (%)", "relative volume (IAP based formular - RGB) (%)",
+ 							"height (px)", "width (px)", "side area (px)", "top area (px)")		
+ 				}
+ 	
+ 				nBoxOptions= NULL
+ 				#diagramTypVector <- rep.int("nboxplot", times=length(descriptorSetName))
+ 		
+ 		
+ 				#boxplot
+ 				descriptorSet_boxplot <- c("side.height.norm (mm)","side.width.norm (mm)","side.area.norm (mm^2)", "top.area.norm (mm^2)",
+ 						"volume.fluo.iap","volume.iap (px^3)", "volume.iap_max", "volume.lt (px^3)",
+ 						"side.height (mm)","side.width (mm)","side.area (px)", "top.area (px)")
+ 				
+ 				descriptorSetName_boxplot <- c("normalized height (mm)", "normalized width (mm)", "normalized side area (mm^2)", "normalized top area (mm^2)",
+ 						"volume based on FLUO (IAP) (px^3)", "volume based on RGB (IAP) (px^3)", "volume based on max RGB-image (IAP) (px^3)", "volume based on RGB (LemnaTec) (px^3)",
+ 						"height (px)", "width (px)", "side area (px)", "top area (px)")	
+ 				
+ 				boxOptions= NULL
+ 				#diagramTypVectorBox <- rep.int("boxplot", times=length(descriptorSetBox))
+ 				
+ 				#descriptorSet <- c(descriptorSet, descriptorSetBox)
+ 				#descriptorSetName <- c(descriptorSetName, descriptorSetNameBox)
+ 				#diagramTypVector <- c(diagramTypVector, diagramTypVectorBox)
+ 				
+ 				#boxplotStacked
+ 				descriptorSet_boxplotStacked <- c("side.nir.normalized.histogram.bin.1.0_25$side.nir.normalized.histogram.bin.2.25_51$side.nir.normalized.histogram.bin.3.51_76$side.nir.normalized.histogram.bin.4.76_102$side.nir.normalized.histogram.bin.5.102_127$side.nir.normalized.histogram.bin.6.127_153$side.nir.normalized.histogram.bin.7.153_178$side.nir.normalized.histogram.bin.8.178_204$side.nir.normalized.histogram.bin.9.204_229$side.nir.normalized.histogram.bin.10.229_255",
+ 								   				  "side.fluo.histogram.bin.1.0_25$side.fluo.histogram.bin.2.25_51$side.fluo.histogram.bin.3.51_76$side.fluo.histogram.bin.4.76_102$side.fluo.histogram.bin.5.102_127$side.fluo.histogram.bin.6.127_153$side.fluo.histogram.bin.7.153_178$side.fluo.histogram.bin.8.178_204$side.fluo.histogram.bin.9.204_229$side.fluo.histogram.bin.10.229_255",
+ 										  		  "top.nir.histogram.bin.1.0_25$top.nir.histogram.bin.2.25_51$top.nir.histogram.bin.3.51_76$top.nir.histogram.bin.4.76_102$top.nir.histogram.bin.5.102_127$top.nir.histogram.bin.6.127_153$top.nir.histogram.bin.7.153_178$top.nir.histogram.bin.8.178_204$top.nir.histogram.bin.9.204_229$top.nir.histogram.bin.10.229_255",
+ 												  "side.fluo.histogram.phenol.bin.1.0_25$side.fluo.histogram.phenol.bin.2.25_51$side.fluo.histogram.phenol.bin.3.51_76$side.fluo.histogram.phenol.bin.4.76_102$side.fluo.histogram.phenol.bin.5.102_127$side.fluo.histogram.phenol.bin.6.127_153$side.fluo.histogram.phenol.bin.7.153_178$side.fluo.histogram.phenol.bin.8.178_204$side.fluo.histogram.phenol.bin.9.204_229$side.fluo.histogram.phenol.bin.10.229_255",
+ 												  "side.fluo.histogram.ratio.bin.1.0_25$side.fluo.histogram.ratio.bin.2.25_51$side.fluo.histogram.ratio.bin.3.51_76$side.fluo.histogram.ratio.bin.4.76_102$side.fluo.histogram.ratio.bin.5.102_127$side.fluo.histogram.ratio.bin.6.127_153$side.fluo.histogram.ratio.bin.7.153_178$side.fluo.histogram.ratio.bin.8.178_204$side.fluo.histogram.ratio.bin.9.204_229$side.fluo.histogram.ratio.bin.10.229_255",
+ 												  "side.nir.normalized.histogram.bin.1.0_25$side.nir.normalized.histogram.bin.2.25_51$side.nir.normalized.histogram.bin.3.51_76$side.nir.normalized.histogram.bin.4.76_102$side.nir.normalized.histogram.bin.5.102_127$side.nir.normalized.histogram.bin.6.127_153$side.nir.normalized.histogram.bin.7.153_178$side.nir.normalized.histogram.bin.8.178_204$side.nir.normalized.histogram.bin.9.204_229$side.nir.normalized.histogram.bin.10.229_255",
+ 												  "side.fluo.normalized.histogram.bin.1.0_25$side.fluo.normalized.histogram.bin.2.25_51$side.fluo.normalized.histogram.bin.3.51_76$side.fluo.normalized.histogram.bin.4.76_102$side.fluo.normalized.histogram.bin.5.102_127$side.fluo.normalized.histogram.bin.6.127_153$side.fluo.normalized.histogram.bin.7.153_178$side.fluo.normalized.histogram.bin.8.178_204$side.fluo.normalized.histogram.bin.9.204_229$side.fluo.normalized.histogram.bin.10.229_255",
+ 												  "side.fluo.normalized.histogram.phenol.bin.1.0_25$side.fluo.normalized.histogram.phenol.bin.2.25_51$side.fluo.normalized.histogram.phenol.bin.3.51_76$side.fluo.normalized.histogram.phenol.bin.4.76_102$side.fluo.normalized.histogram.phenol.bin.5.102_127$side.fluo.normalized.histogram.phenol.bin.6.127_153$side.fluo.normalized.histogram.phenol.bin.7.153_178$side.fluo.normalized.histogram.phenol.bin.8.178_204$side.fluo.normalized.histogram.phenol.bin.9.204_229$side.fluo.normalized.histogram.phenol.bin.10.229_255",
+ 												  "side.fluo.normalized.histogram.ratio.bin.1.0_25$side.fluo.normalized.histogram.ratio.bin.2.25_51$side.fluo.normalized.histogram.ratio.bin.3.51_76$side.fluo.normalized.histogram.ratio.bin.4.76_102$side.fluo.normalized.histogram.ratio.bin.5.102_127$side.fluo.normalized.histogram.ratio.bin.6.127_153$side.fluo.normalized.histogram.ratio.bin.7.153_178$side.fluo.normalized.histogram.ratio.bin.8.178_204$side.fluo.normalized.histogram.ratio.bin.9.204_229$side.fluo.normalized.histogram.ratio.bin.10.229_255",
+ 												  "side.nir.histogram.phenol.bin.1.0_25$side.nir.histogram.phenol.bin.2.25_51$side.nir.histogram.phenol.bin.3.51_76$side.nir.histogram.phenol.bin.4.76_102$side.nir.histogram.phenol.bin.5.102_127$side.nir.histogram.phenol.bin.6.127_153$side.nir.histogram.phenol.bin.7.153_178$side.nir.histogram.phenol.bin.8.178_204$side.nir.histogram.phenol.bin.9.204_229$side.nir.histogram.phenol.bin.10.229_255",
+ 												  "side.nir.histogram.ratio.bin.1.0_25$side.nir.histogram.ratio.bin.2.25_51$side.nir.histogram.ratio.bin.3.51_76$side.nir.histogram.ratio.bin.4.76_102$side.nir.histogram.ratio.bin.5.102_127$side.nir.histogram.ratio.bin.6.127_153$side.nir.histogram.ratio.bin.7.153_178$side.nir.histogram.ratio.bin.8.178_204$side.nir.histogram.ratio.bin.9.204_229$side.nir.histogram.ratio.bin.10.229_255",
+ 												  "side.vis.hue.histogram.ratio.bin.1.0_25$side.vis.hue.histogram.ratio.nir.2.25_51$side.vis.hue.histogram.ratio.bin.3.51_76$side.vis.hue.histogram.ratio.bin.4.76_102$side.vis.hue.histogram.ratio.bin.5.102_127$side.vis.hue.histogram.ratio.bin.6.127_153$side.vis.hue.histogram.ratio.bin.7.153_178$side.vis.hue.histogram.ratio.bin.8.178_204$side.vis.hue.histogram.ratio.bin.9.204_229$side.vis.hue.histogram.ratio.bin.10.229_255",
+ 												  "side.vis.normalized.histogram.ratio.bin.1.0_25$side.vis.normalized.histogram.ratio.bin.2.25_51$side.vis.normalized.histogram.ratio.bin.3.51_76$side.vis.normalized.histogram.ratio.bin.4.76_102$side.vis.normalized.histogram.ratio.bin.5.102_127$side.vis.normalized.histogram.ratio.bin.6.127_153$side.vis.normalized.histogram.ratio.bin.7.153_178$side.vis.normalized.histogram.ratio.bin.8.178_204$side.vis.normalized.histogram.ratio.bin.9.204_229$side.vis.normalized.histogram.ratio.bin.10.229_255",
+ 												  "top.fluo.histogram.bin.1.0_25$top.fluo.histogram.bin.2.25_51$top.fluo.histogram.bin.3.51_76$top.fluo.histogram.bin.4.76_102$top.fluo.histogram.bin.5.102_127$top.fluo.histogram.bin.6.127_153$top.fluo.histogram.bin.7.153_178$top.fluo.histogram.bin.8.178_204$top.fluo.histogram.bin.9.204_229$top.fluo.histogram.bin.10.229_255",
+ 												  "top.fluo.histogram.phenol.bin.1.0_25$top.fluo.histogram.phenol.bin.2.25_51$top.fluo.histogram.phenol.bin.3.51_76$top.fluo.histogram.phenol.bin.4.76_102$top.fluo.histogram.phenol.bin.5.102_127$top.fluo.histogram.phenol.bin.6.127_153$top.fluo.histogram.phenol.bin.7.153_178$top.fluo.histogram.phenol.bin.8.178_204$top.fluo.histogram.phenol.bin.9.204_229$top.fluo.histogram.phenol.bin.10.229_255",
+ 												  "top.fluo.histogram.ratio.bin.1.0_25$top.fluo.histogram.ratio.bin.2.25_51$top.fluo.histogram.ratio.bin.3.51_76$top.fluo.histogram.ratio.bin.4.76_102$top.fluo.histogram.ratio.bin.5.102_127$top.fluo.histogram.ratio.bin.6.127_153$top.fluo.histogram.ratio.bin.7.153_178$top.fluo.histogram.ratio.bin.8.178_204$top.fluo.histogram.ratio.bin.9.204_229$top.fluo.histogram.ratio.bin.10.229_255",
+ 												  "top.nir.histogram.bin.1.0_25$top.nir.histogram.bin.2.25_51$top.nir.histogram.bin.3.51_76$top.nir.histogram.bin.4.76_102$top.nir.histogram.bin.5.102_127$top.nir.histogram.bin.6.127_153$top.nir.histogram.bin.7.153_178$top.nir.histogram.bin.8.178_204$top.nir.histogram.bin.9.204_229$top.nir.histogram.bin.10.229_255",
+ 												  "top.nir.histogram.phenol.bin.1.0_25$top.nir.histogram.phenol.bin.2.25_51$top.nir.histogram.phenol.bin.3.51_76$top.nir.histogram.phenol.bin.4.76_102$top.nir.histogram.phenol.bin.5.102_127$top.nir.histogram.phenol.bin.6.127_153$top.nir.histogram.phenol.bin.7.153_178$top.nir.histogram.phenol.bin.8.178_204$top.nir.histogram.phenol.bin.9.204_229$top.nir.histogram.phenol.bin.10.229_255",
+ 												  "top.nir.histogram.ratio.bin.1.0_25$top.nir.histogram.ratio.bin.2.25_51$top.nir.histogram.ratio.bin.3.51_76$top.nir.histogram.ratio.bin.4.76_102$top.nir.histogram.ratio.bin.5.102_127$top.nir.histogram.ratio.bin.6.127_153$top.nir.histogram.ratio.bin.7.153_178$top.nir.histogram.ratio.bin.8.178_204$top.nir.histogram.ratio.bin.9.204_229$top.nir.histogram.ratio.bin.10.229_255",
+ 												  "top.vis.hue.histogram.ratio.bin.1.0_25$top.vis.hue.histogram.ratio.bin.2.25_51$top.vis.hue.histogram.ratio.bin.3.51_76$top.vis.hue.histogram.ratio.bin.4.76_102$top.vis.hue.histogram.ratio.bin.5.102_127$top.vis.hue.histogram.ratio.bin.6.127_153$top.vis.hue.histogram.ratio.bin.7.153_178$top.vis.hue.histogram.ratio.bin.8.178_204$top.vis.hue.histogram.ratio.bin.9.204_229$top.vis.hue.histogram.ratio.bin.10.229_255")
+ 												  
+ 										  
+ 										  
+ 										  
+ 				descriptorSetName_boxplotStacked <- c("NIR side (%)", "red side fluorescence histogram (%)", "NIR top (%)", "yellow side fluorescence histogram (%)", "fluo side ratio histogramm (%)",
+ 													  "NIR side normalized (%)", "red side normalized fluo histogramm (%)", "yellow side normalized fluo histogramm (%)", "fluo side normalized ratio histogramm (%)",
+ 													  "NIR side phenol (%)", "NIR side ratio histogramm (%)", "VIS HUE side ratio histogramm (%)", "VIS side normalized ratio histogramm (%)",
+ 													  "red top fluorescence histogram (%)", "yellow top fluorescence histogram (%)","fluo top ratio histogramm (%)",
+ 													  "NIR top (%)", "NIR top phenol histogram (%)","NIR top ratio histogramm (%)",
+ 													  "VIS HUE top ratio histogramm (%)")
+ 											  
+ 				stackedBarOptions = list(typOfGeomBar=c("fill", "stack", "dodge"))
+ 				#diagramTypVector <- c(diagramTypVector, "boxplotStacked", "boxplotStacked")
+ 				
+ 				appendix <- appendix %exists% args[3]
+ 				
+ 				if(appendix) {
+ 					blacklist <- buildBlacklist(workingDataSet, descriptorSet)
+ 					descriptorSetAppendix <- colnames(workingDataSet[!as.data.frame(sapply(colnames(workingDataSet),'%in%', blacklist))[,1]])
+ 					descriptorSetNameAppendix <- descriptorSetAppendix
+ 					#diagramTypVectorAppendix <- rep.int("nboxplot", times=length(descriptorSetNameAppendix))
+ 				}
+ 			
+ 				saveFormat <- saveFormat %exists% args[2]
+ 							
+ 				listOfTreatAndFilterTreat <- checkOfTreatments(args, treatment, filterTreatment, secondTreatment, filterSecondTreatment, workingDataSet, debug)
+ 				treatment <- listOfTreatAndFilterTreat[[1]][[1]]
+ 				secondTreatment <- listOfTreatAndFilterTreat[[1]][[2]]
+ 				filterTreatment <- listOfTreatAndFilterTreat[[2]][[1]]
+ 				filterSecondTreatment <- listOfTreatAndFilterTreat[[2]][[2]]
+ 			} else {
+ 				fileName = "error"
+ 			}
+ 		}
+ 		
+ 	} else if (typOfStartOptions == "test"){
+ 		
+ 		
+ 		#fileName <- "1107BA_Corn_new2.csv"
+ 			
+ 		#workingDataSet <- read.csv2(fileName, header=TRUE, sep=";", fileEncoding="ISO-8859-1", encoding="UTF-8")                   
+ 		#descriptorSet <- c("side.nir.intensity.average.norm","side.nir.intensity.average","side.hull.area.norm","side.height.norm","Gewicht.B","water.consumption")                   
+ 		#descriptorSetName <- c("nir intensity (rel. intensity/px)","nir intensity (rel. intensity/px)","convex hull area (mm^2)","height (mm)","target weight (g)","water consumption")
+ 			
+ 		#descriptorSet <- c("side.nir.intensity.average.norm","Gewicht.B")                   
+ 		#descriptorSetName <- c("nir intensity (rel. intensity/px)","target weight (g)")
+ 				
+ 		#descriptorSet <- c("digital.biomass.unnormal","digital.biomass.normal","mark3.y")                   
+ 		#descriptorSetName <- c("digital biomass (mm^3)","digital biomass (mm^3)","mark (% from image height)")
+ 			
+ 		#descriptorSet <- c("digital.biomass.keygene.norm","side.area","top.area")                   
+ 		#descriptorSetName <- c("digital biomass (mm^3)","test1", "test2")
+ 			
+ #		descriptorSet <- c("side.nir.normalized.histogram.bin.1.0_25$side.nir.normalized.histogram.bin.2.25_51$side.nir.normalized.histogram.bin.3.51_76$side.nir.normalized.histogram.bin.4.76_102$side.nir.normalized.histogram.bin.5.102_127$side.nir.normalized.histogram.bin.6.127_153$side.nir.normalized.histogram.bin.7.153_178$side.nir.normalized.histogram.bin.8.178_204$side.nir.normalized.histogram.bin.9.204_229$side.nir.normalized.histogram.bin.10.229_255",
+ #					"side.fluo.normalized.histogram.bin.1.0_25$side.fluo.normalized.histogram.bin.2.25_51$side.fluo.normalized.histogram.bin.3.51_76$side.fluo.normalized.histogram.bin.4.76_102$side.fluo.normalized.histogram.bin.5.102_127$side.fluo.normalized.histogram.bin.6.127_153$side.fluo.normalized.histogram.bin.7.153_178$side.fluo.normalized.histogram.bin.8.178_204$side.fluo.normalized.histogram.bin.9.204_229$side.fluo.normalized.histogram.bin.10.229_255")
+ #		descriptorSetName <- c("NIR absorption class (%)", "chlorophyll fluorescence histogram (%)")
+ 			
+ #		descriptorSet <- c("side.nir.normalized.histogram.bin.1.0_25$side.nir.normalized.histogram.bin.2.25_51$side.nir.normalized.histogram.bin.3.51_76$side.nir.normalized.histogram.bin.4.76_102$side.nir.normalized.histogram.bin.5.102_127$side.nir.normalized.histogram.bin.6.127_153$side.nir.normalized.histogram.bin.7.153_178$side.nir.normalized.histogram.bin.8.178_204$side.nir.normalized.histogram.bin.9.204_229$side.nir.normalized.histogram.bin.10.229_255")
+ #		descriptorSetName <- c("NIR absorption class (%)")
+ 			
+ 		#descriptorSet <- c("Plant ID$Treatment$Hallo$Wert1$Repl ID")
+ 		#descriptorSetName <- c("VariableMix")
+ 	
+ #		descriptorSet <- c("side.fluo.normalized.histogram.bin.1.0_25$side.fluo.normalized.histogram.bin.2.25_51$side.fluo.normalized.histogram.bin.3.51_76$side.fluo.normalized.histogram.bin.4.76_102$side.fluo.normalized.histogram.bin.5.102_127$side.fluo.normalized.histogram.bin.6.127_153$side.fluo.normalized.histogram.bin.7.153_178$side.fluo.normalized.histogram.bin.8.178_204$side.fluo.normalized.histogram.bin.9.204_229$side.fluo.normalized.histogram.bin.10.229_255")
+ #		#descriptorSet <- c("side.fluo.normalized.histogram.bin.2.25_51$side.fluo.normalized.histogram.bin.1.0_25$side.fluo.normalized.histogram.bin.3.51_76$side.fluo.normalized.histogram.bin.4.76_102$side.fluo.normalized.histogram.bin.5.102_127$side.fluo.normalized.histogram.bin.6.127_153$side.fluo.normalized.histogram.bin.7.153_178$side.fluo.normalized.histogram.bin.8.178_204$side.fluo.normalized.histogram.bin.9.204_229$side.fluo.normalized.histogram.bin.10.229_255")
+ #		descriptorSetName <- c("red fluorescence histogram (%)")
+ 	
+ 	
+ 		#descriptorSet <- c("Weight B (g)","side.height.norm (mm)","side.width.norm (mm)","side.area.norm (mm^2)",
+ 		#		"side.fluo.intensity.chlorophyl.average (relative)","side.fluo.intensity.phenol.average (relative)",
+ 		#		"side.nir.intensity.average (relative)",
+ 		#		"side.leaf.count.median (leafs)","side.bloom.count (tassel)","side.leaf.length.sum.norm.max (mm)")
+ 			
+ 		# "digital biomass IAP (pixel^3)","digital biomass KeyGene (pixel^3)", 
+ 		#descriptorSetName <- c("weight (g)","height (mm)", "width (mm)", "side area (pixel^2)",
+ 		#		"chlorophyl intensity (relative intensity/pixel)", "fluorescence intensity (relative intensity/pixel)", "nir intensity (relative intensity/pixel)",
+ 		#		"number of leafs (leaf)", "number of tassels (tassel)", "length of leafs plus stem (mm)")
+ 		
+ #		descriptorSet <- c("side.area (px)","side.area.norm (mm^2)")
+ #		descriptorSetName <- c("side area uncorrected (mm^2)", "side area corrected (mm^2)")
+ 		
+ 		#descriptorSet <- c("Hallo2")
+ 		#descriptorSetName <- c("Test")
+ 		
+ 		#descriptorSet <- colnames(workingDataSet)
+ 		#descriptorSetName <- colnames(workingDataSet)
+ 		
+ 		#treatment <- "none"
+ 		treatment <- "Genotype"
+ 		#treatment <- "Treatment"
+ 		#treatment <- "Condition"
+ 		#filterTreatment <- "dry$normal$wet"
+ 		#filterTreatment <- "dry$normal"
+ 		#filterTreatment <- "normal bewaessert$Trockentress"
+ 		#filterTreatment <- "ganz"
+ 		filterTreatment <- "none"
+ 		##filterTreatment <- "Deutschland$Spanien$Italien$China"
+ 		
+ 		#secondTreatment <- "Genotype"
+ 		secondTreatment <- "none"
+ 		#secondTreatment <- "Species"
+ 		#secondTreatment <- "Variety"
+ 		filterSecondTreatment <- "none"
+ 		
+ 		#secondTreatment <- "secondTreatment"
+ 		#filterSecondTreatment <- "a$c"
+ 		
+ 		###1116BA#########6 8 10 12 13 14 15 16 17 19 20 21 22 23 24 25 26 27 28 29 30 31 33 34 35 36 37 38 39 40
+ 		#filterXaxis <- c("6$8$10$12$13$14$15$16$20$21$22$23$26$27$28$29$30$31$33$34$35$36$37$38")
+ 		#filterXaxis <- c("6$8$13")
+ 		###1107BA#########2$4$6$8$10$12$13$15$16$21$22$25$27$29$30$31$33$35$36$37$39$41$42$43$45$47$49$50$51$55$57$59$61$63$64
+ 		#filterXaxis <- c("2$4$6$8$10$12$13$15$16$21$22$25$27$29$30$31$33$35$36$37$39$41$43$45$47$49$50$51$55$57$59$61$63$64")
+ 		#filterXaxis <- c("6$8$10")
+ 		filterXaxis <- "none"
+ 		#filterXaxis <- c("6$8$10$12$13$14$15$16$20$21$22$23$26$27$28$29$30$31$33$34$35$36$37$38")
+ 		
+ 		#treatment <- "Treatment"
+ 		##treatment <- "Variety"
+ 		#treatment <- "none"
+ 		
+ 		#diagramTyp="boxplotStacked"
+ 		#diagramTyp="nboxplot"
+ 		#diagramTyp="boxplot"
+ 		
+ 		bgColor <- "transparent"
+ 		isGray="FALSE"
+ 		#transparent <- "TRUE"
+ 		#legendUnderImage <- "TRUE"
+ 		#showResultInR <- TRUE
+ 		showResultInR <- FALSE
+ 		
+ 		#fileName <- "numeric_data.MaizeAnalysisAction_ 1116BA_new3.csv"
+ 		#fileName <- "testDataset2.csv"
+ 		fileName <- "report.csv"
+ 		#fileName <- "testDataset3.csv"
+ 		#englischVersion <- FALSE
+ 		#englischVersion <- TRUE
+ 		separation <- ";"
+ 		workingDataSet <- separation %getData% fileName
+ 		
+ 		#descriptor <- c("Hallo2")
+ 		#descriptor <- c("Plant ID","Treatment","Hallo","Wert1", "Repl ID")
+ 		#descriptor <- c("Repl ID")		
+ 		#descriptorSet <- c("nir.top")
+ 		#descriptorSet <- c("Plant ID")
+ 		#descriptorSet <- c("side.height.norm (mm)")
+ 
+ 		#descriptorSet <- c("side.area.norm (mm^2)")
+ 		#descriptorSetName <- c("Das ist ein Testname")
+ 		if(TRUE) {
+ 			
+ 			descriptorSet_nBoxplot <- c("Weight A (g)","Weight B (g)","Water (weight-diff)","side.height.norm (mm)","side.width.norm (mm)","side.area.norm (mm^2)", "top.area.norm (mm^2)",
+ 					"side.fluo.intensity.chlorophyl.average (relative)","side.fluo.intensity.phenol.average (relative)",
+ 					"side.nir.intensity.average (relative)","side.leaf.count.median (leafs)","side.bloom.count (tassel)",
+ 					"side.leaf.length.sum.norm.max (mm)", "volume.fluo.iap","volume.iap (px^3)", "volume.iap_max", "volume.lt (px^3)",
+ 					"volume.iap.wue", "side.nir.wetness.plant_weight_drought_loss", "top.nir.wetness.plant_weight_drought_loss", "side.nir.wetness.av", "top.nir.wetness.av",
+ 					"side.area.relative", "side.height.norm.relative", "side.width.norm.relative", "top.area.relative", "side.area.relative", "volume.iap.relative",
+ 					"side.height (mm)","side.width (mm)","side.area (px)", "top.area (px)")
+ 			
+ 			descriptorSetName_nBoxplot <- c("weight before watering (g)","weight after watering (g)", "water weight (g)", "normalized height (mm)", "normalized width (mm)", "normalized side area (mm^2)", "normalized top area (mm^2)",
+ 					"chlorophyl intensity (relative intensity/pixel)", "fluorescence intensity (relative intensity/pixel)", "nir intensity (relative intensity/pixel)",
+ 					"number of leafs (leaf)", "number of tassels (tassel)", "length of leafs plus stem (mm)", "volume based on FLUO (IAP) (px^3)", "volume based on RGB (IAP) (px^3)", "volume based on max RGB-image (IAP) (px^3)", "volume based on RGB (LemnaTec) (px^3)",
+ 					"volume based water use efficiency", "weighted loss through drought stress (side)", "weighted loss through drought stress (top)", "Average wetness of side image", "Average wetness of top image",
+ 					"relative projected side area (%)", "relative plant height (%)", "relative plant width (%)", "relative projected top area (%)", "relative projected side area (%)", "relative volume (IAP based formular - RGB) (%)",
+ 					"height (px)", "width (px)", "side area (px)", "top area (px)")		
+ 		
+ 		nBoxOptions= NULL
+ 		#diagramTypVector <- rep.int("nboxplot", times=length(descriptorSetName))
+ 		
+ 		
+ 		#boxplot
+ 		descriptorSet_boxplot <- c("side.height.norm (mm)","side.width.norm (mm)","side.area.norm (mm^2)", "top.area.norm (mm^2)",
+ 				"volume.fluo.iap","volume.iap (px^3)", "volume.iap_max", "volume.lt (px^3)",
+ 				"side.height (mm)","side.width (mm)","side.area (px)", "top.area (px)")
+ 		
+ 		descriptorSetName_boxplot <- c("normalized height (mm)", "normalized width (mm)", "normalized side area (mm^2)", "normalized top area (mm^2)",
+ 				"volume based on FLUO (IAP) (px^3)", "volume based on RGB (IAP) (px^3)", "volume based on max RGB-image (IAP) (px^3)", "volume based on RGB (LemnaTec) (px^3)",
+ 				"height (px)", "width (px)", "side area (px)", "top area (px)")	
+ 		
+ 		boxOptions= NULL
+ 		#diagramTypVectorBox <- rep.int("boxplot", times=length(descriptorSetBox))
+ 		
+ 		#descriptorSet <- c(descriptorSet, descriptorSetBox)
+ 		#descriptorSetName <- c(descriptorSetName, descriptorSetNameBox)
+ 		#diagramTypVector <- c(diagramTypVector, diagramTypVectorBox)
+ 		
+ 		#boxplotStacked
+ 		descriptorSet_boxplotStacked <- c("side.nir.normalized.histogram.bin.1.0_25$side.nir.normalized.histogram.bin.2.25_51$side.nir.normalized.histogram.bin.3.51_76$side.nir.normalized.histogram.bin.4.76_102$side.nir.normalized.histogram.bin.5.102_127$side.nir.normalized.histogram.bin.6.127_153$side.nir.normalized.histogram.bin.7.153_178$side.nir.normalized.histogram.bin.8.178_204$side.nir.normalized.histogram.bin.9.204_229$side.nir.normalized.histogram.bin.10.229_255",
+ 				"side.fluo.histogram.bin.1.0_25$side.fluo.histogram.bin.2.25_51$side.fluo.histogram.bin.3.51_76$side.fluo.histogram.bin.4.76_102$side.fluo.histogram.bin.5.102_127$side.fluo.histogram.bin.6.127_153$side.fluo.histogram.bin.7.153_178$side.fluo.histogram.bin.8.178_204$side.fluo.histogram.bin.9.204_229$side.fluo.histogram.bin.10.229_255",
+ 				"top.nir.histogram.bin.1.0_25$top.nir.histogram.bin.2.25_51$top.nir.histogram.bin.3.51_76$top.nir.histogram.bin.4.76_102$top.nir.histogram.bin.5.102_127$top.nir.histogram.bin.6.127_153$top.nir.histogram.bin.7.153_178$top.nir.histogram.bin.8.178_204$top.nir.histogram.bin.9.204_229$top.nir.histogram.bin.10.229_255",
+ 				"side.fluo.histogram.phenol.bin.1.0_25$side.fluo.histogram.phenol.bin.2.25_51$side.fluo.histogram.phenol.bin.3.51_76$side.fluo.histogram.phenol.bin.4.76_102$side.fluo.histogram.phenol.bin.5.102_127$side.fluo.histogram.phenol.bin.6.127_153$side.fluo.histogram.phenol.bin.7.153_178$side.fluo.histogram.phenol.bin.8.178_204$side.fluo.histogram.phenol.bin.9.204_229$side.fluo.histogram.phenol.bin.10.229_255",
+ 				"side.fluo.histogram.ratio.bin.1.0_25$side.fluo.histogram.ratio.bin.2.25_51$side.fluo.histogram.ratio.bin.3.51_76$side.fluo.histogram.ratio.bin.4.76_102$side.fluo.histogram.ratio.bin.5.102_127$side.fluo.histogram.ratio.bin.6.127_153$side.fluo.histogram.ratio.bin.7.153_178$side.fluo.histogram.ratio.bin.8.178_204$side.fluo.histogram.ratio.bin.9.204_229$side.fluo.histogram.ratio.bin.10.229_255",
+ 				"side.nir.normalized.histogram.bin.1.0_25$side.nir.normalized.histogram.bin.2.25_51$side.nir.normalized.histogram.bin.3.51_76$side.nir.normalized.histogram.bin.4.76_102$side.nir.normalized.histogram.bin.5.102_127$side.nir.normalized.histogram.bin.6.127_153$side.nir.normalized.histogram.bin.7.153_178$side.nir.normalized.histogram.bin.8.178_204$side.nir.normalized.histogram.bin.9.204_229$side.nir.normalized.histogram.bin.10.229_255",
+ 				"side.fluo.normalized.histogram.bin.1.0_25$side.fluo.normalized.histogram.bin.2.25_51$side.fluo.normalized.histogram.bin.3.51_76$side.fluo.normalized.histogram.bin.4.76_102$side.fluo.normalized.histogram.bin.5.102_127$side.fluo.normalized.histogram.bin.6.127_153$side.fluo.normalized.histogram.bin.7.153_178$side.fluo.normalized.histogram.bin.8.178_204$side.fluo.normalized.histogram.bin.9.204_229$side.fluo.normalized.histogram.bin.10.229_255",
+ 				"side.fluo.normalized.histogram.phenol.bin.1.0_25$side.fluo.normalized.histogram.phenol.bin.2.25_51$side.fluo.normalized.histogram.phenol.bin.3.51_76$side.fluo.normalized.histogram.phenol.bin.4.76_102$side.fluo.normalized.histogram.phenol.bin.5.102_127$side.fluo.normalized.histogram.phenol.bin.6.127_153$side.fluo.normalized.histogram.phenol.bin.7.153_178$side.fluo.normalized.histogram.phenol.bin.8.178_204$side.fluo.normalized.histogram.phenol.bin.9.204_229$side.fluo.normalized.histogram.phenol.bin.10.229_255",
+ 				"side.fluo.normalized.histogram.ratio.bin.1.0_25$side.fluo.normalized.histogram.ratio.bin.2.25_51$side.fluo.normalized.histogram.ratio.bin.3.51_76$side.fluo.normalized.histogram.ratio.bin.4.76_102$side.fluo.normalized.histogram.ratio.bin.5.102_127$side.fluo.normalized.histogram.ratio.bin.6.127_153$side.fluo.normalized.histogram.ratio.bin.7.153_178$side.fluo.normalized.histogram.ratio.bin.8.178_204$side.fluo.normalized.histogram.ratio.bin.9.204_229$side.fluo.normalized.histogram.ratio.bin.10.229_255",
+ 				"side.nir.histogram.phenol.bin.1.0_25$side.nir.histogram.phenol.bin.2.25_51$side.nir.histogram.phenol.bin.3.51_76$side.nir.histogram.phenol.bin.4.76_102$side.nir.histogram.phenol.bin.5.102_127$side.nir.histogram.phenol.bin.6.127_153$side.nir.histogram.phenol.bin.7.153_178$side.nir.histogram.phenol.bin.8.178_204$side.nir.histogram.phenol.bin.9.204_229$side.nir.histogram.phenol.bin.10.229_255",
+ 				"side.nir.histogram.ratio.bin.1.0_25$side.nir.histogram.ratio.bin.2.25_51$side.nir.histogram.ratio.bin.3.51_76$side.nir.histogram.ratio.bin.4.76_102$side.nir.histogram.ratio.bin.5.102_127$side.nir.histogram.ratio.bin.6.127_153$side.nir.histogram.ratio.bin.7.153_178$side.nir.histogram.ratio.bin.8.178_204$side.nir.histogram.ratio.bin.9.204_229$side.nir.histogram.ratio.bin.10.229_255",
+ 				"side.vis.hue.histogram.ratio.bin.1.0_25$side.vis.hue.histogram.ratio.nir.2.25_51$side.vis.hue.histogram.ratio.bin.3.51_76$side.vis.hue.histogram.ratio.bin.4.76_102$side.vis.hue.histogram.ratio.bin.5.102_127$side.vis.hue.histogram.ratio.bin.6.127_153$side.vis.hue.histogram.ratio.bin.7.153_178$side.vis.hue.histogram.ratio.bin.8.178_204$side.vis.hue.histogram.ratio.bin.9.204_229$side.vis.hue.histogram.ratio.bin.10.229_255",
+ 				"side.vis.normalized.histogram.ratio.bin.1.0_25$side.vis.normalized.histogram.ratio.bin.2.25_51$side.vis.normalized.histogram.ratio.bin.3.51_76$side.vis.normalized.histogram.ratio.bin.4.76_102$side.vis.normalized.histogram.ratio.bin.5.102_127$side.vis.normalized.histogram.ratio.bin.6.127_153$side.vis.normalized.histogram.ratio.bin.7.153_178$side.vis.normalized.histogram.ratio.bin.8.178_204$side.vis.normalized.histogram.ratio.bin.9.204_229$side.vis.normalized.histogram.ratio.bin.10.229_255",
+ 				"top.fluo.histogram.bin.1.0_25$top.fluo.histogram.bin.2.25_51$top.fluo.histogram.bin.3.51_76$top.fluo.histogram.bin.4.76_102$top.fluo.histogram.bin.5.102_127$top.fluo.histogram.bin.6.127_153$top.fluo.histogram.bin.7.153_178$top.fluo.histogram.bin.8.178_204$top.fluo.histogram.bin.9.204_229$top.fluo.histogram.bin.10.229_255",
+ 				"top.fluo.histogram.phenol.bin.1.0_25$top.fluo.histogram.phenol.bin.2.25_51$top.fluo.histogram.phenol.bin.3.51_76$top.fluo.histogram.phenol.bin.4.76_102$top.fluo.histogram.phenol.bin.5.102_127$top.fluo.histogram.phenol.bin.6.127_153$top.fluo.histogram.phenol.bin.7.153_178$top.fluo.histogram.phenol.bin.8.178_204$top.fluo.histogram.phenol.bin.9.204_229$top.fluo.histogram.phenol.bin.10.229_255",
+ 				"top.fluo.histogram.ratio.bin.1.0_25$top.fluo.histogram.ratio.bin.2.25_51$top.fluo.histogram.ratio.bin.3.51_76$top.fluo.histogram.ratio.bin.4.76_102$top.fluo.histogram.ratio.bin.5.102_127$top.fluo.histogram.ratio.bin.6.127_153$top.fluo.histogram.ratio.bin.7.153_178$top.fluo.histogram.ratio.bin.8.178_204$top.fluo.histogram.ratio.bin.9.204_229$top.fluo.histogram.ratio.bin.10.229_255",
+ 				"top.nir.histogram.bin.1.0_25$top.nir.histogram.bin.2.25_51$top.nir.histogram.bin.3.51_76$top.nir.histogram.bin.4.76_102$top.nir.histogram.bin.5.102_127$top.nir.histogram.bin.6.127_153$top.nir.histogram.bin.7.153_178$top.nir.histogram.bin.8.178_204$top.nir.histogram.bin.9.204_229$top.nir.histogram.bin.10.229_255",
+ 				"top.nir.histogram.phenol.bin.1.0_25$top.nir.histogram.phenol.bin.2.25_51$top.nir.histogram.phenol.bin.3.51_76$top.nir.histogram.phenol.bin.4.76_102$top.nir.histogram.phenol.bin.5.102_127$top.nir.histogram.phenol.bin.6.127_153$top.nir.histogram.phenol.bin.7.153_178$top.nir.histogram.phenol.bin.8.178_204$top.nir.histogram.phenol.bin.9.204_229$top.nir.histogram.phenol.bin.10.229_255",
+ 				"top.nir.histogram.ratio.bin.1.0_25$top.nir.histogram.ratio.bin.2.25_51$top.nir.histogram.ratio.bin.3.51_76$top.nir.histogram.ratio.bin.4.76_102$top.nir.histogram.ratio.bin.5.102_127$top.nir.histogram.ratio.bin.6.127_153$top.nir.histogram.ratio.bin.7.153_178$top.nir.histogram.ratio.bin.8.178_204$top.nir.histogram.ratio.bin.9.204_229$top.nir.histogram.ratio.bin.10.229_255",
+ 				"top.vis.hue.histogram.ratio.bin.1.0_25$top.vis.hue.histogram.ratio.bin.2.25_51$top.vis.hue.histogram.ratio.bin.3.51_76$top.vis.hue.histogram.ratio.bin.4.76_102$top.vis.hue.histogram.ratio.bin.5.102_127$top.vis.hue.histogram.ratio.bin.6.127_153$top.vis.hue.histogram.ratio.bin.7.153_178$top.vis.hue.histogram.ratio.bin.8.178_204$top.vis.hue.histogram.ratio.bin.9.204_229$top.vis.hue.histogram.ratio.bin.10.229_255")
+ 		
+ 		
+ 		
+ 		
+ 		descriptorSetName_boxplotStacked <- c("NIR side (%)", "red side fluorescence histogram (%)", "NIR top (%)", "yellow side fluorescence histogram (%)", "fluo side ratio histogramm (%)",
+ 				"NIR side normalized (%)", "red side normalized fluo histogramm (%)", "yellow side normalized fluo histogramm (%)", "fluo side normalized ratio histogramm (%)",
+ 				"NIR side phenol (%)", "NIR side ratio histogramm (%)", "VIS HUE side ratio histogramm (%)", "VIS side normalized ratio histogramm (%)",
+ 				"red top fluorescence histogram (%)", "yellow top fluorescence histogram (%)","fluo top ratio histogramm (%)",
+ 				"NIR top (%)", "NIR top phenol histogram (%)","NIR top ratio histogramm (%)",
+ 				"VIS HUE top ratio histogramm (%)")
+ 		
+ 		stackedBarOptions = list(typOfGeomBar=c("fill", "stack", "dodge"))
+ 		#diagramTypVector <- c(diagramTypVector, "boxplotStacked", "boxplotStacked")
+ 		} else {
+ 
+ 			descriptorSet_nBoxplot <- c("side.area.norm (mm^2)", "Weight A (g)","side.height.norm (mm)")
+ 			descriptorSetName_nBoxplot <- c("Area", "Gewicht", "Heigh")
+ 	
+ 			descriptorSet_boxplot <- c("side.area.norm (mm^2)", "side.height.norm (mm)")
+ 			descriptorSetName_boxplot <- c("Area Boxplot", "Heigh Boxplot")
+ 			
+ 	#		descriptorSet_boxplotStacked <- c("side.nir.normalized.histogram.bin.1.0_25$side.nir.normalized.histogram.bin.2.25_51$side.nir.normalized.histogram.bin.3.51_76$side.nir.normalized.histogram.bin.4.76_102$side.nir.normalized.histogram.bin.5.102_127$side.nir.normalized.histogram.bin.6.127_153$side.nir.normalized.histogram.bin.7.153_178$side.nir.normalized.histogram.bin.8.178_204$side.nir.normalized.histogram.bin.9.204_229$side.nir.normalized.histogram.bin.10.229_255",
+ 	#										  "side.fluo.normalized.histogram.bin.1.0_25$side.fluo.normalized.histogram.bin.2.25_51$side.fluo.normalized.histogram.bin.3.51_76$side.fluo.normalized.histogram.bin.4.76_102$side.fluo.normalized.histogram.bin.5.102_127$side.fluo.normalized.histogram.bin.6.127_153$side.fluo.normalized.histogram.bin.7.153_178$side.fluo.normalized.histogram.bin.8.178_204$side.fluo.normalized.histogram.bin.9.204_229$side.fluo.normalized.histogram.bin.10.229_255")
+ 			
+ 			descriptorSet_boxplotStacked <- c("side.fluo.normalized.histogram.bin.1.0_25$side.fluo.normalized.histogram.bin.2.25_51$side.fluo.normalized.histogram.bin.3.51_76$side.fluo.normalized.histogram.bin.4.76_102$side.fluo.normalized.histogram.bin.5.102_127$side.fluo.normalized.histogram.bin.6.127_153$side.fluo.normalized.histogram.bin.7.153_178$side.fluo.normalized.histogram.bin.8.178_204$side.fluo.normalized.histogram.bin.9.204_229$side.fluo.normalized.histogram.bin.10.229_255",
+ 									  "side.nir.normalized.histogram.bin.1.0_25$side.nir.normalized.histogram.bin.2.25_51$side.nir.normalized.histogram.bin.3.51_76$side.nir.normalized.histogram.bin.4.76_102$side.nir.normalized.histogram.bin.5.102_127$side.nir.normalized.histogram.bin.6.127_153$side.nir.normalized.histogram.bin.7.153_178$side.nir.normalized.histogram.bin.8.178_204$side.nir.normalized.histogram.bin.9.204_229$side.nir.normalized.histogram.bin.10.229_255",
+ 									  "top.nir.histogram.bin.1.0_25$top.nir.histogram.bin.2.25_51$top.nir.histogram.bin.3.51_76$top.nir.histogram.bin.4.76_102$top.nir.histogram.bin.5.102_127$top.nir.histogram.bin.6.127_153$top.nir.histogram.bin.7.153_178$top.nir.histogram.bin.8.178_204$top.nir.histogram.bin.9.204_229$top.nir.histogram.bin.10.229_255")
+ 			
+ 			descriptorSetName_boxplotStacked <- c("red fluorescence histogram (%)", "NIR absorption class (%)", "NIR Top")
+ 		
+ 			
+ 			nBoxOptions= NULL
+ 			boxOptions= NULL
+ 			stackedBarOptions = list(typOfGeomBar=c("fill", "stack", "dodge"))
+ 		}	
+ 	
+ 		
+ 		#descriptorSet <- c("Plant ID$Treatment$Hallo$Wert1$Repl ID")
+ 		#diagramTypVector <- diagramTyp
+ 		#diagramTypVector <- rep.int(diagramTyp, times=length(descriptorSetName))
+ 		
+ 		
+ 
+ 		nBoxDes = descriptorSet_nBoxplot
+ 		boxDes = descriptorSet_boxplot
+ 		boxStackDes = descriptorSet_boxplotStacked
+ 		SaveName_nBoxDes = nBoxDes
+ 		SaveName_boxDes = boxDes
+ 		SaveName_boxStackDes = boxStackDes
+ 		nBoxDesName = descriptorSetName_nBoxplot
+ 		boxDesName = descriptorSetName_boxplot
+ 		boxStackDesName = descriptorSetName_boxplotStacked
+ 
+ 		saveName <- "test2"
+ 		yAxisName <- "test2"
+ 		debug <- TRUE
+ 		iniDataSet = workingDataSet
+ 		#descriptor <- c("Plant ID$Treatment$Hallo$Wert1$Repl ID")
+ 		#descriptor <- c("side.area.norm (mm^2)")
+ 		#descriptorSet <- c("side.fluo.bloom.area.size (mm^2)")
+ 		#descriptor <- c("side.fluo.bloom.area.size (mm^2)")
+ 		descriptor <- descriptorSet
+ 		#descriptor <- c("Repl ID")
+ 		#descriptor <- c("side.nir.normalized.histogram.bin.1.0_25$side.nir.normalized.histogram.bin.2.25_51$side.nir.normalized.histogram.bin.3.51_76$side.nir.normalized.histogram.bin.4.76_102$side.nir.normalized.histogram.bin.5.102_127$side.nir.normalized.histogram.bin.6.127_153$side.nir.normalized.histogram.bin.7.153_178$side.nir.normalized.histogram.bin.8.178_204$side.nir.normalized.histogram.bin.9.204_229$side.nir.normalized.histogram.bin.10.229_255")
+ 		appendix <- FALSE
+ 		stoppTheCalculation <- FALSE
+ 		
+ }
[1] "... Read input file"
Read 2 items
[1] "... english Version"
> overallList <- list(iniDataSet=iniDataSet, saveFormat=saveFormat, dpi=dpi, isGray=isGray, 
+ 						nBoxDes = nBoxDes, boxDes = boxDes, boxStackDes = boxStackDes,
+ 						saveName_nBoxDes = nBoxDes, saveName_boxDes = boxDes, saveName_boxStackDes = boxStackDes,
+ 						nBoxDesName = nBoxDesName, boxDesName = boxDesName, boxStackDesName = boxStackDesName,
+ 						nBoxOptions= nBoxOptions, boxOptions= boxOptions, stackedBarOptions = stackedBarOptions, 
+ 						treatment=treatment, filterTreatment=filterTreatment,
+ 						secondTreatment=secondTreatment, filterSecondTreatment=filterSecondTreatment, filterXaxis=filterXaxis, xAxis=xAxis,
+ 						showResultInR=showResultInR, xAxisName=xAxisName, debug=debug, 
+ 						appendix=appendix, stoppTheCalculation=stoppTheCalculation,
+ 						overallResult_nBoxDes=data.frame(), overallResult_boxDes=data.frame(), overallResult_boxStackDes=data.frame(),
+ 						color_nBox = list(), color_box=list(), color_boxStack=list())	
> 				
> 	#install.packages(c("Cairo"), repos="http://cran.r-project.org", dependencies = TRUE)
> 	library("Cairo")
> 	#install.packages(c("RColorBrewer"), repos="http://cran.r-project.org", dependencies = TRUE)
> 	library("RColorBrewer")
> 	#install.packages(c("data.table"), repos="http://cran.r-project.org", dependencies = TRUE)
> 	library(data.table)
> 	#install.packages(c("ggplot2"), repos="http://cran.r-project.org", dependencies = TRUE)
> 	library(ggplot2)
> 	#install.packages(c("Hmisc"), repos="http://cran.r-project.org", dependencies = TRUE)
> 	#library("Hmisc")
> 	
> 	overallList$debug %debug% "Start"
[1] "DebugBreakPoint:  Start"
> 	
> 	overallList <- overallChangeName(overallList)
[1] "DebugBreakPoint:  overallChangeSaveName()"
[1] "... nBoxplot"
[1] "... Boxplot"
[1] "... stackedBoxplot"
> 	overallList <- overallPreprocessingOfDescriptor(overallList)
[1] "DebugBreakPoint:  overallPreprocessingOfDescriptor()"
[1] "... nBoxplot"
[1] "No plotting, because the descriptor(s) (top.area.norm..mm.2.) don't exists!"
[1] "No plotting, because the descriptor(s) (side.leaf.count.median..leafs.) don't exists!"
[1] "No plotting, because the descriptor(s) (side.bloom.count..tassel.) don't exists!"
[1] "No plotting, because the descriptor(s) (side.leaf.length.sum.norm.max..mm.) don't exists!"
[1] "No plotting, because the descriptor(s) (volume.iap.wue) don't exists!"
[1] "No plotting, because the descriptor(s) (side.nir.wetness.av) don't exists!"
[1] "No plotting, because the descriptor(s) (top.nir.wetness.av) don't exists!"
[1] "No plotting, because the descriptor(s) (side.area.relative) don't exists!"
[1] "No plotting, because the descriptor(s) (side.height.norm.relative) don't exists!"
[1] "No plotting, because the descriptor(s) (side.width.norm.relative) don't exists!"
[1] "No plotting, because the descriptor(s) (top.area.relative) don't exists!"
[1] "No plotting, because the descriptor(s) (side.area.relative) don't exists!"
[1] "No plotting, because the descriptor(s) (volume.iap.relative) don't exists!"
[1] "... Boxplot"
[1] "No plotting, because the descriptor(s) (top.area.norm..mm.2.) don't exists!"
[1] "... stackedBoxplot"
[1] "No plotting, because the descriptor(s) (side.vis.hue.histogram.ratio.nir.2.25_51) don't exists!"
> 	
> 	
> ###############################	
> 	overallList <- preprocessingOfxAxisValue(overallList)
[1] "DebugBreakPoint:  preprocessingOfxAxisValue()"
> 	overallList <- preprocessingOfTreatment(overallList)
[1] "DebugBreakPoint:  preprocessingOfTheTreatment()"
> 	overallList <- preprocessingOfSecondTreatment(overallList)
[1] "DebugBreakPoint:  preprocessingOfTheSecondTreatment()"
[1] "... set 'filterSecondTreatment' and 'secondTreatment' to 'none'!"
> 	overallList <- overallCheckIfDescriptorIsNaOrAllZero(overallList)
[1] "DebugBreakPoint:  overallCheckIfDescriptorIsNaOrAllZero()"
[1] "... nBoxplot"
[1] "Dummy plotting for this descriptor(s) ((Weight.B..g.), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((Water..weight.diff.), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((side.nir.wetness.plant_weight_drought_loss), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((top.nir.wetness.plant_weight_drought_loss), because all zero or not numeric!"
[1] "... Boxplot"
[1] "... stackedBoxplot"
[1] "Dummy plotting for this descriptor(s) ((side.nir.normalized.histogram.bin.1.0_25), because all zero or not numeric!"    
[2] "Dummy plotting for this descriptor(s) ((side.nir.normalized.histogram.bin.2.25_51), because all zero or not numeric!"   
[3] "Dummy plotting for this descriptor(s) ((side.nir.normalized.histogram.bin.3.51_76), because all zero or not numeric!"   
[4] "Dummy plotting for this descriptor(s) ((side.nir.normalized.histogram.bin.8.178_204), because all zero or not numeric!" 
[5] "Dummy plotting for this descriptor(s) ((side.nir.normalized.histogram.bin.9.204_229), because all zero or not numeric!" 
[6] "Dummy plotting for this descriptor(s) ((side.nir.normalized.histogram.bin.10.229_255), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((side.fluo.histogram.bin.9.204_229), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((top.nir.histogram.bin.1.0_25), because all zero or not numeric!"    
[2] "Dummy plotting for this descriptor(s) ((top.nir.histogram.bin.2.25_51), because all zero or not numeric!"   
[3] "Dummy plotting for this descriptor(s) ((top.nir.histogram.bin.3.51_76), because all zero or not numeric!"   
[4] "Dummy plotting for this descriptor(s) ((top.nir.histogram.bin.4.76_102), because all zero or not numeric!"  
[5] "Dummy plotting for this descriptor(s) ((top.nir.histogram.bin.10.229_255), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((side.fluo.histogram.phenol.bin.8.178_204), because all zero or not numeric!"
[2] "Dummy plotting for this descriptor(s) ((side.fluo.histogram.phenol.bin.9.204_229), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((side.fluo.histogram.ratio.bin.2.25_51), because all zero or not numeric!"  
[2] "Dummy plotting for this descriptor(s) ((side.fluo.histogram.ratio.bin.3.51_76), because all zero or not numeric!"  
[3] "Dummy plotting for this descriptor(s) ((side.fluo.histogram.ratio.bin.9.204_229), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((side.nir.normalized.histogram.bin.1.0_25), because all zero or not numeric!"    
[2] "Dummy plotting for this descriptor(s) ((side.nir.normalized.histogram.bin.2.25_51), because all zero or not numeric!"   
[3] "Dummy plotting for this descriptor(s) ((side.nir.normalized.histogram.bin.3.51_76), because all zero or not numeric!"   
[4] "Dummy plotting for this descriptor(s) ((side.nir.normalized.histogram.bin.8.178_204), because all zero or not numeric!" 
[5] "Dummy plotting for this descriptor(s) ((side.nir.normalized.histogram.bin.9.204_229), because all zero or not numeric!" 
[6] "Dummy plotting for this descriptor(s) ((side.nir.normalized.histogram.bin.10.229_255), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((side.fluo.normalized.histogram.bin.9.204_229), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((side.fluo.normalized.histogram.phenol.bin.8.178_204), because all zero or not numeric!"
[2] "Dummy plotting for this descriptor(s) ((side.fluo.normalized.histogram.phenol.bin.9.204_229), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((side.fluo.normalized.histogram.ratio.bin.2.25_51), because all zero or not numeric!"  
[2] "Dummy plotting for this descriptor(s) ((side.fluo.normalized.histogram.ratio.bin.3.51_76), because all zero or not numeric!"  
[3] "Dummy plotting for this descriptor(s) ((side.fluo.normalized.histogram.ratio.bin.9.204_229), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((side.nir.histogram.phenol.bin.1.0_25), because all zero or not numeric!"    
[2] "Dummy plotting for this descriptor(s) ((side.nir.histogram.phenol.bin.2.25_51), because all zero or not numeric!"   
[3] "Dummy plotting for this descriptor(s) ((side.nir.histogram.phenol.bin.3.51_76), because all zero or not numeric!"   
[4] "Dummy plotting for this descriptor(s) ((side.nir.histogram.phenol.bin.8.178_204), because all zero or not numeric!" 
[5] "Dummy plotting for this descriptor(s) ((side.nir.histogram.phenol.bin.9.204_229), because all zero or not numeric!" 
[6] "Dummy plotting for this descriptor(s) ((side.nir.histogram.phenol.bin.10.229_255), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((side.nir.histogram.ratio.bin.1.0_25), because all zero or not numeric!"    
[2] "Dummy plotting for this descriptor(s) ((side.nir.histogram.ratio.bin.2.25_51), because all zero or not numeric!"   
[3] "Dummy plotting for this descriptor(s) ((side.nir.histogram.ratio.bin.3.51_76), because all zero or not numeric!"   
[4] "Dummy plotting for this descriptor(s) ((side.nir.histogram.ratio.bin.4.76_102), because all zero or not numeric!"  
[5] "Dummy plotting for this descriptor(s) ((side.nir.histogram.ratio.bin.6.127_153), because all zero or not numeric!" 
[6] "Dummy plotting for this descriptor(s) ((side.nir.histogram.ratio.bin.7.153_178), because all zero or not numeric!" 
[7] "Dummy plotting for this descriptor(s) ((side.nir.histogram.ratio.bin.8.178_204), because all zero or not numeric!" 
[8] "Dummy plotting for this descriptor(s) ((side.nir.histogram.ratio.bin.9.204_229), because all zero or not numeric!" 
[9] "Dummy plotting for this descriptor(s) ((side.nir.histogram.ratio.bin.10.229_255), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((side.vis.hue.histogram.ratio.bin.1.0_25), because all zero or not numeric!"    
[2] "Dummy plotting for this descriptor(s) ((side.vis.hue.histogram.ratio.bin.3.51_76), because all zero or not numeric!"   
[3] "Dummy plotting for this descriptor(s) ((side.vis.hue.histogram.ratio.bin.4.76_102), because all zero or not numeric!"  
[4] "Dummy plotting for this descriptor(s) ((side.vis.hue.histogram.ratio.bin.5.102_127), because all zero or not numeric!" 
[5] "Dummy plotting for this descriptor(s) ((side.vis.hue.histogram.ratio.bin.6.127_153), because all zero or not numeric!" 
[6] "Dummy plotting for this descriptor(s) ((side.vis.hue.histogram.ratio.bin.7.153_178), because all zero or not numeric!" 
[7] "Dummy plotting for this descriptor(s) ((side.vis.hue.histogram.ratio.bin.8.178_204), because all zero or not numeric!" 
[8] "Dummy plotting for this descriptor(s) ((side.vis.hue.histogram.ratio.bin.9.204_229), because all zero or not numeric!" 
[9] "Dummy plotting for this descriptor(s) ((side.vis.hue.histogram.ratio.bin.10.229_255), because all zero or not numeric!"
 [1] "Dummy plotting for this descriptor(s) ((side.vis.normalized.histogram.ratio.bin.1.0_25), because all zero or not numeric!"    
 [2] "Dummy plotting for this descriptor(s) ((side.vis.normalized.histogram.ratio.bin.2.25_51), because all zero or not numeric!"   
 [3] "Dummy plotting for this descriptor(s) ((side.vis.normalized.histogram.ratio.bin.3.51_76), because all zero or not numeric!"   
 [4] "Dummy plotting for this descriptor(s) ((side.vis.normalized.histogram.ratio.bin.4.76_102), because all zero or not numeric!"  
 [5] "Dummy plotting for this descriptor(s) ((side.vis.normalized.histogram.ratio.bin.5.102_127), because all zero or not numeric!" 
 [6] "Dummy plotting for this descriptor(s) ((side.vis.normalized.histogram.ratio.bin.6.127_153), because all zero or not numeric!" 
 [7] "Dummy plotting for this descriptor(s) ((side.vis.normalized.histogram.ratio.bin.7.153_178), because all zero or not numeric!" 
 [8] "Dummy plotting for this descriptor(s) ((side.vis.normalized.histogram.ratio.bin.8.178_204), because all zero or not numeric!" 
 [9] "Dummy plotting for this descriptor(s) ((side.vis.normalized.histogram.ratio.bin.9.204_229), because all zero or not numeric!" 
[10] "Dummy plotting for this descriptor(s) ((side.vis.normalized.histogram.ratio.bin.10.229_255), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((top.fluo.histogram.bin.8.178_204), because all zero or not numeric!"
[2] "Dummy plotting for this descriptor(s) ((top.fluo.histogram.bin.9.204_229), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((top.fluo.histogram.phenol.bin.7.153_178), because all zero or not numeric!"
[2] "Dummy plotting for this descriptor(s) ((top.fluo.histogram.phenol.bin.8.178_204), because all zero or not numeric!"
[3] "Dummy plotting for this descriptor(s) ((top.fluo.histogram.phenol.bin.9.204_229), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((top.fluo.histogram.ratio.bin.2.25_51), because all zero or not numeric!"  
[2] "Dummy plotting for this descriptor(s) ((top.fluo.histogram.ratio.bin.3.51_76), because all zero or not numeric!"  
[3] "Dummy plotting for this descriptor(s) ((top.fluo.histogram.ratio.bin.8.178_204), because all zero or not numeric!"
[4] "Dummy plotting for this descriptor(s) ((top.fluo.histogram.ratio.bin.9.204_229), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((top.nir.histogram.bin.1.0_25), because all zero or not numeric!"    
[2] "Dummy plotting for this descriptor(s) ((top.nir.histogram.bin.2.25_51), because all zero or not numeric!"   
[3] "Dummy plotting for this descriptor(s) ((top.nir.histogram.bin.3.51_76), because all zero or not numeric!"   
[4] "Dummy plotting for this descriptor(s) ((top.nir.histogram.bin.4.76_102), because all zero or not numeric!"  
[5] "Dummy plotting for this descriptor(s) ((top.nir.histogram.bin.10.229_255), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((top.nir.histogram.phenol.bin.1.0_25), because all zero or not numeric!"    
[2] "Dummy plotting for this descriptor(s) ((top.nir.histogram.phenol.bin.2.25_51), because all zero or not numeric!"   
[3] "Dummy plotting for this descriptor(s) ((top.nir.histogram.phenol.bin.3.51_76), because all zero or not numeric!"   
[4] "Dummy plotting for this descriptor(s) ((top.nir.histogram.phenol.bin.4.76_102), because all zero or not numeric!"  
[5] "Dummy plotting for this descriptor(s) ((top.nir.histogram.phenol.bin.10.229_255), because all zero or not numeric!"
[1] "Dummy plotting for this descriptor(s) ((top.nir.histogram.ratio.bin.1.0_25), because all zero or not numeric!"    
[2] "Dummy plotting for this descriptor(s) ((top.nir.histogram.ratio.bin.2.25_51), because all zero or not numeric!"   
[3] "Dummy plotting for this descriptor(s) ((top.nir.histogram.ratio.bin.3.51_76), because all zero or not numeric!"   
[4] "Dummy plotting for this descriptor(s) ((top.nir.histogram.ratio.bin.4.76_102), because all zero or not numeric!"  
[5] "Dummy plotting for this descriptor(s) ((top.nir.histogram.ratio.bin.6.127_153), because all zero or not numeric!" 
[6] "Dummy plotting for this descriptor(s) ((top.nir.histogram.ratio.bin.7.153_178), because all zero or not numeric!" 
[7] "Dummy plotting for this descriptor(s) ((top.nir.histogram.ratio.bin.8.178_204), because all zero or not numeric!" 
[8] "Dummy plotting for this descriptor(s) ((top.nir.histogram.ratio.bin.9.204_229), because all zero or not numeric!" 
[9] "Dummy plotting for this descriptor(s) ((top.nir.histogram.ratio.bin.10.229_255), because all zero or not numeric!"
 [1] "Dummy plotting for this descriptor(s) ((top.vis.hue.histogram.ratio.bin.1.0_25), because all zero or not numeric!"    
 [2] "Dummy plotting for this descriptor(s) ((top.vis.hue.histogram.ratio.bin.2.25_51), because all zero or not numeric!"   
 [3] "Dummy plotting for this descriptor(s) ((top.vis.hue.histogram.ratio.bin.3.51_76), because all zero or not numeric!"   
 [4] "Dummy plotting for this descriptor(s) ((top.vis.hue.histogram.ratio.bin.4.76_102), because all zero or not numeric!"  
 [5] "Dummy plotting for this descriptor(s) ((top.vis.hue.histogram.ratio.bin.5.102_127), because all zero or not numeric!" 
 [6] "Dummy plotting for this descriptor(s) ((top.vis.hue.histogram.ratio.bin.6.127_153), because all zero or not numeric!" 
 [7] "Dummy plotting for this descriptor(s) ((top.vis.hue.histogram.ratio.bin.7.153_178), because all zero or not numeric!" 
 [8] "Dummy plotting for this descriptor(s) ((top.vis.hue.histogram.ratio.bin.8.178_204), because all zero or not numeric!" 
 [9] "Dummy plotting for this descriptor(s) ((top.vis.hue.histogram.ratio.bin.9.204_229), because all zero or not numeric!" 
[10] "Dummy plotting for this descriptor(s) ((top.vis.hue.histogram.ratio.bin.10.229_255), because all zero or not numeric!"
Es gab 20 Warnungen (Anzeige mit warnings())
> 	overallList <- reduceWorkingDataSize(overallList)
[1] "DebugBreakPoint:  reduceWorkingDataSize()"
> 	overallList <- setDefaultAxisNames(overallList)	
[1] "DebugBreakPoint:  setDefaultAxisNames()"
> 	overallList <- overallGetResultDataFrame(overallList)
[1] "DebugBreakPoint:  overallGetResultDataFrame()"
[1] "DebugBreakPoint:  buildList()"
[1] "... nBoxplot"
[1] "DebugBreakPoint:  getResultDataFrame()"
[1] "... Boxplot"
[1] "DebugBreakPoint:  getResultDataFrame()"
[1] "... stackedBoxplot"
[1] "DebugBreakPoint:  getResultDataFrame()"
> 	overallList <- setColor(overallList) 
[1] "DebugBreakPoint:  setColor()"
[1] "... all values are 'NA'"
[1] "... all values are 'NA'"
[1] "... all values are 'NA'"
[1] "... all values are 'NA'"
[1] "... all values are 'NA'"
[1] "... all values are 'NA'"
[1] "... all values are 'NA'"
[1] "... all values are 'NA'"
[1] "... all values are 'NA'"
[1] "... all values are 'NA'"
[1] "... all values are 'NA'"
[1] "... all values are 'NA'"
[1] "... all values are 'NA'"
[1] "... all values are 'NA'"
[1] "... all values are 'NA'"
[1] "... all values are 'NA'"
[1] "... all values are 'NA'"
[1] "... all values are 'NA'"
[1] "... all values are 'NA'"
[1] "... all values are 'NA'"
[1] "... all values are 'NA'"
Es gab 15 Warnungen (Anzeige mit warnings())
> 	h=h 
Fehler: Objekt 'h' nicht gefunden
> 	overallResult = overallList$overallResult_nBoxDes
> 	overallColor=overallList$color_nBox
> #	debug = overallList$debug
> 	overallDescriptor = overallList$nBoxDes
> 	overallDesName = overallList$nBoxDesName
> 	overallSaveName = overallList$saveName_nBoxDes
> h <- 1
> 	h=h 
> overallList$debug %debug% "makeLinearDiagram()"	
[1] "DebugBreakPoint:  makeLinearDiagram()"
> 	print("... nBoxplot")
[1] "... nBoxplot"
> 	
> 	tempOverallResult <-  overallResult
> imagesIndex <- "4"
> 			overallResult <- reduceWholeOverallResultToOneValue(tempOverallResult, imagesIndex, overallList$debug, "nboxplot")
[1] "DebugBreakPoint:  reduceWholeOverallResultToOneValue()"
> colnames(overallResult)
[1] "name"  "xAxis" "mean"  "se"   
> !CheckIfOneColumnHasOnlyValues(overallResult)
[1] FALSE
> day <- overallResult$xAxis[!is.na(overallResult$mean)][1]
> 				overallList$xAxisName <- paste(overallList$xAxisName,day)
> h=h
> 	overallResult=overallResult
> 	overallDescriptor=overallDescriptor[imagesIndex]
> 	overallColor=overallColor[imagesIndex]
> 	overallDesName=overallDesName[imagesIndex]
> 	overallSaveName=overallSaveName[imagesIndex]
> 	overallList=overallList
> 	isOnlyOneValue=TRUE
> 	diagramTyp=diagramTypSave
Fehler: Objekt 'diagramTypSave' nicht gefunden
> makeBarDiagram <- function(h, overallResult, overallDescriptor, overallColor, overallDesName, overallSaveName, overallList, isOnlyOneValue = FALSE, diagramTypSave="barplot") {
+ ###############################		
+ #	h=h 
+ #	overallResult = overallList$overallResult_nBoxDes
+ #	overallColor=overallList$color_nBox
+ ##	debug = overallList$debug
+ #	overallDescriptor = overallList$nBoxDes
+ #	overallDesName = overallList$nBoxDesName
+ #	isOnlyOneValue = FALSE
+ ################################	
+ 	h=h
+ 	overallResult=overallResult
+ 	overallDescriptor=overallDescriptor[imagesIndex]
+ 	overallColor=overallColor[imagesIndex]
+ 	overallDesName=overallDesName[imagesIndex]
+ 	overallSaveName=overallSaveName[imagesIndex]
+ 	overallList=overallList
+ 	isOnlyOneValue=TRUE
+ 	diagramTypSave="nboxplot"
+ ################################
+ 
+ 	overallList$debug %debug% "makeBarDiagram()"
+ 
+ 	tempOverallResult <-  overallResult
+ 	
+ 	for(imagesIndex in names(overallDescriptor)) {
+ 		if(!is.na(overallDescriptor[[imagesIndex]])) {
+ 			
+ 			overallResult <- reduceWholeOverallResultToOneValue(tempOverallResult, imagesIndex, overallList$debug, "barplot")
+ 			overallResult <- overallResult[!is.na(overallResult$mean),]
+ 			
+ 			if(isOnlyOneValue) {
+ 				myPlot <- ggplot(data=overallResult, aes(x=name, y=mean))
+ 			} else {
+ 				myPlot <- ggplot(data=overallResult, aes(x=xAxis, y=mean))
+ 			}
+ 			
+ 			myPlot <- myPlot + 						
+ 					geom_bar(stat="identity", aes(fill=name), colour="Grey", size=0.1) +
+ 					geom_errorbar(aes(ymax=mean+se, ymin=mean-se), width=0.2, colour="black")+
+ 					#geom_errorbar(aes(ymax=mean+se, ymin=mean-se), width=0.5, colour="Pink")+
+ 					ylab(overallDesName[[imagesIndex]]) +
+ 					coord_cartesian(ylim=c(0,max(overallResult$mean + overallResult$se + 10,na.rm=TRUE))) +
+ 					xlab(overallList$xAxisName) +
+ 					scale_fill_manual(values = overallColor[[imagesIndex]]) +
+ 					theme_bw() +
+ 					opts(legend.position="none",
+ 							plot.margin = unit(c(0.1, 0.1, 0, 0), "cm"),
+ 							axis.title.x = theme_text(face="bold", size=11),
+ 							axis.title.y = theme_text(face="bold", size=11, angle=90),
+ 							panel.grid.minor = theme_blank(),
+ 							panel.border = theme_rect(colour="Grey", size=0.1)
+ 					)
+ 			
+ 			if(length(overallColor[[imagesIndex]]) > 10) {
+ 				myPlot <- myPlot + opts(axis.text.x = theme_text(size=6, angle=90))
+ 			}
+ 			print(myPlot)
+ 			
+ 			if (h==1) {
+ 				saveImageFile(overallList, myPlot, overallSaveName[[imagesIndex]], diagramTypSave)
+ 			} else {
+ 				print(myPlot)
+ 			}
+ 			if(overallList$appendix) {
+ 				writeLatexFile("appendixImage", overallSaveName[[imagesIndex]], diagramTypSave)
+ 			}
+ 		}
+ 	}
+ 	#return(overallList)
+ }
> overallList$debug %debug% "makeBarDiagram()"
[1] "DebugBreakPoint:  makeBarDiagram()"
> 
> 	tempOverallResult <-  overallResult
> reduceWholeOverallResultToOneValue <- function(tempOverallResult, imagesIndex, debug, diagramTyp="nboxplot") {
+ 	debug %debug% "reduceWholeOverallResultToOneValue()"
+ 	
+ 	if(diagramTyp == "boxplotstacked") {
+ 		
+ 		workingDataSet <- tempOverallResult[tempOverallResult$plot == imagesIndex,]
+ 		workingDataSet$hist <- factor(workingDataSet$hist, unique(workingDataSet$hist))
+ 		
+ 	} else {
+ 		colNames <- vector()
+ 		if(diagramTyp == "nboxplot" || diagramTyp == "barplot") {
+ 			colNames <- c("mean", "se")
+ 		} else if(diagramTyp == "boxplot") {
+ 			colNames <- c("value")
+ 		} 
+ 		
+ 		if("primaerTreatment" %in% tempOverallResult) {
+ 			standardColumnName <- c("name", "primaerTreatment", "xAxis")
+ 		} else {
+ 			standardColumnName <- c("name", "xAxis")
+ 		}
+ 		if(sum(!(colNames %in% colnames(tempOverallResult)))>0) {
+ 			workingDataSet <- buildDataSet(tempOverallResult[,standardColumnName], tempOverallResult, colNames, imagesIndex)
+ 			colnames(workingDataSet) <- c(standardColumnName, colNames)
+ 		}
+ 	}
+ 	return(workingDataSet)	
+ }
> reduceWholeOverallResultToOneValue <- function(tempOverallResult, imagesIndex, debug, diagramTyp="nboxplot") {
+ 	debug %debug% "reduceWholeOverallResultToOneValue()"
+ 	
+ 	
+ 	if(diagramTyp == "boxplotstacked") {
+ 		
+ 		workingDataSet <- tempOverallResult[tempOverallResult$plot == imagesIndex,]
+ 		workingDataSet$hist <- factor(workingDataSet$hist, unique(workingDataSet$hist))
+ 		
+ 	} else {
+ 		colNames <- vector()
+ 		if(diagramTyp == "nboxplot" || diagramTyp == "barplot") {
+ 			colNames <- c("mean", "se")
+ 		} else if(diagramTyp == "boxplot") {
+ 			colNames <- c("value")
+ 		} 
+ 		
+ 		if("primaerTreatment" %in% tempOverallResult) {
+ 			standardColumnName <- c("name", "primaerTreatment", "xAxis")
+ 		} else {
+ 			standardColumnName <- c("name", "xAxis")
+ 		}
+ 		if(sum(!(colNames %in% colnames(tempOverallResult)))>0) {
+ 			workingDataSet <- buildDataSet(tempOverallResult[,standardColumnName], tempOverallResult, colNames, imagesIndex)
+ 			colnames(workingDataSet) <- c(standardColumnName, colNames)
+ 		} else {
+ 			workingDataSet <- tempOverallResult
+ 		}
+ 	}
+ 	return(workingDataSet)	
+ }
> 			overallResult <- reduceWholeOverallResultToOneValue(tempOverallResult, imagesIndex, overallList$debug, "barplot")
[1] "DebugBreakPoint:  reduceWholeOverallResultToOneValue()"
> colnames(overallResult)
[1] "name"  "xAxis" "mean"  "se"   
> overallResult[!is.na(overallResult$mean),]
                          name xAxis      mean        se
56                     BarkeCS    59  922.6071  93.84274
112                    BarkePE    59  944.7233  97.16962
113              BCC_1367_Apex    59  767.9005 145.46966
114            BCC_1391_Isaria    59  873.9298  70.14107
115             BCC_1403_Perun    59  875.8839 130.85492
116             BCC_1413_Sissy    59  941.2167 128.26899
117            BCC_1417_Trumpf    59  940.8074 110.61649
173      BCC_1433_HeilsFranken    59  894.8889  71.65800
229    BCC_1441_PflugsIntensiv    59  982.7179 107.99638
285 BCC_1524_AckermannsBavaria    59  896.9810  88.27262
341                    Beatrix    59  938.1865  77.17490
397                   Djamilia    59  745.6309  71.78543
453                     Eunova    59  843.3379 111.34621
509                    MorexPE    59 1035.9932 184.36685
565                     Streif    59  882.9802 101.44339
621                       Ursa    59  952.8234  96.56708
677                 Victoriana    59  918.6681  86.00045
733                     Wiebke    59  965.4066 145.83445
> 			overallResult <- overallResult[!is.na(overallResult$mean),]
> if(isOnlyOneValue) {
+ 				myPlot <- ggplot(data=overallResult, aes(x=name, y=mean))
+ 			} else {
+ 				myPlot <- ggplot(data=overallResult, aes(x=xAxis, y=mean))
+ 			}
> 			
> 			myPlot <- myPlot + 						
+ 					geom_bar(stat="identity", aes(fill=name), colour="Grey", size=0.1) +
+ 					geom_errorbar(aes(ymax=mean+se, ymin=mean-se), width=0.2, colour="black")+
+ 					#geom_errorbar(aes(ymax=mean+se, ymin=mean-se), width=0.5, colour="Pink")+
+ 					ylab(overallDesName[[imagesIndex]]) +
+ 					coord_cartesian(ylim=c(0,max(overallResult$mean + overallResult$se + 10,na.rm=TRUE))) +
+ 					xlab(overallList$xAxisName) +
+ 					scale_fill_manual(values = overallColor[[imagesIndex]]) +
+ 					theme_bw() +
+ 					opts(legend.position="none",
+ 							plot.margin = unit(c(0.1, 0.1, 0, 0), "cm"),
+ 							axis.title.x = theme_text(face="bold", size=11),
+ 							axis.title.y = theme_text(face="bold", size=11, angle=90),
+ 							panel.grid.minor = theme_blank(),
+ 							panel.border = theme_rect(colour="Grey", size=0.1)
+ 					)
> 			
> 			if(length(overallColor[[imagesIndex]]) > 10) {
+ 				myPlot <- myPlot + opts(axis.text.x = theme_text(size=6, angle=90))
+ 			}
> 			print(myPlot)
> makeBoxplotDiagram <- function(h, overallResult, overallDescriptor, overallColor, overallDesName, overallSaveName, overallList, diagramTypSave="boxplot") {
+ 	########################		
+ #	h=h 
+ #	overallResult = overallList$overallResult_boxDes
+ #	overallColor=overallList$color_box
+ ##	debug = overallList$debug
+ #	overallDescriptor = overallList$boxDes
+ #	overallDesName = overallList$boxDesName
+ 	#########################
+ 	
+ 	overallList$debug %debug% "makeBoxplotDiagram()"
+ 	#overallList$overallResult <- overallList$overallResult[!is.na(overallList$overallResult$mean),]
+ 	print("... Boxplot")
+ 	
+ 	tempOverallResult <-  overallResult
+ 	
+ 	for(imagesIndex in names(overallDescriptor)) {
+ 		if(!is.na(overallDescriptor[[imagesIndex]])) {
+ 			print(paste("... image",imagesIndex))
+ 			overallResult <- reduceWholeOverallResultToOneValue(tempOverallResult, imagesIndex, overallList$debug, "boxplot")
+ 			
+ 			
+ 			#myPlot <- ggplot(overallList$overallResult, aes(factor(name), value, fill=name, colour=name)) + 
+ 			myPlot <- ggplot(overallResult, aes(factor(name), value, fill=name)) +
+ 					geom_boxplot() +
+ 					ylab(overallDesName[[imagesIndex]]) +
+ 					#coord_cartesian(ylim=c(0,max(overallList$overallResult$mean + overallList$overallResult$se + 10,na.rm=TRUE))) +
+ 					xlab(past(min(overallResult$xAxis),overallList$xAxisName,"...",overallList$xAxisName,max(overallList$xAxis))) +
+ 					scale_fill_manual(values = overallColor[[imagesIndex]]) +
+ 					#stat_summary(fun.data = f, geom = "crossbar", height = 0.1,	colour = NA, fill = "skyblue", width = 0.8, alpha = 0.5) +
+ 					theme_bw() +
+ 					opts(legend.position="none",
+ 							plot.margin = unit(c(0.1, 0.1, 0, 0), "cm"),
+ 							axis.title.x = theme_text(face="bold", size=11),
+ 							axis.title.y = theme_text(face="bold", size=11, angle=90),
+ 							panel.grid.minor = theme_blank(),
+ 							panel.border = theme_rect(colour="Grey", size=0.1)
+ 					)
+ 		
+ 			if(length(overallColor[[imagesIndex]]) > 10) {
+ 				myPlot <- myPlot + opts(axis.text.x = theme_text(size=6, angle=90))
+ 			}	
+ 			
+ 		#	print(myPlot)
+ 
+ 			if (h==1) {
+ 				saveImageFile(overallList, myPlot, overallSaveName[[imagesIndex]], diagramTypSave)
+ 			} else {
+ 				print(myPlot)
+ 			}
+ 			if(overallList$appendix) {
+ 				writeLatexFile("appendixImage", overallSaveName[[imagesIndex]], diagramTypSave)
+ 			}
+ 		}
+ 	}
+ 	#return(overallList)
+ }
> 	h=h 
> 	overallResult = overallList$overallResult_boxDes
> 	overallColor=overallList$color_box
> #	debug = overallList$debug
> 	overallDescriptor = overallList$boxDes
> 	overallDesName = overallList$boxDesName
> overallList$debug %debug% "makeBoxplotDiagram()"
[1] "DebugBreakPoint:  makeBoxplotDiagram()"
> 	#overallList$overallResult <- overallList$overallResult[!is.na(overallList$overallResult$mean),]
> 	print("... Boxplot")
[1] "... Boxplot"
> 	
> 	tempOverallResult <-  overallResult
> names(overallDescriptor)
 [1] "1"  "2"  "3"  "4"  "5"  "6"  "7"  "8"  "9"  "10" "11" "12"
> imagesIndex <- "1"
> overallResult <- reduceWholeOverallResultToOneValue(tempOverallResult, imagesIndex, overallList$debug, "boxplot")
[1] "DebugBreakPoint:  reduceWholeOverallResultToOneValue()"
> 			
> 			
> 			#myPlot <- ggplot(overallList$overallResult, aes(factor(name), value, fill=name, colour=name)) + 
> 			myPlot <- ggplot(overallResult, aes(factor(name), value, fill=name)) +
+ 					geom_boxplot() +
+ 					ylab(overallDesName[[imagesIndex]]) +
+ 					#coord_cartesian(ylim=c(0,max(overallList$overallResult$mean + overallList$overallResult$se + 10,na.rm=TRUE))) +
+ 					xlab(past(min(overallResult$xAxis),overallList$xAxisName,"...",overallList$xAxisName,max(overallList$xAxis))) +
+ 					scale_fill_manual(values = overallColor[[imagesIndex]]) +
+ 					#stat_summary(fun.data = f, geom = "crossbar", height = 0.1,	colour = NA, fill = "skyblue", width = 0.8, alpha = 0.5) +
+ 					theme_bw() +
+ 					opts(legend.position="none",
+ 							plot.margin = unit(c(0.1, 0.1, 0, 0), "cm"),
+ 							axis.title.x = theme_text(face="bold", size=11),
+ 							axis.title.y = theme_text(face="bold", size=11, angle=90),
+ 							panel.grid.minor = theme_blank(),
+ 							panel.border = theme_rect(colour="Grey", size=0.1)
+ 					)
Fehler in labs(x = label) : konnte Funktion "past" nicht finden
> 		
> 			if(length(overallColor[[imagesIndex]]) > 10) {
+ 				myPlot <- myPlot + opts(axis.text.x = theme_text(size=6, angle=90))
+ 			}	
> print(paste("... image",imagesIndex))
[1] "... image 1"
> 			overallResult <- reduceWholeOverallResultToOneValue(tempOverallResult, imagesIndex, overallList$debug, "boxplot")
[1] "DebugBreakPoint:  reduceWholeOverallResultToOneValue()"
> 			
> 			
> 			#myPlot <- ggplot(overallList$overallResult, aes(factor(name), value, fill=name, colour=name)) + 
> 			myPlot <- ggplot(overallResult, aes(factor(name), value, fill=name)) +
+ 					geom_boxplot() +
+ 					ylab(overallDesName[[imagesIndex]]) +
+ 					#coord_cartesian(ylim=c(0,max(overallList$overallResult$mean + overallList$overallResult$se + 10,na.rm=TRUE))) +
+ 					xlab(paste(min(overallResult$xAxis),overallList$xAxisName,"...",overallList$xAxisName,max(overallList$xAxis))) +
+ 					scale_fill_manual(values = overallColor[[imagesIndex]]) +
+ 					#stat_summary(fun.data = f, geom = "crossbar", height = 0.1,	colour = NA, fill = "skyblue", width = 0.8, alpha = 0.5) +
+ 					theme_bw() +
+ 					opts(legend.position="none",
+ 							plot.margin = unit(c(0.1, 0.1, 0, 0), "cm"),
+ 							axis.title.x = theme_text(face="bold", size=11),
+ 							axis.title.y = theme_text(face="bold", size=11, angle=90),
+ 							panel.grid.minor = theme_blank(),
+ 							panel.border = theme_rect(colour="Grey", size=0.1)
+ 					)
> 		
> 			if(length(overallColor[[imagesIndex]]) > 10) {
+ 				myPlot <- myPlot + opts(axis.text.x = theme_text(size=6, angle=90))
+ 			}	
> print(myPlot)
Warnmeldung:
Removed 11968 rows containing missing values (stat_boxplot). 
> print(paste("... image",imagesIndex))
[1] "... image 1"
> 			overallResult <- reduceWholeOverallResultToOneValue(tempOverallResult, imagesIndex, overallList$debug, "boxplot")
[1] "DebugBreakPoint:  reduceWholeOverallResultToOneValue()"
> 			
> 			
> 			#myPlot <- ggplot(overallList$overallResult, aes(factor(name), value, fill=name, colour=name)) + 
> 			myPlot <- ggplot(overallResult, aes(factor(name), value, fill=name)) +
+ 					geom_boxplot() +
+ 					ylab(overallDesName[[imagesIndex]]) +
+ 					#coord_cartesian(ylim=c(0,max(overallList$overallResult$mean + overallList$overallResult$se + 10,na.rm=TRUE))) +
+ 					xlab(paste(min(overallResult$xAxis),overallList$xAxisName,"...",max(overallList$xAxis), overallList$xAxisName)) +
+ 					scale_fill_manual(values = overallColor[[imagesIndex]]) +
+ 					#stat_summary(fun.data = f, geom = "crossbar", height = 0.1,	colour = NA, fill = "skyblue", width = 0.8, alpha = 0.5) +
+ 					theme_bw() +
+ 					opts(legend.position="none",
+ 							plot.margin = unit(c(0.1, 0.1, 0, 0), "cm"),
+ 							axis.title.x = theme_text(face="bold", size=11),
+ 							axis.title.y = theme_text(face="bold", size=11, angle=90),
+ 							panel.grid.minor = theme_blank(),
+ 							panel.border = theme_rect(colour="Grey", size=0.1)
+ 					)
> 		
> 			if(length(overallColor[[imagesIndex]]) > 10) {
+ 				myPlot <- myPlot + opts(axis.text.x = theme_text(size=6, angle=90))
+ 			}	
> 			
> print(myPlot)
Warnmeldung:
Removed 11968 rows containing missing values (stat_boxplot). 
> makeBoxplotDiagram <- function(h, overallResult, overallDescriptor, overallColor, overallDesName, overallSaveName, overallList, diagramTypSave="boxplot") {
+ 	########################		
+ 	h=h 
+ 	overallResult = overallList$overallResult_boxDes
+ 	overallColor=overallList$color_box
+ #	debug = overallList$debug
+ 	overallDescriptor = overallList$boxDes
+ 	overallDesName = overallList$boxDesName
+ 	#########################
+ 	
+ 	overallList$debug %debug% "makeBoxplotDiagram()"
+ 	#overallList$overallResult <- overallList$overallResult[!is.na(overallList$overallResult$mean),]
+ 	print("... Boxplot")
+ 	
+ 	tempOverallResult <-  overallResult
+ 	
+ 	for(imagesIndex in names(overallDescriptor)) {
+ 		if(!is.na(overallDescriptor[[imagesIndex]])) {
+ 			print(paste("... image",imagesIndex))
+ 			overallResult <- reduceWholeOverallResultToOneValue(tempOverallResult, imagesIndex, overallList$debug, "boxplot")
+ 			
+ 			
+ 			#myPlot <- ggplot(overallList$overallResult, aes(factor(name), value, fill=name, colour=name)) + 
+ 			myPlot <- ggplot(overallResult, aes(factor(name), value, fill=name)) +
+ 					geom_boxplot() +
+ 					ylab(overallDesName[[imagesIndex]]) +
+ 					#coord_cartesian(ylim=c(0,max(overallList$overallResult$mean + overallList$overallResult$se + 10,na.rm=TRUE))) +
+ 					xlab(paste(min(overallResult$xAxis),overallList$xAxisName,"...",max(overallResult$xAxis), overallList$xAxisName)) +
+ 					scale_fill_manual(values = overallColor[[imagesIndex]]) +
+ 					#stat_summary(fun.data = f, geom = "crossbar", height = 0.1,	colour = NA, fill = "skyblue", width = 0.8, alpha = 0.5) +
+ 					theme_bw() +
+ 					opts(legend.position="none",
+ 							plot.margin = unit(c(0.1, 0.1, 0, 0), "cm"),
+ 							axis.title.x = theme_text(face="bold", size=11),
+ 							axis.title.y = theme_text(face="bold", size=11, angle=90),
+ 							panel.grid.minor = theme_blank(),
+ 							panel.border = theme_rect(colour="Grey", size=0.1)
+ 					)
+ 		
+ 			if(length(overallColor[[imagesIndex]]) > 10) {
+ 				myPlot <- myPlot + opts(axis.text.x = theme_text(size=6, angle=90))
+ 			}	
+ 			
+ 		#	print(myPlot)
+ 
+ 			if (h==1) {
+ 				saveImageFile(overallList, myPlot, overallSaveName[[imagesIndex]], diagramTypSave)
+ 			} else {
+ 				print(myPlot)
+ 			}
+ 			if(overallList$appendix) {
+ 				writeLatexFile("appendixImage", overallSaveName[[imagesIndex]], diagramTypSave)
+ 			}
+ 		}
+ 	}
+ 	#return(overallList)
+ }
