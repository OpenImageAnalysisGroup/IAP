/*
 * ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.31
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * -----------------------------------------------------------------------------
 */

package colajava;

public class RectangleIntersections {
	private long swigCPtr;
	protected boolean swigCMemOwn;
	
	protected RectangleIntersections(long cPtr, boolean cMemoryOwn) {
		swigCMemOwn = cMemoryOwn;
		swigCPtr = cPtr;
	}
	
	protected static long getCPtr(RectangleIntersections obj) {
		return (obj == null) ? 0 : obj.swigCPtr;
	}
	
	@Override
	protected void finalize() {
		delete();
	}
	
	public synchronized void delete() {
		if (swigCPtr != 0 && swigCMemOwn) {
			swigCMemOwn = false;
			colaJNI.delete_RectangleIntersections(swigCPtr);
		}
		swigCPtr = 0;
	}
	
	public void setIntersects(boolean value) {
		colaJNI.RectangleIntersections_intersects_set(swigCPtr, this, value);
	}
	
	public boolean getIntersects() {
		return colaJNI.RectangleIntersections_intersects_get(swigCPtr, this);
	}
	
	public void setTop(boolean value) {
		colaJNI.RectangleIntersections_top_set(swigCPtr, this, value);
	}
	
	public boolean getTop() {
		return colaJNI.RectangleIntersections_top_get(swigCPtr, this);
	}
	
	public void setBottom(boolean value) {
		colaJNI.RectangleIntersections_bottom_set(swigCPtr, this, value);
	}
	
	public boolean getBottom() {
		return colaJNI.RectangleIntersections_bottom_get(swigCPtr, this);
	}
	
	public void setLeft(boolean value) {
		colaJNI.RectangleIntersections_left_set(swigCPtr, this, value);
	}
	
	public boolean getLeft() {
		return colaJNI.RectangleIntersections_left_get(swigCPtr, this);
	}
	
	public void setRight(boolean value) {
		colaJNI.RectangleIntersections_right_set(swigCPtr, this, value);
	}
	
	public boolean getRight() {
		return colaJNI.RectangleIntersections_right_get(swigCPtr, this);
	}
	
	public void setTopX(double value) {
		colaJNI.RectangleIntersections_topX_set(swigCPtr, this, value);
	}
	
	public double getTopX() {
		return colaJNI.RectangleIntersections_topX_get(swigCPtr, this);
	}
	
	public void setTopY(double value) {
		colaJNI.RectangleIntersections_topY_set(swigCPtr, this, value);
	}
	
	public double getTopY() {
		return colaJNI.RectangleIntersections_topY_get(swigCPtr, this);
	}
	
	public void setBottomX(double value) {
		colaJNI.RectangleIntersections_bottomX_set(swigCPtr, this, value);
	}
	
	public double getBottomX() {
		return colaJNI.RectangleIntersections_bottomX_get(swigCPtr, this);
	}
	
	public void setBottomY(double value) {
		colaJNI.RectangleIntersections_bottomY_set(swigCPtr, this, value);
	}
	
	public double getBottomY() {
		return colaJNI.RectangleIntersections_bottomY_get(swigCPtr, this);
	}
	
	public void setLeftX(double value) {
		colaJNI.RectangleIntersections_leftX_set(swigCPtr, this, value);
	}
	
	public double getLeftX() {
		return colaJNI.RectangleIntersections_leftX_get(swigCPtr, this);
	}
	
	public void setLeftY(double value) {
		colaJNI.RectangleIntersections_leftY_set(swigCPtr, this, value);
	}
	
	public double getLeftY() {
		return colaJNI.RectangleIntersections_leftY_get(swigCPtr, this);
	}
	
	public void setRightX(double value) {
		colaJNI.RectangleIntersections_rightX_set(swigCPtr, this, value);
	}
	
	public double getRightX() {
		return colaJNI.RectangleIntersections_rightX_get(swigCPtr, this);
	}
	
	public void setRightY(double value) {
		colaJNI.RectangleIntersections_rightY_set(swigCPtr, this, value);
	}
	
	public double getRightY() {
		return colaJNI.RectangleIntersections_rightY_get(swigCPtr, this);
	}
	
	public RectangleIntersections() {
		this(colaJNI.new_RectangleIntersections(), true);
	}
	
	public int countIntersections() {
		return colaJNI.RectangleIntersections_countIntersections(swigCPtr, this);
	}
	
	public void print() {
		colaJNI.RectangleIntersections_print(swigCPtr, this);
	}
	
	public void nearest(double x, double y, SWIGTYPE_p_double xi, SWIGTYPE_p_double yi) {
		colaJNI.RectangleIntersections_nearest(swigCPtr, this, x, y, SWIGTYPE_p_double.getCPtr(xi), SWIGTYPE_p_double.getCPtr(yi));
	}
	
}
